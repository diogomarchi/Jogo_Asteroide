

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 22 21:44:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001572                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for _lcd
    80  001572  83                 	db	131
    81  001573  0F                 	db	15
    82                           
    83                           ;initializer for _x
    84  001574  01                 	db	1
    85  0000                     _PORTBbits	set	3969
    86  0000                     _T0CONbits	set	4053
    87  0000                     _T0CON	set	4053
    88  0000                     _TRISD	set	3989
    89  0000                     _PORTB	set	3969
    90  0000                     _TRISB	set	3987
    91  0000                     _ADCON1	set	4033
    92  0000                     _TMR0L	set	4054
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTD	set	3971
    95                           
    96                           	psect	mediumconst
    97  007ED2                     __pmediumconst:
    98                           	opt callstack 0
    99  007ED2  00                 	db	0
   100  007ED3                     STR_18:
   101  007ED3  20                 	db	32
   102  007ED4  20                 	db	32
   103  007ED5  20                 	db	32
   104  007ED6  20                 	db	32
   105  007ED7  20                 	db	32
   106  007ED8  20                 	db	32
   107  007ED9  20                 	db	32
   108  007EDA  20                 	db	32
   109  007EDB  20                 	db	32
   110  007EDC  20                 	db	32
   111  007EDD  20                 	db	32
   112  007EDE  20                 	db	32
   113  007EDF  20                 	db	32
   114  007EE0  20                 	db	32
   115  007EE1  20                 	db	32
   116  007EE2  20                 	db	32
   117  007EE3  00                 	db	0
   118  007EE4                     STR_25:
   119  007EE4  53                 	db	83	;'S'
   120  007EE5  43                 	db	67	;'C'
   121  007EE6  4F                 	db	79	;'O'
   122  007EE7  52                 	db	82	;'R'
   123  007EE8  45                 	db	69	;'E'
   124  007EE9  3A                 	db	58	;':'
   125  007EEA  20                 	db	32
   126  007EEB  20                 	db	32
   127  007EEC  20                 	db	32
   128  007EED  20                 	db	32
   129  007EEE  20                 	db	32
   130  007EEF  20                 	db	32
   131  007EF0  20                 	db	32
   132  007EF1  20                 	db	32
   133  007EF2  20                 	db	32
   134  007EF3  20                 	db	32
   135  007EF4  00                 	db	0
   136  007EF5                     STR_27:
   137  007EF5  50                 	db	80	;'P'
   138  007EF6  41                 	db	65	;'A'
   139  007EF7  52                 	db	82	;'R'
   140  007EF8  41                 	db	65	;'A'
   141  007EF9  20                 	db	32
   142  007EFA  53                 	db	83	;'S'
   143  007EFB  41                 	db	65	;'A'
   144  007EFC  49                 	db	73	;'I'
   145  007EFD  52                 	db	82	;'R'
   146  007EFE  20                 	db	32
   147  007EFF  20                 	db	32
   148  007F00  20                 	db	32
   149  007F01  20                 	db	32
   150  007F02  20                 	db	32
   151  007F03  20                 	db	32
   152  007F04  20                 	db	32
   153  007F05  00                 	db	0
   154  007F06                     STR_21:
   155  007F06  20                 	db	32
   156  007F07  20                 	db	32
   157  007F08  20                 	db	32
   158  007F09  4E                 	db	78	;'N'
   159  007F0A  49                 	db	73	;'I'
   160  007F0B  56                 	db	86	;'V'
   161  007F0C  45                 	db	69	;'E'
   162  007F0D  4C                 	db	76	;'L'
   163  007F0E  20                 	db	32
   164  007F0F  32                 	db	50	;'2'
   165  007F10  20                 	db	32
   166  007F11  20                 	db	32
   167  007F12  20                 	db	32
   168  007F13  20                 	db	32
   169  007F14  20                 	db	32
   170  007F15  20                 	db	32
   171  007F16  00                 	db	0
   172  007F17                     STR_26:
   173  007F17  41                 	db	65	;'A'
   174  007F18  50                 	db	80	;'P'
   175  007F19  45                 	db	69	;'E'
   176  007F1A  52                 	db	82	;'R'
   177  007F1B  54                 	db	84	;'T'
   178  007F1C  45                 	db	69	;'E'
   179  007F1D  20                 	db	32
   180  007F1E  45                 	db	69	;'E'
   181  007F1F  53                 	db	83	;'S'
   182  007F20  43                 	db	67	;'C'
   183  007F21  20                 	db	32
   184  007F22  20                 	db	32
   185  007F23  20                 	db	32
   186  007F24  20                 	db	32
   187  007F25  20                 	db	32
   188  007F26  20                 	db	32
   189  007F27  00                 	db	0
   190  007F28                     STR_17:
   191  007F28  20                 	db	32
   192  007F29  20                 	db	32
   193  007F2A  20                 	db	32
   194  007F2B  20                 	db	32
   195  007F2C  20                 	db	32
   196  007F2D  53                 	db	83	;'S'
   197  007F2E  43                 	db	67	;'C'
   198  007F2F  4F                 	db	79	;'O'
   199  007F30  52                 	db	82	;'R'
   200  007F31  45                 	db	69	;'E'
   201  007F32  3A                 	db	58	;':'
   202  007F33  20                 	db	32
   203  007F34  20                 	db	32
   204  007F35  20                 	db	32
   205  007F36  20                 	db	32
   206  007F37  20                 	db	32
   207  007F38  00                 	db	0
   208  007F39                     STR_24:
   209  007F39  21                 	db	33
   210  007F3A  21                 	db	33
   211  007F3B  21                 	db	33
   212  007F3C  56                 	db	86	;'V'
   213  007F3D  4F                 	db	79	;'O'
   214  007F3E  43                 	db	67	;'C'
   215  007F3F  45                 	db	69	;'E'
   216  007F40  20                 	db	32
   217  007F41  42                 	db	66	;'B'
   218  007F42  41                 	db	65	;'A'
   219  007F43  54                 	db	84	;'T'
   220  007F44  45                 	db	69	;'E'
   221  007F45  55                 	db	85	;'U'
   222  007F46  21                 	db	33
   223  007F47  21                 	db	33
   224  007F48  21                 	db	33
   225  007F49  00                 	db	0
   226  007F4A                     STR_13:
   227  007F4A  31                 	db	49	;'1'
   228  007F4B  2E                 	db	46
   229  007F4C  4A                 	db	74	;'J'
   230  007F4D  4F                 	db	79	;'O'
   231  007F4E  47                 	db	71	;'G'
   232  007F4F  41                 	db	65	;'A'
   233  007F50  52                 	db	82	;'R'
   234  007F51  2E                 	db	46
   235  007F52  2E                 	db	46
   236  007F53  2E                 	db	46
   237  007F54  2E                 	db	46
   238  007F55  2E                 	db	46
   239  007F56  2E                 	db	46
   240  007F57  2E                 	db	46
   241  007F58  2E                 	db	46
   242  007F59  2E                 	db	46
   243  007F5A  00                 	db	0
   244  007F5B                     STR_15:
   245  007F5B  33                 	db	51	;'3'
   246  007F5C  2E                 	db	46
   247  007F5D  43                 	db	67	;'C'
   248  007F5E  52                 	db	82	;'R'
   249  007F5F  45                 	db	69	;'E'
   250  007F60  44                 	db	68	;'D'
   251  007F61  49                 	db	73	;'I'
   252  007F62  54                 	db	84	;'T'
   253  007F63  4F                 	db	79	;'O'
   254  007F64  53                 	db	83	;'S'
   255  007F65  2E                 	db	46
   256  007F66  2E                 	db	46
   257  007F67  2E                 	db	46
   258  007F68  2E                 	db	46
   259  007F69  2E                 	db	46
   260  007F6A  2E                 	db	46
   261  007F6B  00                 	db	0
   262  007F6C                     STR_16:
   263  007F6C  34                 	db	52	;'4'
   264  007F6D  2E                 	db	46
   265  007F6E  46                 	db	70	;'F'
   266  007F6F  49                 	db	73	;'I'
   267  007F70  4E                 	db	78	;'N'
   268  007F71  41                 	db	65	;'A'
   269  007F72  4C                 	db	76	;'L'
   270  007F73  49                 	db	73	;'I'
   271  007F74  5A                 	db	90	;'Z'
   272  007F75  41                 	db	65	;'A'
   273  007F76  52                 	db	82	;'R'
   274  007F77  2E                 	db	46
   275  007F78  2E                 	db	46
   276  007F79  2E                 	db	46
   277  007F7A  2E                 	db	46
   278  007F7B  2E                 	db	46
   279  007F7C  00                 	db	0
   280  007F7D                     STR_14:
   281  007F7D  32                 	db	50	;'2'
   282  007F7E  2E                 	db	46
   283  007F7F  49                 	db	73	;'I'
   284  007F80  4E                 	db	78	;'N'
   285  007F81  53                 	db	83	;'S'
   286  007F82  54                 	db	84	;'T'
   287  007F83  52                 	db	82	;'R'
   288  007F84  55                 	db	85	;'U'
   289  007F85  43                 	db	67	;'C'
   290  007F86  4F                 	db	79	;'O'
   291  007F87  45                 	db	69	;'E'
   292  007F88  53                 	db	83	;'S'
   293  007F89  2E                 	db	46
   294  007F8A  2E                 	db	46
   295  007F8B  2E                 	db	46
   296  007F8C  2E                 	db	46
   297  007F8D  00                 	db	0
   298  007F8E                     STR_10:
   299  007F8E  4E                 	db	78	;'N'
   300  007F8F  41                 	db	65	;'A'
   301  007F90  56                 	db	86	;'V'
   302  007F91  45                 	db	69	;'E'
   303  007F92  20                 	db	32
   304  007F93  20                 	db	32
   305  007F94  20                 	db	32
   306  007F95  20                 	db	32
   307  007F96  20                 	db	32
   308  007F97  20                 	db	32
   309  007F98  20                 	db	32
   310  007F99  20                 	db	32
   311  007F9A  20                 	db	32
   312  007F9B  20                 	db	32
   313  007F9C  20                 	db	32
   314  007F9D  00                 	db	0
   315  007F9E                     STR_12:
   316  007F9E  4D                 	db	77	;'M'
   317  007F9F  45                 	db	69	;'E'
   318  007FA0  4E                 	db	78	;'N'
   319  007FA1  55                 	db	85	;'U'
   320  007FA2  20                 	db	32
   321  007FA3  20                 	db	32
   322  007FA4  20                 	db	32
   323  007FA5  20                 	db	32
   324  007FA6  20                 	db	32
   325  007FA7  20                 	db	32
   326  007FA8  20                 	db	32
   327  007FA9  20                 	db	32
   328  007FAA  20                 	db	32
   329  007FAB  20                 	db	32
   330  007FAC  20                 	db	32
   331  007FAD  00                 	db	0
   332  007FAE                     STR_11:
   333  007FAE  32                 	db	50	;'2'
   334  007FAF  2E                 	db	46
   335  007FB0  45                 	db	69	;'E'
   336  007FB1  53                 	db	83	;'S'
   337  007FB2  43                 	db	67	;'C'
   338  007FB3  41                 	db	65	;'A'
   339  007FB4  50                 	db	80	;'P'
   340  007FB5  45                 	db	69	;'E'
   341  007FB6  20                 	db	32
   342  007FB7  56                 	db	86	;'V'
   343  007FB8  4F                 	db	79	;'O'
   344  007FB9  4C                 	db	76	;'L'
   345  007FBA  54                 	db	84	;'T'
   346  007FBB  41                 	db	65	;'A'
   347  007FBC  20                 	db	32
   348  007FBD  00                 	db	0
   349  007FBE                     STR_5:
   350  007FBE  48                 	db	72	;'H'
   351  007FBF  49                 	db	73	;'I'
   352  007FC0  42                 	db	66	;'B'
   353  007FC1  45                 	db	69	;'E'
   354  007FC2  52                 	db	82	;'R'
   355  007FC3  4E                 	db	78	;'N'
   356  007FC4  41                 	db	65	;'A'
   357  007FC5  4E                 	db	78	;'N'
   358  007FC6  44                 	db	68	;'D'
   359  007FC7  4F                 	db	79	;'O'
   360  007FC8  2E                 	db	46
   361  007FC9  2E                 	db	46
   362  007FCA  2E                 	db	46
   363  007FCB  2E                 	db	46
   364  007FCC  2E                 	db	46
   365  007FCD  00                 	db	0
   366  007FCE                     STR_1:
   367  007FCE  31                 	db	49	;'1'
   368  007FCF  2E                 	db	46
   369  007FD0  44                 	db	68	;'D'
   370  007FD1  49                 	db	73	;'I'
   371  007FD2  4F                 	db	79	;'O'
   372  007FD3  47                 	db	71	;'G'
   373  007FD4  4F                 	db	79	;'O'
   374  007FD5  20                 	db	32
   375  007FD6  4D                 	db	77	;'M'
   376  007FD7  41                 	db	65	;'A'
   377  007FD8  52                 	db	82	;'R'
   378  007FD9  43                 	db	67	;'C'
   379  007FDA  48                 	db	72	;'H'
   380  007FDB  49                 	db	73	;'I'
   381  007FDC  2E                 	db	46
   382  007FDD  00                 	db	0
   383  007FDE                     STR_9:
   384  007FDE  31                 	db	49	;'1'
   385  007FDF  2E                 	db	46
   386  007FE0  53                 	db	83	;'S'
   387  007FE1  45                 	db	69	;'E'
   388  007FE2  54                 	db	84	;'T'
   389  007FE3  41                 	db	65	;'A'
   390  007FE4  53                 	db	83	;'S'
   391  007FE5  20                 	db	32
   392  007FE6  4D                 	db	77	;'M'
   393  007FE7  4F                 	db	79	;'O'
   394  007FE8  56                 	db	86	;'V'
   395  007FE9  45                 	db	69	;'E'
   396  007FEA  4D                 	db	77	;'M'
   397  007FEB  20                 	db	32
   398  007FEC  41                 	db	65	;'A'
   399  007FED  00                 	db	0
   400  007FEE                     STR_2:
   401  007FEE  32                 	db	50	;'2'
   402  007FEF  2E                 	db	46
   403  007FF0  47                 	db	71	;'G'
   404  007FF1  45                 	db	69	;'E'
   405  007FF2  4F                 	db	79	;'O'
   406  007FF3  52                 	db	82	;'R'
   407  007FF4  47                 	db	71	;'G'
   408  007FF5  45                 	db	69	;'E'
   409  007FF6  20                 	db	32
   410  007FF7  4E                 	db	78	;'N'
   411  007FF8  41                 	db	65	;'A'
   412  007FF9  52                 	db	82	;'R'
   413  007FFA  44                 	db	68	;'D'
   414  007FFB  45                 	db	69	;'E'
   415  007FFC  53                 	db	83	;'S'
   416  007FFD  00                 	db	0
   417  0000                     
   418                           ; #config settings
   419  007FFE  00                 	db	0	; dummy byte at the end
   420  0000                     
   421                           	psect	cinit
   422  00141A                     __pcinit:
   423                           	opt callstack 0
   424  00141A                     start_initialization:
   425                           	opt callstack 0
   426  00141A                     __initialization:
   427                           	opt callstack 0
   428                           
   429                           ; Initialize objects allocated to COMRAM (3 bytes)
   430                           ; load TBLPTR registers with __pidataCOMRAM
   431  00141A  0E72               	movlw	low __pidataCOMRAM
   432  00141C  6EF6               	movwf	tblptrl,c
   433  00141E  0E15               	movlw	high __pidataCOMRAM
   434  001420  6EF7               	movwf	tblptrh,c
   435  001422  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   436  001424  6EF8               	movwf	tblptru,c
   437  001426  0009               	tblrd		*+	;fetch initializer
   438  001428  CFF5 F05A          	movff	tablat,__pdataCOMRAM
   439  00142C  0009               	tblrd		*+	;fetch initializer
   440  00142E  CFF5 F05B          	movff	tablat,__pdataCOMRAM+1
   441  001432  0009               	tblrd		*+	;fetch initializer
   442  001434  CFF5 F05C          	movff	tablat,__pdataCOMRAM+2
   443                           
   444                           ; Clear objects allocated to BANK0 (64 bytes)
   445  001438  EE00  F080         	lfsr	0,__pbssBANK0
   446  00143C  0E40               	movlw	64
   447  00143E                     clear_0:
   448  00143E  6AEE               	clrf	postinc0,c
   449  001440  06E8               	decf	wreg,f,c
   450  001442  E1FD               	bnz	clear_0
   451                           
   452                           ; Clear objects allocated to COMRAM (17 bytes)
   453  001444  EE00  F049         	lfsr	0,__pbssCOMRAM
   454  001448  0E11               	movlw	17
   455  00144A                     clear_1:
   456  00144A  6AEE               	clrf	postinc0,c
   457  00144C  06E8               	decf	wreg,f,c
   458  00144E  E1FD               	bnz	clear_1
   459  001450                     end_of_initialization:
   460                           	opt callstack 0
   461  001450                     __end_of__initialization:
   462                           	opt callstack 0
   463  001450  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   464  001452  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   465  001454  0E00               	movlw	low (__Lmediumconst shr (0+16))
   466  001456  6EF8               	movwf	tblptru,c
   467  001458  0100               	movlb	0
   468  00145A  EF0F  F009         	goto	_main	;jump to C main() function
   469                           
   470                           	psect	bssCOMRAM
   471  000049                     __pbssCOMRAM:
   472                           	opt callstack 0
   473  000049                     _contador:
   474                           	opt callstack 0
   475  000049                     	ds	1
   476  00004A                     _y:
   477                           	opt callstack 0
   478  00004A                     	ds	1
   479  00004B                     _op:
   480                           	opt callstack 0
   481  00004B                     	ds	1
   482  00004C                     _cont_r:
   483                           	opt callstack 0
   484  00004C                     	ds	1
   485  00004D                     _cont_l:
   486                           	opt callstack 0
   487  00004D                     	ds	1
   488  00004E                     _cont_d:
   489                           	opt callstack 0
   490  00004E                     	ds	1
   491  00004F                     _cont_u:
   492                           	opt callstack 0
   493  00004F                     	ds	1
   494  000050                     _botoes_ant:
   495                           	opt callstack 0
   496  000050                     	ds	1
   497  000051                     _botoes:
   498                           	opt callstack 0
   499  000051                     	ds	1
   500  000052                     _seed:
   501                           	opt callstack 0
   502  000052                     	ds	8
   503                           
   504                           	psect	dataCOMRAM
   505  00005A                     __pdataCOMRAM:
   506                           	opt callstack 0
   507  00005A                     _lcd:
   508                           	opt callstack 0
   509  00005A                     	ds	2
   510  00005C                     _x:
   511                           	opt callstack 0
   512  00005C                     	ds	1
   513                           
   514                           	psect	bssBANK0
   515  000080                     __pbssBANK0:
   516                           	opt callstack 0
   517  000080                     _mat_disp:
   518                           	opt callstack 0
   519  000080                     	ds	64
   520                           
   521                           	psect	cstackCOMRAM
   522  000001                     __pcstackCOMRAM:
   523                           	opt callstack 0
   524  000001                     ?_time:
   525                           	opt callstack 0
   526  000001                     ?___omul:
   527                           	opt callstack 0
   528  000001                     pulso@lcd:
   529                           	opt callstack 0
   530  000001                     write_char@lcd:
   531                           	opt callstack 0
   532  000001                     strcpy@dest:
   533                           	opt callstack 0
   534  000001                     time@t:
   535                           	opt callstack 0
   536  000001                     ___omul@multiplier:
   537                           	opt callstack 0
   538                           
   539                           ; 8 bytes @ 0x0
   540  000001                     	ds	2
   541  000003                     ??_pulso:
   542  000003                     write_char@c:
   543                           	opt callstack 0
   544  000003                     strcpy@src:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x2
   548  000003                     	ds	1
   549  000004                     ??_write_char:
   550  000004                     function_set@lcd:
   551                           	opt callstack 0
   552  000004                     display_onoff_control@lcd:
   553                           	opt callstack 0
   554  000004                     lcd_cmd@lcd:
   555                           	opt callstack 0
   556  000004                     entry_mode_set@lcd:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x3
   560  000004                     	ds	1
   561  000005                     strcpy@s:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x4
   565  000005                     	ds	1
   566  000006                     function_set@data_lenght:
   567                           	opt callstack 0
   568  000006                     display_onoff_control@display_on:
   569                           	opt callstack 0
   570  000006                     lcd_cmd@a:
   571                           	opt callstack 0
   572  000006                     entry_mode_set@move_direction:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x5
   576  000006                     	ds	1
   577  000007                     ??_lcd_cmd:
   578  000007                     function_set@num_lines:
   579                           	opt callstack 0
   580  000007                     display_onoff_control@cursor_on:
   581                           	opt callstack 0
   582  000007                     entry_mode_set@display_shift:
   583                           	opt callstack 0
   584  000007                     strcpy@d:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x6
   588  000007                     	ds	1
   589  000008                     ??_entry_mode_set:
   590  000008                     function_set@char_font:
   591                           	opt callstack 0
   592  000008                     display_onoff_control@blink:
   593                           	opt callstack 0
   594  000008                     goto_XY@lcd:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x7
   598  000008                     	ds	1
   599  000009                     ??_function_set:
   600  000009                     ??_display_onoff_control:
   601  000009                     srand@s:
   602                           	opt callstack 0
   603  000009                     ___omul@multiplicand:
   604                           	opt callstack 0
   605                           
   606                           ; 8 bytes @ 0x8
   607  000009                     	ds	1
   608  00000A                     goto_XY@x:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x9
   612  00000A                     	ds	1
   613  00000B                     ??_srand:
   614  00000B                     goto_XY@y:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0xA
   618  00000B                     	ds	1
   619  00000C                     ??_goto_XY:
   620                           
   621                           ; 1 bytes @ 0xB
   622  00000C                     	ds	1
   623  00000D                     goto_XY@z:
   624                           	opt callstack 0
   625                           
   626                           ; 1 bytes @ 0xC
   627  00000D                     	ds	1
   628  00000E                     goto_XY@a:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0xD
   632  00000E                     	ds	1
   633  00000F                     goto_XY@temp:
   634                           	opt callstack 0
   635                           
   636                           ; 1 bytes @ 0xE
   637  00000F                     	ds	1
   638  000010                     print_mat@lcd:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0xF
   642  000010                     	ds	1
   643  000011                     ___omul@product:
   644                           	opt callstack 0
   645                           
   646                           ; 8 bytes @ 0x10
   647  000011                     	ds	1
   648  000012                     ??_print_mat:
   649                           
   650                           ; 1 bytes @ 0x11
   651  000012                     	ds	4
   652  000016                     print_mat@j:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x15
   656  000016                     	ds	2
   657  000018                     print_mat@i:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x17
   661  000018                     	ds	1
   662  000019                     ?_rand:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x18
   666  000019                     	ds	1
   667  00001A                     creditos@lcd:
   668                           	opt callstack 0
   669  00001A                     finaliza@lcd:
   670                           	opt callstack 0
   671  00001A                     instrucoes@lcd:
   672                           	opt callstack 0
   673  00001A                     menu@lcd:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x19
   677  00001A                     	ds	1
   678  00001B                     ??_rand:
   679                           
   680                           ; 1 bytes @ 0x1A
   681  00001B                     	ds	1
   682  00001C                     
   683                           ; 1 bytes @ 0x1B
   684  00001C                     	ds	7
   685  000023                     ?___awmod:
   686                           	opt callstack 0
   687  000023                     ___awmod@dividend:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x22
   691  000023                     	ds	2
   692  000025                     ___awmod@divisor:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x24
   696  000025                     	ds	2
   697  000027                     ___awmod@counter:
   698                           	opt callstack 0
   699                           
   700                           ; 1 bytes @ 0x26
   701  000027                     	ds	1
   702  000028                     ___awmod@sign:
   703                           	opt callstack 0
   704                           
   705                           ; 1 bytes @ 0x27
   706  000028                     	ds	1
   707  000029                     jogar@lcd:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x28
   711  000029                     	ds	2
   712  00002B                     ??_jogar:
   713                           
   714                           ; 1 bytes @ 0x2A
   715  00002B                     	ds	8
   716  000033                     jogar@qtd_asteroide:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x32
   720  000033                     	ds	2
   721  000035                     jogar@velocidade:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x34
   725  000035                     	ds	2
   726  000037                     jogar@linha_aleatoria:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x36
   730  000037                     	ds	2
   731  000039                     jogar@nivel2:
   732                           	opt callstack 0
   733                           
   734                           ; 2 bytes @ 0x38
   735  000039                     	ds	2
   736  00003B                     jogar@cont:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x3A
   740  00003B                     	ds	2
   741  00003D                     jogar@pont4:
   742                           	opt callstack 0
   743                           
   744                           ; 1 bytes @ 0x3C
   745  00003D                     	ds	1
   746  00003E                     jogar@pont3:
   747                           	opt callstack 0
   748                           
   749                           ; 1 bytes @ 0x3D
   750  00003E                     	ds	1
   751  00003F                     jogar@pont2:
   752                           	opt callstack 0
   753                           
   754                           ; 1 bytes @ 0x3E
   755  00003F                     	ds	1
   756  000040                     jogar@pont1:
   757                           	opt callstack 0
   758                           
   759                           ; 1 bytes @ 0x3F
   760  000040                     	ds	1
   761  000041                     jogar@bateu:
   762                           	opt callstack 0
   763                           
   764                           ; 2 bytes @ 0x40
   765  000041                     	ds	2
   766  000043                     jogar@j:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0x42
   770  000043                     	ds	2
   771  000045                     jogar@i:
   772                           	opt callstack 0
   773                           
   774                           ; 2 bytes @ 0x44
   775  000045                     	ds	2
   776  000047                     gerenciador@lcd:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x46
   780  000047                     	ds	2
   781  000049                     
   782                           ; 1 bytes @ 0x48
   783 ;;
   784 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   785 ;;
   786 ;; *************** function _main *****************
   787 ;; Defined at:
   788 ;;		line 36 in file "main.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   802 ;;      Params:         0       0       0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0
   805 ;;      Totals:         0       0       0       0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels required when called:    8
   808 ;; This function calls:
   809 ;;		_display_onoff_control
   810 ;;		_entry_mode_set
   811 ;;		_function_set
   812 ;;		_gerenciador
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text0
   819  00121E                     __ptext0:
   820                           	opt callstack 0
   821  00121E                     _main:
   822                           	opt callstack 23
   823  00121E                     
   824                           ;main.c: 38:     ADCON1 = 0x0F;
   825  00121E  0E0F               	movlw	15
   826  001220  6EC1               	movwf	193,c	;volatile
   827                           
   828                           ;main.c: 43:     TRISB = 0x0F;
   829  001222  0E0F               	movlw	15
   830  001224  6E93               	movwf	147,c	;volatile
   831                           
   832                           ;main.c: 46:     PORTB = 0x00;
   833  001226  0E00               	movlw	0
   834  001228  6E81               	movwf	129,c	;volatile
   835                           
   836                           ;main.c: 49:     TRISD = 0x00;
   837  00122A  0E00               	movlw	0
   838  00122C  6E95               	movwf	149,c	;volatile
   839                           
   840                           ;main.c: 52:     T0CON = 0x47;
   841  00122E  0E47               	movlw	71
   842  001230  6ED5               	movwf	213,c	;volatile
   843                           
   844                           ;main.c: 55:     TMR0L = 0x63;
   845  001232  0E63               	movlw	99
   846  001234  6ED6               	movwf	214,c	;volatile
   847  001236                     
   848                           ;main.c: 58:     INTCONbits.TMR0IF = 0;
   849  001236  94F2               	bcf	242,2,c	;volatile
   850  001238                     
   851                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   852  001238  8AF2               	bsf	242,5,c	;volatile
   853  00123A                     
   854                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   855  00123A  88F2               	bsf	242,4,c	;volatile
   856  00123C                     
   857                           ;main.c: 61:     INTCONbits.INT0IF = 0;
   858  00123C  92F2               	bcf	242,1,c	;volatile
   859  00123E                     
   860                           ;main.c: 62:     INTCONbits.GIE = 1;
   861  00123E  8EF2               	bsf	242,7,c	;volatile
   862  001240                     
   863                           ;main.c: 64:     function_set(lcd, 0, 1, 0);
   864  001240  0E83               	movlw	131
   865  001242  6E04               	movwf	function_set@lcd^0,c
   866  001244  0E0F               	movlw	15
   867  001246  6E05               	movwf	(function_set@lcd+1)^0,c
   868  001248  0E00               	movlw	0
   869  00124A  6E06               	movwf	function_set@data_lenght^0,c
   870  00124C  0E01               	movlw	1
   871  00124E  6E07               	movwf	function_set@num_lines^0,c
   872  001250  0E00               	movlw	0
   873  001252  6E08               	movwf	function_set@char_font^0,c
   874  001254  EC73  F006         	call	_function_set	;wreg free
   875  001258                     
   876                           ;main.c: 65:     display_onoff_control(lcd, 1, 0, 0);
   877  001258  0E83               	movlw	131
   878  00125A  6E04               	movwf	display_onoff_control@lcd^0,c
   879  00125C  0E0F               	movlw	15
   880  00125E  6E05               	movwf	(display_onoff_control@lcd+1)^0,c
   881  001260  0E01               	movlw	1
   882  001262  6E06               	movwf	display_onoff_control@display_on^0,c
   883  001264  0E00               	movlw	0
   884  001266  6E07               	movwf	display_onoff_control@cursor_on^0,c
   885  001268  0E00               	movlw	0
   886  00126A  6E08               	movwf	display_onoff_control@blink^0,c
   887  00126C  EC86  F008         	call	_display_onoff_control	;wreg free
   888  001270                     
   889                           ;main.c: 66:     entry_mode_set(lcd, 1,0);
   890  001270  0E83               	movlw	131
   891  001272  6E04               	movwf	entry_mode_set@lcd^0,c
   892  001274  0E0F               	movlw	15
   893  001276  6E05               	movwf	(entry_mode_set@lcd+1)^0,c
   894  001278  0E01               	movlw	1
   895  00127A  6E06               	movwf	entry_mode_set@move_direction^0,c
   896  00127C  0E00               	movlw	0
   897  00127E  6E07               	movwf	entry_mode_set@display_shift^0,c
   898  001280  ECCD  F008         	call	_entry_mode_set	;wreg free
   899  001284                     
   900                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   901  001284  8ED5               	bsf	213,7,c	;volatile
   902  001286                     
   903                           ;main.c: 70:     gerenciador(lcd);
   904  001286  0E83               	movlw	131
   905  001288  6E47               	movwf	gerenciador@lcd^0,c
   906  00128A  0E0F               	movlw	15
   907  00128C  6E48               	movwf	(gerenciador@lcd+1)^0,c
   908  00128E  EC3B  F008         	call	_gerenciador	;wreg free
   909  001292  EF07  F000         	goto	start
   910  001296                     __end_of_main:
   911                           	opt callstack 0
   912                           
   913 ;; *************** function _gerenciador *****************
   914 ;; Defined at:
   915 ;;		line 15 in file "task_manager.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  lcd             2   70[COMRAM] PTR struct .
   918 ;;		 -> PORTD(1), 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   930 ;;      Params:         2       0       0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0
   933 ;;      Totals:         2       0       0       0       0       0       0
   934 ;;Total ram usage:        2 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    7
   937 ;; This function calls:
   938 ;;		_creditos
   939 ;;		_finaliza
   940 ;;		_instrucoes
   941 ;;		_jogar
   942 ;;		_menu
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text1
   949  001076                     __ptext1:
   950                           	opt callstack 0
   951  001076                     _gerenciador:
   952                           	opt callstack 23
   953  001076                     l183:
   954  001076                     
   955                           ;task_manager.c: 17:         menu(lcd);
   956  001076  C047  F01A         	movff	gerenciador@lcd,menu@lcd
   957  00107A  C048  F01B         	movff	gerenciador@lcd+1,menu@lcd+1
   958  00107E  EC07  F005         	call	_menu	;wreg free
   959  001082                     
   960                           ;task_manager.c: 18:         if(op == 0) jogar(lcd);
   961  001082  504B               	movf	_op^0,w,c
   962  001084  A4D8               	btfss	status,2,c
   963  001086  EF47  F008         	goto	u1511
   964  00108A  EF49  F008         	goto	u1510
   965  00108E                     u1511:
   966  00108E  EF51  F008         	goto	l2074
   967  001092                     u1510:
   968  001092  C047  F029         	movff	gerenciador@lcd,jogar@lcd
   969  001096  C048  F02A         	movff	gerenciador@lcd+1,jogar@lcd+1
   970  00109A  EC09  F000         	call	_jogar	;wreg free
   971  00109E  EF3B  F008         	goto	l183
   972  0010A2                     l2074:
   973  0010A2  044B               	decf	_op^0,w,c
   974  0010A4  A4D8               	btfss	status,2,c
   975  0010A6  EF57  F008         	goto	u1521
   976  0010AA  EF59  F008         	goto	u1520
   977  0010AE                     u1521:
   978  0010AE  EF61  F008         	goto	l2078
   979  0010B2                     u1520:
   980  0010B2  C047  F01A         	movff	gerenciador@lcd,instrucoes@lcd
   981  0010B6  C048  F01B         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   982  0010BA  EC4B  F009         	call	_instrucoes	;wreg free
   983  0010BE  EF3B  F008         	goto	l183
   984  0010C2                     l2078:
   985  0010C2  0E02               	movlw	2
   986  0010C4  184B               	xorwf	_op^0,w,c
   987  0010C6  A4D8               	btfss	status,2,c
   988  0010C8  EF68  F008         	goto	u1531
   989  0010CC  EF6A  F008         	goto	u1530
   990  0010D0                     u1531:
   991  0010D0  EF72  F008         	goto	l2082
   992  0010D4                     u1530:
   993  0010D4  C047  F01A         	movff	gerenciador@lcd,creditos@lcd
   994  0010D8  C048  F01B         	movff	gerenciador@lcd+1,creditos@lcd+1
   995  0010DC  EC81  F009         	call	_creditos	;wreg free
   996  0010E0  EF3B  F008         	goto	l183
   997  0010E4                     l2082:
   998  0010E4  0E03               	movlw	3
   999  0010E6  184B               	xorwf	_op^0,w,c
  1000  0010E8  A4D8               	btfss	status,2,c
  1001  0010EA  EF79  F008         	goto	u1541
  1002  0010EE  EF7B  F008         	goto	u1540
  1003  0010F2                     u1541:
  1004  0010F2  EF83  F008         	goto	l185
  1005  0010F6                     u1540:
  1006  0010F6  C047  F01A         	movff	gerenciador@lcd,finaliza@lcd
  1007  0010FA  C048  F01B         	movff	gerenciador@lcd+1,finaliza@lcd+1
  1008  0010FE  ECB7  F009         	call	_finaliza	;wreg free
  1009  001102  EF3B  F008         	goto	l183
  1010  001106                     l185:
  1011  001106  EF3B  F008         	goto	l183
  1012  00110A  0012               	return		;funcret
  1013  00110C                     __end_of_gerenciador:
  1014                           	opt callstack 0
  1015                           
  1016 ;; *************** function _menu *****************
  1017 ;; Defined at:
  1018 ;;		line 53 in file "task_manager.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  lcd             2   25[COMRAM] PTR struct .
  1021 ;;		 -> PORTD(1), 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      unsigned char 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1033 ;;      Params:         2       0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0
  1036 ;;      Totals:         2       0       0       0       0       0       0
  1037 ;;Total ram usage:        2 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    6
  1040 ;; This function calls:
  1041 ;;		_print_mat
  1042 ;;		_strcpy
  1043 ;; This function is called by:
  1044 ;;		_gerenciador
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text2
  1049  000A0E                     __ptext2:
  1050                           	opt callstack 0
  1051  000A0E                     _menu:
  1052                           	opt callstack 23
  1053  000A0E                     
  1054                           ;task_manager.c: 54:     strcpy(mat_disp[0], "1.JOGAR.........");
  1055  000A0E  0E80               	movlw	low _mat_disp
  1056  000A10  6E01               	movwf	strcpy@dest^0,c
  1057  000A12  0E00               	movlw	high _mat_disp
  1058  000A14  6E02               	movwf	(strcpy@dest+1)^0,c
  1059  000A16  0E4A               	movlw	low STR_13
  1060  000A18  6E03               	movwf	strcpy@src^0,c
  1061  000A1A  0E7F               	movlw	high STR_13
  1062  000A1C  6E04               	movwf	(strcpy@src+1)^0,c
  1063  000A1E  EC2F  F00A         	call	_strcpy	;wreg free
  1064                           
  1065                           ;task_manager.c: 55:     strcpy(mat_disp[1], "2.INSTRUCOES....");
  1066  000A22  0E90               	movlw	low (_mat_disp+16)
  1067  000A24  6E01               	movwf	strcpy@dest^0,c
  1068  000A26  0E00               	movlw	high (_mat_disp+16)
  1069  000A28  6E02               	movwf	(strcpy@dest+1)^0,c
  1070  000A2A  0E7D               	movlw	low STR_14
  1071  000A2C  6E03               	movwf	strcpy@src^0,c
  1072  000A2E  0E7F               	movlw	high STR_14
  1073  000A30  6E04               	movwf	(strcpy@src+1)^0,c
  1074  000A32  EC2F  F00A         	call	_strcpy	;wreg free
  1075                           
  1076                           ;task_manager.c: 56:     strcpy(mat_disp[2], "3.CREDITOS......");
  1077  000A36  0EA0               	movlw	low (_mat_disp+32)
  1078  000A38  6E01               	movwf	strcpy@dest^0,c
  1079  000A3A  0E00               	movlw	high (_mat_disp+32)
  1080  000A3C  6E02               	movwf	(strcpy@dest+1)^0,c
  1081  000A3E  0E5B               	movlw	low STR_15
  1082  000A40  6E03               	movwf	strcpy@src^0,c
  1083  000A42  0E7F               	movlw	high STR_15
  1084  000A44  6E04               	movwf	(strcpy@src+1)^0,c
  1085  000A46  EC2F  F00A         	call	_strcpy	;wreg free
  1086                           
  1087                           ;task_manager.c: 57:     strcpy(mat_disp[3], "4.FINALIZAR.....");
  1088  000A4A  0EB0               	movlw	low (_mat_disp+48)
  1089  000A4C  6E01               	movwf	strcpy@dest^0,c
  1090  000A4E  0E00               	movlw	high (_mat_disp+48)
  1091  000A50  6E02               	movwf	(strcpy@dest+1)^0,c
  1092  000A52  0E6C               	movlw	low STR_16
  1093  000A54  6E03               	movwf	strcpy@src^0,c
  1094  000A56  0E7F               	movlw	high STR_16
  1095  000A58  6E04               	movwf	(strcpy@src+1)^0,c
  1096  000A5A  EC2F  F00A         	call	_strcpy	;wreg free
  1097  000A5E                     l1772:
  1098                           
  1099                           ;task_manager.c: 60:     mat_disp[op][15] = '<';
  1100  000A5E  504B               	movf	_op^0,w,c
  1101  000A60  0D10               	mullw	16
  1102  000A62  0E8F               	movlw	low (_mat_disp+15)
  1103  000A64  24F3               	addwf	243,w,c
  1104  000A66  6ED9               	movwf	fsr2l,c
  1105  000A68  0E00               	movlw	high (_mat_disp+15)
  1106  000A6A  20F4               	addwfc	prodh,w,c
  1107  000A6C  6EDA               	movwf	fsr2h,c
  1108  000A6E  0E3C               	movlw	60
  1109  000A70  6EDF               	movwf	indf2,c
  1110  000A72                     
  1111                           ;task_manager.c: 61:     print_mat(lcd);
  1112  000A72  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1113  000A76  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1114  000A7A  EC96  F007         	call	_print_mat	;wreg free
  1115                           
  1116                           ;task_manager.c: 62:     while(!botoes.Enter){
  1117  000A7E  EF89  F005         	goto	l1802
  1118  000A82                     l212:
  1119                           
  1120                           ;task_manager.c: 63:         if((botoes.U) && (op > 0)){
  1121  000A82  A051               	btfss	_botoes^0,0,c
  1122  000A84  EF46  F005         	goto	u1111
  1123  000A88  EF48  F005         	goto	u1110
  1124  000A8C                     u1111:
  1125  000A8C  EF6C  F005         	goto	l1788
  1126  000A90                     u1110:
  1127  000A90  504B               	movf	_op^0,w,c
  1128  000A92  B4D8               	btfsc	status,2,c
  1129  000A94  EF4E  F005         	goto	u1121
  1130  000A98  EF50  F005         	goto	u1120
  1131  000A9C                     u1121:
  1132  000A9C  EF6C  F005         	goto	l1788
  1133  000AA0                     u1120:
  1134  000AA0                     
  1135                           ;task_manager.c: 64:             mat_disp[op][15] = '.';
  1136  000AA0  504B               	movf	_op^0,w,c
  1137  000AA2  0D10               	mullw	16
  1138  000AA4  0E8F               	movlw	low (_mat_disp+15)
  1139  000AA6  24F3               	addwf	243,w,c
  1140  000AA8  6ED9               	movwf	fsr2l,c
  1141  000AAA  0E00               	movlw	high (_mat_disp+15)
  1142  000AAC  20F4               	addwfc	prodh,w,c
  1143  000AAE  6EDA               	movwf	fsr2h,c
  1144  000AB0  0E2E               	movlw	46
  1145  000AB2  6EDF               	movwf	indf2,c
  1146  000AB4                     
  1147                           ;task_manager.c: 65:             op--;
  1148  000AB4  064B               	decf	_op^0,f,c
  1149  000AB6                     
  1150                           ;task_manager.c: 66:             botoes.U = 0;
  1151  000AB6  9051               	bcf	_botoes^0,0,c
  1152  000AB8                     
  1153                           ;task_manager.c: 67:             mat_disp[op][15] = '<';
  1154  000AB8  504B               	movf	_op^0,w,c
  1155  000ABA  0D10               	mullw	16
  1156  000ABC  0E8F               	movlw	low (_mat_disp+15)
  1157  000ABE  24F3               	addwf	243,w,c
  1158  000AC0  6ED9               	movwf	fsr2l,c
  1159  000AC2  0E00               	movlw	high (_mat_disp+15)
  1160  000AC4  20F4               	addwfc	prodh,w,c
  1161  000AC6  6EDA               	movwf	fsr2h,c
  1162  000AC8  0E3C               	movlw	60
  1163  000ACA  6EDF               	movwf	indf2,c
  1164  000ACC                     
  1165                           ;task_manager.c: 68:             print_mat(lcd);
  1166  000ACC  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1167  000AD0  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1168  000AD4  EC96  F007         	call	_print_mat	;wreg free
  1169  000AD8                     l1788:
  1170                           
  1171                           ;task_manager.c: 70:         if((botoes.D) && (op < 3)){
  1172  000AD8  A251               	btfss	_botoes^0,1,c
  1173  000ADA  EF71  F005         	goto	u1131
  1174  000ADE  EF73  F005         	goto	u1130
  1175  000AE2                     u1131:
  1176  000AE2  EF89  F005         	goto	l1802
  1177  000AE6                     u1130:
  1178  000AE6  0E03               	movlw	3
  1179  000AE8  604B               	cpfslt	_op^0,c
  1180  000AEA  EF79  F005         	goto	u1141
  1181  000AEE  EF7B  F005         	goto	u1140
  1182  000AF2                     u1141:
  1183  000AF2  EF89  F005         	goto	l1802
  1184  000AF6                     u1140:
  1185  000AF6                     
  1186                           ;task_manager.c: 71:             mat_disp[op][15] = '.';
  1187  000AF6  504B               	movf	_op^0,w,c
  1188  000AF8  0D10               	mullw	16
  1189  000AFA  0E8F               	movlw	low (_mat_disp+15)
  1190  000AFC  24F3               	addwf	243,w,c
  1191  000AFE  6ED9               	movwf	fsr2l,c
  1192  000B00  0E00               	movlw	high (_mat_disp+15)
  1193  000B02  20F4               	addwfc	prodh,w,c
  1194  000B04  6EDA               	movwf	fsr2h,c
  1195  000B06  0E2E               	movlw	46
  1196  000B08  6EDF               	movwf	indf2,c
  1197  000B0A                     
  1198                           ;task_manager.c: 72:             op++;
  1199  000B0A  2A4B               	incf	_op^0,f,c
  1200  000B0C                     
  1201                           ;task_manager.c: 73:             botoes.D = 0;
  1202  000B0C  9251               	bcf	_botoes^0,1,c
  1203  000B0E  EF2F  F005         	goto	l1772
  1204  000B12                     l1802:
  1205                           
  1206                           ;task_manager.c: 62:     while(!botoes.Enter){
  1207  000B12  A851               	btfss	_botoes^0,4,c
  1208  000B14  EF8E  F005         	goto	u1151
  1209  000B18  EF90  F005         	goto	u1150
  1210  000B1C                     u1151:
  1211  000B1C  EF41  F005         	goto	l212
  1212  000B20                     u1150:
  1213  000B20  0012               	return		;funcret
  1214  000B22                     __end_of_menu:
  1215                           	opt callstack 0
  1216                           
  1217 ;; *************** function _jogar *****************
  1218 ;; Defined at:
  1219 ;;		line 81 in file "task_manager.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  lcd             2   40[COMRAM] PTR struct .
  1222 ;;		 -> PORTD(1), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  j               2   66[COMRAM] int 
  1225 ;;  i               2   68[COMRAM] int 
  1226 ;;  cont            2   58[COMRAM] int 
  1227 ;;  bateu           2   64[COMRAM] int 
  1228 ;;  nivel2          2   56[COMRAM] int 
  1229 ;;  linha_aleato    2   54[COMRAM] int 
  1230 ;;  velocidade      2   52[COMRAM] int 
  1231 ;;  qtd_asteroid    2   50[COMRAM] int 
  1232 ;;  pont1           1   63[COMRAM] unsigned char 
  1233 ;;  pont2           1   62[COMRAM] unsigned char 
  1234 ;;  pont3           1   61[COMRAM] unsigned char 
  1235 ;;  pont4           1   60[COMRAM] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1245 ;;      Params:         2       0       0       0       0       0       0
  1246 ;;      Locals:        20       0       0       0       0       0       0
  1247 ;;      Temps:          8       0       0       0       0       0       0
  1248 ;;      Totals:        30       0       0       0       0       0       0
  1249 ;;Total ram usage:       30 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    6
  1252 ;; This function calls:
  1253 ;;		___awmod
  1254 ;;		_print_mat
  1255 ;;		_rand
  1256 ;;		_srand
  1257 ;;		_strcpy
  1258 ;;		_time
  1259 ;; This function is called by:
  1260 ;;		_gerenciador
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text3
  1265  000012                     __ptext3:
  1266                           	opt callstack 0
  1267  000012                     _jogar:
  1268                           	opt callstack 23
  1269  000012                     
  1270                           ;task_manager.c: 82:     srand(time(((void*)0)));
  1271  000012  0E00               	movlw	0
  1272  000014  6E01               	movwf	time@t^0,c
  1273  000016  0E00               	movlw	0
  1274  000018  6E02               	movwf	(time@t+1)^0,c
  1275  00001A  ECE7  F009         	call	_time	;wreg free
  1276  00001E  C001  F02B         	movff	?_time,??_jogar
  1277  000022  C002  F02C         	movff	?_time+1,??_jogar+1
  1278  000026  C003  F02D         	movff	?_time+2,??_jogar+2
  1279  00002A  C004  F02E         	movff	?_time+3,??_jogar+3
  1280  00002E  C005  F02F         	movff	?_time+4,??_jogar+4
  1281  000032  C006  F030         	movff	?_time+5,??_jogar+5
  1282  000036  C007  F031         	movff	?_time+6,??_jogar+6
  1283  00003A  C008  F032         	movff	?_time+7,??_jogar+7
  1284  00003E  C02B  F009         	movff	??_jogar,srand@s
  1285  000042  C02D  F00A         	movff	??_jogar+2,srand@s+1
  1286  000046  ECA2  F00A         	call	_srand	;wreg free
  1287  00004A                     
  1288                           ;task_manager.c: 83:     int bateu = 0, qtd_asteroide = 20, velocidade = 4;
  1289  00004A  0E00               	movlw	0
  1290  00004C  6E42               	movwf	(jogar@bateu+1)^0,c
  1291  00004E  0E00               	movlw	0
  1292  000050  6E41               	movwf	jogar@bateu^0,c
  1293  000052  0E00               	movlw	0
  1294  000054  6E34               	movwf	(jogar@qtd_asteroide+1)^0,c
  1295  000056  0E14               	movlw	20
  1296  000058  6E33               	movwf	jogar@qtd_asteroide^0,c
  1297  00005A  0E00               	movlw	0
  1298  00005C  6E36               	movwf	(jogar@velocidade+1)^0,c
  1299  00005E  0E04               	movlw	4
  1300  000060  6E35               	movwf	jogar@velocidade^0,c
  1301  000062                     
  1302                           ;task_manager.c: 85:     int nivel2 = 1;
  1303  000062  0E00               	movlw	0
  1304  000064  6E3A               	movwf	(jogar@nivel2+1)^0,c
  1305  000066  0E01               	movlw	1
  1306  000068  6E39               	movwf	jogar@nivel2^0,c
  1307  00006A                     
  1308                           ;task_manager.c: 88:     strcpy(mat_disp[0], "     SCORE:     ");
  1309  00006A  0E80               	movlw	low _mat_disp
  1310  00006C  6E01               	movwf	strcpy@dest^0,c
  1311  00006E  0E00               	movlw	high _mat_disp
  1312  000070  6E02               	movwf	(strcpy@dest+1)^0,c
  1313  000072  0E28               	movlw	low STR_17
  1314  000074  6E03               	movwf	strcpy@src^0,c
  1315  000076  0E7F               	movlw	high STR_17
  1316  000078  6E04               	movwf	(strcpy@src+1)^0,c
  1317  00007A  EC2F  F00A         	call	_strcpy	;wreg free
  1318  00007E                     
  1319                           ;task_manager.c: 89:     strcpy(mat_disp[1], "                ");
  1320  00007E  0E90               	movlw	low (_mat_disp+16)
  1321  000080  6E01               	movwf	strcpy@dest^0,c
  1322  000082  0E00               	movlw	high (_mat_disp+16)
  1323  000084  6E02               	movwf	(strcpy@dest+1)^0,c
  1324  000086  0ED3               	movlw	low STR_18
  1325  000088  6E03               	movwf	strcpy@src^0,c
  1326  00008A  0E7E               	movlw	high STR_18
  1327  00008C  6E04               	movwf	(strcpy@src+1)^0,c
  1328  00008E  EC2F  F00A         	call	_strcpy	;wreg free
  1329  000092                     
  1330                           ;task_manager.c: 90:     strcpy(mat_disp[2], "                ");
  1331  000092  0EA0               	movlw	low (_mat_disp+32)
  1332  000094  6E01               	movwf	strcpy@dest^0,c
  1333  000096  0E00               	movlw	high (_mat_disp+32)
  1334  000098  6E02               	movwf	(strcpy@dest+1)^0,c
  1335  00009A  0ED3               	movlw	low STR_18
  1336  00009C  6E03               	movwf	strcpy@src^0,c
  1337  00009E  0E7E               	movlw	high STR_18
  1338  0000A0  6E04               	movwf	(strcpy@src+1)^0,c
  1339  0000A2  EC2F  F00A         	call	_strcpy	;wreg free
  1340  0000A6                     
  1341                           ;task_manager.c: 91:     strcpy(mat_disp[3], "                ");
  1342  0000A6  0EB0               	movlw	low (_mat_disp+48)
  1343  0000A8  6E01               	movwf	strcpy@dest^0,c
  1344  0000AA  0E00               	movlw	high (_mat_disp+48)
  1345  0000AC  6E02               	movwf	(strcpy@dest+1)^0,c
  1346  0000AE  0ED3               	movlw	low STR_18
  1347  0000B0  6E03               	movwf	strcpy@src^0,c
  1348  0000B2  0E7E               	movlw	high STR_18
  1349  0000B4  6E04               	movwf	(strcpy@src+1)^0,c
  1350  0000B6  EC2F  F00A         	call	_strcpy	;wreg free
  1351  0000BA                     
  1352                           ;task_manager.c: 94:     mat_disp[0][15-1] = 0x30;
  1353  0000BA  0E30               	movlw	48
  1354  0000BC  0100               	movlb	0	; () banked
  1355  0000BE  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1356  0000C0                     
  1357                           ; BSR set to: 0
  1358                           ;task_manager.c: 95:     mat_disp[0][14-1] = 0x30;
  1359  0000C0  0E30               	movlw	48
  1360  0000C2  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1361  0000C4                     
  1362                           ; BSR set to: 0
  1363                           ;task_manager.c: 96:     mat_disp[0][13-1] = 0x30;
  1364  0000C4  0E30               	movlw	48
  1365  0000C6  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1366  0000C8                     
  1367                           ; BSR set to: 0
  1368                           ;task_manager.c: 97:     mat_disp[0][12-1] = 0x30;
  1369  0000C8  0E30               	movlw	48
  1370  0000CA  6F8B               	movwf	(_mat_disp+11)& (0+255),b
  1371  0000CC                     
  1372                           ; BSR set to: 0
  1373                           ;task_manager.c: 99:     print_mat(lcd);
  1374  0000CC  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1375  0000D0  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1376  0000D4  EC96  F007         	call	_print_mat	;wreg free
  1377                           
  1378                           ;task_manager.c: 102:     while(!botoes.Esc && bateu == 0){
  1379  0000D8  EFB7  F003         	goto	l1988
  1380  0000DC                     l1834:
  1381                           
  1382                           ;task_manager.c: 103:         contador ++;
  1383  0000DC  2A49               	incf	_contador^0,f,c
  1384  0000DE                     
  1385                           ;task_manager.c: 104:         if(contador%qtd_asteroide == 0){
  1386  0000DE  C049  F023         	movff	_contador,___awmod@dividend
  1387  0000E2  6A24               	clrf	(___awmod@dividend+1)^0,c
  1388  0000E4  C033  F025         	movff	jogar@qtd_asteroide,___awmod@divisor
  1389  0000E8  C034  F026         	movff	jogar@qtd_asteroide+1,___awmod@divisor+1
  1390  0000EC  EC3E  F007         	call	___awmod	;wreg free
  1391  0000F0  5023               	movf	?___awmod^0,w,c
  1392  0000F2  1024               	iorwf	(?___awmod+1)^0,w,c
  1393  0000F4  A4D8               	btfss	status,2,c
  1394  0000F6  EF7F  F000         	goto	u1161
  1395  0000FA  EF81  F000         	goto	u1160
  1396  0000FE                     u1161:
  1397  0000FE  EFA8  F000         	goto	l1842
  1398  000102                     u1160:
  1399  000102                     
  1400                           ;task_manager.c: 105:             linha_aleatoria = (rand()%3) + 1 ;
  1401  000102  EC05  F006         	call	_rand	;wreg free
  1402  000106  C019  F023         	movff	?_rand,___awmod@dividend
  1403  00010A  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
  1404  00010E  0E00               	movlw	0
  1405  000110  6E26               	movwf	(___awmod@divisor+1)^0,c
  1406  000112  0E03               	movlw	3
  1407  000114  6E25               	movwf	___awmod@divisor^0,c
  1408  000116  EC3E  F007         	call	___awmod	;wreg free
  1409  00011A  0E01               	movlw	1
  1410  00011C  2423               	addwf	?___awmod^0,w,c
  1411  00011E  6E37               	movwf	jogar@linha_aleatoria^0,c
  1412  000120  0E00               	movlw	0
  1413  000122  2024               	addwfc	(?___awmod+1)^0,w,c
  1414  000124  6E38               	movwf	(jogar@linha_aleatoria+1)^0,c
  1415  000126                     
  1416                           ;task_manager.c: 106:             mat_disp[linha_aleatoria][15] = '*';
  1417  000126  C037  F02B         	movff	jogar@linha_aleatoria,??_jogar
  1418  00012A  C038  F02C         	movff	jogar@linha_aleatoria+1,??_jogar+1
  1419  00012E  3A2B               	swapf	??_jogar^0,f,c
  1420  000130  3A2C               	swapf	(??_jogar+1)^0,f,c
  1421  000132  0EF0               	movlw	240
  1422  000134  162C               	andwf	(??_jogar+1)^0,f,c
  1423  000136  502B               	movf	??_jogar^0,w,c
  1424  000138  0B0F               	andlw	15
  1425  00013A  122C               	iorwf	(??_jogar+1)^0,f,c
  1426  00013C  0EF0               	movlw	240
  1427  00013E  162B               	andwf	??_jogar^0,f,c
  1428  000140  0E8F               	movlw	low (_mat_disp+15)
  1429  000142  242B               	addwf	??_jogar^0,w,c
  1430  000144  6ED9               	movwf	fsr2l,c
  1431  000146  0E00               	movlw	high (_mat_disp+15)
  1432  000148  202C               	addwfc	(??_jogar+1)^0,w,c
  1433  00014A  6EDA               	movwf	fsr2h,c
  1434  00014C  0E2A               	movlw	42
  1435  00014E  6EDF               	movwf	indf2,c
  1436  000150                     l1842:
  1437                           
  1438                           ;task_manager.c: 108:         if(contador%velocidade == 0){
  1439  000150  C049  F023         	movff	_contador,___awmod@dividend
  1440  000154  6A24               	clrf	(___awmod@dividend+1)^0,c
  1441  000156  C035  F025         	movff	jogar@velocidade,___awmod@divisor
  1442  00015A  C036  F026         	movff	jogar@velocidade+1,___awmod@divisor+1
  1443  00015E  EC3E  F007         	call	___awmod	;wreg free
  1444  000162  5023               	movf	?___awmod^0,w,c
  1445  000164  1024               	iorwf	(?___awmod+1)^0,w,c
  1446  000166  A4D8               	btfss	status,2,c
  1447  000168  EFB8  F000         	goto	u1171
  1448  00016C  EFBA  F000         	goto	u1170
  1449  000170                     u1171:
  1450  000170  EFB5  F001         	goto	l1900
  1451  000174                     u1170:
  1452  000174                     
  1453                           ;task_manager.c: 109:             for(int i = 1; i <= 3; i++){
  1454  000174  0E00               	movlw	0
  1455  000176  6E46               	movwf	(jogar@i+1)^0,c
  1456  000178  0E01               	movlw	1
  1457  00017A  6E45               	movwf	jogar@i^0,c
  1458  00017C                     l1846:
  1459  00017C  BE46               	btfsc	(jogar@i+1)^0,7,c
  1460  00017E  EFCA  F000         	goto	u1181
  1461  000182  5046               	movf	(jogar@i+1)^0,w,c
  1462  000184  E109               	bnz	u1180
  1463  000186  0E04               	movlw	4
  1464  000188  5C45               	subwf	jogar@i^0,w,c
  1465  00018A  A0D8               	btfss	status,0,c
  1466  00018C  EFCA  F000         	goto	u1181
  1467  000190  EFCC  F000         	goto	u1180
  1468  000194                     u1181:
  1469  000194  EFCE  F000         	goto	l1850
  1470  000198                     u1180:
  1471  000198  EF3B  F001         	goto	l1868
  1472  00019C                     l1850:
  1473                           
  1474                           ;task_manager.c: 110:                 for(int j = 0; j < 15; j++)
  1475  00019C  0E00               	movlw	0
  1476  00019E  6E44               	movwf	(jogar@j+1)^0,c
  1477  0001A0  0E00               	movlw	0
  1478  0001A2  6E43               	movwf	jogar@j^0,c
  1479  0001A4                     l1852:
  1480  0001A4  BE44               	btfsc	(jogar@j+1)^0,7,c
  1481  0001A6  EFDE  F000         	goto	u1191
  1482  0001AA  5044               	movf	(jogar@j+1)^0,w,c
  1483  0001AC  E109               	bnz	u1190
  1484  0001AE  0E0F               	movlw	15
  1485  0001B0  5C43               	subwf	jogar@j^0,w,c
  1486  0001B2  A0D8               	btfss	status,0,c
  1487  0001B4  EFDE  F000         	goto	u1191
  1488  0001B8  EFE0  F000         	goto	u1190
  1489  0001BC                     u1191:
  1490  0001BC  EFE2  F000         	goto	l1856
  1491  0001C0                     u1190:
  1492  0001C0  EF22  F001         	goto	l1862
  1493  0001C4                     l1856:
  1494                           
  1495                           ;task_manager.c: 111:                     mat_disp[i][j] = mat_disp[i][j+1];
  1496  0001C4  C045  F02B         	movff	jogar@i,??_jogar
  1497  0001C8  C046  F02C         	movff	jogar@i+1,??_jogar+1
  1498  0001CC  3A2B               	swapf	??_jogar^0,f,c
  1499  0001CE  3A2C               	swapf	(??_jogar+1)^0,f,c
  1500  0001D0  0EF0               	movlw	240
  1501  0001D2  162C               	andwf	(??_jogar+1)^0,f,c
  1502  0001D4  502B               	movf	??_jogar^0,w,c
  1503  0001D6  0B0F               	andlw	15
  1504  0001D8  122C               	iorwf	(??_jogar+1)^0,f,c
  1505  0001DA  0EF0               	movlw	240
  1506  0001DC  162B               	andwf	??_jogar^0,f,c
  1507  0001DE  0E80               	movlw	low _mat_disp
  1508  0001E0  6E2D               	movwf	(??_jogar+2)^0,c
  1509  0001E2  0E00               	movlw	high _mat_disp
  1510  0001E4  6E2E               	movwf	(??_jogar+3)^0,c
  1511  0001E6  0E01               	movlw	1
  1512  0001E8  262D               	addwf	(??_jogar+2)^0,f,c
  1513  0001EA  0E00               	movlw	0
  1514  0001EC  222E               	addwfc	(??_jogar+3)^0,f,c
  1515  0001EE  502B               	movf	??_jogar^0,w,c
  1516  0001F0  262D               	addwf	(??_jogar+2)^0,f,c
  1517  0001F2  502C               	movf	(??_jogar+1)^0,w,c
  1518  0001F4  222E               	addwfc	(??_jogar+3)^0,f,c
  1519  0001F6  5043               	movf	jogar@j^0,w,c
  1520  0001F8  242D               	addwf	(??_jogar+2)^0,w,c
  1521  0001FA  6ED9               	movwf	fsr2l,c
  1522  0001FC  5044               	movf	(jogar@j+1)^0,w,c
  1523  0001FE  202E               	addwfc	(??_jogar+3)^0,w,c
  1524  000200  6EDA               	movwf	fsr2h,c
  1525  000202  C045  F02F         	movff	jogar@i,??_jogar+4
  1526  000206  C046  F030         	movff	jogar@i+1,??_jogar+5
  1527  00020A  3A2F               	swapf	(??_jogar+4)^0,f,c
  1528  00020C  3A30               	swapf	(??_jogar+5)^0,f,c
  1529  00020E  0EF0               	movlw	240
  1530  000210  1630               	andwf	(??_jogar+5)^0,f,c
  1531  000212  502F               	movf	(??_jogar+4)^0,w,c
  1532  000214  0B0F               	andlw	15
  1533  000216  1230               	iorwf	(??_jogar+5)^0,f,c
  1534  000218  0EF0               	movlw	240
  1535  00021A  162F               	andwf	(??_jogar+4)^0,f,c
  1536  00021C  0E80               	movlw	low _mat_disp
  1537  00021E  6E31               	movwf	(??_jogar+6)^0,c
  1538  000220  0E00               	movlw	high _mat_disp
  1539  000222  6E32               	movwf	(??_jogar+7)^0,c
  1540  000224  502F               	movf	(??_jogar+4)^0,w,c
  1541  000226  2631               	addwf	(??_jogar+6)^0,f,c
  1542  000228  5030               	movf	(??_jogar+5)^0,w,c
  1543  00022A  2232               	addwfc	(??_jogar+7)^0,f,c
  1544  00022C  5043               	movf	jogar@j^0,w,c
  1545  00022E  2431               	addwf	(??_jogar+6)^0,w,c
  1546  000230  6EE1               	movwf	fsr1l,c
  1547  000232  5044               	movf	(jogar@j+1)^0,w,c
  1548  000234  2032               	addwfc	(??_jogar+7)^0,w,c
  1549  000236  6EE2               	movwf	fsr1h,c
  1550  000238  CFDF FFE7          	movff	indf2,indf1
  1551  00023C  4A43               	infsnz	jogar@j^0,f,c
  1552  00023E  2A44               	incf	(jogar@j+1)^0,f,c
  1553  000240  EFD2  F000         	goto	l1852
  1554  000244                     l1862:
  1555                           
  1556                           ;task_manager.c: 112:                 mat_disp[i][15] = ' ';
  1557  000244  C045  F02B         	movff	jogar@i,??_jogar
  1558  000248  C046  F02C         	movff	jogar@i+1,??_jogar+1
  1559  00024C  3A2B               	swapf	??_jogar^0,f,c
  1560  00024E  3A2C               	swapf	(??_jogar+1)^0,f,c
  1561  000250  0EF0               	movlw	240
  1562  000252  162C               	andwf	(??_jogar+1)^0,f,c
  1563  000254  502B               	movf	??_jogar^0,w,c
  1564  000256  0B0F               	andlw	15
  1565  000258  122C               	iorwf	(??_jogar+1)^0,f,c
  1566  00025A  0EF0               	movlw	240
  1567  00025C  162B               	andwf	??_jogar^0,f,c
  1568  00025E  0E8F               	movlw	low (_mat_disp+15)
  1569  000260  242B               	addwf	??_jogar^0,w,c
  1570  000262  6ED9               	movwf	fsr2l,c
  1571  000264  0E00               	movlw	high (_mat_disp+15)
  1572  000266  202C               	addwfc	(??_jogar+1)^0,w,c
  1573  000268  6EDA               	movwf	fsr2h,c
  1574  00026A  0E20               	movlw	32
  1575  00026C  6EDF               	movwf	indf2,c
  1576  00026E                     
  1577                           ;task_manager.c: 113:             }
  1578  00026E  4A45               	infsnz	jogar@i^0,f,c
  1579  000270  2A46               	incf	(jogar@i+1)^0,f,c
  1580  000272  EFBE  F000         	goto	l1846
  1581  000276                     l1868:
  1582                           
  1583                           ;task_manager.c: 114:             mat_disp[x][y-1] = ' ';
  1584  000276  505C               	movf	_x^0,w,c
  1585  000278  0D10               	mullw	16
  1586  00027A  0EFF               	movlw	255
  1587  00027C  6E2B               	movwf	??_jogar^0,c
  1588  00027E  0EFF               	movlw	255
  1589  000280  6E2C               	movwf	(??_jogar+1)^0,c
  1590  000282  0E80               	movlw	low _mat_disp
  1591  000284  6E2D               	movwf	(??_jogar+2)^0,c
  1592  000286  0E00               	movlw	high _mat_disp
  1593  000288  6E2E               	movwf	(??_jogar+3)^0,c
  1594  00028A  502B               	movf	??_jogar^0,w,c
  1595  00028C  262D               	addwf	(??_jogar+2)^0,f,c
  1596  00028E  502C               	movf	(??_jogar+1)^0,w,c
  1597  000290  222E               	addwfc	(??_jogar+3)^0,f,c
  1598  000292  50F3               	movf	243,w,c
  1599  000294  262D               	addwf	(??_jogar+2)^0,f,c
  1600  000296  50F4               	movf	244,w,c
  1601  000298  222E               	addwfc	(??_jogar+3)^0,f,c
  1602  00029A  504A               	movf	_y^0,w,c
  1603  00029C  242D               	addwf	(??_jogar+2)^0,w,c
  1604  00029E  6ED9               	movwf	fsr2l,c
  1605  0002A0  0E00               	movlw	0
  1606  0002A2  202E               	addwfc	(??_jogar+3)^0,w,c
  1607  0002A4  6EDA               	movwf	fsr2h,c
  1608  0002A6  0E20               	movlw	32
  1609  0002A8  6EDF               	movwf	indf2,c
  1610                           
  1611                           ;task_manager.c: 115:             mat_disp[x][y] = '>';
  1612  0002AA  505C               	movf	_x^0,w,c
  1613  0002AC  0D10               	mullw	16
  1614  0002AE  0E80               	movlw	low _mat_disp
  1615  0002B0  6E2B               	movwf	??_jogar^0,c
  1616  0002B2  0E00               	movlw	high _mat_disp
  1617  0002B4  6E2C               	movwf	(??_jogar+1)^0,c
  1618  0002B6  50F3               	movf	243,w,c
  1619  0002B8  262B               	addwf	??_jogar^0,f,c
  1620  0002BA  50F4               	movf	244,w,c
  1621  0002BC  222C               	addwfc	(??_jogar+1)^0,f,c
  1622  0002BE  504A               	movf	_y^0,w,c
  1623  0002C0  242B               	addwf	??_jogar^0,w,c
  1624  0002C2  6ED9               	movwf	fsr2l,c
  1625  0002C4  0E00               	movlw	0
  1626  0002C6  202C               	addwfc	(??_jogar+1)^0,w,c
  1627  0002C8  6EDA               	movwf	fsr2h,c
  1628  0002CA  0E3E               	movlw	62
  1629  0002CC  6EDF               	movwf	indf2,c
  1630  0002CE                     
  1631                           ;task_manager.c: 117:             if(mat_disp[1][0] == '*' || mat_disp[2][0] == '*' || m
      +                          at_disp[3][0] == '*')
  1632  0002CE  0E2A               	movlw	42
  1633  0002D0  0100               	movlb	0	; () banked
  1634  0002D2  1990               	xorwf	(_mat_disp+16)& (0+255),w,b
  1635  0002D4  B4D8               	btfsc	status,2,c
  1636  0002D6  EF6F  F001         	goto	u1201
  1637  0002DA  EF71  F001         	goto	u1200
  1638  0002DE                     u1201:
  1639  0002DE  EF83  F001         	goto	l1876
  1640  0002E2                     u1200:
  1641  0002E2                     
  1642                           ; BSR set to: 0
  1643  0002E2  0E2A               	movlw	42
  1644  0002E4  19A0               	xorwf	(_mat_disp+32)& (0+255),w,b
  1645  0002E6  B4D8               	btfsc	status,2,c
  1646  0002E8  EF78  F001         	goto	u1211
  1647  0002EC  EF7A  F001         	goto	u1210
  1648  0002F0                     u1211:
  1649  0002F0  EF83  F001         	goto	l1876
  1650  0002F4                     u1210:
  1651  0002F4                     
  1652                           ; BSR set to: 0
  1653  0002F4  0E2A               	movlw	42
  1654  0002F6  19B0               	xorwf	(_mat_disp+48)& (0+255),w,b
  1655  0002F8  A4D8               	btfss	status,2,c
  1656  0002FA  EF81  F001         	goto	u1221
  1657  0002FE  EF83  F001         	goto	u1220
  1658  000302                     u1221:
  1659  000302  EFB5  F001         	goto	l1900
  1660  000306                     u1220:
  1661  000306                     l1876:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;task_manager.c: 118:             {;task_manager.c: 119:                 mat_disp[0][15-
      +                          1]++;
  1665  000306  2B8E               	incf	(_mat_disp+14)& (0+255),f,b
  1666  000308                     
  1667                           ; BSR set to: 0
  1668                           ;task_manager.c: 120:                 if(mat_disp[0][15-1]==0x3A)
  1669  000308  0E3A               	movlw	58
  1670  00030A  198E               	xorwf	(_mat_disp+14)& (0+255),w,b
  1671  00030C  A4D8               	btfss	status,2,c
  1672  00030E  EF8B  F001         	goto	u1231
  1673  000312  EF8D  F001         	goto	u1230
  1674  000316                     u1231:
  1675  000316  EFB5  F001         	goto	l1900
  1676  00031A                     u1230:
  1677  00031A                     
  1678                           ; BSR set to: 0
  1679                           ;task_manager.c: 121:                 {;task_manager.c: 122:                     mat_dis
      +                          p[0][15-1] = 0x30;
  1680  00031A  0E30               	movlw	48
  1681  00031C  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1682  00031E                     
  1683                           ; BSR set to: 0
  1684                           ;task_manager.c: 123:                     mat_disp[0][14-1]++;
  1685  00031E  2B8D               	incf	(_mat_disp+13)& (0+255),f,b
  1686  000320                     
  1687                           ; BSR set to: 0
  1688                           ;task_manager.c: 125:                     if(mat_disp[0][14-1]==0x3A)
  1689  000320  0E3A               	movlw	58
  1690  000322  198D               	xorwf	(_mat_disp+13)& (0+255),w,b
  1691  000324  A4D8               	btfss	status,2,c
  1692  000326  EF97  F001         	goto	u1241
  1693  00032A  EF99  F001         	goto	u1240
  1694  00032E                     u1241:
  1695  00032E  EFB5  F001         	goto	l1900
  1696  000332                     u1240:
  1697  000332                     
  1698                           ; BSR set to: 0
  1699                           ;task_manager.c: 126:                     {;task_manager.c: 127:                        
      +                           mat_disp[0][14-1] = 0x30;
  1700  000332  0E30               	movlw	48
  1701  000334  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1702  000336                     
  1703                           ; BSR set to: 0
  1704                           ;task_manager.c: 128:                         mat_disp[0][13-1]++;
  1705  000336  2B8C               	incf	(_mat_disp+12)& (0+255),f,b
  1706  000338                     
  1707                           ; BSR set to: 0
  1708                           ;task_manager.c: 130:                         if(mat_disp[0][13-1]==0x3A)
  1709  000338  0E3A               	movlw	58
  1710  00033A  198C               	xorwf	(_mat_disp+12)& (0+255),w,b
  1711  00033C  A4D8               	btfss	status,2,c
  1712  00033E  EFA3  F001         	goto	u1251
  1713  000342  EFA5  F001         	goto	u1250
  1714  000346                     u1251:
  1715  000346  EFB5  F001         	goto	l1900
  1716  00034A                     u1250:
  1717  00034A                     
  1718                           ; BSR set to: 0
  1719                           ;task_manager.c: 131:                         {;task_manager.c: 132:                    
      +                                   mat_disp[0][13-1] = 0x30;
  1720  00034A  0E30               	movlw	48
  1721  00034C  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1722  00034E                     
  1723                           ; BSR set to: 0
  1724                           ;task_manager.c: 133:                             mat_disp[0][12-1]++;
  1725  00034E  2B8B               	incf	(_mat_disp+11)& (0+255),f,b
  1726  000350                     
  1727                           ; BSR set to: 0
  1728                           ;task_manager.c: 135:                             if(mat_disp[0][12-1]==0x3A)
  1729  000350  0E3A               	movlw	58
  1730  000352  198B               	xorwf	(_mat_disp+11)& (0+255),w,b
  1731  000354  A4D8               	btfss	status,2,c
  1732  000356  EFAF  F001         	goto	u1261
  1733  00035A  EFB1  F001         	goto	u1260
  1734  00035E                     u1261:
  1735  00035E  EFB5  F001         	goto	l230
  1736  000362                     u1260:
  1737  000362                     
  1738                           ; BSR set to: 0
  1739                           ;task_manager.c: 136:                                 mat_disp[0][12-1] = 0x30;
  1740  000362  0E30               	movlw	48
  1741  000364  6F8B               	movwf	(_mat_disp+11)& (0+255),b
  1742  000366  EFB5  F001         	goto	l1900
  1743  00036A                     l230:
  1744  00036A                     l1900:
  1745                           
  1746                           ;task_manager.c: 144:         print_mat(lcd);
  1747  00036A  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1748  00036E  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1749  000372  EC96  F007         	call	_print_mat	;wreg free
  1750  000376                     
  1751                           ;task_manager.c: 146:         if(mat_disp[0][14-1] == 0x31 && mat_disp[0][15-1] == 0x30 
      +                          && nivel2 == 1){
  1752  000376  0E31               	movlw	49
  1753  000378  0100               	movlb	0	; () banked
  1754  00037A  198D               	xorwf	(_mat_disp+13)& (0+255),w,b
  1755  00037C  A4D8               	btfss	status,2,c
  1756  00037E  EFC3  F001         	goto	u1271
  1757  000382  EFC5  F001         	goto	u1270
  1758  000386                     u1271:
  1759  000386  EF1D  F002         	goto	l1922
  1760  00038A                     u1270:
  1761  00038A                     
  1762                           ; BSR set to: 0
  1763  00038A  0E30               	movlw	48
  1764  00038C  198E               	xorwf	(_mat_disp+14)& (0+255),w,b
  1765  00038E  A4D8               	btfss	status,2,c
  1766  000390  EFCC  F001         	goto	u1281
  1767  000394  EFCE  F001         	goto	u1280
  1768  000398                     u1281:
  1769  000398  EF1D  F002         	goto	l1922
  1770  00039C                     u1280:
  1771  00039C                     
  1772                           ; BSR set to: 0
  1773  00039C  0439               	decf	jogar@nivel2^0,w,c
  1774  00039E  103A               	iorwf	(jogar@nivel2+1)^0,w,c
  1775  0003A0  A4D8               	btfss	status,2,c
  1776  0003A2  EFD5  F001         	goto	u1291
  1777  0003A6  EFD7  F001         	goto	u1290
  1778  0003AA                     u1291:
  1779  0003AA  EF1D  F002         	goto	l1922
  1780  0003AE                     u1290:
  1781  0003AE                     
  1782                           ; BSR set to: 0
  1783                           ;task_manager.c: 147:             strcpy(mat_disp[1], "   NIVEL 2      ");
  1784  0003AE  0E90               	movlw	low (_mat_disp+16)
  1785  0003B0  6E01               	movwf	strcpy@dest^0,c
  1786  0003B2  0E00               	movlw	high (_mat_disp+16)
  1787  0003B4  6E02               	movwf	(strcpy@dest+1)^0,c
  1788  0003B6  0E06               	movlw	low STR_21
  1789  0003B8  6E03               	movwf	strcpy@src^0,c
  1790  0003BA  0E7F               	movlw	high STR_21
  1791  0003BC  6E04               	movwf	(strcpy@src+1)^0,c
  1792  0003BE  EC2F  F00A         	call	_strcpy	;wreg free
  1793                           
  1794                           ;task_manager.c: 148:             strcpy(mat_disp[2], "                ");
  1795  0003C2  0EA0               	movlw	low (_mat_disp+32)
  1796  0003C4  6E01               	movwf	strcpy@dest^0,c
  1797  0003C6  0E00               	movlw	high (_mat_disp+32)
  1798  0003C8  6E02               	movwf	(strcpy@dest+1)^0,c
  1799  0003CA  0ED3               	movlw	low STR_18
  1800  0003CC  6E03               	movwf	strcpy@src^0,c
  1801  0003CE  0E7E               	movlw	high STR_18
  1802  0003D0  6E04               	movwf	(strcpy@src+1)^0,c
  1803  0003D2  EC2F  F00A         	call	_strcpy	;wreg free
  1804                           
  1805                           ;task_manager.c: 149:             strcpy(mat_disp[3], "                ");
  1806  0003D6  0EB0               	movlw	low (_mat_disp+48)
  1807  0003D8  6E01               	movwf	strcpy@dest^0,c
  1808  0003DA  0E00               	movlw	high (_mat_disp+48)
  1809  0003DC  6E02               	movwf	(strcpy@dest+1)^0,c
  1810  0003DE  0ED3               	movlw	low STR_18
  1811  0003E0  6E03               	movwf	strcpy@src^0,c
  1812  0003E2  0E7E               	movlw	high STR_18
  1813  0003E4  6E04               	movwf	(strcpy@src+1)^0,c
  1814  0003E6  EC2F  F00A         	call	_strcpy	;wreg free
  1815  0003EA                     
  1816                           ;task_manager.c: 150:             print_mat(lcd);
  1817  0003EA  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1818  0003EE  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1819  0003F2  EC96  F007         	call	_print_mat	;wreg free
  1820  0003F6                     
  1821                           ;task_manager.c: 151:             nivel2 = 0;
  1822  0003F6  0E00               	movlw	0
  1823  0003F8  6E3A               	movwf	(jogar@nivel2+1)^0,c
  1824  0003FA  0E00               	movlw	0
  1825  0003FC  6E39               	movwf	jogar@nivel2^0,c
  1826  0003FE                     
  1827                           ;task_manager.c: 152:             int cont = 0;
  1828  0003FE  0E00               	movlw	0
  1829  000400  6E3C               	movwf	(jogar@cont+1)^0,c
  1830  000402  0E00               	movlw	0
  1831  000404  6E3B               	movwf	jogar@cont^0,c
  1832                           
  1833                           ;task_manager.c: 153:             while(cont<50){
  1834  000406  EF07  F002         	goto	l1918
  1835  00040A                     l1916:
  1836                           
  1837                           ;task_manager.c: 154:                 cont++;
  1838  00040A  4A3B               	infsnz	jogar@cont^0,f,c
  1839  00040C  2A3C               	incf	(jogar@cont+1)^0,f,c
  1840  00040E                     l1918:
  1841                           
  1842                           ;task_manager.c: 153:             while(cont<50){
  1843  00040E  BE3C               	btfsc	(jogar@cont+1)^0,7,c
  1844  000410  EF13  F002         	goto	u1301
  1845  000414  503C               	movf	(jogar@cont+1)^0,w,c
  1846  000416  E109               	bnz	u1300
  1847  000418  0E32               	movlw	50
  1848  00041A  5C3B               	subwf	jogar@cont^0,w,c
  1849  00041C  A0D8               	btfss	status,0,c
  1850  00041E  EF13  F002         	goto	u1301
  1851  000422  EF15  F002         	goto	u1300
  1852  000426                     u1301:
  1853  000426  EF05  F002         	goto	l1916
  1854  00042A                     u1300:
  1855  00042A                     
  1856                           ;task_manager.c: 156:             velocidade = 2;
  1857  00042A  0E00               	movlw	0
  1858  00042C  6E36               	movwf	(jogar@velocidade+1)^0,c
  1859  00042E  0E02               	movlw	2
  1860  000430  6E35               	movwf	jogar@velocidade^0,c
  1861                           
  1862                           ;task_manager.c: 157:             qtd_asteroide = 5;
  1863  000432  0E00               	movlw	0
  1864  000434  6E34               	movwf	(jogar@qtd_asteroide+1)^0,c
  1865  000436  0E05               	movlw	5
  1866  000438  6E33               	movwf	jogar@qtd_asteroide^0,c
  1867  00043A                     l1922:
  1868                           
  1869                           ;task_manager.c: 161:         if(mat_disp[x][y] == '>' && mat_disp[x][y+1] == '*')
  1870  00043A  505C               	movf	_x^0,w,c
  1871  00043C  0D10               	mullw	16
  1872  00043E  0E80               	movlw	low _mat_disp
  1873  000440  6E2B               	movwf	??_jogar^0,c
  1874  000442  0E00               	movlw	high _mat_disp
  1875  000444  6E2C               	movwf	(??_jogar+1)^0,c
  1876  000446  50F3               	movf	243,w,c
  1877  000448  262B               	addwf	??_jogar^0,f,c
  1878  00044A  50F4               	movf	244,w,c
  1879  00044C  222C               	addwfc	(??_jogar+1)^0,f,c
  1880  00044E  504A               	movf	_y^0,w,c
  1881  000450  242B               	addwf	??_jogar^0,w,c
  1882  000452  6ED9               	movwf	fsr2l,c
  1883  000454  0E00               	movlw	0
  1884  000456  202C               	addwfc	(??_jogar+1)^0,w,c
  1885  000458  6EDA               	movwf	fsr2h,c
  1886  00045A  0E3E               	movlw	62
  1887  00045C  18DE               	xorwf	postinc2,w,c
  1888  00045E  A4D8               	btfss	status,2,c
  1889  000460  EF34  F002         	goto	u1311
  1890  000464  EF36  F002         	goto	u1310
  1891  000468                     u1311:
  1892  000468  EF57  F002         	goto	l1928
  1893  00046C                     u1310:
  1894  00046C  505C               	movf	_x^0,w,c
  1895  00046E  0D10               	mullw	16
  1896  000470  0E80               	movlw	low _mat_disp
  1897  000472  6E2B               	movwf	??_jogar^0,c
  1898  000474  0E00               	movlw	high _mat_disp
  1899  000476  6E2C               	movwf	(??_jogar+1)^0,c
  1900  000478  0E01               	movlw	1
  1901  00047A  262B               	addwf	??_jogar^0,f,c
  1902  00047C  0E00               	movlw	0
  1903  00047E  222C               	addwfc	(??_jogar+1)^0,f,c
  1904  000480  50F3               	movf	243,w,c
  1905  000482  262B               	addwf	??_jogar^0,f,c
  1906  000484  50F4               	movf	244,w,c
  1907  000486  222C               	addwfc	(??_jogar+1)^0,f,c
  1908  000488  504A               	movf	_y^0,w,c
  1909  00048A  242B               	addwf	??_jogar^0,w,c
  1910  00048C  6ED9               	movwf	fsr2l,c
  1911  00048E  0E00               	movlw	0
  1912  000490  202C               	addwfc	(??_jogar+1)^0,w,c
  1913  000492  6EDA               	movwf	fsr2h,c
  1914  000494  0E2A               	movlw	42
  1915  000496  18DE               	xorwf	postinc2,w,c
  1916  000498  A4D8               	btfss	status,2,c
  1917  00049A  EF51  F002         	goto	u1321
  1918  00049E  EF53  F002         	goto	u1320
  1919  0004A2                     u1321:
  1920  0004A2  EF57  F002         	goto	l1928
  1921  0004A6                     u1320:
  1922  0004A6                     
  1923                           ;task_manager.c: 162:             bateu = 1;
  1924  0004A6  0E00               	movlw	0
  1925  0004A8  6E42               	movwf	(jogar@bateu+1)^0,c
  1926  0004AA  0E01               	movlw	1
  1927  0004AC  6E41               	movwf	jogar@bateu^0,c
  1928  0004AE                     l1928:
  1929                           
  1930                           ;task_manager.c: 164:         if((botoes.U) && (x > 1)){
  1931  0004AE  A051               	btfss	_botoes^0,0,c
  1932  0004B0  EF5C  F002         	goto	u1331
  1933  0004B4  EF5E  F002         	goto	u1330
  1934  0004B8                     u1331:
  1935  0004B8  EFD4  F002         	goto	l1946
  1936  0004BC                     u1330:
  1937  0004BC  0E01               	movlw	1
  1938  0004BE  645C               	cpfsgt	_x^0,c
  1939  0004C0  EF64  F002         	goto	u1341
  1940  0004C4  EF66  F002         	goto	u1340
  1941  0004C8                     u1341:
  1942  0004C8  EFD4  F002         	goto	l1946
  1943  0004CC                     u1340:
  1944  0004CC                     
  1945                           ;task_manager.c: 165:             if(mat_disp[x][y] == '>' && mat_disp[x-1][y] == '*')
  1946  0004CC  505C               	movf	_x^0,w,c
  1947  0004CE  0D10               	mullw	16
  1948  0004D0  0E80               	movlw	low _mat_disp
  1949  0004D2  6E2B               	movwf	??_jogar^0,c
  1950  0004D4  0E00               	movlw	high _mat_disp
  1951  0004D6  6E2C               	movwf	(??_jogar+1)^0,c
  1952  0004D8  50F3               	movf	243,w,c
  1953  0004DA  262B               	addwf	??_jogar^0,f,c
  1954  0004DC  50F4               	movf	244,w,c
  1955  0004DE  222C               	addwfc	(??_jogar+1)^0,f,c
  1956  0004E0  504A               	movf	_y^0,w,c
  1957  0004E2  242B               	addwf	??_jogar^0,w,c
  1958  0004E4  6ED9               	movwf	fsr2l,c
  1959  0004E6  0E00               	movlw	0
  1960  0004E8  202C               	addwfc	(??_jogar+1)^0,w,c
  1961  0004EA  6EDA               	movwf	fsr2h,c
  1962  0004EC  0E3E               	movlw	62
  1963  0004EE  18DE               	xorwf	postinc2,w,c
  1964  0004F0  A4D8               	btfss	status,2,c
  1965  0004F2  EF7D  F002         	goto	u1351
  1966  0004F6  EF7F  F002         	goto	u1350
  1967  0004FA                     u1351:
  1968  0004FA  EFAE  F002         	goto	l1938
  1969  0004FE                     u1350:
  1970  0004FE  505C               	movf	_x^0,w,c
  1971  000500  6E2B               	movwf	??_jogar^0,c
  1972  000502  6A2C               	clrf	(??_jogar+1)^0,c
  1973  000504  3A2B               	swapf	??_jogar^0,f,c
  1974  000506  3A2C               	swapf	(??_jogar+1)^0,f,c
  1975  000508  0EF0               	movlw	240
  1976  00050A  162C               	andwf	(??_jogar+1)^0,f,c
  1977  00050C  502B               	movf	??_jogar^0,w,c
  1978  00050E  0B0F               	andlw	15
  1979  000510  122C               	iorwf	(??_jogar+1)^0,f,c
  1980  000512  0EF0               	movlw	240
  1981  000514  162B               	andwf	??_jogar^0,f,c
  1982  000516  0EF0               	movlw	240
  1983  000518  6E2D               	movwf	(??_jogar+2)^0,c
  1984  00051A  0EFF               	movlw	255
  1985  00051C  6E2E               	movwf	(??_jogar+3)^0,c
  1986  00051E  0E80               	movlw	low _mat_disp
  1987  000520  6E2F               	movwf	(??_jogar+4)^0,c
  1988  000522  0E00               	movlw	high _mat_disp
  1989  000524  6E30               	movwf	(??_jogar+5)^0,c
  1990  000526  502D               	movf	(??_jogar+2)^0,w,c
  1991  000528  262F               	addwf	(??_jogar+4)^0,f,c
  1992  00052A  502E               	movf	(??_jogar+3)^0,w,c
  1993  00052C  2230               	addwfc	(??_jogar+5)^0,f,c
  1994  00052E  502B               	movf	??_jogar^0,w,c
  1995  000530  262F               	addwf	(??_jogar+4)^0,f,c
  1996  000532  502C               	movf	(??_jogar+1)^0,w,c
  1997  000534  2230               	addwfc	(??_jogar+5)^0,f,c
  1998  000536  504A               	movf	_y^0,w,c
  1999  000538  242F               	addwf	(??_jogar+4)^0,w,c
  2000  00053A  6ED9               	movwf	fsr2l,c
  2001  00053C  0E00               	movlw	0
  2002  00053E  2030               	addwfc	(??_jogar+5)^0,w,c
  2003  000540  6EDA               	movwf	fsr2h,c
  2004  000542  0E2A               	movlw	42
  2005  000544  18DE               	xorwf	postinc2,w,c
  2006  000546  A4D8               	btfss	status,2,c
  2007  000548  EFA8  F002         	goto	u1361
  2008  00054C  EFAA  F002         	goto	u1360
  2009  000550                     u1361:
  2010  000550  EFAE  F002         	goto	l1938
  2011  000554                     u1360:
  2012  000554                     
  2013                           ;task_manager.c: 166:                 bateu = 1;
  2014  000554  0E00               	movlw	0
  2015  000556  6E42               	movwf	(jogar@bateu+1)^0,c
  2016  000558  0E01               	movlw	1
  2017  00055A  6E41               	movwf	jogar@bateu^0,c
  2018  00055C                     l1938:
  2019                           
  2020                           ;task_manager.c: 167:             mat_disp[x][y] = ' ';
  2021  00055C  505C               	movf	_x^0,w,c
  2022  00055E  0D10               	mullw	16
  2023  000560  0E80               	movlw	low _mat_disp
  2024  000562  6E2B               	movwf	??_jogar^0,c
  2025  000564  0E00               	movlw	high _mat_disp
  2026  000566  6E2C               	movwf	(??_jogar+1)^0,c
  2027  000568  50F3               	movf	243,w,c
  2028  00056A  262B               	addwf	??_jogar^0,f,c
  2029  00056C  50F4               	movf	244,w,c
  2030  00056E  222C               	addwfc	(??_jogar+1)^0,f,c
  2031  000570  504A               	movf	_y^0,w,c
  2032  000572  242B               	addwf	??_jogar^0,w,c
  2033  000574  6ED9               	movwf	fsr2l,c
  2034  000576  0E00               	movlw	0
  2035  000578  202C               	addwfc	(??_jogar+1)^0,w,c
  2036  00057A  6EDA               	movwf	fsr2h,c
  2037  00057C  0E20               	movlw	32
  2038  00057E  6EDF               	movwf	indf2,c
  2039  000580                     
  2040                           ;task_manager.c: 168:             x--;
  2041  000580  065C               	decf	_x^0,f,c
  2042  000582                     
  2043                           ;task_manager.c: 169:             botoes.U = 0;
  2044  000582  9051               	bcf	_botoes^0,0,c
  2045  000584                     
  2046                           ;task_manager.c: 170:             mat_disp[x][y] = '>';
  2047  000584  505C               	movf	_x^0,w,c
  2048  000586  0D10               	mullw	16
  2049  000588  0E80               	movlw	low _mat_disp
  2050  00058A  6E2B               	movwf	??_jogar^0,c
  2051  00058C  0E00               	movlw	high _mat_disp
  2052  00058E  6E2C               	movwf	(??_jogar+1)^0,c
  2053  000590  50F3               	movf	243,w,c
  2054  000592  262B               	addwf	??_jogar^0,f,c
  2055  000594  50F4               	movf	244,w,c
  2056  000596  222C               	addwfc	(??_jogar+1)^0,f,c
  2057  000598  504A               	movf	_y^0,w,c
  2058  00059A  242B               	addwf	??_jogar^0,w,c
  2059  00059C  6ED9               	movwf	fsr2l,c
  2060  00059E  0E00               	movlw	0
  2061  0005A0  202C               	addwfc	(??_jogar+1)^0,w,c
  2062  0005A2  6EDA               	movwf	fsr2h,c
  2063  0005A4  0E3E               	movlw	62
  2064  0005A6  6EDF               	movwf	indf2,c
  2065  0005A8                     l1946:
  2066                           
  2067                           ;task_manager.c: 172:         if((botoes.D) && (x < 3)){
  2068  0005A8  A251               	btfss	_botoes^0,1,c
  2069  0005AA  EFD9  F002         	goto	u1371
  2070  0005AE  EFDB  F002         	goto	u1370
  2071  0005B2                     u1371:
  2072  0005B2  EF4D  F003         	goto	l1964
  2073  0005B6                     u1370:
  2074  0005B6  0E03               	movlw	3
  2075  0005B8  605C               	cpfslt	_x^0,c
  2076  0005BA  EFE1  F002         	goto	u1381
  2077  0005BE  EFE3  F002         	goto	u1380
  2078  0005C2                     u1381:
  2079  0005C2  EF4D  F003         	goto	l1964
  2080  0005C6                     u1380:
  2081  0005C6                     
  2082                           ;task_manager.c: 173:             if(mat_disp[x][y] == '>' && mat_disp[x+1][y] == '*')
  2083  0005C6  505C               	movf	_x^0,w,c
  2084  0005C8  0D10               	mullw	16
  2085  0005CA  0E80               	movlw	low _mat_disp
  2086  0005CC  6E2B               	movwf	??_jogar^0,c
  2087  0005CE  0E00               	movlw	high _mat_disp
  2088  0005D0  6E2C               	movwf	(??_jogar+1)^0,c
  2089  0005D2  50F3               	movf	243,w,c
  2090  0005D4  262B               	addwf	??_jogar^0,f,c
  2091  0005D6  50F4               	movf	244,w,c
  2092  0005D8  222C               	addwfc	(??_jogar+1)^0,f,c
  2093  0005DA  504A               	movf	_y^0,w,c
  2094  0005DC  242B               	addwf	??_jogar^0,w,c
  2095  0005DE  6ED9               	movwf	fsr2l,c
  2096  0005E0  0E00               	movlw	0
  2097  0005E2  202C               	addwfc	(??_jogar+1)^0,w,c
  2098  0005E4  6EDA               	movwf	fsr2h,c
  2099  0005E6  0E3E               	movlw	62
  2100  0005E8  18DE               	xorwf	postinc2,w,c
  2101  0005EA  A4D8               	btfss	status,2,c
  2102  0005EC  EFFA  F002         	goto	u1391
  2103  0005F0  EFFC  F002         	goto	u1390
  2104  0005F4                     u1391:
  2105  0005F4  EF27  F003         	goto	l1956
  2106  0005F8                     u1390:
  2107  0005F8  505C               	movf	_x^0,w,c
  2108  0005FA  6E2B               	movwf	??_jogar^0,c
  2109  0005FC  6A2C               	clrf	(??_jogar+1)^0,c
  2110  0005FE  3A2B               	swapf	??_jogar^0,f,c
  2111  000600  3A2C               	swapf	(??_jogar+1)^0,f,c
  2112  000602  0EF0               	movlw	240
  2113  000604  162C               	andwf	(??_jogar+1)^0,f,c
  2114  000606  502B               	movf	??_jogar^0,w,c
  2115  000608  0B0F               	andlw	15
  2116  00060A  122C               	iorwf	(??_jogar+1)^0,f,c
  2117  00060C  0EF0               	movlw	240
  2118  00060E  162B               	andwf	??_jogar^0,f,c
  2119  000610  0E80               	movlw	low _mat_disp
  2120  000612  6E2D               	movwf	(??_jogar+2)^0,c
  2121  000614  0E00               	movlw	high _mat_disp
  2122  000616  6E2E               	movwf	(??_jogar+3)^0,c
  2123  000618  0E10               	movlw	16
  2124  00061A  262D               	addwf	(??_jogar+2)^0,f,c
  2125  00061C  0E00               	movlw	0
  2126  00061E  222E               	addwfc	(??_jogar+3)^0,f,c
  2127  000620  502B               	movf	??_jogar^0,w,c
  2128  000622  262D               	addwf	(??_jogar+2)^0,f,c
  2129  000624  502C               	movf	(??_jogar+1)^0,w,c
  2130  000626  222E               	addwfc	(??_jogar+3)^0,f,c
  2131  000628  504A               	movf	_y^0,w,c
  2132  00062A  242D               	addwf	(??_jogar+2)^0,w,c
  2133  00062C  6ED9               	movwf	fsr2l,c
  2134  00062E  0E00               	movlw	0
  2135  000630  202E               	addwfc	(??_jogar+3)^0,w,c
  2136  000632  6EDA               	movwf	fsr2h,c
  2137  000634  0E2A               	movlw	42
  2138  000636  18DE               	xorwf	postinc2,w,c
  2139  000638  A4D8               	btfss	status,2,c
  2140  00063A  EF21  F003         	goto	u1401
  2141  00063E  EF23  F003         	goto	u1400
  2142  000642                     u1401:
  2143  000642  EF27  F003         	goto	l1956
  2144  000646                     u1400:
  2145  000646                     
  2146                           ;task_manager.c: 174:                 bateu = 1;
  2147  000646  0E00               	movlw	0
  2148  000648  6E42               	movwf	(jogar@bateu+1)^0,c
  2149  00064A  0E01               	movlw	1
  2150  00064C  6E41               	movwf	jogar@bateu^0,c
  2151  00064E                     l1956:
  2152                           
  2153                           ;task_manager.c: 175:             mat_disp[x][y] = ' ';
  2154  00064E  505C               	movf	_x^0,w,c
  2155  000650  0D10               	mullw	16
  2156  000652  0E80               	movlw	low _mat_disp
  2157  000654  6E2B               	movwf	??_jogar^0,c
  2158  000656  0E00               	movlw	high _mat_disp
  2159  000658  6E2C               	movwf	(??_jogar+1)^0,c
  2160  00065A  50F3               	movf	243,w,c
  2161  00065C  262B               	addwf	??_jogar^0,f,c
  2162  00065E  50F4               	movf	244,w,c
  2163  000660  222C               	addwfc	(??_jogar+1)^0,f,c
  2164  000662  504A               	movf	_y^0,w,c
  2165  000664  242B               	addwf	??_jogar^0,w,c
  2166  000666  6ED9               	movwf	fsr2l,c
  2167  000668  0E00               	movlw	0
  2168  00066A  202C               	addwfc	(??_jogar+1)^0,w,c
  2169  00066C  6EDA               	movwf	fsr2h,c
  2170  00066E  0E20               	movlw	32
  2171  000670  6EDF               	movwf	indf2,c
  2172  000672                     
  2173                           ;task_manager.c: 176:             x++;
  2174  000672  2A5C               	incf	_x^0,f,c
  2175  000674                     
  2176                           ;task_manager.c: 177:             botoes.D = 0;
  2177  000674  9251               	bcf	_botoes^0,1,c
  2178  000676                     
  2179                           ;task_manager.c: 178:             mat_disp[x][y] = '>';
  2180  000676  505C               	movf	_x^0,w,c
  2181  000678  0D10               	mullw	16
  2182  00067A  0E80               	movlw	low _mat_disp
  2183  00067C  6E2B               	movwf	??_jogar^0,c
  2184  00067E  0E00               	movlw	high _mat_disp
  2185  000680  6E2C               	movwf	(??_jogar+1)^0,c
  2186  000682  50F3               	movf	243,w,c
  2187  000684  262B               	addwf	??_jogar^0,f,c
  2188  000686  50F4               	movf	244,w,c
  2189  000688  222C               	addwfc	(??_jogar+1)^0,f,c
  2190  00068A  504A               	movf	_y^0,w,c
  2191  00068C  242B               	addwf	??_jogar^0,w,c
  2192  00068E  6ED9               	movwf	fsr2l,c
  2193  000690  0E00               	movlw	0
  2194  000692  202C               	addwfc	(??_jogar+1)^0,w,c
  2195  000694  6EDA               	movwf	fsr2h,c
  2196  000696  0E3E               	movlw	62
  2197  000698  6EDF               	movwf	indf2,c
  2198  00069A                     l1964:
  2199                           
  2200                           ;task_manager.c: 180:         if((botoes.R) && (y < 15)){
  2201  00069A  A651               	btfss	_botoes^0,3,c
  2202  00069C  EF52  F003         	goto	u1411
  2203  0006A0  EF54  F003         	goto	u1410
  2204  0006A4                     u1411:
  2205  0006A4  EF82  F003         	goto	l1976
  2206  0006A8                     u1410:
  2207  0006A8  0E0F               	movlw	15
  2208  0006AA  604A               	cpfslt	_y^0,c
  2209  0006AC  EF5A  F003         	goto	u1421
  2210  0006B0  EF5C  F003         	goto	u1420
  2211  0006B4                     u1421:
  2212  0006B4  EF82  F003         	goto	l1976
  2213  0006B8                     u1420:
  2214  0006B8                     
  2215                           ;task_manager.c: 181:             mat_disp[x][y] = ' ';
  2216  0006B8  505C               	movf	_x^0,w,c
  2217  0006BA  0D10               	mullw	16
  2218  0006BC  0E80               	movlw	low _mat_disp
  2219  0006BE  6E2B               	movwf	??_jogar^0,c
  2220  0006C0  0E00               	movlw	high _mat_disp
  2221  0006C2  6E2C               	movwf	(??_jogar+1)^0,c
  2222  0006C4  50F3               	movf	243,w,c
  2223  0006C6  262B               	addwf	??_jogar^0,f,c
  2224  0006C8  50F4               	movf	244,w,c
  2225  0006CA  222C               	addwfc	(??_jogar+1)^0,f,c
  2226  0006CC  504A               	movf	_y^0,w,c
  2227  0006CE  242B               	addwf	??_jogar^0,w,c
  2228  0006D0  6ED9               	movwf	fsr2l,c
  2229  0006D2  0E00               	movlw	0
  2230  0006D4  202C               	addwfc	(??_jogar+1)^0,w,c
  2231  0006D6  6EDA               	movwf	fsr2h,c
  2232  0006D8  0E20               	movlw	32
  2233  0006DA  6EDF               	movwf	indf2,c
  2234  0006DC                     
  2235                           ;task_manager.c: 182:             y++;
  2236  0006DC  2A4A               	incf	_y^0,f,c
  2237  0006DE                     
  2238                           ;task_manager.c: 183:             botoes.R = 0;
  2239  0006DE  9651               	bcf	_botoes^0,3,c
  2240  0006E0                     
  2241                           ;task_manager.c: 184:             mat_disp[x][y] = '>';
  2242  0006E0  505C               	movf	_x^0,w,c
  2243  0006E2  0D10               	mullw	16
  2244  0006E4  0E80               	movlw	low _mat_disp
  2245  0006E6  6E2B               	movwf	??_jogar^0,c
  2246  0006E8  0E00               	movlw	high _mat_disp
  2247  0006EA  6E2C               	movwf	(??_jogar+1)^0,c
  2248  0006EC  50F3               	movf	243,w,c
  2249  0006EE  262B               	addwf	??_jogar^0,f,c
  2250  0006F0  50F4               	movf	244,w,c
  2251  0006F2  222C               	addwfc	(??_jogar+1)^0,f,c
  2252  0006F4  504A               	movf	_y^0,w,c
  2253  0006F6  242B               	addwf	??_jogar^0,w,c
  2254  0006F8  6ED9               	movwf	fsr2l,c
  2255  0006FA  0E00               	movlw	0
  2256  0006FC  202C               	addwfc	(??_jogar+1)^0,w,c
  2257  0006FE  6EDA               	movwf	fsr2h,c
  2258  000700  0E3E               	movlw	62
  2259  000702  6EDF               	movwf	indf2,c
  2260  000704                     l1976:
  2261                           
  2262                           ;task_manager.c: 186:         if((botoes.L) && (y > 0)){
  2263  000704  A451               	btfss	_botoes^0,2,c
  2264  000706  EF87  F003         	goto	u1431
  2265  00070A  EF89  F003         	goto	u1430
  2266  00070E                     u1431:
  2267  00070E  EFB7  F003         	goto	l1988
  2268  000712                     u1430:
  2269  000712  504A               	movf	_y^0,w,c
  2270  000714  B4D8               	btfsc	status,2,c
  2271  000716  EF8F  F003         	goto	u1441
  2272  00071A  EF91  F003         	goto	u1440
  2273  00071E                     u1441:
  2274  00071E  EFB7  F003         	goto	l1988
  2275  000722                     u1440:
  2276  000722                     
  2277                           ;task_manager.c: 187:             mat_disp[x][y] = ' ';
  2278  000722  505C               	movf	_x^0,w,c
  2279  000724  0D10               	mullw	16
  2280  000726  0E80               	movlw	low _mat_disp
  2281  000728  6E2B               	movwf	??_jogar^0,c
  2282  00072A  0E00               	movlw	high _mat_disp
  2283  00072C  6E2C               	movwf	(??_jogar+1)^0,c
  2284  00072E  50F3               	movf	243,w,c
  2285  000730  262B               	addwf	??_jogar^0,f,c
  2286  000732  50F4               	movf	244,w,c
  2287  000734  222C               	addwfc	(??_jogar+1)^0,f,c
  2288  000736  504A               	movf	_y^0,w,c
  2289  000738  242B               	addwf	??_jogar^0,w,c
  2290  00073A  6ED9               	movwf	fsr2l,c
  2291  00073C  0E00               	movlw	0
  2292  00073E  202C               	addwfc	(??_jogar+1)^0,w,c
  2293  000740  6EDA               	movwf	fsr2h,c
  2294  000742  0E20               	movlw	32
  2295  000744  6EDF               	movwf	indf2,c
  2296  000746                     
  2297                           ;task_manager.c: 188:             y--;
  2298  000746  064A               	decf	_y^0,f,c
  2299  000748                     
  2300                           ;task_manager.c: 189:             botoes.L = 0;
  2301  000748  9451               	bcf	_botoes^0,2,c
  2302  00074A                     
  2303                           ;task_manager.c: 190:             mat_disp[x][y] = '>';
  2304  00074A  505C               	movf	_x^0,w,c
  2305  00074C  0D10               	mullw	16
  2306  00074E  0E80               	movlw	low _mat_disp
  2307  000750  6E2B               	movwf	??_jogar^0,c
  2308  000752  0E00               	movlw	high _mat_disp
  2309  000754  6E2C               	movwf	(??_jogar+1)^0,c
  2310  000756  50F3               	movf	243,w,c
  2311  000758  262B               	addwf	??_jogar^0,f,c
  2312  00075A  50F4               	movf	244,w,c
  2313  00075C  222C               	addwfc	(??_jogar+1)^0,f,c
  2314  00075E  504A               	movf	_y^0,w,c
  2315  000760  242B               	addwf	??_jogar^0,w,c
  2316  000762  6ED9               	movwf	fsr2l,c
  2317  000764  0E00               	movlw	0
  2318  000766  202C               	addwfc	(??_jogar+1)^0,w,c
  2319  000768  6EDA               	movwf	fsr2h,c
  2320  00076A  0E3E               	movlw	62
  2321  00076C  6EDF               	movwf	indf2,c
  2322  00076E                     l1988:
  2323                           
  2324                           ;task_manager.c: 102:     while(!botoes.Esc && bateu == 0){
  2325  00076E  BA51               	btfsc	_botoes^0,5,c
  2326  000770  EFBC  F003         	goto	u1451
  2327  000774  EFBE  F003         	goto	u1450
  2328  000778                     u1451:
  2329  000778  EFC7  F003         	goto	l247
  2330  00077C                     u1450:
  2331  00077C  5041               	movf	jogar@bateu^0,w,c
  2332  00077E  1042               	iorwf	(jogar@bateu+1)^0,w,c
  2333  000780  B4D8               	btfsc	status,2,c
  2334  000782  EFC5  F003         	goto	u1461
  2335  000786  EFC7  F003         	goto	u1460
  2336  00078A                     u1461:
  2337  00078A  EF6E  F000         	goto	l1834
  2338  00078E                     u1460:
  2339  00078E                     l247:
  2340                           
  2341                           ;task_manager.c: 194:     char pont4 = mat_disp[0][14], pont3 = mat_disp[0][13], pont2 =
      +                           mat_disp[0][12], pont1 = mat_disp[0][11];
  2342  00078E  C08E  F03D         	movff	_mat_disp+14,jogar@pont4
  2343  000792  C08D  F03E         	movff	_mat_disp+13,jogar@pont3
  2344  000796  C08C  F03F         	movff	_mat_disp+12,jogar@pont2
  2345  00079A  C08B  F040         	movff	_mat_disp+11,jogar@pont1
  2346  00079E                     
  2347                           ;task_manager.c: 195:     if(bateu == 1){
  2348  00079E  0441               	decf	jogar@bateu^0,w,c
  2349  0007A0  1042               	iorwf	(jogar@bateu+1)^0,w,c
  2350  0007A2  A4D8               	btfss	status,2,c
  2351  0007A4  EFD6  F003         	goto	u1471
  2352  0007A8  EFD8  F003         	goto	u1470
  2353  0007AC                     u1471:
  2354  0007AC  EF15  F004         	goto	l2006
  2355  0007B0                     u1470:
  2356  0007B0                     
  2357                           ;task_manager.c: 196:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  2358  0007B0  0E80               	movlw	low _mat_disp
  2359  0007B2  6E01               	movwf	strcpy@dest^0,c
  2360  0007B4  0E00               	movlw	high _mat_disp
  2361  0007B6  6E02               	movwf	(strcpy@dest+1)^0,c
  2362  0007B8  0E39               	movlw	low STR_24
  2363  0007BA  6E03               	movwf	strcpy@src^0,c
  2364  0007BC  0E7F               	movlw	high STR_24
  2365  0007BE  6E04               	movwf	(strcpy@src+1)^0,c
  2366  0007C0  EC2F  F00A         	call	_strcpy	;wreg free
  2367                           
  2368                           ;task_manager.c: 197:             strcpy(mat_disp[1], "SCORE:          ");
  2369  0007C4  0E90               	movlw	low (_mat_disp+16)
  2370  0007C6  6E01               	movwf	strcpy@dest^0,c
  2371  0007C8  0E00               	movlw	high (_mat_disp+16)
  2372  0007CA  6E02               	movwf	(strcpy@dest+1)^0,c
  2373  0007CC  0EE4               	movlw	low STR_25
  2374  0007CE  6E03               	movwf	strcpy@src^0,c
  2375  0007D0  0E7E               	movlw	high STR_25
  2376  0007D2  6E04               	movwf	(strcpy@src+1)^0,c
  2377  0007D4  EC2F  F00A         	call	_strcpy	;wreg free
  2378                           
  2379                           ;task_manager.c: 198:             strcpy(mat_disp[2], "APERTE ESC      ");
  2380  0007D8  0EA0               	movlw	low (_mat_disp+32)
  2381  0007DA  6E01               	movwf	strcpy@dest^0,c
  2382  0007DC  0E00               	movlw	high (_mat_disp+32)
  2383  0007DE  6E02               	movwf	(strcpy@dest+1)^0,c
  2384  0007E0  0E17               	movlw	low STR_26
  2385  0007E2  6E03               	movwf	strcpy@src^0,c
  2386  0007E4  0E7F               	movlw	high STR_26
  2387  0007E6  6E04               	movwf	(strcpy@src+1)^0,c
  2388  0007E8  EC2F  F00A         	call	_strcpy	;wreg free
  2389                           
  2390                           ;task_manager.c: 199:             strcpy(mat_disp[3], "PARA SAIR       ");
  2391  0007EC  0EB0               	movlw	low (_mat_disp+48)
  2392  0007EE  6E01               	movwf	strcpy@dest^0,c
  2393  0007F0  0E00               	movlw	high (_mat_disp+48)
  2394  0007F2  6E02               	movwf	(strcpy@dest+1)^0,c
  2395  0007F4  0EF5               	movlw	low STR_27
  2396  0007F6  6E03               	movwf	strcpy@src^0,c
  2397  0007F8  0E7E               	movlw	high STR_27
  2398  0007FA  6E04               	movwf	(strcpy@src+1)^0,c
  2399  0007FC  EC2F  F00A         	call	_strcpy	;wreg free
  2400  000800                     
  2401                           ;task_manager.c: 200:             mat_disp[1][6] = pont1;
  2402  000800  C040  F096         	movff	jogar@pont1,_mat_disp+22
  2403  000804                     
  2404                           ;task_manager.c: 201:             mat_disp[1][7] = pont2;
  2405  000804  C03F  F097         	movff	jogar@pont2,_mat_disp+23
  2406  000808                     
  2407                           ;task_manager.c: 202:             mat_disp[1][8] = pont3;
  2408  000808  C03E  F098         	movff	jogar@pont3,_mat_disp+24
  2409  00080C                     
  2410                           ;task_manager.c: 203:             mat_disp[1][9] = pont4;
  2411  00080C  C03D  F099         	movff	jogar@pont4,_mat_disp+25
  2412  000810                     
  2413                           ;task_manager.c: 204:             print_mat(lcd);
  2414  000810  C029  F010         	movff	jogar@lcd,print_mat@lcd
  2415  000814  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  2416  000818  EC96  F007         	call	_print_mat	;wreg free
  2417  00081C                     l249:
  2418  00081C  AA51               	btfss	_botoes^0,5,c
  2419  00081E  EF13  F004         	goto	u1481
  2420  000822  EF15  F004         	goto	u1480
  2421  000826                     u1481:
  2422  000826  EF0E  F004         	goto	l249
  2423  00082A                     u1480:
  2424  00082A                     l2006:
  2425                           
  2426                           ;task_manager.c: 208:     x = 1;
  2427  00082A  0E01               	movlw	1
  2428  00082C  6E5C               	movwf	_x^0,c
  2429                           
  2430                           ;task_manager.c: 209:     y = 0;
  2431  00082E  0E00               	movlw	0
  2432  000830  6E4A               	movwf	_y^0,c
  2433                           
  2434                           ;task_manager.c: 210:     contador = 0;
  2435  000832  0E00               	movlw	0
  2436  000834  6E49               	movwf	_contador^0,c
  2437  000836  0012               	return		;funcret
  2438  000838                     __end_of_jogar:
  2439                           	opt callstack 0
  2440                           
  2441 ;; *************** function _time *****************
  2442 ;; Defined at:
  2443 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  t               2    0[COMRAM] PTR long long 
  2446 ;;		 -> NULL(0), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  8    0[COMRAM] long long 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2458 ;;      Params:         8       0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0
  2461 ;;      Totals:         8       0       0       0       0       0       0
  2462 ;;Total ram usage:        8 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    2
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_jogar
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text4
  2473  0013CE                     __ptext4:
  2474                           	opt callstack 0
  2475  0013CE                     _time:
  2476                           	opt callstack 26
  2477  0013CE  5001               	movf	time@t^0,w,c
  2478  0013D0  1002               	iorwf	(time@t+1)^0,w,c
  2479  0013D2  B4D8               	btfsc	status,2,c
  2480  0013D4  EFEE  F009         	goto	u1031
  2481  0013D8  EFF0  F009         	goto	u1030
  2482  0013DC                     u1031:
  2483  0013DC  EF04  F00A         	goto	l1722
  2484  0013E0                     u1030:
  2485  0013E0  C001  FFD9         	movff	time@t,fsr2l
  2486  0013E4  C002  FFDA         	movff	time@t+1,fsr2h
  2487  0013E8  0EFF               	movlw	255
  2488  0013EA  6EDE               	movwf	postinc2,c
  2489  0013EC  0EFF               	movlw	255
  2490  0013EE  6EDE               	movwf	postinc2,c
  2491  0013F0  0EFF               	movlw	255
  2492  0013F2  6EDE               	movwf	postinc2,c
  2493  0013F4  0EFF               	movlw	255
  2494  0013F6  6EDE               	movwf	postinc2,c
  2495  0013F8  0EFF               	movlw	255
  2496  0013FA  6EDE               	movwf	postinc2,c
  2497  0013FC  0EFF               	movlw	255
  2498  0013FE  6EDE               	movwf	postinc2,c
  2499  001400  0EFF               	movlw	255
  2500  001402  6EDE               	movwf	postinc2,c
  2501  001404  0EFF               	movlw	255
  2502  001406  6EDD               	movwf	postdec2,c
  2503  001408                     l1722:
  2504  001408  6801               	setf	?_time^0,c
  2505  00140A  6802               	setf	(?_time+1)^0,c
  2506  00140C  6803               	setf	(?_time+2)^0,c
  2507  00140E  6804               	setf	(?_time+3)^0,c
  2508  001410  6805               	setf	(?_time+4)^0,c
  2509  001412  6806               	setf	(?_time+5)^0,c
  2510  001414  6807               	setf	(?_time+6)^0,c
  2511  001416  6808               	setf	(?_time+7)^0,c
  2512  001418  0012               	return		;funcret
  2513  00141A                     __end_of_time:
  2514                           	opt callstack 0
  2515                           
  2516 ;; *************** function _srand *****************
  2517 ;; Defined at:
  2518 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  s               2    8[COMRAM] unsigned int 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2532 ;;      Params:         2       0       0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0
  2534 ;;      Temps:          4       0       0       0       0       0       0
  2535 ;;      Totals:         6       0       0       0       0       0       0
  2536 ;;Total ram usage:        6 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    2
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_jogar
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text5
  2547  001544                     __ptext5:
  2548                           	opt callstack 0
  2549  001544                     _srand:
  2550                           	opt callstack 26
  2551  001544  0EFF               	movlw	255
  2552  001546  6E0B               	movwf	??_srand^0,c
  2553  001548  0EFF               	movlw	255
  2554  00154A  6E0C               	movwf	(??_srand+1)^0,c
  2555  00154C  C009  F00D         	movff	srand@s,??_srand+2
  2556  001550  C00A  F00E         	movff	srand@s+1,??_srand+3
  2557  001554  500B               	movf	??_srand^0,w,c
  2558  001556  260D               	addwf	(??_srand+2)^0,f,c
  2559  001558  500C               	movf	(??_srand+1)^0,w,c
  2560  00155A  220E               	addwfc	(??_srand+3)^0,f,c
  2561  00155C  C00D  F052         	movff	??_srand+2,_seed
  2562  001560  C00E  F053         	movff	??_srand+3,_seed+1
  2563  001564  6A54               	clrf	(_seed+2)^0,c
  2564  001566  6A55               	clrf	(_seed+3)^0,c
  2565  001568  6A56               	clrf	(_seed+4)^0,c
  2566  00156A  6A57               	clrf	(_seed+5)^0,c
  2567  00156C  6A58               	clrf	(_seed+6)^0,c
  2568  00156E  6A59               	clrf	(_seed+7)^0,c
  2569  001570  0012               	return		;funcret
  2570  001572                     __end_of_srand:
  2571                           	opt callstack 0
  2572                           
  2573 ;; *************** function _rand *****************
  2574 ;; Defined at:
  2575 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2   24[COMRAM] int 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2589 ;;      Params:         2       0       0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0
  2591 ;;      Temps:          8       0       0       0       0       0       0
  2592 ;;      Totals:        10       0       0       0       0       0       0
  2593 ;;Total ram usage:       10 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    3
  2596 ;; This function calls:
  2597 ;;		___omul
  2598 ;; This function is called by:
  2599 ;;		_jogar
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text6
  2604  000C0A                     __ptext6:
  2605                           	opt callstack 0
  2606  000C0A                     _rand:
  2607                           	opt callstack 25
  2608  000C0A  C052  F001         	movff	_seed,___omul@multiplier
  2609  000C0E  C053  F002         	movff	_seed+1,___omul@multiplier+1
  2610  000C12  C054  F003         	movff	_seed+2,___omul@multiplier+2
  2611  000C16  C055  F004         	movff	_seed+3,___omul@multiplier+3
  2612  000C1A  C056  F005         	movff	_seed+4,___omul@multiplier+4
  2613  000C1E  C057  F006         	movff	_seed+5,___omul@multiplier+5
  2614  000C22  C058  F007         	movff	_seed+6,___omul@multiplier+6
  2615  000C26  C059  F008         	movff	_seed+7,___omul@multiplier+7
  2616  000C2A  0E2D               	movlw	45
  2617  000C2C  6E09               	movwf	___omul@multiplicand^0,c
  2618  000C2E  0E7F               	movlw	127
  2619  000C30  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2620  000C32  0E95               	movlw	149
  2621  000C34  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2622  000C36  0E4C               	movlw	76
  2623  000C38  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2624  000C3A  0E2D               	movlw	45
  2625  000C3C  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2626  000C3E  0EF4               	movlw	244
  2627  000C40  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2628  000C42  0E51               	movlw	81
  2629  000C44  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2630  000C46  0E58               	movlw	88
  2631  000C48  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2632  000C4A  ECEC  F007         	call	___omul	;wreg free
  2633  000C4E  C001  F01B         	movff	?___omul,??_rand
  2634  000C52  C002  F01C         	movff	?___omul+1,??_rand+1
  2635  000C56  C003  F01D         	movff	?___omul+2,??_rand+2
  2636  000C5A  C004  F01E         	movff	?___omul+3,??_rand+3
  2637  000C5E  C005  F01F         	movff	?___omul+4,??_rand+4
  2638  000C62  C006  F020         	movff	?___omul+5,??_rand+5
  2639  000C66  C007  F021         	movff	?___omul+6,??_rand+6
  2640  000C6A  C008  F022         	movff	?___omul+7,??_rand+7
  2641  000C6E  0E01               	movlw	1
  2642  000C70  241B               	addwf	??_rand^0,w,c
  2643  000C72  6E52               	movwf	_seed^0,c
  2644  000C74  0E00               	movlw	0
  2645  000C76  201C               	addwfc	(??_rand+1)^0,w,c
  2646  000C78  6E53               	movwf	(_seed+1)^0,c
  2647  000C7A  0E00               	movlw	0
  2648  000C7C  201D               	addwfc	(??_rand+2)^0,w,c
  2649  000C7E  6E54               	movwf	(_seed+2)^0,c
  2650  000C80  0E00               	movlw	0
  2651  000C82  201E               	addwfc	(??_rand+3)^0,w,c
  2652  000C84  6E55               	movwf	(_seed+3)^0,c
  2653  000C86  0E00               	movlw	0
  2654  000C88  201F               	addwfc	(??_rand+4)^0,w,c
  2655  000C8A  6E56               	movwf	(_seed+4)^0,c
  2656  000C8C  0E00               	movlw	0
  2657  000C8E  2020               	addwfc	(??_rand+5)^0,w,c
  2658  000C90  6E57               	movwf	(_seed+5)^0,c
  2659  000C92  0E00               	movlw	0
  2660  000C94  2021               	addwfc	(??_rand+6)^0,w,c
  2661  000C96  6E58               	movwf	(_seed+6)^0,c
  2662  000C98  0E00               	movlw	0
  2663  000C9A  2022               	addwfc	(??_rand+7)^0,w,c
  2664  000C9C  6E59               	movwf	(_seed+7)^0,c
  2665  000C9E  C052  F01B         	movff	_seed,??_rand
  2666  000CA2  C053  F01C         	movff	_seed+1,??_rand+1
  2667  000CA6  C054  F01D         	movff	_seed+2,??_rand+2
  2668  000CAA  C055  F01E         	movff	_seed+3,??_rand+3
  2669  000CAE  C056  F01F         	movff	_seed+4,??_rand+4
  2670  000CB2  C057  F020         	movff	_seed+5,??_rand+5
  2671  000CB6  C058  F021         	movff	_seed+6,??_rand+6
  2672  000CBA  C059  F022         	movff	_seed+7,??_rand+7
  2673  000CBE  0E32               	movlw	50
  2674  000CC0  EF6B  F006         	goto	u1040
  2675  000CC4                     u1045:
  2676  000CC4  90D8               	bcf	status,0,c
  2677  000CC6  3222               	rrcf	(??_rand+7)^0,f,c
  2678  000CC8  3221               	rrcf	(??_rand+6)^0,f,c
  2679  000CCA  3220               	rrcf	(??_rand+5)^0,f,c
  2680  000CCC  321F               	rrcf	(??_rand+4)^0,f,c
  2681  000CCE  321E               	rrcf	(??_rand+3)^0,f,c
  2682  000CD0  321D               	rrcf	(??_rand+2)^0,f,c
  2683  000CD2  321C               	rrcf	(??_rand+1)^0,f,c
  2684  000CD4  321B               	rrcf	??_rand^0,f,c
  2685  000CD6                     u1040:
  2686  000CD6  2EE8               	decfsz	wreg,f,c
  2687  000CD8  EF62  F006         	goto	u1045
  2688  000CDC  C01B  F019         	movff	??_rand,?_rand
  2689  000CE0  C01D  F01A         	movff	??_rand+2,?_rand+1
  2690  000CE4  0012               	return		;funcret
  2691  000CE6                     __end_of_rand:
  2692                           	opt callstack 0
  2693                           
  2694 ;; *************** function ___omul *****************
  2695 ;; Defined at:
  2696 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2699 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  product         8   16[COMRAM] unsigned long long 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  8    0[COMRAM] unsigned long long 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2711 ;;      Params:        16       0       0       0       0       0       0
  2712 ;;      Locals:         8       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0
  2714 ;;      Totals:        24       0       0       0       0       0       0
  2715 ;;Total ram usage:       24 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    2
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_rand
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text7
  2726  000FD8                     __ptext7:
  2727                           	opt callstack 0
  2728  000FD8                     ___omul:
  2729                           	opt callstack 25
  2730  000FD8  EE20  F011         	lfsr	2,___omul@product
  2731  000FDC  0E07               	movlw	7
  2732  000FDE                     u971:
  2733  000FDE  6ADE               	clrf	postinc2,c
  2734  000FE0  06E8               	decf	wreg,f,c
  2735  000FE2  E2FD               	bc	u971
  2736  000FE4                     l1682:
  2737  000FE4  A001               	btfss	___omul@multiplier^0,0,c
  2738  000FE6  EFF7  F007         	goto	u981
  2739  000FEA  EFF9  F007         	goto	u980
  2740  000FEE                     u981:
  2741  000FEE  EF09  F008         	goto	l1686
  2742  000FF2                     u980:
  2743  000FF2  5009               	movf	___omul@multiplicand^0,w,c
  2744  000FF4  2611               	addwf	___omul@product^0,f,c
  2745  000FF6  500A               	movf	(___omul@multiplicand+1)^0,w,c
  2746  000FF8  2212               	addwfc	(___omul@product+1)^0,f,c
  2747  000FFA  500B               	movf	(___omul@multiplicand+2)^0,w,c
  2748  000FFC  2213               	addwfc	(___omul@product+2)^0,f,c
  2749  000FFE  500C               	movf	(___omul@multiplicand+3)^0,w,c
  2750  001000  2214               	addwfc	(___omul@product+3)^0,f,c
  2751  001002  500D               	movf	(___omul@multiplicand+4)^0,w,c
  2752  001004  2215               	addwfc	(___omul@product+4)^0,f,c
  2753  001006  500E               	movf	(___omul@multiplicand+5)^0,w,c
  2754  001008  2216               	addwfc	(___omul@product+5)^0,f,c
  2755  00100A  500F               	movf	(___omul@multiplicand+6)^0,w,c
  2756  00100C  2217               	addwfc	(___omul@product+6)^0,f,c
  2757  00100E  5010               	movf	(___omul@multiplicand+7)^0,w,c
  2758  001010  2218               	addwfc	(___omul@product+7)^0,f,c
  2759  001012                     l1686:
  2760  001012  90D8               	bcf	status,0,c
  2761  001014  3609               	rlcf	___omul@multiplicand^0,f,c
  2762  001016  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  2763  001018  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  2764  00101A  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  2765  00101C  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  2766  00101E  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  2767  001020  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  2768  001022  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  2769  001024  90D8               	bcf	status,0,c
  2770  001026  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  2771  001028  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  2772  00102A  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  2773  00102C  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  2774  00102E  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  2775  001030  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  2776  001032  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  2777  001034  3201               	rrcf	___omul@multiplier^0,f,c
  2778  001036  5001               	movf	___omul@multiplier^0,w,c
  2779  001038  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  2780  00103A  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  2781  00103C  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  2782  00103E  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  2783  001040  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  2784  001042  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  2785  001044  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  2786  001046  A4D8               	btfss	status,2,c
  2787  001048  EF28  F008         	goto	u991
  2788  00104C  EF2A  F008         	goto	u990
  2789  001050                     u991:
  2790  001050  EFF2  F007         	goto	l1682
  2791  001054                     u990:
  2792  001054  C011  F001         	movff	___omul@product,?___omul
  2793  001058  C012  F002         	movff	___omul@product+1,?___omul+1
  2794  00105C  C013  F003         	movff	___omul@product+2,?___omul+2
  2795  001060  C014  F004         	movff	___omul@product+3,?___omul+3
  2796  001064  C015  F005         	movff	___omul@product+4,?___omul+4
  2797  001068  C016  F006         	movff	___omul@product+5,?___omul+5
  2798  00106C  C017  F007         	movff	___omul@product+6,?___omul+6
  2799  001070  C018  F008         	movff	___omul@product+7,?___omul+7
  2800  001074  0012               	return		;funcret
  2801  001076                     __end_of___omul:
  2802                           	opt callstack 0
  2803                           
  2804 ;; *************** function ___awmod *****************
  2805 ;; Defined at:
  2806 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  dividend        2   34[COMRAM] int 
  2809 ;;  divisor         2   36[COMRAM] int 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  sign            1   39[COMRAM] unsigned char 
  2812 ;;  counter         1   38[COMRAM] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2   34[COMRAM] int 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2822 ;;      Params:         4       0       0       0       0       0       0
  2823 ;;      Locals:         2       0       0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0
  2825 ;;      Totals:         6       0       0       0       0       0       0
  2826 ;;Total ram usage:        6 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    2
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_jogar
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text8
  2837  000E7C                     __ptext8:
  2838                           	opt callstack 0
  2839  000E7C                     ___awmod:
  2840                           	opt callstack 26
  2841  000E7C  0E00               	movlw	0
  2842  000E7E  6E28               	movwf	___awmod@sign^0,c
  2843  000E80  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  2844  000E82  EF47  F007         	goto	u1050
  2845  000E86  EF45  F007         	goto	u1051
  2846  000E8A                     u1051:
  2847  000E8A  EF4D  F007         	goto	l1742
  2848  000E8E                     u1050:
  2849  000E8E  6C23               	negf	___awmod@dividend^0,c
  2850  000E90  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2851  000E92  B0D8               	btfsc	status,0,c
  2852  000E94  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2853  000E96  0E01               	movlw	1
  2854  000E98  6E28               	movwf	___awmod@sign^0,c
  2855  000E9A                     l1742:
  2856  000E9A  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  2857  000E9C  EF54  F007         	goto	u1060
  2858  000EA0  EF52  F007         	goto	u1061
  2859  000EA4                     u1061:
  2860  000EA4  EF58  F007         	goto	l1746
  2861  000EA8                     u1060:
  2862  000EA8  6C25               	negf	___awmod@divisor^0,c
  2863  000EAA  1E26               	comf	(___awmod@divisor+1)^0,f,c
  2864  000EAC  B0D8               	btfsc	status,0,c
  2865  000EAE  2A26               	incf	(___awmod@divisor+1)^0,f,c
  2866  000EB0                     l1746:
  2867  000EB0  5025               	movf	___awmod@divisor^0,w,c
  2868  000EB2  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  2869  000EB4  B4D8               	btfsc	status,2,c
  2870  000EB6  EF5F  F007         	goto	u1071
  2871  000EBA  EF61  F007         	goto	u1070
  2872  000EBE                     u1071:
  2873  000EBE  EF85  F007         	goto	l1762
  2874  000EC2                     u1070:
  2875  000EC2  0E01               	movlw	1
  2876  000EC4  6E27               	movwf	___awmod@counter^0,c
  2877  000EC6  EF69  F007         	goto	l1752
  2878  000ECA                     l1750:
  2879  000ECA  90D8               	bcf	status,0,c
  2880  000ECC  3625               	rlcf	___awmod@divisor^0,f,c
  2881  000ECE  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  2882  000ED0  2A27               	incf	___awmod@counter^0,f,c
  2883  000ED2                     l1752:
  2884  000ED2  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  2885  000ED4  EF6E  F007         	goto	u1081
  2886  000ED8  EF70  F007         	goto	u1080
  2887  000EDC                     u1081:
  2888  000EDC  EF65  F007         	goto	l1750
  2889  000EE0                     u1080:
  2890  000EE0                     l1754:
  2891  000EE0  5025               	movf	___awmod@divisor^0,w,c
  2892  000EE2  5C23               	subwf	___awmod@dividend^0,w,c
  2893  000EE4  5026               	movf	(___awmod@divisor+1)^0,w,c
  2894  000EE6  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  2895  000EE8  A0D8               	btfss	status,0,c
  2896  000EEA  EF79  F007         	goto	u1091
  2897  000EEE  EF7B  F007         	goto	u1090
  2898  000EF2                     u1091:
  2899  000EF2  EF7F  F007         	goto	l1758
  2900  000EF6                     u1090:
  2901  000EF6  5025               	movf	___awmod@divisor^0,w,c
  2902  000EF8  5E23               	subwf	___awmod@dividend^0,f,c
  2903  000EFA  5026               	movf	(___awmod@divisor+1)^0,w,c
  2904  000EFC  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  2905  000EFE                     l1758:
  2906  000EFE  90D8               	bcf	status,0,c
  2907  000F00  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  2908  000F02  3225               	rrcf	___awmod@divisor^0,f,c
  2909  000F04  2E27               	decfsz	___awmod@counter^0,f,c
  2910  000F06  EF70  F007         	goto	l1754
  2911  000F0A                     l1762:
  2912  000F0A  5028               	movf	___awmod@sign^0,w,c
  2913  000F0C  B4D8               	btfsc	status,2,c
  2914  000F0E  EF8B  F007         	goto	u1101
  2915  000F12  EF8D  F007         	goto	u1100
  2916  000F16                     u1101:
  2917  000F16  EF91  F007         	goto	l1766
  2918  000F1A                     u1100:
  2919  000F1A  6C23               	negf	___awmod@dividend^0,c
  2920  000F1C  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2921  000F1E  B0D8               	btfsc	status,0,c
  2922  000F20  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2923  000F22                     l1766:
  2924  000F22  C023  F023         	movff	___awmod@dividend,?___awmod
  2925  000F26  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  2926  000F2A  0012               	return		;funcret
  2927  000F2C                     __end_of___awmod:
  2928                           	opt callstack 0
  2929                           
  2930 ;; *************** function _instrucoes *****************
  2931 ;; Defined at:
  2932 ;;		line 44 in file "task_manager.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  lcd             2   25[COMRAM] PTR struct .
  2935 ;;		 -> PORTD(1), 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2947 ;;      Params:         2       0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0
  2950 ;;      Totals:         2       0       0       0       0       0       0
  2951 ;;Total ram usage:        2 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    6
  2954 ;; This function calls:
  2955 ;;		_print_mat
  2956 ;;		_strcpy
  2957 ;; This function is called by:
  2958 ;;		_gerenciador
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text9
  2963  001296                     __ptext9:
  2964                           	opt callstack 0
  2965  001296                     _instrucoes:
  2966                           	opt callstack 23
  2967  001296                     
  2968                           ;task_manager.c: 45:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  2969  001296  0E80               	movlw	low _mat_disp
  2970  001298  6E01               	movwf	strcpy@dest^0,c
  2971  00129A  0E00               	movlw	high _mat_disp
  2972  00129C  6E02               	movwf	(strcpy@dest+1)^0,c
  2973  00129E  0EDE               	movlw	low STR_9
  2974  0012A0  6E03               	movwf	strcpy@src^0,c
  2975  0012A2  0E7F               	movlw	high STR_9
  2976  0012A4  6E04               	movwf	(strcpy@src+1)^0,c
  2977  0012A6  EC2F  F00A         	call	_strcpy	;wreg free
  2978                           
  2979                           ;task_manager.c: 46:     strcpy(mat_disp[1], "NAVE           ");
  2980  0012AA  0E90               	movlw	low (_mat_disp+16)
  2981  0012AC  6E01               	movwf	strcpy@dest^0,c
  2982  0012AE  0E00               	movlw	high (_mat_disp+16)
  2983  0012B0  6E02               	movwf	(strcpy@dest+1)^0,c
  2984  0012B2  0E8E               	movlw	low STR_10
  2985  0012B4  6E03               	movwf	strcpy@src^0,c
  2986  0012B6  0E7F               	movlw	high STR_10
  2987  0012B8  6E04               	movwf	(strcpy@src+1)^0,c
  2988  0012BA  EC2F  F00A         	call	_strcpy	;wreg free
  2989                           
  2990                           ;task_manager.c: 47:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  2991  0012BE  0EA0               	movlw	low (_mat_disp+32)
  2992  0012C0  6E01               	movwf	strcpy@dest^0,c
  2993  0012C2  0E00               	movlw	high (_mat_disp+32)
  2994  0012C4  6E02               	movwf	(strcpy@dest+1)^0,c
  2995  0012C6  0EAE               	movlw	low STR_11
  2996  0012C8  6E03               	movwf	strcpy@src^0,c
  2997  0012CA  0E7F               	movlw	high STR_11
  2998  0012CC  6E04               	movwf	(strcpy@src+1)^0,c
  2999  0012CE  EC2F  F00A         	call	_strcpy	;wreg free
  3000                           
  3001                           ;task_manager.c: 48:     strcpy(mat_disp[3], "MENU           ");
  3002  0012D2  0EB0               	movlw	low (_mat_disp+48)
  3003  0012D4  6E01               	movwf	strcpy@dest^0,c
  3004  0012D6  0E00               	movlw	high (_mat_disp+48)
  3005  0012D8  6E02               	movwf	(strcpy@dest+1)^0,c
  3006  0012DA  0E9E               	movlw	low STR_12
  3007  0012DC  6E03               	movwf	strcpy@src^0,c
  3008  0012DE  0E7F               	movlw	high STR_12
  3009  0012E0  6E04               	movwf	(strcpy@src+1)^0,c
  3010  0012E2  EC2F  F00A         	call	_strcpy	;wreg free
  3011  0012E6                     
  3012                           ;task_manager.c: 49:     print_mat(lcd);
  3013  0012E6  C01A  F010         	movff	instrucoes@lcd,print_mat@lcd
  3014  0012EA  C01B  F011         	movff	instrucoes@lcd+1,print_mat@lcd+1
  3015  0012EE  EC96  F007         	call	_print_mat	;wreg free
  3016  0012F2                     l205:
  3017  0012F2  AA51               	btfss	_botoes^0,5,c
  3018  0012F4  EF7E  F009         	goto	u1491
  3019  0012F8  EF80  F009         	goto	u1490
  3020  0012FC                     u1491:
  3021  0012FC  EF79  F009         	goto	l205
  3022  001300                     u1490:
  3023  001300  0012               	return		;funcret
  3024  001302                     __end_of_instrucoes:
  3025                           	opt callstack 0
  3026                           
  3027 ;; *************** function _finaliza *****************
  3028 ;; Defined at:
  3029 ;;		line 35 in file "task_manager.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  lcd             2   25[COMRAM] PTR struct .
  3032 ;;		 -> PORTD(1), 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3044 ;;      Params:         2       0       0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0
  3047 ;;      Totals:         2       0       0       0       0       0       0
  3048 ;;Total ram usage:        2 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    6
  3051 ;; This function calls:
  3052 ;;		_print_mat
  3053 ;;		_strcpy
  3054 ;; This function is called by:
  3055 ;;		_gerenciador
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text10
  3060  00136E                     __ptext10:
  3061                           	opt callstack 0
  3062  00136E                     _finaliza:
  3063                           	opt callstack 23
  3064  00136E                     
  3065                           ;task_manager.c: 36:     strcpy(mat_disp[0], "HIBERNANDO.....");
  3066  00136E  0E80               	movlw	low _mat_disp
  3067  001370  6E01               	movwf	strcpy@dest^0,c
  3068  001372  0E00               	movlw	high _mat_disp
  3069  001374  6E02               	movwf	(strcpy@dest+1)^0,c
  3070  001376  0EBE               	movlw	low STR_5
  3071  001378  6E03               	movwf	strcpy@src^0,c
  3072  00137A  0E7F               	movlw	high STR_5
  3073  00137C  6E04               	movwf	(strcpy@src+1)^0,c
  3074  00137E  EC2F  F00A         	call	_strcpy	;wreg free
  3075                           
  3076                           ;task_manager.c: 37:     strcpy(mat_disp[1], "               ");
  3077  001382  0E90               	movlw	low (_mat_disp+16)
  3078  001384  6E01               	movwf	strcpy@dest^0,c
  3079  001386  0E00               	movlw	high (_mat_disp+16)
  3080  001388  6E02               	movwf	(strcpy@dest+1)^0,c
  3081  00138A  0ED4               	movlw	low (STR_18+1)
  3082  00138C  6E03               	movwf	strcpy@src^0,c
  3083  00138E  0E7E               	movlw	high (STR_18+1)
  3084  001390  6E04               	movwf	(strcpy@src+1)^0,c
  3085  001392  EC2F  F00A         	call	_strcpy	;wreg free
  3086                           
  3087                           ;task_manager.c: 38:     strcpy(mat_disp[2], "               ");
  3088  001396  0EA0               	movlw	low (_mat_disp+32)
  3089  001398  6E01               	movwf	strcpy@dest^0,c
  3090  00139A  0E00               	movlw	high (_mat_disp+32)
  3091  00139C  6E02               	movwf	(strcpy@dest+1)^0,c
  3092  00139E  0ED4               	movlw	low (STR_18+1)
  3093  0013A0  6E03               	movwf	strcpy@src^0,c
  3094  0013A2  0E7E               	movlw	high (STR_18+1)
  3095  0013A4  6E04               	movwf	(strcpy@src+1)^0,c
  3096  0013A6  EC2F  F00A         	call	_strcpy	;wreg free
  3097                           
  3098                           ;task_manager.c: 39:     strcpy(mat_disp[3], "               ");
  3099  0013AA  0EB0               	movlw	low (_mat_disp+48)
  3100  0013AC  6E01               	movwf	strcpy@dest^0,c
  3101  0013AE  0E00               	movlw	high (_mat_disp+48)
  3102  0013B0  6E02               	movwf	(strcpy@dest+1)^0,c
  3103  0013B2  0ED4               	movlw	low (STR_18+1)
  3104  0013B4  6E03               	movwf	strcpy@src^0,c
  3105  0013B6  0E7E               	movlw	high (STR_18+1)
  3106  0013B8  6E04               	movwf	(strcpy@src+1)^0,c
  3107  0013BA  EC2F  F00A         	call	_strcpy	;wreg free
  3108  0013BE                     
  3109                           ;task_manager.c: 40:     print_mat(lcd);
  3110  0013BE  C01A  F010         	movff	finaliza@lcd,print_mat@lcd
  3111  0013C2  C01B  F011         	movff	finaliza@lcd+1,print_mat@lcd+1
  3112  0013C6  EC96  F007         	call	_print_mat	;wreg free
  3113  0013CA  0003               	sleep		;# 
  3114  0013CC  0012               	return		;funcret
  3115  0013CE                     __end_of_finaliza:
  3116                           	opt callstack 0
  3117                           
  3118 ;; *************** function _creditos *****************
  3119 ;; Defined at:
  3120 ;;		line 26 in file "task_manager.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  lcd             2   25[COMRAM] PTR struct .
  3123 ;;		 -> PORTD(1), 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3135 ;;      Params:         2       0       0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0
  3138 ;;      Totals:         2       0       0       0       0       0       0
  3139 ;;Total ram usage:        2 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    6
  3142 ;; This function calls:
  3143 ;;		_print_mat
  3144 ;;		_strcpy
  3145 ;; This function is called by:
  3146 ;;		_gerenciador
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text11
  3151  001302                     __ptext11:
  3152                           	opt callstack 0
  3153  001302                     _creditos:
  3154                           	opt callstack 23
  3155  001302                     
  3156                           ;task_manager.c: 27:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  3157  001302  0E80               	movlw	low _mat_disp
  3158  001304  6E01               	movwf	strcpy@dest^0,c
  3159  001306  0E00               	movlw	high _mat_disp
  3160  001308  6E02               	movwf	(strcpy@dest+1)^0,c
  3161  00130A  0ECE               	movlw	low STR_1
  3162  00130C  6E03               	movwf	strcpy@src^0,c
  3163  00130E  0E7F               	movlw	high STR_1
  3164  001310  6E04               	movwf	(strcpy@src+1)^0,c
  3165  001312  EC2F  F00A         	call	_strcpy	;wreg free
  3166                           
  3167                           ;task_manager.c: 28:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  3168  001316  0E90               	movlw	low (_mat_disp+16)
  3169  001318  6E01               	movwf	strcpy@dest^0,c
  3170  00131A  0E00               	movlw	high (_mat_disp+16)
  3171  00131C  6E02               	movwf	(strcpy@dest+1)^0,c
  3172  00131E  0EEE               	movlw	low STR_2
  3173  001320  6E03               	movwf	strcpy@src^0,c
  3174  001322  0E7F               	movlw	high STR_2
  3175  001324  6E04               	movwf	(strcpy@src+1)^0,c
  3176  001326  EC2F  F00A         	call	_strcpy	;wreg free
  3177                           
  3178                           ;task_manager.c: 29:     strcpy(mat_disp[2], "               ");
  3179  00132A  0EA0               	movlw	low (_mat_disp+32)
  3180  00132C  6E01               	movwf	strcpy@dest^0,c
  3181  00132E  0E00               	movlw	high (_mat_disp+32)
  3182  001330  6E02               	movwf	(strcpy@dest+1)^0,c
  3183  001332  0ED4               	movlw	low (STR_18+1)
  3184  001334  6E03               	movwf	strcpy@src^0,c
  3185  001336  0E7E               	movlw	high (STR_18+1)
  3186  001338  6E04               	movwf	(strcpy@src+1)^0,c
  3187  00133A  EC2F  F00A         	call	_strcpy	;wreg free
  3188                           
  3189                           ;task_manager.c: 30:     strcpy(mat_disp[3], "               ");
  3190  00133E  0EB0               	movlw	low (_mat_disp+48)
  3191  001340  6E01               	movwf	strcpy@dest^0,c
  3192  001342  0E00               	movlw	high (_mat_disp+48)
  3193  001344  6E02               	movwf	(strcpy@dest+1)^0,c
  3194  001346  0ED4               	movlw	low (STR_18+1)
  3195  001348  6E03               	movwf	strcpy@src^0,c
  3196  00134A  0E7E               	movlw	high (STR_18+1)
  3197  00134C  6E04               	movwf	(strcpy@src+1)^0,c
  3198  00134E  EC2F  F00A         	call	_strcpy	;wreg free
  3199  001352                     
  3200                           ;task_manager.c: 31:     print_mat(lcd);
  3201  001352  C01A  F010         	movff	creditos@lcd,print_mat@lcd
  3202  001356  C01B  F011         	movff	creditos@lcd+1,print_mat@lcd+1
  3203  00135A  EC96  F007         	call	_print_mat	;wreg free
  3204  00135E                     l196:
  3205  00135E  AA51               	btfss	_botoes^0,5,c
  3206  001360  EFB4  F009         	goto	u1501
  3207  001364  EFB6  F009         	goto	u1500
  3208  001368                     u1501:
  3209  001368  EFAF  F009         	goto	l196
  3210  00136C                     u1500:
  3211  00136C  0012               	return		;funcret
  3212  00136E                     __end_of_creditos:
  3213                           	opt callstack 0
  3214                           
  3215 ;; *************** function _strcpy *****************
  3216 ;; Defined at:
  3217 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3220 ;;		 -> mat_disp(64), 
  3221 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3222 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(17), 
  3223 ;;		 -> STR_23(17), STR_22(17), STR_21(17), STR_20(17), 
  3224 ;;		 -> STR_19(17), STR_18(17), STR_17(17), STR_16(17), 
  3225 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(16), 
  3226 ;;		 -> STR_11(16), STR_10(16), STR_9(16), STR_8(16), 
  3227 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(16), 
  3228 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  d               2    6[COMRAM] PTR unsigned char 
  3231 ;;		 -> mat_disp(64), 
  3232 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3233 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(17), 
  3234 ;;		 -> STR_23(17), STR_22(17), STR_21(17), STR_20(17), 
  3235 ;;		 -> STR_19(17), STR_18(17), STR_17(17), STR_16(17), 
  3236 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(16), 
  3237 ;;		 -> STR_11(16), STR_10(16), STR_9(16), STR_8(16), 
  3238 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(16), 
  3239 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2    0[COMRAM] PTR unsigned char 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3249 ;;      Params:         4       0       0       0       0       0       0
  3250 ;;      Locals:         4       0       0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0
  3252 ;;      Totals:         8       0       0       0       0       0       0
  3253 ;;Total ram usage:        8 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    2
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_creditos
  3260 ;;		_finaliza
  3261 ;;		_instrucoes
  3262 ;;		_menu
  3263 ;;		_jogar
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text12
  3268  00145E                     __ptext12:
  3269                           	opt callstack 0
  3270  00145E                     _strcpy:
  3271                           	opt callstack 26
  3272  00145E  C003  F005         	movff	strcpy@src,strcpy@s
  3273  001462  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3274  001466  C001  F007         	movff	strcpy@dest,strcpy@d
  3275  00146A  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3276  00146E                     l1716:
  3277  00146E  C005  FFF6         	movff	strcpy@s,tblptrl
  3278  001472  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3279  001476  4A05               	infsnz	strcpy@s^0,f,c
  3280  001478  2A06               	incf	(strcpy@s+1)^0,f,c
  3281  00147A                     	if	0	;tblptru may be non-zero
  3282  00147A                     	endif
  3283  00147A                     	if	0	;tblptru may be non-zero
  3284  00147A                     	endif
  3285  00147A  C007  FFD9         	movff	strcpy@d,fsr2l
  3286  00147E  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3287  001482  4A07               	infsnz	strcpy@d^0,f,c
  3288  001484  2A08               	incf	(strcpy@d+1)^0,f,c
  3289  001486  0008               	tblrd		*
  3290  001488  CFF5 FFDF          	movff	tablat,indf2
  3291  00148C  50DF               	movf	indf2,w,c
  3292  00148E  A4D8               	btfss	status,2,c
  3293  001490  EF4C  F00A         	goto	u1021
  3294  001494  EF4E  F00A         	goto	u1020
  3295  001498                     u1021:
  3296  001498  EF37  F00A         	goto	l1716
  3297  00149C                     u1020:
  3298  00149C  0012               	return		;funcret
  3299  00149E                     __end_of_strcpy:
  3300                           	opt callstack 0
  3301                           
  3302 ;; *************** function _print_mat *****************
  3303 ;; Defined at:
  3304 ;;		line 199 in file "lcd.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  lcd             2   15[COMRAM] PTR struct .
  3307 ;;		 -> PORTD(1), 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  j               2   21[COMRAM] int 
  3310 ;;  i               2   23[COMRAM] int 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3320 ;;      Params:         2       0       0       0       0       0       0
  3321 ;;      Locals:         4       0       0       0       0       0       0
  3322 ;;      Temps:          4       0       0       0       0       0       0
  3323 ;;      Totals:        10       0       0       0       0       0       0
  3324 ;;Total ram usage:       10 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    5
  3327 ;; This function calls:
  3328 ;;		_goto_XY
  3329 ;;		_write_char
  3330 ;; This function is called by:
  3331 ;;		_creditos
  3332 ;;		_finaliza
  3333 ;;		_instrucoes
  3334 ;;		_menu
  3335 ;;		_jogar
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text13
  3340  000F2C                     __ptext13:
  3341                           	opt callstack 0
  3342  000F2C                     _print_mat:
  3343                           	opt callstack 23
  3344  000F2C                     
  3345                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  3346  000F2C  0E00               	movlw	0
  3347  000F2E  6E19               	movwf	(print_mat@i+1)^0,c
  3348  000F30  0E00               	movlw	0
  3349  000F32  6E18               	movwf	print_mat@i^0,c
  3350  000F34                     l1696:
  3351                           
  3352                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  3353  000F34  C010  F008         	movff	print_mat@lcd,goto_XY@lcd
  3354  000F38  C011  F009         	movff	print_mat@lcd+1,goto_XY@lcd+1
  3355  000F3C  2818               	incf	print_mat@i^0,w,c
  3356  000F3E  6E0A               	movwf	goto_XY@x^0,c
  3357  000F40  0E01               	movlw	1
  3358  000F42  6E0B               	movwf	goto_XY@y^0,c
  3359  000F44  ECE0  F006         	call	_goto_XY	;wreg free
  3360  000F48                     
  3361                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  3362  000F48  0E00               	movlw	0
  3363  000F4A  6E17               	movwf	(print_mat@j+1)^0,c
  3364  000F4C  0E00               	movlw	0
  3365  000F4E  6E16               	movwf	print_mat@j^0,c
  3366  000F50                     l1704:
  3367                           
  3368                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  3369  000F50  C010  F001         	movff	print_mat@lcd,write_char@lcd
  3370  000F54  C011  F002         	movff	print_mat@lcd+1,write_char@lcd+1
  3371  000F58  C018  F012         	movff	print_mat@i,??_print_mat
  3372  000F5C  C019  F013         	movff	print_mat@i+1,??_print_mat+1
  3373  000F60  3A12               	swapf	??_print_mat^0,f,c
  3374  000F62  3A13               	swapf	(??_print_mat+1)^0,f,c
  3375  000F64  0EF0               	movlw	240
  3376  000F66  1613               	andwf	(??_print_mat+1)^0,f,c
  3377  000F68  5012               	movf	??_print_mat^0,w,c
  3378  000F6A  0B0F               	andlw	15
  3379  000F6C  1213               	iorwf	(??_print_mat+1)^0,f,c
  3380  000F6E  0EF0               	movlw	240
  3381  000F70  1612               	andwf	??_print_mat^0,f,c
  3382  000F72  0E80               	movlw	low _mat_disp
  3383  000F74  6E14               	movwf	(??_print_mat+2)^0,c
  3384  000F76  0E00               	movlw	high _mat_disp
  3385  000F78  6E15               	movwf	(??_print_mat+3)^0,c
  3386  000F7A  5012               	movf	??_print_mat^0,w,c
  3387  000F7C  2614               	addwf	(??_print_mat+2)^0,f,c
  3388  000F7E  5013               	movf	(??_print_mat+1)^0,w,c
  3389  000F80  2215               	addwfc	(??_print_mat+3)^0,f,c
  3390  000F82  5016               	movf	print_mat@j^0,w,c
  3391  000F84  2414               	addwf	(??_print_mat+2)^0,w,c
  3392  000F86  6ED9               	movwf	fsr2l,c
  3393  000F88  5017               	movf	(print_mat@j+1)^0,w,c
  3394  000F8A  2015               	addwfc	(??_print_mat+3)^0,w,c
  3395  000F8C  6EDA               	movwf	fsr2h,c
  3396  000F8E  50DF               	movf	indf2,w,c
  3397  000F90  6E03               	movwf	write_char@c^0,c
  3398  000F92  EC91  F005         	call	_write_char	;wreg free
  3399  000F96  4A16               	infsnz	print_mat@j^0,f,c
  3400  000F98  2A17               	incf	(print_mat@j+1)^0,f,c
  3401  000F9A  BE17               	btfsc	(print_mat@j+1)^0,7,c
  3402  000F9C  EFD9  F007         	goto	u1001
  3403  000FA0  5017               	movf	(print_mat@j+1)^0,w,c
  3404  000FA2  E109               	bnz	u1000
  3405  000FA4  0E10               	movlw	16
  3406  000FA6  5C16               	subwf	print_mat@j^0,w,c
  3407  000FA8  A0D8               	btfss	status,0,c
  3408  000FAA  EFD9  F007         	goto	u1001
  3409  000FAE  EFDB  F007         	goto	u1000
  3410  000FB2                     u1001:
  3411  000FB2  EFA8  F007         	goto	l1704
  3412  000FB6                     u1000:
  3413  000FB6                     
  3414                           ;lcd.c: 204:     }
  3415  000FB6  4A18               	infsnz	print_mat@i^0,f,c
  3416  000FB8  2A19               	incf	(print_mat@i+1)^0,f,c
  3417  000FBA  BE19               	btfsc	(print_mat@i+1)^0,7,c
  3418  000FBC  EFE9  F007         	goto	u1011
  3419  000FC0  5019               	movf	(print_mat@i+1)^0,w,c
  3420  000FC2  E109               	bnz	u1010
  3421  000FC4  0E04               	movlw	4
  3422  000FC6  5C18               	subwf	print_mat@i^0,w,c
  3423  000FC8  A0D8               	btfss	status,0,c
  3424  000FCA  EFE9  F007         	goto	u1011
  3425  000FCE  EFEB  F007         	goto	u1010
  3426  000FD2                     u1011:
  3427  000FD2  EF9A  F007         	goto	l1696
  3428  000FD6                     u1010:
  3429  000FD6  0012               	return		;funcret
  3430  000FD8                     __end_of_print_mat:
  3431                           	opt callstack 0
  3432                           
  3433 ;; *************** function _write_char *****************
  3434 ;; Defined at:
  3435 ;;		line 133 in file "lcd.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  lcd             2    0[COMRAM] PTR struct .
  3438 ;;		 -> PORTD(1), 
  3439 ;;  c               1    2[COMRAM] unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3451 ;;      Params:         3       0       0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0
  3453 ;;      Temps:          1       0       0       0       0       0       0
  3454 ;;      Totals:         4       0       0       0       0       0       0
  3455 ;;Total ram usage:        4 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    2
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_print_mat
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text14
  3466  000B22                     __ptext14:
  3467                           	opt callstack 0
  3468  000B22                     _write_char:
  3469                           	opt callstack 25
  3470  000B22                     
  3471                           ;lcd.c: 134:     lcd->E = 0;
  3472  000B22  C001  FFD9         	movff	write_char@lcd,fsr2l
  3473  000B26  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3474  000B2A  94DF               	bcf	indf2,2,c
  3475                           
  3476                           ;lcd.c: 135:     lcd->RS = 1;
  3477  000B2C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3478  000B30  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3479  000B34  80DF               	bsf	indf2,0,c
  3480                           
  3481                           ;lcd.c: 136:     lcd->R_W = 0;
  3482  000B36  C001  FFD9         	movff	write_char@lcd,fsr2l
  3483  000B3A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3484  000B3E  92DF               	bcf	indf2,1,c
  3485  000B40                     
  3486                           ;lcd.c: 139:     lcd->data = (c>>4);
  3487  000B40  C003  F004         	movff	write_char@c,??_write_char
  3488  000B44  3A04               	swapf	??_write_char^0,f,c
  3489  000B46  0E0F               	movlw	15
  3490  000B48  1604               	andwf	??_write_char^0,f,c
  3491  000B4A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3492  000B4E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3493  000B52  3A04               	swapf	??_write_char^0,f,c
  3494  000B54  50DF               	movf	indf2,w,c
  3495  000B56  1804               	xorwf	??_write_char^0,w,c
  3496  000B58  0B0F               	andlw	-241
  3497  000B5A  1804               	xorwf	??_write_char^0,w,c
  3498  000B5C  6EDF               	movwf	indf2,c
  3499  000B5E                     
  3500                           ;lcd.c: 140:     lcd->E = 1;
  3501  000B5E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3502  000B62  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3503  000B66  84DF               	bsf	indf2,2,c
  3504  000B68                     
  3505                           ;lcd.c: 141:     lcd->E = 0;
  3506  000B68  C001  FFD9         	movff	write_char@lcd,fsr2l
  3507  000B6C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3508  000B70  94DF               	bcf	indf2,2,c
  3509  000B72                     
  3510                           ;lcd.c: 144:     lcd->data = (c);
  3511  000B72  C003  F004         	movff	write_char@c,??_write_char
  3512  000B76  C001  FFD9         	movff	write_char@lcd,fsr2l
  3513  000B7A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3514  000B7E  3A04               	swapf	??_write_char^0,f,c
  3515  000B80  50DF               	movf	indf2,w,c
  3516  000B82  1804               	xorwf	??_write_char^0,w,c
  3517  000B84  0B0F               	andlw	-241
  3518  000B86  1804               	xorwf	??_write_char^0,w,c
  3519  000B88  6EDF               	movwf	indf2,c
  3520                           
  3521                           ;lcd.c: 145:     lcd->E = 1;
  3522  000B8A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3523  000B8E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3524  000B92  84DF               	bsf	indf2,2,c
  3525                           
  3526                           ;lcd.c: 146:     lcd->E = 0;
  3527  000B94  C001  FFD9         	movff	write_char@lcd,fsr2l
  3528  000B98  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3529  000B9C  94DF               	bcf	indf2,2,c
  3530  000B9E                     
  3531                           ;lcd.c: 149:     TRISD = 0xF0;
  3532  000B9E  0EF0               	movlw	240
  3533  000BA0  6E95               	movwf	149,c	;volatile
  3534  000BA2                     
  3535                           ;lcd.c: 150:     lcd->RS = 0;
  3536  000BA2  C001  FFD9         	movff	write_char@lcd,fsr2l
  3537  000BA6  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3538  000BAA  90DF               	bcf	indf2,0,c
  3539  000BAC                     
  3540                           ;lcd.c: 151:     lcd->R_W = 1;
  3541  000BAC  C001  FFD9         	movff	write_char@lcd,fsr2l
  3542  000BB0  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3543  000BB4  82DF               	bsf	indf2,1,c
  3544  000BB6                     l1666:
  3545                           
  3546                           ;lcd.c: 153:        lcd->E = 1;
  3547  000BB6  C001  FFD9         	movff	write_char@lcd,fsr2l
  3548  000BBA  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3549  000BBE  84DF               	bsf	indf2,2,c
  3550  000BC0                     
  3551                           ;lcd.c: 154:        lcd->E = 0;
  3552  000BC0  C001  FFD9         	movff	write_char@lcd,fsr2l
  3553  000BC4  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3554  000BC8  94DF               	bcf	indf2,2,c
  3555  000BCA                     
  3556                           ;lcd.c: 155:        lcd->E = 1;
  3557  000BCA  C001  FFD9         	movff	write_char@lcd,fsr2l
  3558  000BCE  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3559  000BD2  84DF               	bsf	indf2,2,c
  3560  000BD4                     
  3561                           ;lcd.c: 156:        lcd->E = 0;
  3562  000BD4  C001  FFD9         	movff	write_char@lcd,fsr2l
  3563  000BD8  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3564  000BDC  94DF               	bcf	indf2,2,c
  3565  000BDE                     
  3566                           ;lcd.c: 157:     } while(lcd->data&0x08);
  3567  000BDE  C001  FFD9         	movff	write_char@lcd,fsr2l
  3568  000BE2  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3569  000BE6  38DF               	swapf	indf2,w,c
  3570  000BE8  0B0F               	andlw	15
  3571  000BEA  6E04               	movwf	??_write_char^0,c
  3572  000BEC  B604               	btfsc	??_write_char^0,3,c
  3573  000BEE  EFFB  F005         	goto	u961
  3574  000BF2  EFFD  F005         	goto	u960
  3575  000BF6                     u961:
  3576  000BF6  EFDB  F005         	goto	l1666
  3577  000BFA                     u960:
  3578  000BFA                     
  3579                           ;lcd.c: 158:     lcd->R_W = 0;
  3580  000BFA  C001  FFD9         	movff	write_char@lcd,fsr2l
  3581  000BFE  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3582  000C02  92DF               	bcf	indf2,1,c
  3583  000C04                     
  3584                           ;lcd.c: 159:     TRISD = 0x00;
  3585  000C04  0E00               	movlw	0
  3586  000C06  6E95               	movwf	149,c	;volatile
  3587  000C08  0012               	return		;funcret
  3588  000C0A                     __end_of_write_char:
  3589                           	opt callstack 0
  3590                           
  3591 ;; *************** function _goto_XY *****************
  3592 ;; Defined at:
  3593 ;;		line 76 in file "lcd.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  lcd             2    7[COMRAM] PTR struct .
  3596 ;;		 -> PORTD(1), 
  3597 ;;  x               1    9[COMRAM] unsigned char 
  3598 ;;  y               1   10[COMRAM] unsigned char 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  temp            1   14[COMRAM] unsigned char 
  3601 ;;  a               1   13[COMRAM] unsigned char 
  3602 ;;  z               1   12[COMRAM] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3612 ;;      Params:         4       0       0       0       0       0       0
  3613 ;;      Locals:         3       0       0       0       0       0       0
  3614 ;;      Temps:          1       0       0       0       0       0       0
  3615 ;;      Totals:         8       0       0       0       0       0       0
  3616 ;;Total ram usage:        8 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    4
  3619 ;; This function calls:
  3620 ;;		_lcd_cmd
  3621 ;; This function is called by:
  3622 ;;		_print_mat
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text15
  3627  000DC0                     __ptext15:
  3628                           	opt callstack 0
  3629  000DC0                     _goto_XY:
  3630                           	opt callstack 23
  3631  000DC0                     
  3632                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  3633  000DC0  040A               	decf	goto_XY@x^0,w,c
  3634  000DC2  A4D8               	btfss	status,2,c
  3635  000DC4  EFE6  F006         	goto	u921
  3636  000DC8  EFE8  F006         	goto	u920
  3637  000DCC                     u921:
  3638  000DCC  EF0A  F007         	goto	l1614
  3639  000DD0                     u920:
  3640  000DD0                     
  3641                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  3642  000DD0  500B               	movf	goto_XY@y^0,w,c
  3643  000DD2  0F7F               	addlw	127
  3644  000DD4  6E0F               	movwf	goto_XY@temp^0,c
  3645                           
  3646                           ;lcd.c: 81:        z = temp>>4;
  3647  000DD6  380F               	swapf	goto_XY@temp^0,w,c
  3648  000DD8  0B0F               	andlw	15
  3649  000DDA  6E0D               	movwf	goto_XY@z^0,c
  3650  000DDC                     l1606:
  3651                           
  3652                           ;lcd.c: 82:        a = temp;
  3653  000DDC  C00F  F00E         	movff	goto_XY@temp,goto_XY@a
  3654  000DE0                     
  3655                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  3656  000DE0  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3657  000DE4  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3658  000DE8  C00D  F006         	movff	goto_XY@z,lcd_cmd@a
  3659  000DEC  EC4F  F00A         	call	_lcd_cmd	;wreg free
  3660  000DF0                     
  3661                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  3662  000DF0  0E06               	movlw	6
  3663  000DF2  6E0C               	movwf	??_goto_XY^0,c
  3664  000DF4  0E30               	movlw	48
  3665  000DF6                     u1557:
  3666  000DF6  2EE8               	decfsz	wreg,f,c
  3667  000DF8  D7FE               	bra	u1557
  3668  000DFA  2E0C               	decfsz	??_goto_XY^0,f,c
  3669  000DFC  D7FC               	bra	u1557
  3670  000DFE  D000               	nop2	
  3671  000E00                     
  3672                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  3673  000E00  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3674  000E04  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3675  000E08  C00E  F006         	movff	goto_XY@a,lcd_cmd@a
  3676  000E0C  EC4F  F00A         	call	_lcd_cmd	;wreg free
  3677                           
  3678                           ;lcd.c: 86:     }
  3679  000E10  EF3D  F007         	goto	l74
  3680  000E14                     l1614:
  3681  000E14  0E02               	movlw	2
  3682  000E16  180A               	xorwf	goto_XY@x^0,w,c
  3683  000E18  A4D8               	btfss	status,2,c
  3684  000E1A  EF11  F007         	goto	u931
  3685  000E1E  EF13  F007         	goto	u930
  3686  000E22                     u931:
  3687  000E22  EF1B  F007         	goto	l1626
  3688  000E26                     u930:
  3689  000E26                     
  3690                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  3691  000E26  500B               	movf	goto_XY@y^0,w,c
  3692  000E28  0FBF               	addlw	191
  3693  000E2A  6E0F               	movwf	goto_XY@temp^0,c
  3694                           
  3695                           ;lcd.c: 90:        z = temp>>4;
  3696  000E2C  380F               	swapf	goto_XY@temp^0,w,c
  3697  000E2E  0B0F               	andlw	15
  3698  000E30  6E0D               	movwf	goto_XY@z^0,c
  3699  000E32  EFEE  F006         	goto	l1606
  3700  000E36                     l1626:
  3701  000E36  0E03               	movlw	3
  3702  000E38  180A               	xorwf	goto_XY@x^0,w,c
  3703  000E3A  A4D8               	btfss	status,2,c
  3704  000E3C  EF22  F007         	goto	u941
  3705  000E40  EF24  F007         	goto	u940
  3706  000E44                     u941:
  3707  000E44  EF2C  F007         	goto	l1638
  3708  000E48                     u940:
  3709  000E48                     
  3710                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  3711  000E48  500B               	movf	goto_XY@y^0,w,c
  3712  000E4A  0F8F               	addlw	143
  3713  000E4C  6E0F               	movwf	goto_XY@temp^0,c
  3714                           
  3715                           ;lcd.c: 99:        z = temp>>4;
  3716  000E4E  380F               	swapf	goto_XY@temp^0,w,c
  3717  000E50  0B0F               	andlw	15
  3718  000E52  6E0D               	movwf	goto_XY@z^0,c
  3719  000E54  EFEE  F006         	goto	l1606
  3720  000E58                     l1638:
  3721  000E58  0E04               	movlw	4
  3722  000E5A  180A               	xorwf	goto_XY@x^0,w,c
  3723  000E5C  A4D8               	btfss	status,2,c
  3724  000E5E  EF33  F007         	goto	u951
  3725  000E62  EF35  F007         	goto	u950
  3726  000E66                     u951:
  3727  000E66  EF3D  F007         	goto	l70
  3728  000E6A                     u950:
  3729  000E6A                     
  3730                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  3731  000E6A  500B               	movf	goto_XY@y^0,w,c
  3732  000E6C  0FCF               	addlw	207
  3733  000E6E  6E0F               	movwf	goto_XY@temp^0,c
  3734                           
  3735                           ;lcd.c: 108:        z = temp>>4;
  3736  000E70  380F               	swapf	goto_XY@temp^0,w,c
  3737  000E72  0B0F               	andlw	15
  3738  000E74  6E0D               	movwf	goto_XY@z^0,c
  3739  000E76  EFEE  F006         	goto	l1606
  3740  000E7A                     l70:
  3741  000E7A                     l74:
  3742  000E7A  0012               	return		;funcret
  3743  000E7C                     __end_of_goto_XY:
  3744                           	opt callstack 0
  3745                           
  3746 ;; *************** function _lcd_cmd *****************
  3747 ;; Defined at:
  3748 ;;		line 67 in file "lcd.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  lcd             2    3[COMRAM] PTR struct .
  3751 ;;		 -> PORTD(1), 
  3752 ;;  a               1    5[COMRAM] unsigned char 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         3       0       0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0
  3766 ;;      Temps:          1       0       0       0       0       0       0
  3767 ;;      Totals:         4       0       0       0       0       0       0
  3768 ;;Total ram usage:        4 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    3
  3771 ;; This function calls:
  3772 ;;		_pulso
  3773 ;; This function is called by:
  3774 ;;		_goto_XY
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text16
  3779  00149E                     __ptext16:
  3780                           	opt callstack 0
  3781  00149E                     _lcd_cmd:
  3782                           	opt callstack 23
  3783  00149E                     
  3784                           ;lcd.c: 68:     lcd->RS = 0;
  3785  00149E  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3786  0014A2  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3787  0014A6  90DF               	bcf	indf2,0,c
  3788  0014A8                     
  3789                           ;lcd.c: 69:     lcd->data = (a);
  3790  0014A8  C006  F007         	movff	lcd_cmd@a,??_lcd_cmd
  3791  0014AC  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3792  0014B0  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3793  0014B4  3A07               	swapf	??_lcd_cmd^0,f,c
  3794  0014B6  50DF               	movf	indf2,w,c
  3795  0014B8  1807               	xorwf	??_lcd_cmd^0,w,c
  3796  0014BA  0B0F               	andlw	-241
  3797  0014BC  1807               	xorwf	??_lcd_cmd^0,w,c
  3798  0014BE  6EDF               	movwf	indf2,c
  3799  0014C0                     
  3800                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3801  0014C0  0E06               	movlw	6
  3802  0014C2  6E07               	movwf	??_lcd_cmd^0,c
  3803  0014C4  0E30               	movlw	48
  3804  0014C6                     u1567:
  3805  0014C6  2EE8               	decfsz	wreg,f,c
  3806  0014C8  D7FE               	bra	u1567
  3807  0014CA  2E07               	decfsz	??_lcd_cmd^0,f,c
  3808  0014CC  D7FC               	bra	u1567
  3809  0014CE  D000               	nop2	
  3810  0014D0                     
  3811                           ;lcd.c: 72:     pulso(lcd);
  3812  0014D0  C004  F001         	movff	lcd_cmd@lcd,pulso@lcd
  3813  0014D4  C005  F002         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  3814  0014D8  EC6F  F00A         	call	_pulso	;wreg free
  3815  0014DC  0012               	return		;funcret
  3816  0014DE                     __end_of_lcd_cmd:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _function_set *****************
  3820 ;; Defined at:
  3821 ;;		line 21 in file "lcd.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  lcd             2    3[COMRAM] PTR struct .
  3824 ;;		 -> PORTD(1), 
  3825 ;;  data_lenght     1    5[COMRAM] unsigned char 
  3826 ;;  num_lines       1    6[COMRAM] unsigned char 
  3827 ;;  char_font       1    7[COMRAM] unsigned char 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3839 ;;      Params:         5       0       0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0
  3841 ;;      Temps:          3       0       0       0       0       0       0
  3842 ;;      Totals:         8       0       0       0       0       0       0
  3843 ;;Total ram usage:        8 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    3
  3846 ;; This function calls:
  3847 ;;		_pulso
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text17
  3854  000CE6                     __ptext17:
  3855                           	opt callstack 0
  3856  000CE6                     _function_set:
  3857                           	opt callstack 27
  3858  000CE6                     
  3859                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  3860  000CE6  C004  FFD9         	movff	function_set@lcd,fsr2l
  3861  000CEA  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3862  000CEE  94DF               	bcf	indf2,2,c
  3863                           
  3864                           ;lcd.c: 24:     lcd->RS = 0;
  3865  000CF0  C004  FFD9         	movff	function_set@lcd,fsr2l
  3866  000CF4  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3867  000CF8  90DF               	bcf	indf2,0,c
  3868                           
  3869                           ;lcd.c: 25:     lcd->R_W = 0;
  3870  000CFA  C004  FFD9         	movff	function_set@lcd,fsr2l
  3871  000CFE  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3872  000D02  92DF               	bcf	indf2,1,c
  3873  000D04                     
  3874                           ;lcd.c: 28:     lcd->data = 0x02;
  3875  000D04  C004  FFD9         	movff	function_set@lcd,fsr2l
  3876  000D08  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3877  000D0C  50DF               	movf	indf2,w,c
  3878  000D0E  0B0F               	andlw	-241
  3879  000D10  0920               	iorlw	32
  3880  000D12  6EDF               	movwf	indf2,c
  3881  000D14                     
  3882                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3883  000D14  0E06               	movlw	6
  3884  000D16  6E09               	movwf	??_function_set^0,c
  3885  000D18  0E30               	movlw	48
  3886  000D1A                     u1577:
  3887  000D1A  2EE8               	decfsz	wreg,f,c
  3888  000D1C  D7FE               	bra	u1577
  3889  000D1E  2E09               	decfsz	??_function_set^0,f,c
  3890  000D20  D7FC               	bra	u1577
  3891  000D22  D000               	nop2	
  3892  000D24                     
  3893                           ;lcd.c: 31:     pulso(lcd);
  3894  000D24  C004  F001         	movff	function_set@lcd,pulso@lcd
  3895  000D28  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3896  000D2C  EC6F  F00A         	call	_pulso	;wreg free
  3897  000D30                     
  3898                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  3899  000D30  C006  F009         	movff	function_set@data_lenght,??_function_set
  3900  000D34  0E02               	movlw	2
  3901  000D36  1209               	iorwf	??_function_set^0,f,c
  3902  000D38  C004  FFD9         	movff	function_set@lcd,fsr2l
  3903  000D3C  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3904  000D40  3A09               	swapf	??_function_set^0,f,c
  3905  000D42  50DF               	movf	indf2,w,c
  3906  000D44  1809               	xorwf	??_function_set^0,w,c
  3907  000D46  0B0F               	andlw	-241
  3908  000D48  1809               	xorwf	??_function_set^0,w,c
  3909  000D4A  6EDF               	movwf	indf2,c
  3910  000D4C                     
  3911                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3912  000D4C  0E06               	movlw	6
  3913  000D4E  6E09               	movwf	??_function_set^0,c
  3914  000D50  0E30               	movlw	48
  3915  000D52                     u1587:
  3916  000D52  2EE8               	decfsz	wreg,f,c
  3917  000D54  D7FE               	bra	u1587
  3918  000D56  2E09               	decfsz	??_function_set^0,f,c
  3919  000D58  D7FC               	bra	u1587
  3920  000D5A  D000               	nop2	
  3921  000D5C                     
  3922                           ;lcd.c: 37:     pulso(lcd);
  3923  000D5C  C004  F001         	movff	function_set@lcd,pulso@lcd
  3924  000D60  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3925  000D64  EC6F  F00A         	call	_pulso	;wreg free
  3926  000D68                     
  3927                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  3928  000D68  C004  FFD9         	movff	function_set@lcd,fsr2l
  3929  000D6C  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3930  000D70  38DF               	swapf	indf2,w,c
  3931  000D72  0B0F               	andlw	15
  3932  000D74  6E09               	movwf	??_function_set^0,c
  3933  000D76  C008  F00A         	movff	function_set@char_font,??_function_set+1
  3934  000D7A  90D8               	bcf	status,0,c
  3935  000D7C  360A               	rlcf	(??_function_set+1)^0,f,c
  3936  000D7E  90D8               	bcf	status,0,c
  3937  000D80  360A               	rlcf	(??_function_set+1)^0,f,c
  3938  000D82  3807               	swapf	function_set@num_lines^0,w,c
  3939  000D84  42E8               	rrncf	wreg,f,c
  3940  000D86  0BF8               	andlw	248
  3941  000D88  100A               	iorwf	(??_function_set+1)^0,w,c
  3942  000D8A  1009               	iorwf	??_function_set^0,w,c
  3943  000D8C  6E0B               	movwf	(??_function_set+2)^0,c
  3944  000D8E  C004  FFD9         	movff	function_set@lcd,fsr2l
  3945  000D92  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3946  000D96  3A0B               	swapf	(??_function_set+2)^0,f,c
  3947  000D98  50DF               	movf	indf2,w,c
  3948  000D9A  180B               	xorwf	(??_function_set+2)^0,w,c
  3949  000D9C  0B0F               	andlw	-241
  3950  000D9E  180B               	xorwf	(??_function_set+2)^0,w,c
  3951  000DA0  6EDF               	movwf	indf2,c
  3952  000DA2                     
  3953                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3954  000DA2  0E06               	movlw	6
  3955  000DA4  6E09               	movwf	??_function_set^0,c
  3956  000DA6  0E30               	movlw	48
  3957  000DA8                     u1597:
  3958  000DA8  2EE8               	decfsz	wreg,f,c
  3959  000DAA  D7FE               	bra	u1597
  3960  000DAC  2E09               	decfsz	??_function_set^0,f,c
  3961  000DAE  D7FC               	bra	u1597
  3962  000DB0  D000               	nop2	
  3963  000DB2                     
  3964                           ;lcd.c: 44:     pulso(lcd);
  3965  000DB2  C004  F001         	movff	function_set@lcd,pulso@lcd
  3966  000DB6  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3967  000DBA  EC6F  F00A         	call	_pulso	;wreg free
  3968  000DBE  0012               	return		;funcret
  3969  000DC0                     __end_of_function_set:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _entry_mode_set *****************
  3973 ;; Defined at:
  3974 ;;		line 116 in file "lcd.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  lcd             2    3[COMRAM] PTR struct .
  3977 ;;		 -> PORTD(1), 
  3978 ;;  move_directi    1    5[COMRAM] unsigned char 
  3979 ;;  display_shif    1    6[COMRAM] unsigned char 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3991 ;;      Params:         4       0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0
  3993 ;;      Temps:          1       0       0       0       0       0       0
  3994 ;;      Totals:         5       0       0       0       0       0       0
  3995 ;;Total ram usage:        5 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    3
  3998 ;; This function calls:
  3999 ;;		_pulso
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text18
  4006  00119A                     __ptext18:
  4007                           	opt callstack 0
  4008  00119A                     _entry_mode_set:
  4009                           	opt callstack 27
  4010  00119A                     
  4011                           ;lcd.c: 117:     lcd->E = 0;
  4012  00119A  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4013  00119E  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4014  0011A2  94DF               	bcf	indf2,2,c
  4015                           
  4016                           ;lcd.c: 118:     lcd->RS = 0;
  4017  0011A4  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4018  0011A8  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4019  0011AC  90DF               	bcf	indf2,0,c
  4020                           
  4021                           ;lcd.c: 119:     lcd->R_W = 0;
  4022  0011AE  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4023  0011B2  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4024  0011B6  92DF               	bcf	indf2,1,c
  4025  0011B8                     
  4026                           ;lcd.c: 121:     lcd->data = 0x00;
  4027  0011B8  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4028  0011BC  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4029  0011C0  0E0F               	movlw	-241
  4030  0011C2  16DF               	andwf	indf2,f,c
  4031  0011C4                     
  4032                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4033  0011C4  0E06               	movlw	6
  4034  0011C6  6E08               	movwf	??_entry_mode_set^0,c
  4035  0011C8  0E30               	movlw	48
  4036  0011CA                     u1607:
  4037  0011CA  2EE8               	decfsz	wreg,f,c
  4038  0011CC  D7FE               	bra	u1607
  4039  0011CE  2E08               	decfsz	??_entry_mode_set^0,f,c
  4040  0011D0  D7FC               	bra	u1607
  4041  0011D2  D000               	nop2	
  4042  0011D4                     
  4043                           ;lcd.c: 124:     pulso(lcd);
  4044  0011D4  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  4045  0011D8  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  4046  0011DC  EC6F  F00A         	call	_pulso	;wreg free
  4047  0011E0                     
  4048                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  4049  0011E0  5006               	movf	entry_mode_set@move_direction^0,w,c
  4050  0011E2  2406               	addwf	entry_mode_set@move_direction^0,w,c
  4051  0011E4  1007               	iorwf	entry_mode_set@display_shift^0,w,c
  4052  0011E6  6E08               	movwf	??_entry_mode_set^0,c
  4053  0011E8  0E04               	movlw	4
  4054  0011EA  1208               	iorwf	??_entry_mode_set^0,f,c
  4055  0011EC  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4056  0011F0  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4057  0011F4  3A08               	swapf	??_entry_mode_set^0,f,c
  4058  0011F6  50DF               	movf	indf2,w,c
  4059  0011F8  1808               	xorwf	??_entry_mode_set^0,w,c
  4060  0011FA  0B0F               	andlw	-241
  4061  0011FC  1808               	xorwf	??_entry_mode_set^0,w,c
  4062  0011FE  6EDF               	movwf	indf2,c
  4063  001200                     
  4064                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4065  001200  0E06               	movlw	6
  4066  001202  6E08               	movwf	??_entry_mode_set^0,c
  4067  001204  0E30               	movlw	48
  4068  001206                     u1617:
  4069  001206  2EE8               	decfsz	wreg,f,c
  4070  001208  D7FE               	bra	u1617
  4071  00120A  2E08               	decfsz	??_entry_mode_set^0,f,c
  4072  00120C  D7FC               	bra	u1617
  4073  00120E  D000               	nop2	
  4074  001210                     
  4075                           ;lcd.c: 130:     pulso(lcd);
  4076  001210  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  4077  001214  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  4078  001218  EC6F  F00A         	call	_pulso	;wreg free
  4079  00121C  0012               	return		;funcret
  4080  00121E                     __end_of_entry_mode_set:
  4081                           	opt callstack 0
  4082                           
  4083 ;; *************** function _display_onoff_control *****************
  4084 ;; Defined at:
  4085 ;;		line 47 in file "lcd.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  lcd             2    3[COMRAM] PTR struct .
  4088 ;;		 -> PORTD(1), 
  4089 ;;  display_on      1    5[COMRAM] unsigned char 
  4090 ;;  cursor_on       1    6[COMRAM] unsigned char 
  4091 ;;  blink           1    7[COMRAM] unsigned char 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4103 ;;      Params:         5       0       0       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0
  4105 ;;      Temps:          2       0       0       0       0       0       0
  4106 ;;      Totals:         7       0       0       0       0       0       0
  4107 ;;Total ram usage:        7 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    3
  4110 ;; This function calls:
  4111 ;;		_pulso
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text19
  4118  00110C                     __ptext19:
  4119                           	opt callstack 0
  4120  00110C                     _display_onoff_control:
  4121                           	opt callstack 27
  4122  00110C                     
  4123                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  4124  00110C  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4125  001110  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4126  001114  94DF               	bcf	indf2,2,c
  4127                           
  4128                           ;lcd.c: 50:     lcd->RS = 0;
  4129  001116  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4130  00111A  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4131  00111E  90DF               	bcf	indf2,0,c
  4132                           
  4133                           ;lcd.c: 51:     lcd->R_W = 0;
  4134  001120  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4135  001124  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4136  001128  92DF               	bcf	indf2,1,c
  4137  00112A                     
  4138                           ;lcd.c: 54:     lcd->data = 0x00;
  4139  00112A  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4140  00112E  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4141  001132  0E0F               	movlw	-241
  4142  001134  16DF               	andwf	indf2,f,c
  4143  001136                     
  4144                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4145  001136  0E06               	movlw	6
  4146  001138  6E09               	movwf	??_display_onoff_control^0,c
  4147  00113A  0E30               	movlw	48
  4148  00113C                     u1627:
  4149  00113C  2EE8               	decfsz	wreg,f,c
  4150  00113E  D7FE               	bra	u1627
  4151  001140  2E09               	decfsz	??_display_onoff_control^0,f,c
  4152  001142  D7FC               	bra	u1627
  4153  001144  D000               	nop2	
  4154  001146                     
  4155                           ;lcd.c: 57:     pulso(lcd);
  4156  001146  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  4157  00114A  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  4158  00114E  EC6F  F00A         	call	_pulso	;wreg free
  4159  001152                     
  4160                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  4161  001152  90D8               	bcf	status,0,c
  4162  001154  3407               	rlcf	display_onoff_control@cursor_on^0,w,c
  4163  001156  6E09               	movwf	??_display_onoff_control^0,c
  4164  001158  4406               	rlncf	display_onoff_control@display_on^0,w,c
  4165  00115A  46E8               	rlncf	wreg,f,c
  4166  00115C  0BFC               	andlw	252
  4167  00115E  1009               	iorwf	??_display_onoff_control^0,w,c
  4168  001160  1008               	iorwf	display_onoff_control@blink^0,w,c
  4169  001162  6E0A               	movwf	(??_display_onoff_control+1)^0,c
  4170  001164  0E08               	movlw	8
  4171  001166  120A               	iorwf	(??_display_onoff_control+1)^0,f,c
  4172  001168  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4173  00116C  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4174  001170  3A0A               	swapf	(??_display_onoff_control+1)^0,f,c
  4175  001172  50DF               	movf	indf2,w,c
  4176  001174  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  4177  001176  0B0F               	andlw	-241
  4178  001178  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  4179  00117A  6EDF               	movwf	indf2,c
  4180  00117C                     
  4181                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4182  00117C  0E06               	movlw	6
  4183  00117E  6E09               	movwf	??_display_onoff_control^0,c
  4184  001180  0E30               	movlw	48
  4185  001182                     u1637:
  4186  001182  2EE8               	decfsz	wreg,f,c
  4187  001184  D7FE               	bra	u1637
  4188  001186  2E09               	decfsz	??_display_onoff_control^0,f,c
  4189  001188  D7FC               	bra	u1637
  4190  00118A  D000               	nop2	
  4191  00118C                     
  4192                           ;lcd.c: 64:     pulso(lcd);
  4193  00118C  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  4194  001190  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  4195  001194  EC6F  F00A         	call	_pulso	;wreg free
  4196  001198  0012               	return		;funcret
  4197  00119A                     __end_of_display_onoff_control:
  4198                           	opt callstack 0
  4199                           
  4200 ;; *************** function _pulso *****************
  4201 ;; Defined at:
  4202 ;;		line 11 in file "lcd.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  lcd             2    0[COMRAM] PTR struct .
  4205 ;;		 -> PORTD(1), 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr2l, fsr2h
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4217 ;;      Params:         2       0       0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0
  4219 ;;      Temps:          1       0       0       0       0       0       0
  4220 ;;      Totals:         3       0       0       0       0       0       0
  4221 ;;Total ram usage:        3 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    2
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_function_set
  4228 ;;		_display_onoff_control
  4229 ;;		_lcd_cmd
  4230 ;;		_entry_mode_set
  4231 ;;		_clear_display
  4232 ;;		_return_home
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text20
  4237  0014DE                     __ptext20:
  4238                           	opt callstack 0
  4239  0014DE                     _pulso:
  4240                           	opt callstack 23
  4241  0014DE                     
  4242                           ;lcd.c: 13:     lcd->E = 1;
  4243  0014DE  C001  FFD9         	movff	pulso@lcd,fsr2l
  4244  0014E2  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  4245  0014E6  84DF               	bsf	indf2,2,c
  4246  0014E8                     
  4247                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4248  0014E8  0E06               	movlw	6
  4249  0014EA  6E03               	movwf	??_pulso^0,c
  4250  0014EC  0E30               	movlw	48
  4251  0014EE                     u1647:
  4252  0014EE  2EE8               	decfsz	wreg,f,c
  4253  0014F0  D7FE               	bra	u1647
  4254  0014F2  2E03               	decfsz	??_pulso^0,f,c
  4255  0014F4  D7FC               	bra	u1647
  4256  0014F6  D000               	nop2	
  4257  0014F8                     
  4258                           ;lcd.c: 17:     lcd->E = 0;
  4259  0014F8  C001  FFD9         	movff	pulso@lcd,fsr2l
  4260  0014FC  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  4261  001500  94DF               	bcf	indf2,2,c
  4262                           
  4263                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4264  001502  0E06               	movlw	6
  4265  001504  6E03               	movwf	??_pulso^0,c
  4266  001506  0E30               	movlw	48
  4267  001508                     u1657:
  4268  001508  2EE8               	decfsz	wreg,f,c
  4269  00150A  D7FE               	bra	u1657
  4270  00150C  2E03               	decfsz	??_pulso^0,f,c
  4271  00150E  D7FC               	bra	u1657
  4272  001510  D000               	nop2	
  4273  001512  0012               	return		;funcret
  4274  001514                     __end_of_pulso:
  4275                           	opt callstack 0
  4276                           
  4277 ;; *************** function _int_handler *****************
  4278 ;; Defined at:
  4279 ;;		line 24 in file "main.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;		None
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;		None
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4293 ;;      Params:         0       0       0       0       0       0       0
  4294 ;;      Locals:         0       0       0       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0
  4296 ;;      Totals:         0       0       0       0       0       0       0
  4297 ;;Total ram usage:        0 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    1
  4300 ;; This function calls:
  4301 ;;		_le_entrada
  4302 ;; This function is called by:
  4303 ;;		Interrupt level 2
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	intcode
  4308  000008                     __pintcode:
  4309                           	opt callstack 0
  4310  000008                     _int_handler:
  4311                           	opt callstack 23
  4312                           
  4313                           ;incstack = 0
  4314  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4315  00000A  ED8A  F00A         	call	int_func,f	;refresh shadow registers
  4316                           
  4317                           	psect	intcode_body
  4318  001514                     __pintcode_body:
  4319                           	opt callstack 23
  4320  001514                     int_func:
  4321                           	opt callstack 23
  4322  001514  0006               	pop		; remove dummy address from shadow register refresh
  4323  001516                     
  4324                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  4325  001516  A4F2               	btfss	242,2,c	;volatile
  4326  001518  EF90  F00A         	goto	i2u90_41
  4327  00151C  EF92  F00A         	goto	i2u90_40
  4328  001520                     i2u90_41:
  4329  001520  EF97  F00A         	goto	i2l1534
  4330  001524                     i2u90_40:
  4331  001524                     
  4332                           ;main.c: 26:         TMR0L = 0x63;
  4333  001524  0E63               	movlw	99
  4334  001526  6ED6               	movwf	214,c	;volatile
  4335  001528                     
  4336                           ;main.c: 27:         le_entrada();
  4337  001528  EC1C  F004         	call	_le_entrada	;wreg free
  4338  00152C                     
  4339                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  4340  00152C  94F2               	bcf	242,2,c	;volatile
  4341  00152E                     i2l1534:
  4342                           
  4343                           ;main.c: 30:     if(INTCONbits.INT0IF == 1){
  4344  00152E  A2F2               	btfss	242,1,c	;volatile
  4345  001530  EF9C  F00A         	goto	i2u91_41
  4346  001534  EF9E  F00A         	goto	i2u91_40
  4347  001538                     i2u91_41:
  4348  001538  EFA0  F00A         	goto	i2l41
  4349  00153C                     i2u91_40:
  4350  00153C                     
  4351                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  4352  00153C  92F2               	bcf	242,1,c	;volatile
  4353  00153E  00FF               	reset		;# 
  4354  001540                     i2l41:
  4355  001540  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4356  001542  0011               	retfie		f
  4357  001544                     __end_of_int_handler:
  4358                           	opt callstack 0
  4359                           
  4360 ;; *************** function _le_entrada *****************
  4361 ;; Defined at:
  4362 ;;		line 12 in file "keyboard.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2, status,0
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4376 ;;      Params:         0       0       0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0       0       0
  4379 ;;      Totals:         0       0       0       0       0       0       0
  4380 ;;Total ram usage:        0 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_int_handler
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text22
  4390  000838                     __ptext22:
  4391                           	opt callstack 0
  4392  000838                     _le_entrada:
  4393                           	opt callstack 23
  4394  000838                     
  4395                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  4396  000838  8E81               	bsf	129,7,c	;volatile
  4397                           
  4398                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  4399  00083A  B050               	btfsc	_botoes_ant^0,0,c
  4400  00083C  EF22  F004         	goto	i2u60_41
  4401  000840  EF24  F004         	goto	i2u60_40
  4402  000844                     i2u60_41:
  4403  000844  EF2B  F004         	goto	i2l1382
  4404  000848                     i2u60_40:
  4405  000848  B481               	btfsc	129,2,c	;volatile
  4406  00084A  EF29  F004         	goto	i2u61_41
  4407  00084E  EF2B  F004         	goto	i2u61_40
  4408  000852                     i2u61_41:
  4409  000852  EF33  F004         	goto	i2l114
  4410  000856                     i2u61_40:
  4411  000856                     i2l1382:
  4412  000856  0E32               	movlw	50
  4413  000858  644F               	cpfsgt	_cont_u^0,c
  4414  00085A  EF31  F004         	goto	i2u62_41
  4415  00085E  EF33  F004         	goto	i2u62_40
  4416  000862                     i2u62_41:
  4417  000862  EF39  F004         	goto	i2l112
  4418  000866                     i2u62_40:
  4419  000866                     i2l114:
  4420                           
  4421                           ;keyboard.c: 15:         botoes.U = 1;
  4422  000866  8051               	bsf	_botoes^0,0,c
  4423                           
  4424                           ;keyboard.c: 16:         botoes_ant.U = 1;
  4425  000868  8050               	bsf	_botoes_ant^0,0,c
  4426  00086A                     i2l1384:
  4427                           
  4428                           ;keyboard.c: 17:         cont_u = 0;
  4429  00086A  0E00               	movlw	0
  4430  00086C  6E4F               	movwf	_cont_u^0,c
  4431                           
  4432                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  4433  00086E  EF53  F004         	goto	i2l1394
  4434  000872                     i2l112:
  4435  000872  A050               	btfss	_botoes_ant^0,0,c
  4436  000874  EF3E  F004         	goto	i2u63_41
  4437  000878  EF40  F004         	goto	i2u63_40
  4438  00087C                     i2u63_41:
  4439  00087C  EF4B  F004         	goto	i2l118
  4440  000880                     i2u63_40:
  4441  000880  B481               	btfsc	129,2,c	;volatile
  4442  000882  EF45  F004         	goto	i2u64_41
  4443  000886  EF47  F004         	goto	i2u64_40
  4444  00088A                     i2u64_41:
  4445  00088A  EF4B  F004         	goto	i2l118
  4446  00088E                     i2u64_40:
  4447  00088E                     
  4448                           ;keyboard.c: 19:         botoes.U = 0;
  4449  00088E  9051               	bcf	_botoes^0,0,c
  4450                           
  4451                           ;keyboard.c: 20:         botoes_ant.U = 0;
  4452  000890  9050               	bcf	_botoes_ant^0,0,c
  4453  000892  EF35  F004         	goto	i2l1384
  4454  000896                     i2l118:
  4455  000896  A481               	btfss	129,2,c	;volatile
  4456  000898  EF50  F004         	goto	i2u65_41
  4457  00089C  EF52  F004         	goto	i2u65_40
  4458  0008A0                     i2u65_41:
  4459  0008A0  EF53  F004         	goto	i2l1394
  4460  0008A4                     i2u65_40:
  4461  0008A4  2A4F               	incf	_cont_u^0,f,c
  4462  0008A6                     i2l1394:
  4463                           
  4464                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  4465  0008A6  9E81               	bcf	129,7,c	;volatile
  4466  0008A8                     
  4467                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  4468  0008A8  8C81               	bsf	129,6,c	;volatile
  4469  0008AA                     
  4470                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  4471  0008AA  B450               	btfsc	_botoes_ant^0,2,c
  4472  0008AC  EF5A  F004         	goto	i2u66_41
  4473  0008B0  EF5C  F004         	goto	i2u66_40
  4474  0008B4                     i2u66_41:
  4475  0008B4  EF63  F004         	goto	i2l1402
  4476  0008B8                     i2u66_40:
  4477  0008B8  B281               	btfsc	129,1,c	;volatile
  4478  0008BA  EF61  F004         	goto	i2u67_41
  4479  0008BE  EF63  F004         	goto	i2u67_40
  4480  0008C2                     i2u67_41:
  4481  0008C2  EF6B  F004         	goto	i2l123
  4482  0008C6                     i2u67_40:
  4483  0008C6                     i2l1402:
  4484  0008C6  0E32               	movlw	50
  4485  0008C8  644D               	cpfsgt	_cont_l^0,c
  4486  0008CA  EF69  F004         	goto	i2u68_41
  4487  0008CE  EF6B  F004         	goto	i2u68_40
  4488  0008D2                     i2u68_41:
  4489  0008D2  EF71  F004         	goto	i2l121
  4490  0008D6                     i2u68_40:
  4491  0008D6                     i2l123:
  4492                           
  4493                           ;keyboard.c: 27:         botoes.L = 1;
  4494  0008D6  8451               	bsf	_botoes^0,2,c
  4495                           
  4496                           ;keyboard.c: 28:         botoes_ant.L = 1;
  4497  0008D8  8450               	bsf	_botoes_ant^0,2,c
  4498  0008DA                     i2l1404:
  4499                           
  4500                           ;keyboard.c: 29:         cont_l = 0;
  4501  0008DA  0E00               	movlw	0
  4502  0008DC  6E4D               	movwf	_cont_l^0,c
  4503                           
  4504                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  4505  0008DE  EF8B  F004         	goto	i2l1414
  4506  0008E2                     i2l121:
  4507  0008E2  A450               	btfss	_botoes_ant^0,2,c
  4508  0008E4  EF76  F004         	goto	i2u69_41
  4509  0008E8  EF78  F004         	goto	i2u69_40
  4510  0008EC                     i2u69_41:
  4511  0008EC  EF83  F004         	goto	i2l127
  4512  0008F0                     i2u69_40:
  4513  0008F0  B281               	btfsc	129,1,c	;volatile
  4514  0008F2  EF7D  F004         	goto	i2u70_41
  4515  0008F6  EF7F  F004         	goto	i2u70_40
  4516  0008FA                     i2u70_41:
  4517  0008FA  EF83  F004         	goto	i2l127
  4518  0008FE                     i2u70_40:
  4519  0008FE                     
  4520                           ;keyboard.c: 31:         botoes.L = 0;
  4521  0008FE  9451               	bcf	_botoes^0,2,c
  4522                           
  4523                           ;keyboard.c: 32:         botoes_ant.L = 0;
  4524  000900  9450               	bcf	_botoes_ant^0,2,c
  4525  000902  EF6D  F004         	goto	i2l1404
  4526  000906                     i2l127:
  4527  000906  A281               	btfss	129,1,c	;volatile
  4528  000908  EF88  F004         	goto	i2u71_41
  4529  00090C  EF8A  F004         	goto	i2u71_40
  4530  000910                     i2u71_41:
  4531  000910  EF8B  F004         	goto	i2l1414
  4532  000914                     i2u71_40:
  4533  000914  2A4D               	incf	_cont_l^0,f,c
  4534  000916                     i2l1414:
  4535                           
  4536                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  4537  000916  B650               	btfsc	_botoes_ant^0,3,c
  4538  000918  EF90  F004         	goto	i2u72_41
  4539  00091C  EF92  F004         	goto	i2u72_40
  4540  000920                     i2u72_41:
  4541  000920  EF99  F004         	goto	i2l1418
  4542  000924                     i2u72_40:
  4543  000924  B681               	btfsc	129,3,c	;volatile
  4544  000926  EF97  F004         	goto	i2u73_41
  4545  00092A  EF99  F004         	goto	i2u73_40
  4546  00092E                     i2u73_41:
  4547  00092E  EFA1  F004         	goto	i2l132
  4548  000932                     i2u73_40:
  4549  000932                     i2l1418:
  4550  000932  0E32               	movlw	50
  4551  000934  644C               	cpfsgt	_cont_r^0,c
  4552  000936  EF9F  F004         	goto	i2u74_41
  4553  00093A  EFA1  F004         	goto	i2u74_40
  4554  00093E                     i2u74_41:
  4555  00093E  EFA7  F004         	goto	i2l130
  4556  000942                     i2u74_40:
  4557  000942                     i2l132:
  4558                           
  4559                           ;keyboard.c: 37:         botoes.R = 1;
  4560  000942  8651               	bsf	_botoes^0,3,c
  4561                           
  4562                           ;keyboard.c: 38:         botoes_ant.R = 1;
  4563  000944  8650               	bsf	_botoes_ant^0,3,c
  4564  000946                     i2l1420:
  4565                           
  4566                           ;keyboard.c: 39:         cont_r = 0;
  4567  000946  0E00               	movlw	0
  4568  000948  6E4C               	movwf	_cont_r^0,c
  4569                           
  4570                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  4571  00094A  EFC1  F004         	goto	i2l1430
  4572  00094E                     i2l130:
  4573  00094E  A650               	btfss	_botoes_ant^0,3,c
  4574  000950  EFAC  F004         	goto	i2u75_41
  4575  000954  EFAE  F004         	goto	i2u75_40
  4576  000958                     i2u75_41:
  4577  000958  EFB9  F004         	goto	i2l136
  4578  00095C                     i2u75_40:
  4579  00095C  B681               	btfsc	129,3,c	;volatile
  4580  00095E  EFB3  F004         	goto	i2u76_41
  4581  000962  EFB5  F004         	goto	i2u76_40
  4582  000966                     i2u76_41:
  4583  000966  EFB9  F004         	goto	i2l136
  4584  00096A                     i2u76_40:
  4585  00096A                     
  4586                           ;keyboard.c: 41:         botoes.R = 0;
  4587  00096A  9651               	bcf	_botoes^0,3,c
  4588                           
  4589                           ;keyboard.c: 42:         botoes_ant.R = 0;
  4590  00096C  9650               	bcf	_botoes_ant^0,3,c
  4591  00096E  EFA3  F004         	goto	i2l1420
  4592  000972                     i2l136:
  4593  000972  A681               	btfss	129,3,c	;volatile
  4594  000974  EFBE  F004         	goto	i2u77_41
  4595  000978  EFC0  F004         	goto	i2u77_40
  4596  00097C                     i2u77_41:
  4597  00097C  EFC1  F004         	goto	i2l1430
  4598  000980                     i2u77_40:
  4599  000980  2A4C               	incf	_cont_r^0,f,c
  4600  000982                     i2l1430:
  4601                           
  4602                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  4603  000982  9C81               	bcf	129,6,c	;volatile
  4604  000984                     
  4605                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  4606  000984  8A81               	bsf	129,5,c	;volatile
  4607  000986                     
  4608                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  4609  000986  B250               	btfsc	_botoes_ant^0,1,c
  4610  000988  EFC8  F004         	goto	i2u78_41
  4611  00098C  EFCA  F004         	goto	i2u78_40
  4612  000990                     i2u78_41:
  4613  000990  EFD1  F004         	goto	i2l1438
  4614  000994                     i2u78_40:
  4615  000994  B481               	btfsc	129,2,c	;volatile
  4616  000996  EFCF  F004         	goto	i2u79_41
  4617  00099A  EFD1  F004         	goto	i2u79_40
  4618  00099E                     i2u79_41:
  4619  00099E  EFD9  F004         	goto	i2l141
  4620  0009A2                     i2u79_40:
  4621  0009A2                     i2l1438:
  4622  0009A2  0E32               	movlw	50
  4623  0009A4  644E               	cpfsgt	_cont_d^0,c
  4624  0009A6  EFD7  F004         	goto	i2u80_41
  4625  0009AA  EFD9  F004         	goto	i2u80_40
  4626  0009AE                     i2u80_41:
  4627  0009AE  EFDF  F004         	goto	i2l139
  4628  0009B2                     i2u80_40:
  4629  0009B2                     i2l141:
  4630                           
  4631                           ;keyboard.c: 49:         botoes.D = 1;
  4632  0009B2  8251               	bsf	_botoes^0,1,c
  4633                           
  4634                           ;keyboard.c: 50:         botoes_ant.D = 1;
  4635  0009B4  8250               	bsf	_botoes_ant^0,1,c
  4636  0009B6                     i2l1440:
  4637                           
  4638                           ;keyboard.c: 51:         cont_d = 0;
  4639  0009B6  0E00               	movlw	0
  4640  0009B8  6E4E               	movwf	_cont_d^0,c
  4641                           
  4642                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  4643  0009BA  EFF9  F004         	goto	i2l1450
  4644  0009BE                     i2l139:
  4645  0009BE  A250               	btfss	_botoes_ant^0,1,c
  4646  0009C0  EFE4  F004         	goto	i2u81_41
  4647  0009C4  EFE6  F004         	goto	i2u81_40
  4648  0009C8                     i2u81_41:
  4649  0009C8  EFF1  F004         	goto	i2l145
  4650  0009CC                     i2u81_40:
  4651  0009CC  B481               	btfsc	129,2,c	;volatile
  4652  0009CE  EFEB  F004         	goto	i2u82_41
  4653  0009D2  EFED  F004         	goto	i2u82_40
  4654  0009D6                     i2u82_41:
  4655  0009D6  EFF1  F004         	goto	i2l145
  4656  0009DA                     i2u82_40:
  4657  0009DA                     
  4658                           ;keyboard.c: 53:         botoes.D = 0;
  4659  0009DA  9251               	bcf	_botoes^0,1,c
  4660                           
  4661                           ;keyboard.c: 54:         botoes_ant.D = 0;
  4662  0009DC  9250               	bcf	_botoes_ant^0,1,c
  4663  0009DE  EFDB  F004         	goto	i2l1440
  4664  0009E2                     i2l145:
  4665  0009E2  A481               	btfss	129,2,c	;volatile
  4666  0009E4  EFF6  F004         	goto	i2u83_41
  4667  0009E8  EFF8  F004         	goto	i2u83_40
  4668  0009EC                     i2u83_41:
  4669  0009EC  EFF9  F004         	goto	i2l1450
  4670  0009F0                     i2u83_40:
  4671  0009F0  2A4E               	incf	_cont_d^0,f,c
  4672  0009F2                     i2l1450:
  4673                           
  4674                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  4675  0009F2  9A81               	bcf	129,5,c	;volatile
  4676  0009F4                     
  4677                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  4678  0009F4  8881               	bsf	129,4,c	;volatile
  4679  0009F6                     
  4680                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  4681  0009F6  A281               	btfss	129,1,c	;volatile
  4682  0009F8  D002               	bra	i2u84_45
  4683  0009FA  8851               	bsf	_botoes^0,4,c
  4684  0009FC  D001               	bra	i2u84_47
  4685  0009FE                     i2u84_45:
  4686  0009FE  9851               	bcf	_botoes^0,4,c
  4687  000A00                     i2u84_47:
  4688  000A00                     
  4689                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  4690  000A00  A681               	btfss	129,3,c	;volatile
  4691  000A02  D002               	bra	i2u85_45
  4692  000A04  8A51               	bsf	_botoes^0,5,c
  4693  000A06  D001               	bra	i2u85_47
  4694  000A08                     i2u85_45:
  4695  000A08  9A51               	bcf	_botoes^0,5,c
  4696  000A0A                     i2u85_47:
  4697  000A0A                     
  4698                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  4699  000A0A  9881               	bcf	129,4,c	;volatile
  4700  000A0C  0012               	return		;funcret
  4701  000A0E                     __end_of_le_entrada:
  4702                           	opt callstack 0
  4703                           
  4704                           	psect	rparam
  4705  0000                     
  4706                           	psect	temp
  4707  00005D                     btemp:
  4708                           	opt callstack 0
  4709  00005D                     	ds	1
  4710  0000                     int$flags	set	btemp
  4711  0000                     wtemp8	set	btemp+1
  4712  0000                     ttemp5	set	btemp+1
  4713  0000                     ttemp6	set	btemp+4
  4714  0000                     ttemp7	set	btemp+8
  4715                           tosu	equ	0xFFF
  4716                           tosh	equ	0xFFE
  4717                           tosl	equ	0xFFD
  4718                           stkptr	equ	0xFFC
  4719                           pclatu	equ	0xFFB
  4720                           pclath	equ	0xFFA
  4721                           pcl	equ	0xFF9
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           indf0	equ	0xFEF
  4729                           postinc0	equ	0xFEE
  4730                           postdec0	equ	0xFED
  4731                           preinc0	equ	0xFEC
  4732                           plusw0	equ	0xFEB
  4733                           fsr0h	equ	0xFEA
  4734                           fsr0l	equ	0xFE9
  4735                           wreg	equ	0xFE8
  4736                           indf1	equ	0xFE7
  4737                           postinc1	equ	0xFE6
  4738                           postdec1	equ	0xFE5
  4739                           preinc1	equ	0xFE4
  4740                           plusw1	equ	0xFE3
  4741                           fsr1h	equ	0xFE2
  4742                           fsr1l	equ	0xFE1
  4743                           bsr	equ	0xFE0
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           preinc2	equ	0xFDC
  4748                           plusw2	equ	0xFDB
  4749                           fsr2h	equ	0xFDA
  4750                           fsr2l	equ	0xFD9
  4751                           status	equ	0xFD8


Data Sizes:
    Strings     299
    Constant    0
    Data        3
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     72      92
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[17]), 
		 -> STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), STR_20(CODE[17]), 
		 -> STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[16]), 
		 -> STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), 
		 -> STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), 
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[17]), 
		 -> STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), STR_20(CODE[17]), 
		 -> STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[16]), 
		 -> STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), 
		 -> STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), 
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   51676
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   47268
                                             70 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    9078
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                               30    28      2   10902
                                             40 COMRAM    30    28      2
                            ___awmod
                          _print_mat
                               _rand
                              _srand
                             _strcpy
                               _time
 ---------------------------------------------------------------------------------
 (3) _time                                                 8     0      8     120
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _srand                                                6     4      2      98
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    9034
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    9034
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    9034
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    4200
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4736
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       ___awmod
         _rand (ARG)
           ___omul
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _rand
         ___omul
       _srand
         _time (ARG)
       _strcpy
       _time
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     48      5C       1       73.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      15        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 22 21:44:02 2020

                              _x 005C                                _y 004A  
         ?_display_onoff_control 0004                               l61 1198  
                             l70 0E7A                               l46 1292  
                             l55 1512                               l64 14DC  
                             l58 0DBE                               l74 0E7A  
                             l82 0C08                               l77 121C  
                             l95 0FD6                               _op 004B  
                    creditos@lcd 001A                      __CFG_OSC$HS 000000  
                            l202 13CC                              l212 0A82  
                            l205 12F2                              l230 036A  
                            l208 1300                              l216 0B20  
                            l252 0836                              l247 078E  
                            l183 1076                              l272 1054  
                            l273 1074                              l249 081C  
                            l185 1106                              l196 135E  
                            l199 136C                              l499 0F2A  
                            l931 1570                              l940 149C  
                            l934 0CE4                              l944 1418  
                            u920 0DD0                              u921 0DCC  
                            u930 0E26                              u931 0E22  
                            u940 0E48                              u941 0E44  
                            u950 0E6A                              u951 0E66  
                            u960 0BFA                              u961 0BF6  
                            u971 0FDE                              u980 0FF2  
                            u981 0FEE                              u990 1054  
                            u991 1050                      finaliza@lcd 001A  
                            _lcd 005A                     ___awmod@sign 0028  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0001                     __CFG_WDT$OFF 000000  
                           l2000 0808                             l2010 12E6  
                           l2002 080C                             l2020 0CE6  
                           l2012 1302                             l2004 0810  
                           l2100 1258                             l2030 0D4C  
                           l2022 0D04                             l2014 1352  
                           l2006 082A                             l2102 1270  
                           l2040 110C                             l2032 0D5C  
                           l2024 0D14                             l2016 136E  
                           l2008 1296                             l2104 1284  
                           l2050 117C                             l2042 112A  
                           l2034 0D68                             l2026 0D24  
                           l2018 13BE                             l2106 1286  
                           l2052 118C                             l2044 1136  
                           l2060 11D4                             l2036 0DA2  
                           l2028 0D30                             l2046 1146  
                           l2062 11E0                             l2054 119A  
                           l2038 0DB2                             l2070 1082  
                           l2048 1152                             l2064 1200  
                           l2056 11B8                             l1600 14D0  
                           l2080 10D4                             l2072 1092  
                           l2066 1210                             l2058 11C4  
                           l1610 0DF0                             l1602 0DC0  
                           l2082 10E4                             l2074 10A2  
                           l2090 1238                             l1612 0E00  
                           l1604 0DD0                             l2084 10F6  
                           l2076 10B2                             l2068 1076  
                           l2092 123A                             l1606 0DDC  
                           l1614 0E14                             l1710 0FB6  
                           l2078 10C2                             l2094 123C  
                           l2086 121E                             l1640 0E6A  
                           l1616 0E26                             l1608 0DE0  
                           l1712 0FBA                             l1704 0F50  
                           l1720 13E0                             l2096 123E  
                           l2088 1236                             l1626 0E36  
                           l1650 0B22                             l1706 0F96  
                           l1714 145E                             l1730 0C9E  
                           l1722 1408                             l1810 005A  
                           l1802 0B12                             l2098 1240  
                           l1628 0E48                             l1660 0B9E  
                           l1652 0B40                             l1708 0F9A  
                           l1716 146E                             l1740 0E96  
                           l1900 036A                             l1820 0092  
                           l1812 0062                             l1804 0012  
                           l1590 14E8                             l1638 0E58  
                           l1670 0BCA                             l1662 0BA2  
                           l1654 0B5E                             l1750 0ECA  
                           l1742 0E9A                             l1734 0E7C  
                           l1726 1544                             l1718 13CE  
                           l1910 03EA                             l1902 0376  
                           l1830 00C8                             l1822 00A6  
                           l1814 0062                             l1806 004A  
                           l1592 14F8                             l1672 0BD4  
                           l1664 0BAC                             l1656 0B68  
                           l1760 0F04                             l1752 0ED2  
                           l1744 0EA8                             l1736 0E80  
                           l1680 0FD8                             l1728 0C0A  
                           l1920 042A                             l1912 03F6  
                           l1904 038A                             l1840 0126  
                           l1832 00CC                             l1824 00BA  
                           l1816 006A                             l1808 0052  
                           l1594 149E                             l1674 0BDE  
                           l1666 0BB6                             l1658 0B72  
                           l1690 0F2C                             l1754 0EE0  
                           l1762 0F0A                             l1746 0EB0  
                           l1738 0E8E                             l1682 0FE4  
                           l1930 04BC                             l1914 03FE  
                           l1906 039C                             l1922 043A  
                           l1850 019C                             l1842 0150  
                           l1834 00DC                             l1826 00C0  
                           l1818 007E                             l1770 0A0E  
                           l1588 14DE                             l1596 14A8  
                           l1676 0BFA                             l1668 0BC0  
                           l1764 0F1A                             l1756 0EF6  
                           l1748 0EC2                             l1684 0FF2  
                           l1940 0580                             l1932 04CC  
                           l1924 046C                             l1916 040A  
                           l1908 03AE                             l1852 01A4  
                           l1844 0174                             l1836 00DE  
                           l1828 00C4                             l1780 0AB4  
                           l1772 0A5E                             l1598 14C0  
                           l1678 0C04                             l1766 0F22  
                           l1758 0EFE                             l1686 1012  
                           l1950 05C6                             l1942 0582  
                           l1934 04FE                             l1926 04A6  
                           l1918 040E                             l1870 02CE  
                           l1862 0244                             l1846 017C  
                           l1838 0102                             l1790 0AE6  
                           l1782 0AB6                             l1774 0A72  
                           l1696 0F34                             l1688 1024  
                           l1960 0674                             l1952 05F8  
                           l1944 0584                             l1936 0554  
                           l1928 04AE                             l1880 031A  
                           l1872 02E2                             l1864 026E  
                           l1856 01C4                             l1792 0AF6  
                           l1784 0AB8                             l1776 0A90  
                           l1698 0F48                             l1970 06DC  
                           l1962 0676                             l1954 0646  
                           l1938 055C                             l1946 05A8  
                           l1890 0338                             l1882 031E  
                           l1874 02F4                             l1858 023C  
                           l1794 0B0A                             l1786 0ACC  
                           l1778 0AA0                             l1980 0722  
                           l1972 06DE                             l1956 064E  
                           l1948 05B6                             l1964 069A  
                           l1892 034A                             l1884 0320  
                           l1876 0306                             l1868 0276  
                           l1796 0B0C                             l1788 0AD8  
                           l1990 077C                             l1982 0746  
                           l1974 06E0                             l1966 06A8  
                           l1958 0672                             l1894 034E  
                           l1886 0332                             l1878 0308  
                           l1992 079E                             l1984 0748  
                           l1968 06B8                             l1976 0704  
                           l1896 0350                             l1888 0336  
                           l1994 07B0                             l1986 074A  
                           l1978 0712                             l1898 0362  
                           l1996 0800                             l1988 076E  
                           l1998 0804                             STR_1 7FCE  
                           STR_2 7FEE                             STR_3 7ED4  
                           STR_4 7ED4                             STR_5 7FBE  
                           STR_6 7ED4                             STR_7 7ED4  
                           STR_8 7ED4                             STR_9 7FDE  
                           u1000 0FB6                             u1001 0FB2  
                           u1010 0FD6                             u1011 0FD2  
                           u1020 149C                             u1100 0F1A  
                           u1021 1498                             u1101 0F16  
                           u1030 13E0                             u1110 0A90  
                           u1031 13DC                             u1111 0A8C  
                           u1040 0CD6                             u1200 02E2  
                           u1120 0AA0                             u1201 02DE  
                           u1121 0A9C                             u1050 0E8E  
                           u1210 02F4                             u1130 0AE6  
                           u1051 0E8A                             u1211 02F0  
                           u1131 0AE2                             u1060 0EA8  
                           u1300 042A                             u1220 0306  
                           u1140 0AF6                             u1061 0EA4  
                           u1045 0CC4                             u1301 0426  
                           u1221 0302                             u1141 0AF2  
                           u1070 0EC2                             u1310 046C  
                           u1230 031A                             u1150 0B20  
                           u1071 0EBE                             u1311 0468  
                           u1231 0316                             u1151 0B1C  
                           u1080 0EE0                             u1400 0646  
                           u1320 04A6                             u1240 0332  
                           u1160 0102                             u1081 0EDC  
                           u1401 0642                             u1321 04A2  
                           u1241 032E                             u1161 00FE  
                           u1090 0EF6                             u1410 06A8  
                           u1330 04BC                             u1250 034A  
                           u1170 0174                             u1091 0EF2  
                           u1411 06A4                             u1331 04B8  
                           u1251 0346                             u1171 0170  
                           u1500 136C                             u1420 06B8  
                           u1340 04CC                             u1260 0362  
                           u1180 0198                             u1501 1368  
                           u1421 06B4                             u1341 04C8  
                           u1261 035E                             u1181 0194  
                           u1430 0712                             u1350 04FE  
                           u1270 038A                             u1190 01C0  
                           u1510 1092                             u1431 070E  
                           u1351 04FA                             u1271 0386  
                           u1191 01BC                             u1511 108E  
                           u1440 0722                             u1360 0554  
                           u1280 039C                             u1520 10B2  
                           u1441 071E                             u1361 0550  
                           u1281 0398                             u1521 10AE  
                           u1450 077C                             u1370 05B6  
                           u1290 03AE                             u1530 10D4  
                           u1451 0778                             u1371 05B2  
                           u1291 03AA                             u1531 10D0  
                           u1460 078E                             u1380 05C6  
                           u1540 10F6                             u1461 078A  
                           u1381 05C2                             u1541 10F2  
                           u1470 07B0                             u1390 05F8  
                           u1607 11CA                             u1471 07AC  
                           u1391 05F4                             u1480 082A  
                           u1617 1206                             u1481 0826  
                           u1490 1300                             u1627 113C  
                           u1491 12FC                             u1637 1182  
                           u1557 0DF6                             u1647 14EE  
                           u1567 14C6                             u1657 1508  
                           u1577 0D1A                             u1587 0D52  
                           u1597 0DA8                             i2l41 1540  
                           _main 121E                             _menu 0A0E  
                           _rand 0C0A                             _seed 0052  
                           _time 13CE                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 005D                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
          function_set@num_lines 0007                     print_mat@lcd 0010  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                function_set@lcd 0004                            ?_main 0001  
                          ?_menu 001A                            ?_rand 0019  
                          STR_10 7F8E                            STR_11 7FAE  
                          STR_20 7ED3                            STR_12 7F9E  
                          STR_13 7F4A                            STR_21 7F06  
                          STR_22 7ED3                            STR_14 7F7D  
                          STR_23 7ED3                            STR_15 7F5B  
                          STR_16 7F6C                            STR_24 7F39  
                          STR_17 7F28                            STR_25 7EE4  
                          STR_26 7F17                            STR_18 7ED3  
                          STR_19 7ED3                            STR_27 7EF5  
                __end_of___awmod 0F2C                            ?_time 0001  
                          _T0CON 000FD5                            i2l112 0872  
                          i2l121 08E2                            i2l130 094E  
                          i2l114 0866                            i2l123 08D6  
                          i2l132 0942                            i2l141 09B2  
                          i2l118 0896                            i2l127 0906  
                          i2l136 0972                            i2l145 09E2  
                          i2l139 09BE                            i2l148 0A0C  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0001  
                __end_of_lcd_cmd 14DE                  __end_of_goto_XY 0E7C  
                          _jogar 0012                            _srand 1544  
                          _pulso 14DE                            tablat 000FF5  
                          time@t 0001                            ttemp5 005E  
                          ttemp6 0061                            ttemp7 0065  
                          status 000FD8                            wtemp8 005E  
                __initialization 141A                     __end_of_main 1296  
                   __end_of_menu 0B22                     __end_of_rand 0CE6  
                   __end_of_time 141A                           ??_main 0049  
                         ??_menu 001C                           ??_rand 001B  
                         ??_time 0009                    __activetblptr 000002  
                         _ADCON1 000FC1                      jogar@nivel2 0039  
                         ?_jogar 0029                           ?_srand 0009  
                         ?_pulso 0001                           i2l1400 08B8  
                         i2l1402 08C6                           i2l1420 0946  
                         i2l1412 0914                           i2l1404 08DA  
                         i2l1422 095C                           i2l1430 0982  
                         i2l1406 08F0                           i2l1414 0916  
                         i2l1440 09B6                           i2l1432 0984  
                         i2l1424 096A                           i2l1416 0924  
                         i2l1408 08FE                           i2l1442 09CC  
                         i2l1450 09F2                           i2l1434 0986  
                         i2l1418 0932                           i2l1530 1528  
                         i2l1452 09F4                           i2l1444 09DA  
                         i2l1436 0994                           i2l1428 0980  
                         i2l1380 0848                           i2l1532 152C  
                         i2l1454 09F6                           i2l1438 09A2  
                         i2l1382 0856                           i2l1534 152E  
                         i2l1526 1516                           i2l1456 0A00  
                         i2l1448 09F0                           i2l1392 08A4  
                         i2l1384 086A                           i2l1536 153C  
                         i2l1528 1524                           i2l1458 0A0A  
                         i2l1386 0880                           i2l1394 08A6  
                         i2l1378 0838                           i2l1396 08A8  
                         i2l1388 088E                           i2l1398 08AA  
               __end_of_creditos 136E                 __end_of_finaliza 13CE  
                    goto_XY@temp 000F                           ___omul 0FD8  
                      ??___awmod 0027             __size_of_gerenciador 0096  
                         _cont_d 004E                           _cont_l 004D  
                         _cont_r 004C                           _cont_u 004F  
                         _botoes 0051                           clear_0 143E  
                         clear_1 144A                  ___awmod@divisor 0025  
                ___awmod@counter 0027                    ?_function_set 0004  
                      ??_lcd_cmd 0007                           _strcpy 145E  
                         jogar@i 0045                           jogar@j 0043  
                      ??_goto_XY 000C                     __pdataCOMRAM 005A  
                   __mediumconst 7ED2                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         srand@s 0009         display_onoff_control@lcd 0004  
                     __accesstop 0080          __end_of__initialization 1450  
                  ___rparam_used 000001          ??_display_onoff_control 0009  
                 __pcstackCOMRAM 0001                    __end_of_jogar 0838  
                 gerenciador@lcd 0047                    __end_of_srand 1572  
                  __end_of_pulso 1514                   ??_function_set 0009  
                        ??_jogar 002B                          ??_srand 000B  
           __size_of_int_handler 153C                          ??_pulso 0003  
                     __pbssBANK0 0080                          ?___omul 0001  
            ___omul@multiplicand 0009                          ?_strcpy 0001  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 0007  
                        i2u60_40 0848                          i2u60_41 0844  
                        i2u61_40 0856                          i2u61_41 0852  
                        i2u70_40 08FE                          i2u62_40 0866  
                        i2u70_41 08FA                          i2u62_41 0862  
                        i2u71_40 0914                          i2u63_40 0880  
                        i2u71_41 0910                          i2u63_41 087C  
                        i2u80_40 09B2                          i2u72_40 0924  
                        i2u64_40 088E                          i2u80_41 09AE  
                        i2u72_41 0920                          i2u64_41 088A  
                        i2u81_40 09CC                          i2u73_40 0932  
                        i2u65_40 08A4                          i2u81_41 09C8  
                        i2u73_41 092E                          i2u65_41 08A0  
                        i2u82_40 09DA                          i2u74_40 0942  
                        i2u66_40 08B8                          i2u90_40 1524  
                        i2u82_41 09D6                          i2u74_41 093E  
                        i2u66_41 08B4                          i2u90_41 1520  
                        i2u83_40 09F0                          i2u75_40 095C  
                        i2u67_40 08C6                          i2u91_40 153C  
                        i2u83_41 09EC                          i2u75_41 0958  
                        i2u67_41 08C2                          i2u91_41 1538  
                        i2u76_40 096A                          i2u68_40 08D6  
                        i2u76_41 0966                          i2u68_41 08D2  
                        i2u84_45 09FE                          i2u84_47 0A00  
                        i2u77_40 0980                          i2u69_40 08F0  
                        i2u77_41 097C                          i2u69_41 08EC  
                        i2u85_45 0A08                          i2u85_47 0A0A  
                        i2u78_40 0994                          i2u78_41 0990  
                        i2u79_40 09A2                          i2u79_41 099E  
                      ?_creditos 001A                       _le_entrada 0838  
                      ?_finaliza 001A                       _botoes_ant 0050  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 0007                          __Lparam 0000  
                        ___awmod 0E7C                  __size_of___omul 009E  
                        __pcinit 141A                          __ramtop 0600  
                  instrucoes@lcd 001A                          __ptext0 121E  
                        __ptext1 1076                          __ptext2 0A0E  
                        __ptext3 0012                          __ptext4 13CE  
                        __ptext5 1544                          __ptext6 0C0A  
                        __ptext7 0FD8                          __ptext8 0E7C  
                        __ptext9 1296                          _lcd_cmd 149E  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 0DC0                 ___awmod@dividend 0023  
                     ??_creditos 001C                       ??_finaliza 001C  
                 __pintcode_body 1514             end_of_initialization 1450  
                     _instrucoes 1296                          menu@lcd 001A  
                 ___omul@product 0011             __end_of_function_set 0DC0  
                  __Lmediumconst 7ED2                          int_func 1514  
              __end_of_print_mat 0FD8                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
                        strcpy@d 0007                          strcpy@s 0005  
                      _PORTBbits 000F81               jogar@qtd_asteroide 0033  
                     lcd_cmd@lcd 0004                      ?_le_entrada 0001  
                  ??_gerenciador 0049   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 119A                   __end_of___omul 1076  
                     _write_char 0B22                    __pidataCOMRAM 1572  
                 __end_of_strcpy 149E              start_initialization 141A  
                    ?_instrucoes 001A                       jogar@bateu 0041  
              ___omul@multiplier 0001                       jogar@pont1 0040  
                     jogar@pont2 003F                       jogar@pont3 003E  
                     jogar@pont4 003D                   _entry_mode_set 119A  
                     goto_XY@lcd 0008                         ??___omul 0011  
            __size_of_le_entrada 01D6              __end_of_gerenciador 110C  
                       ??_strcpy 0005                      __pbssCOMRAM 0049  
                  ??_int_handler 0001            __size_of_function_set 00DA  
              __size_of_creditos 006C                __size_of_finaliza 0060  
         __end_of_entry_mode_set 121E                        __pintcode 0008  
                  __pmediumconst 7ED2                         ?___awmod 0023  
                    ?_write_char 0001              __size_of_instrucoes 006C  
                       ?_lcd_cmd 0004                     _function_set 0CE6  
                       ?_goto_XY 0008                   __size_of_jogar 0826  
                 __size_of_srand 002E                   __size_of_pulso 0036  
            __end_of_int_handler 1544                  ?_entry_mode_set 0004  
                    _gerenciador 1076     entry_mode_set@move_direction 0006  
                      _print_mat 0F2C  display_onoff_control@display_on 0006  
     display_onoff_control@blink 0008                      write_char@c 0003  
                     print_mat@i 0018                       print_mat@j 0016  
                   ??_le_entrada 0001              __size_of_write_char 00E8  
                      jogar@cont 003B                         __Hrparam 0000  
                       __Lrparam 0000                entry_mode_set@lcd 0004  
               __size_of___awmod 00B0                       ?_print_mat 0010  
             __end_of_le_entrada 0A0E                  jogar@velocidade 0035  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 136E  
                       __ptext11 1302                         __ptext20 14DE  
                       __ptext12 145E                         __ptext13 0F2C  
                       __ptext22 0838                         __ptext14 0B22  
                       __ptext15 0DC0                         __ptext16 149E  
                       __ptext17 0CE6                         __ptext18 119A  
                       __ptext19 110C                         _creditos 1302  
                       _finaliza 136E                         _contador 0049  
                   ??_instrucoes 001C                       strcpy@dest 0001  
           jogar@linha_aleatoria 0037                         _mat_disp 0080  
                  __size_of_main 0078                    __size_of_menu 0114  
                  __size_of_rand 00DC                    __size_of_time 004C  
                       int$flags 005D                         lcd_cmd@a 0006  
          _display_onoff_control 110C               __end_of_instrucoes 1302  
                     _INTCONbits 000FF2                         jogar@lcd 0029  
                       goto_XY@a 000E                         goto_XY@x 000A  
                       goto_XY@y 000B                         goto_XY@z 000D  
                       intlevel2 0000                        strcpy@src 0003  
        function_set@data_lenght 0006                      ??_print_mat 0012  
                   ??_write_char 0004                         pulso@lcd 0001  
               ??_entry_mode_set 0008            function_set@char_font 0008  
             __end_of_write_char 0C0A                     ?_gerenciador 0047  
