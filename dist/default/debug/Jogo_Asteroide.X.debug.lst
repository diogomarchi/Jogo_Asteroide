

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 20 20:38:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001454                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for _lcd
    80  001454  83                 	db	131
    81  001455  0F                 	db	15
    82                           
    83                           ;initializer for _x
    84  001456  01                 	db	1
    85  0000                     _PORTBbits	set	3969
    86  0000                     _T0CONbits	set	4053
    87  0000                     _T0CON	set	4053
    88  0000                     _TRISD	set	3989
    89  0000                     _PORTB	set	3969
    90  0000                     _TRISB	set	3987
    91  0000                     _ADCON1	set	4033
    92  0000                     _TMR0L	set	4054
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTD	set	3971
    95                           
    96                           	psect	mediumconst
    97  007EE4                     __pmediumconst:
    98                           	opt callstack 0
    99  007EE4  00                 	db	0
   100  007EE5                     STR_10:
   101  007EE5  20                 	db	32
   102  007EE6  20                 	db	32
   103  007EE7  20                 	db	32
   104  007EE8  20                 	db	32
   105  007EE9  20                 	db	32
   106  007EEA  20                 	db	32
   107  007EEB  20                 	db	32
   108  007EEC  20                 	db	32
   109  007EED  20                 	db	32
   110  007EEE  20                 	db	32
   111  007EEF  20                 	db	32
   112  007EF0  20                 	db	32
   113  007EF1  20                 	db	32
   114  007EF2  20                 	db	32
   115  007EF3  20                 	db	32
   116  007EF4  20                 	db	32
   117  007EF5  00                 	db	0
   118  007EF6                     STR_14:
   119  007EF6  53                 	db	83	;'S'
   120  007EF7  43                 	db	67	;'C'
   121  007EF8  4F                 	db	79	;'O'
   122  007EF9  52                 	db	82	;'R'
   123  007EFA  45                 	db	69	;'E'
   124  007EFB  3A                 	db	58	;':'
   125  007EFC  20                 	db	32
   126  007EFD  20                 	db	32
   127  007EFE  20                 	db	32
   128  007EFF  20                 	db	32
   129  007F00  20                 	db	32
   130  007F01  20                 	db	32
   131  007F02  20                 	db	32
   132  007F03  20                 	db	32
   133  007F04  20                 	db	32
   134  007F05  20                 	db	32
   135  007F06  00                 	db	0
   136  007F07                     STR_16:
   137  007F07  50                 	db	80	;'P'
   138  007F08  41                 	db	65	;'A'
   139  007F09  52                 	db	82	;'R'
   140  007F0A  41                 	db	65	;'A'
   141  007F0B  20                 	db	32
   142  007F0C  53                 	db	83	;'S'
   143  007F0D  41                 	db	65	;'A'
   144  007F0E  49                 	db	73	;'I'
   145  007F0F  52                 	db	82	;'R'
   146  007F10  20                 	db	32
   147  007F11  20                 	db	32
   148  007F12  20                 	db	32
   149  007F13  20                 	db	32
   150  007F14  20                 	db	32
   151  007F15  20                 	db	32
   152  007F16  20                 	db	32
   153  007F17  00                 	db	0
   154  007F18                     STR_15:
   155  007F18  41                 	db	65	;'A'
   156  007F19  50                 	db	80	;'P'
   157  007F1A  45                 	db	69	;'E'
   158  007F1B  52                 	db	82	;'R'
   159  007F1C  54                 	db	84	;'T'
   160  007F1D  45                 	db	69	;'E'
   161  007F1E  20                 	db	32
   162  007F1F  45                 	db	69	;'E'
   163  007F20  53                 	db	83	;'S'
   164  007F21  43                 	db	67	;'C'
   165  007F22  20                 	db	32
   166  007F23  20                 	db	32
   167  007F24  20                 	db	32
   168  007F25  20                 	db	32
   169  007F26  20                 	db	32
   170  007F27  20                 	db	32
   171  007F28  00                 	db	0
   172  007F29                     STR_9:
   173  007F29  20                 	db	32
   174  007F2A  20                 	db	32
   175  007F2B  20                 	db	32
   176  007F2C  20                 	db	32
   177  007F2D  20                 	db	32
   178  007F2E  53                 	db	83	;'S'
   179  007F2F  43                 	db	67	;'C'
   180  007F30  4F                 	db	79	;'O'
   181  007F31  52                 	db	82	;'R'
   182  007F32  45                 	db	69	;'E'
   183  007F33  3A                 	db	58	;':'
   184  007F34  20                 	db	32
   185  007F35  20                 	db	32
   186  007F36  20                 	db	32
   187  007F37  20                 	db	32
   188  007F38  20                 	db	32
   189  007F39  00                 	db	0
   190  007F3A                     STR_13:
   191  007F3A  21                 	db	33
   192  007F3B  21                 	db	33
   193  007F3C  21                 	db	33
   194  007F3D  56                 	db	86	;'V'
   195  007F3E  4F                 	db	79	;'O'
   196  007F3F  43                 	db	67	;'C'
   197  007F40  45                 	db	69	;'E'
   198  007F41  20                 	db	32
   199  007F42  42                 	db	66	;'B'
   200  007F43  41                 	db	65	;'A'
   201  007F44  54                 	db	84	;'T'
   202  007F45  45                 	db	69	;'E'
   203  007F46  55                 	db	85	;'U'
   204  007F47  21                 	db	33
   205  007F48  21                 	db	33
   206  007F49  21                 	db	33
   207  007F4A  00                 	db	0
   208  007F4B                     STR_21:
   209  007F4B  31                 	db	49	;'1'
   210  007F4C  2E                 	db	46
   211  007F4D  4A                 	db	74	;'J'
   212  007F4E  4F                 	db	79	;'O'
   213  007F4F  47                 	db	71	;'G'
   214  007F50  41                 	db	65	;'A'
   215  007F51  52                 	db	82	;'R'
   216  007F52  2E                 	db	46
   217  007F53  2E                 	db	46
   218  007F54  2E                 	db	46
   219  007F55  2E                 	db	46
   220  007F56  2E                 	db	46
   221  007F57  2E                 	db	46
   222  007F58  2E                 	db	46
   223  007F59  2E                 	db	46
   224  007F5A  2E                 	db	46
   225  007F5B  00                 	db	0
   226  007F5C                     STR_23:
   227  007F5C  33                 	db	51	;'3'
   228  007F5D  2E                 	db	46
   229  007F5E  43                 	db	67	;'C'
   230  007F5F  52                 	db	82	;'R'
   231  007F60  45                 	db	69	;'E'
   232  007F61  44                 	db	68	;'D'
   233  007F62  49                 	db	73	;'I'
   234  007F63  54                 	db	84	;'T'
   235  007F64  4F                 	db	79	;'O'
   236  007F65  53                 	db	83	;'S'
   237  007F66  2E                 	db	46
   238  007F67  2E                 	db	46
   239  007F68  2E                 	db	46
   240  007F69  2E                 	db	46
   241  007F6A  2E                 	db	46
   242  007F6B  2E                 	db	46
   243  007F6C  00                 	db	0
   244  007F6D                     STR_24:
   245  007F6D  34                 	db	52	;'4'
   246  007F6E  2E                 	db	46
   247  007F6F  46                 	db	70	;'F'
   248  007F70  49                 	db	73	;'I'
   249  007F71  4E                 	db	78	;'N'
   250  007F72  41                 	db	65	;'A'
   251  007F73  4C                 	db	76	;'L'
   252  007F74  49                 	db	73	;'I'
   253  007F75  5A                 	db	90	;'Z'
   254  007F76  41                 	db	65	;'A'
   255  007F77  52                 	db	82	;'R'
   256  007F78  2E                 	db	46
   257  007F79  2E                 	db	46
   258  007F7A  2E                 	db	46
   259  007F7B  2E                 	db	46
   260  007F7C  2E                 	db	46
   261  007F7D  00                 	db	0
   262  007F7E                     STR_22:
   263  007F7E  32                 	db	50	;'2'
   264  007F7F  2E                 	db	46
   265  007F80  49                 	db	73	;'I'
   266  007F81  4E                 	db	78	;'N'
   267  007F82  53                 	db	83	;'S'
   268  007F83  54                 	db	84	;'T'
   269  007F84  52                 	db	82	;'R'
   270  007F85  55                 	db	85	;'U'
   271  007F86  43                 	db	67	;'C'
   272  007F87  4F                 	db	79	;'O'
   273  007F88  45                 	db	69	;'E'
   274  007F89  53                 	db	83	;'S'
   275  007F8A  2E                 	db	46
   276  007F8B  2E                 	db	46
   277  007F8C  2E                 	db	46
   278  007F8D  2E                 	db	46
   279  007F8E  00                 	db	0
   280  007F8F                     STR_18:
   281  007F8F  4E                 	db	78	;'N'
   282  007F90  41                 	db	65	;'A'
   283  007F91  56                 	db	86	;'V'
   284  007F92  45                 	db	69	;'E'
   285  007F93  20                 	db	32
   286  007F94  20                 	db	32
   287  007F95  20                 	db	32
   288  007F96  20                 	db	32
   289  007F97  20                 	db	32
   290  007F98  20                 	db	32
   291  007F99  20                 	db	32
   292  007F9A  20                 	db	32
   293  007F9B  20                 	db	32
   294  007F9C  20                 	db	32
   295  007F9D  20                 	db	32
   296  007F9E  00                 	db	0
   297  007F9F                     STR_20:
   298  007F9F  4D                 	db	77	;'M'
   299  007FA0  45                 	db	69	;'E'
   300  007FA1  4E                 	db	78	;'N'
   301  007FA2  55                 	db	85	;'U'
   302  007FA3  20                 	db	32
   303  007FA4  20                 	db	32
   304  007FA5  20                 	db	32
   305  007FA6  20                 	db	32
   306  007FA7  20                 	db	32
   307  007FA8  20                 	db	32
   308  007FA9  20                 	db	32
   309  007FAA  20                 	db	32
   310  007FAB  20                 	db	32
   311  007FAC  20                 	db	32
   312  007FAD  20                 	db	32
   313  007FAE  00                 	db	0
   314  007FAF                     STR_19:
   315  007FAF  32                 	db	50	;'2'
   316  007FB0  2E                 	db	46
   317  007FB1  45                 	db	69	;'E'
   318  007FB2  53                 	db	83	;'S'
   319  007FB3  43                 	db	67	;'C'
   320  007FB4  41                 	db	65	;'A'
   321  007FB5  50                 	db	80	;'P'
   322  007FB6  45                 	db	69	;'E'
   323  007FB7  20                 	db	32
   324  007FB8  56                 	db	86	;'V'
   325  007FB9  4F                 	db	79	;'O'
   326  007FBA  4C                 	db	76	;'L'
   327  007FBB  54                 	db	84	;'T'
   328  007FBC  41                 	db	65	;'A'
   329  007FBD  20                 	db	32
   330  007FBE  00                 	db	0
   331  007FBF                     STR_5:
   332  007FBF  48                 	db	72	;'H'
   333  007FC0  49                 	db	73	;'I'
   334  007FC1  42                 	db	66	;'B'
   335  007FC2  45                 	db	69	;'E'
   336  007FC3  52                 	db	82	;'R'
   337  007FC4  4E                 	db	78	;'N'
   338  007FC5  41                 	db	65	;'A'
   339  007FC6  4E                 	db	78	;'N'
   340  007FC7  44                 	db	68	;'D'
   341  007FC8  4F                 	db	79	;'O'
   342  007FC9  2E                 	db	46
   343  007FCA  2E                 	db	46
   344  007FCB  2E                 	db	46
   345  007FCC  2E                 	db	46
   346  007FCD  2E                 	db	46
   347  007FCE  00                 	db	0
   348  007FCF                     STR_1:
   349  007FCF  31                 	db	49	;'1'
   350  007FD0  2E                 	db	46
   351  007FD1  44                 	db	68	;'D'
   352  007FD2  49                 	db	73	;'I'
   353  007FD3  4F                 	db	79	;'O'
   354  007FD4  47                 	db	71	;'G'
   355  007FD5  4F                 	db	79	;'O'
   356  007FD6  20                 	db	32
   357  007FD7  4D                 	db	77	;'M'
   358  007FD8  41                 	db	65	;'A'
   359  007FD9  52                 	db	82	;'R'
   360  007FDA  43                 	db	67	;'C'
   361  007FDB  48                 	db	72	;'H'
   362  007FDC  49                 	db	73	;'I'
   363  007FDD  2E                 	db	46
   364  007FDE  00                 	db	0
   365  007FDF                     STR_17:
   366  007FDF  31                 	db	49	;'1'
   367  007FE0  2E                 	db	46
   368  007FE1  53                 	db	83	;'S'
   369  007FE2  45                 	db	69	;'E'
   370  007FE3  54                 	db	84	;'T'
   371  007FE4  41                 	db	65	;'A'
   372  007FE5  53                 	db	83	;'S'
   373  007FE6  20                 	db	32
   374  007FE7  4D                 	db	77	;'M'
   375  007FE8  4F                 	db	79	;'O'
   376  007FE9  56                 	db	86	;'V'
   377  007FEA  45                 	db	69	;'E'
   378  007FEB  4D                 	db	77	;'M'
   379  007FEC  20                 	db	32
   380  007FED  41                 	db	65	;'A'
   381  007FEE  00                 	db	0
   382  007FEF                     STR_2:
   383  007FEF  32                 	db	50	;'2'
   384  007FF0  2E                 	db	46
   385  007FF1  47                 	db	71	;'G'
   386  007FF2  45                 	db	69	;'E'
   387  007FF3  4F                 	db	79	;'O'
   388  007FF4  52                 	db	82	;'R'
   389  007FF5  47                 	db	71	;'G'
   390  007FF6  45                 	db	69	;'E'
   391  007FF7  20                 	db	32
   392  007FF8  4E                 	db	78	;'N'
   393  007FF9  41                 	db	65	;'A'
   394  007FFA  52                 	db	82	;'R'
   395  007FFB  44                 	db	68	;'D'
   396  007FFC  45                 	db	69	;'E'
   397  007FFD  53                 	db	83	;'S'
   398  007FFE  00                 	db	0
   399  0000                     
   400                           ; #config settings
   401  007FFF  00                 	db	0	; dummy byte at the end
   402  0000                     
   403                           	psect	cinit
   404  0012FC                     __pcinit:
   405                           	opt callstack 0
   406  0012FC                     start_initialization:
   407                           	opt callstack 0
   408  0012FC                     __initialization:
   409                           	opt callstack 0
   410                           
   411                           ; Initialize objects allocated to COMRAM (3 bytes)
   412                           ; load TBLPTR registers with __pidataCOMRAM
   413  0012FC  0E54               	movlw	low __pidataCOMRAM
   414  0012FE  6EF6               	movwf	tblptrl,c
   415  001300  0E14               	movlw	high __pidataCOMRAM
   416  001302  6EF7               	movwf	tblptrh,c
   417  001304  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   418  001306  6EF8               	movwf	tblptru,c
   419  001308  0009               	tblrd		*+	;fetch initializer
   420  00130A  CFF5 F052          	movff	tablat,__pdataCOMRAM
   421  00130E  0009               	tblrd		*+	;fetch initializer
   422  001310  CFF5 F053          	movff	tablat,__pdataCOMRAM+1
   423  001314  0009               	tblrd		*+	;fetch initializer
   424  001316  CFF5 F054          	movff	tablat,__pdataCOMRAM+2
   425                           
   426                           ; Clear objects allocated to BANK0 (64 bytes)
   427  00131A  EE00  F080         	lfsr	0,__pbssBANK0
   428  00131E  0E40               	movlw	64
   429  001320                     clear_0:
   430  001320  6AEE               	clrf	postinc0,c
   431  001322  06E8               	decf	wreg,f,c
   432  001324  E1FD               	bnz	clear_0
   433                           
   434                           ; Clear objects allocated to COMRAM (17 bytes)
   435  001326  EE00  F041         	lfsr	0,__pbssCOMRAM
   436  00132A  0E11               	movlw	17
   437  00132C                     clear_1:
   438  00132C  6AEE               	clrf	postinc0,c
   439  00132E  06E8               	decf	wreg,f,c
   440  001330  E1FD               	bnz	clear_1
   441  001332                     end_of_initialization:
   442                           	opt callstack 0
   443  001332                     __end_of__initialization:
   444                           	opt callstack 0
   445  001332  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   446  001334  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   447  001336  0E00               	movlw	low (__Lmediumconst shr (0+16))
   448  001338  6EF8               	movwf	tblptru,c
   449  00133A  0100               	movlb	0
   450  00133C  EF80  F008         	goto	_main	;jump to C main() function
   451                           
   452                           	psect	bssCOMRAM
   453  000041                     __pbssCOMRAM:
   454                           	opt callstack 0
   455  000041                     _contador:
   456                           	opt callstack 0
   457  000041                     	ds	1
   458  000042                     _y:
   459                           	opt callstack 0
   460  000042                     	ds	1
   461  000043                     _op:
   462                           	opt callstack 0
   463  000043                     	ds	1
   464  000044                     _cont_r:
   465                           	opt callstack 0
   466  000044                     	ds	1
   467  000045                     _cont_l:
   468                           	opt callstack 0
   469  000045                     	ds	1
   470  000046                     _cont_d:
   471                           	opt callstack 0
   472  000046                     	ds	1
   473  000047                     _cont_u:
   474                           	opt callstack 0
   475  000047                     	ds	1
   476  000048                     _botoes_ant:
   477                           	opt callstack 0
   478  000048                     	ds	1
   479  000049                     _botoes:
   480                           	opt callstack 0
   481  000049                     	ds	1
   482  00004A                     _seed:
   483                           	opt callstack 0
   484  00004A                     	ds	8
   485                           
   486                           	psect	dataCOMRAM
   487  000052                     __pdataCOMRAM:
   488                           	opt callstack 0
   489  000052                     _lcd:
   490                           	opt callstack 0
   491  000052                     	ds	2
   492  000054                     _x:
   493                           	opt callstack 0
   494  000054                     	ds	1
   495                           
   496                           	psect	bssBANK0
   497  000080                     __pbssBANK0:
   498                           	opt callstack 0
   499  000080                     _mat_disp:
   500                           	opt callstack 0
   501  000080                     	ds	64
   502                           
   503                           	psect	cstackCOMRAM
   504  000001                     __pcstackCOMRAM:
   505                           	opt callstack 0
   506  000001                     ?_time:
   507                           	opt callstack 0
   508  000001                     ?___omul:
   509                           	opt callstack 0
   510  000001                     pulso@lcd:
   511                           	opt callstack 0
   512  000001                     write_char@lcd:
   513                           	opt callstack 0
   514  000001                     strcpy@dest:
   515                           	opt callstack 0
   516  000001                     time@t:
   517                           	opt callstack 0
   518  000001                     ___omul@multiplier:
   519                           	opt callstack 0
   520                           
   521                           ; 8 bytes @ 0x0
   522  000001                     	ds	2
   523  000003                     ??_pulso:
   524  000003                     write_char@c:
   525                           	opt callstack 0
   526  000003                     strcpy@src:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x2
   530  000003                     	ds	1
   531  000004                     ??_write_char:
   532  000004                     function_set@lcd:
   533                           	opt callstack 0
   534  000004                     display_onoff_control@lcd:
   535                           	opt callstack 0
   536  000004                     lcd_cmd@lcd:
   537                           	opt callstack 0
   538  000004                     entry_mode_set@lcd:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x3
   542  000004                     	ds	1
   543  000005                     strcpy@s:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x4
   547  000005                     	ds	1
   548  000006                     function_set@data_lenght:
   549                           	opt callstack 0
   550  000006                     display_onoff_control@display_on:
   551                           	opt callstack 0
   552  000006                     lcd_cmd@a:
   553                           	opt callstack 0
   554  000006                     entry_mode_set@move_direction:
   555                           	opt callstack 0
   556                           
   557                           ; 1 bytes @ 0x5
   558  000006                     	ds	1
   559  000007                     ??_lcd_cmd:
   560  000007                     function_set@num_lines:
   561                           	opt callstack 0
   562  000007                     display_onoff_control@cursor_on:
   563                           	opt callstack 0
   564  000007                     entry_mode_set@display_shift:
   565                           	opt callstack 0
   566  000007                     strcpy@d:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x6
   570  000007                     	ds	1
   571  000008                     ??_entry_mode_set:
   572  000008                     function_set@char_font:
   573                           	opt callstack 0
   574  000008                     display_onoff_control@blink:
   575                           	opt callstack 0
   576  000008                     goto_XY@lcd:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x7
   580  000008                     	ds	1
   581  000009                     ??_function_set:
   582  000009                     ??_display_onoff_control:
   583  000009                     srand@s:
   584                           	opt callstack 0
   585  000009                     ___omul@multiplicand:
   586                           	opt callstack 0
   587                           
   588                           ; 8 bytes @ 0x8
   589  000009                     	ds	1
   590  00000A                     goto_XY@x:
   591                           	opt callstack 0
   592                           
   593                           ; 1 bytes @ 0x9
   594  00000A                     	ds	1
   595  00000B                     ??_srand:
   596  00000B                     goto_XY@y:
   597                           	opt callstack 0
   598                           
   599                           ; 1 bytes @ 0xA
   600  00000B                     	ds	1
   601  00000C                     ??_goto_XY:
   602                           
   603                           ; 1 bytes @ 0xB
   604  00000C                     	ds	1
   605  00000D                     goto_XY@z:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0xC
   609  00000D                     	ds	1
   610  00000E                     goto_XY@a:
   611                           	opt callstack 0
   612                           
   613                           ; 1 bytes @ 0xD
   614  00000E                     	ds	1
   615  00000F                     goto_XY@temp:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0xE
   619  00000F                     	ds	1
   620  000010                     print_mat@lcd:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0xF
   624  000010                     	ds	1
   625  000011                     ___omul@product:
   626                           	opt callstack 0
   627                           
   628                           ; 8 bytes @ 0x10
   629  000011                     	ds	1
   630  000012                     ??_print_mat:
   631                           
   632                           ; 1 bytes @ 0x11
   633  000012                     	ds	4
   634  000016                     print_mat@j:
   635                           	opt callstack 0
   636                           
   637                           ; 2 bytes @ 0x15
   638  000016                     	ds	2
   639  000018                     print_mat@i:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x17
   643  000018                     	ds	1
   644  000019                     ?_rand:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x18
   648  000019                     	ds	1
   649  00001A                     creditos@lcd:
   650                           	opt callstack 0
   651  00001A                     finaliza@lcd:
   652                           	opt callstack 0
   653  00001A                     instrucoes@lcd:
   654                           	opt callstack 0
   655  00001A                     menu@lcd:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x19
   659  00001A                     	ds	1
   660  00001B                     ??_rand:
   661                           
   662                           ; 1 bytes @ 0x1A
   663  00001B                     	ds	1
   664  00001C                     
   665                           ; 1 bytes @ 0x1B
   666  00001C                     	ds	7
   667  000023                     ?___awmod:
   668                           	opt callstack 0
   669  000023                     ___awmod@dividend:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x22
   673  000023                     	ds	2
   674  000025                     ___awmod@divisor:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x24
   678  000025                     	ds	2
   679  000027                     ___awmod@counter:
   680                           	opt callstack 0
   681                           
   682                           ; 1 bytes @ 0x26
   683  000027                     	ds	1
   684  000028                     ___awmod@sign:
   685                           	opt callstack 0
   686                           
   687                           ; 1 bytes @ 0x27
   688  000028                     	ds	1
   689  000029                     jogar@lcd:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x28
   693  000029                     	ds	2
   694  00002B                     ??_jogar:
   695                           
   696                           ; 1 bytes @ 0x2A
   697  00002B                     	ds	8
   698  000033                     jogar@linha_aleatoria:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x32
   702  000033                     	ds	2
   703  000035                     jogar@pont4:
   704                           	opt callstack 0
   705                           
   706                           ; 1 bytes @ 0x34
   707  000035                     	ds	1
   708  000036                     jogar@pont3:
   709                           	opt callstack 0
   710                           
   711                           ; 1 bytes @ 0x35
   712  000036                     	ds	1
   713  000037                     jogar@pont2:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x36
   717  000037                     	ds	1
   718  000038                     jogar@pont1:
   719                           	opt callstack 0
   720                           
   721                           ; 1 bytes @ 0x37
   722  000038                     	ds	1
   723  000039                     jogar@bateu:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x38
   727  000039                     	ds	2
   728  00003B                     jogar@j:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x3A
   732  00003B                     	ds	2
   733  00003D                     jogar@i:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x3C
   737  00003D                     	ds	2
   738  00003F                     gerenciador@lcd:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x3E
   742  00003F                     	ds	2
   743  000041                     
   744                           ; 1 bytes @ 0x40
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 36 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   764 ;;      Params:         0       0       0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0
   767 ;;      Totals:         0       0       0       0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels required when called:    8
   770 ;; This function calls:
   771 ;;		_display_onoff_control
   772 ;;		_entry_mode_set
   773 ;;		_function_set
   774 ;;		_gerenciador
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text0
   781  001100                     __ptext0:
   782                           	opt callstack 0
   783  001100                     _main:
   784                           	opt callstack 23
   785  001100                     
   786                           ;main.c: 38:     ADCON1 = 0x0F;
   787  001100  0E0F               	movlw	15
   788  001102  6EC1               	movwf	193,c	;volatile
   789                           
   790                           ;main.c: 43:     TRISB = 0x0F;
   791  001104  0E0F               	movlw	15
   792  001106  6E93               	movwf	147,c	;volatile
   793                           
   794                           ;main.c: 46:     PORTB = 0x00;
   795  001108  0E00               	movlw	0
   796  00110A  6E81               	movwf	129,c	;volatile
   797                           
   798                           ;main.c: 49:     TRISD = 0x00;
   799  00110C  0E00               	movlw	0
   800  00110E  6E95               	movwf	149,c	;volatile
   801                           
   802                           ;main.c: 52:     T0CON = 0x47;
   803  001110  0E47               	movlw	71
   804  001112  6ED5               	movwf	213,c	;volatile
   805                           
   806                           ;main.c: 55:     TMR0L = 0x63;
   807  001114  0E63               	movlw	99
   808  001116  6ED6               	movwf	214,c	;volatile
   809  001118                     
   810                           ;main.c: 58:     INTCONbits.TMR0IF = 0;
   811  001118  94F2               	bcf	242,2,c	;volatile
   812  00111A                     
   813                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   814  00111A  8AF2               	bsf	242,5,c	;volatile
   815  00111C                     
   816                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   817  00111C  88F2               	bsf	242,4,c	;volatile
   818  00111E                     
   819                           ;main.c: 61:     INTCONbits.INT0IF = 0;
   820  00111E  92F2               	bcf	242,1,c	;volatile
   821  001120                     
   822                           ;main.c: 62:     INTCONbits.GIE = 1;
   823  001120  8EF2               	bsf	242,7,c	;volatile
   824  001122                     
   825                           ;main.c: 64:     function_set(lcd, 0, 1, 0);
   826  001122  0E83               	movlw	131
   827  001124  6E04               	movwf	function_set@lcd^0,c
   828  001126  0E0F               	movlw	15
   829  001128  6E05               	movwf	(function_set@lcd+1)^0,c
   830  00112A  0E00               	movlw	0
   831  00112C  6E06               	movwf	function_set@data_lenght^0,c
   832  00112E  0E01               	movlw	1
   833  001130  6E07               	movwf	function_set@num_lines^0,c
   834  001132  0E00               	movlw	0
   835  001134  6E08               	movwf	function_set@char_font^0,c
   836  001136  ECE4  F005         	call	_function_set	;wreg free
   837  00113A                     
   838                           ;main.c: 65:     display_onoff_control(lcd, 1, 0, 0);
   839  00113A  0E83               	movlw	131
   840  00113C  6E04               	movwf	display_onoff_control@lcd^0,c
   841  00113E  0E0F               	movlw	15
   842  001140  6E05               	movwf	(display_onoff_control@lcd+1)^0,c
   843  001142  0E01               	movlw	1
   844  001144  6E06               	movwf	display_onoff_control@display_on^0,c
   845  001146  0E00               	movlw	0
   846  001148  6E07               	movwf	display_onoff_control@cursor_on^0,c
   847  00114A  0E00               	movlw	0
   848  00114C  6E08               	movwf	display_onoff_control@blink^0,c
   849  00114E  ECF7  F007         	call	_display_onoff_control	;wreg free
   850  001152                     
   851                           ;main.c: 66:     entry_mode_set(lcd, 1,0);
   852  001152  0E83               	movlw	131
   853  001154  6E04               	movwf	entry_mode_set@lcd^0,c
   854  001156  0E0F               	movlw	15
   855  001158  6E05               	movwf	(entry_mode_set@lcd+1)^0,c
   856  00115A  0E01               	movlw	1
   857  00115C  6E06               	movwf	entry_mode_set@move_direction^0,c
   858  00115E  0E00               	movlw	0
   859  001160  6E07               	movwf	entry_mode_set@display_shift^0,c
   860  001162  EC3E  F008         	call	_entry_mode_set	;wreg free
   861  001166                     
   862                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   863  001166  8ED5               	bsf	213,7,c	;volatile
   864  001168                     
   865                           ;main.c: 70:     gerenciador(lcd);
   866  001168  0E83               	movlw	131
   867  00116A  6E3F               	movwf	gerenciador@lcd^0,c
   868  00116C  0E0F               	movlw	15
   869  00116E  6E40               	movwf	(gerenciador@lcd+1)^0,c
   870  001170  ECAC  F007         	call	_gerenciador	;wreg free
   871  001174  EF07  F000         	goto	start
   872  001178                     __end_of_main:
   873                           	opt callstack 0
   874                           
   875 ;; *************** function _gerenciador *****************
   876 ;; Defined at:
   877 ;;		line 16 in file "task_manager.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  lcd             2   62[COMRAM] PTR struct .
   880 ;;		 -> PORTD(1), 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   892 ;;      Params:         2       0       0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    7
   899 ;; This function calls:
   900 ;;		_creditos
   901 ;;		_finaliza
   902 ;;		_instrucoes
   903 ;;		_jogar
   904 ;;		_menu
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text1
   911  000F58                     __ptext1:
   912                           	opt callstack 0
   913  000F58                     _gerenciador:
   914                           	opt callstack 23
   915  000F58                     l183:
   916  000F58                     
   917                           ;task_manager.c: 18:         menu(lcd);
   918  000F58  C03F  F01A         	movff	gerenciador@lcd,menu@lcd
   919  000F5C  C040  F01B         	movff	gerenciador@lcd+1,menu@lcd+1
   920  000F60  EC78  F004         	call	_menu	;wreg free
   921  000F64                     
   922                           ;task_manager.c: 19:         if(op == 0) jogar(lcd);
   923  000F64  5043               	movf	_op^0,w,c
   924  000F66  A4D8               	btfss	status,2,c
   925  000F68  EFB8  F007         	goto	u1411
   926  000F6C  EFBA  F007         	goto	u1410
   927  000F70                     u1411:
   928  000F70  EFC2  F007         	goto	l2009
   929  000F74                     u1410:
   930  000F74  C03F  F029         	movff	gerenciador@lcd,jogar@lcd
   931  000F78  C040  F02A         	movff	gerenciador@lcd+1,jogar@lcd+1
   932  000F7C  EC09  F000         	call	_jogar	;wreg free
   933  000F80  EFAC  F007         	goto	l183
   934  000F84                     l2009:
   935  000F84  0443               	decf	_op^0,w,c
   936  000F86  A4D8               	btfss	status,2,c
   937  000F88  EFC8  F007         	goto	u1421
   938  000F8C  EFCA  F007         	goto	u1420
   939  000F90                     u1421:
   940  000F90  EFD2  F007         	goto	l2013
   941  000F94                     u1420:
   942  000F94  C03F  F01A         	movff	gerenciador@lcd,instrucoes@lcd
   943  000F98  C040  F01B         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   944  000F9C  ECBC  F008         	call	_instrucoes	;wreg free
   945  000FA0  EFAC  F007         	goto	l183
   946  000FA4                     l2013:
   947  000FA4  0E02               	movlw	2
   948  000FA6  1843               	xorwf	_op^0,w,c
   949  000FA8  A4D8               	btfss	status,2,c
   950  000FAA  EFD9  F007         	goto	u1431
   951  000FAE  EFDB  F007         	goto	u1430
   952  000FB2                     u1431:
   953  000FB2  EFE3  F007         	goto	l2017
   954  000FB6                     u1430:
   955  000FB6  C03F  F01A         	movff	gerenciador@lcd,creditos@lcd
   956  000FBA  C040  F01B         	movff	gerenciador@lcd+1,creditos@lcd+1
   957  000FBE  ECF2  F008         	call	_creditos	;wreg free
   958  000FC2  EFAC  F007         	goto	l183
   959  000FC6                     l2017:
   960  000FC6  0E03               	movlw	3
   961  000FC8  1843               	xorwf	_op^0,w,c
   962  000FCA  A4D8               	btfss	status,2,c
   963  000FCC  EFEA  F007         	goto	u1441
   964  000FD0  EFEC  F007         	goto	u1440
   965  000FD4                     u1441:
   966  000FD4  EFF4  F007         	goto	l185
   967  000FD8                     u1440:
   968  000FD8  C03F  F01A         	movff	gerenciador@lcd,finaliza@lcd
   969  000FDC  C040  F01B         	movff	gerenciador@lcd+1,finaliza@lcd+1
   970  000FE0  EC28  F009         	call	_finaliza	;wreg free
   971  000FE4  EFAC  F007         	goto	l183
   972  000FE8                     l185:
   973  000FE8  EFAC  F007         	goto	l183
   974  000FEC  0012               	return		;funcret
   975  000FEE                     __end_of_gerenciador:
   976                           	opt callstack 0
   977                           
   978 ;; *************** function _menu *****************
   979 ;; Defined at:
   980 ;;		line 173 in file "task_manager.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  lcd             2   25[COMRAM] PTR struct .
   983 ;;		 -> PORTD(1), 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      unsigned char 
   988 ;; Registers used:
   989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         2       0       0       0       0       0       0
   996 ;;      Locals:         0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         2       0       0       0       0       0       0
   999 ;;Total ram usage:        2 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    6
  1002 ;; This function calls:
  1003 ;;		_print_mat
  1004 ;;		_strcpy
  1005 ;; This function is called by:
  1006 ;;		_gerenciador
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text2
  1011  0008F0                     __ptext2:
  1012                           	opt callstack 0
  1013  0008F0                     _menu:
  1014                           	opt callstack 23
  1015  0008F0                     
  1016                           ;task_manager.c: 174:     strcpy(mat_disp[0], "1.JOGAR.........");
  1017  0008F0  0E80               	movlw	low _mat_disp
  1018  0008F2  6E01               	movwf	strcpy@dest^0,c
  1019  0008F4  0E00               	movlw	high _mat_disp
  1020  0008F6  6E02               	movwf	(strcpy@dest+1)^0,c
  1021  0008F8  0E4B               	movlw	low STR_21
  1022  0008FA  6E03               	movwf	strcpy@src^0,c
  1023  0008FC  0E7F               	movlw	high STR_21
  1024  0008FE  6E04               	movwf	(strcpy@src+1)^0,c
  1025  000900  ECA0  F009         	call	_strcpy	;wreg free
  1026                           
  1027                           ;task_manager.c: 175:     strcpy(mat_disp[1], "2.INSTRUCOES....");
  1028  000904  0E90               	movlw	low (_mat_disp+16)
  1029  000906  6E01               	movwf	strcpy@dest^0,c
  1030  000908  0E00               	movlw	high (_mat_disp+16)
  1031  00090A  6E02               	movwf	(strcpy@dest+1)^0,c
  1032  00090C  0E7E               	movlw	low STR_22
  1033  00090E  6E03               	movwf	strcpy@src^0,c
  1034  000910  0E7F               	movlw	high STR_22
  1035  000912  6E04               	movwf	(strcpy@src+1)^0,c
  1036  000914  ECA0  F009         	call	_strcpy	;wreg free
  1037                           
  1038                           ;task_manager.c: 176:     strcpy(mat_disp[2], "3.CREDITOS......");
  1039  000918  0EA0               	movlw	low (_mat_disp+32)
  1040  00091A  6E01               	movwf	strcpy@dest^0,c
  1041  00091C  0E00               	movlw	high (_mat_disp+32)
  1042  00091E  6E02               	movwf	(strcpy@dest+1)^0,c
  1043  000920  0E5C               	movlw	low STR_23
  1044  000922  6E03               	movwf	strcpy@src^0,c
  1045  000924  0E7F               	movlw	high STR_23
  1046  000926  6E04               	movwf	(strcpy@src+1)^0,c
  1047  000928  ECA0  F009         	call	_strcpy	;wreg free
  1048                           
  1049                           ;task_manager.c: 177:     strcpy(mat_disp[3], "4.FINALIZAR.....");
  1050  00092C  0EB0               	movlw	low (_mat_disp+48)
  1051  00092E  6E01               	movwf	strcpy@dest^0,c
  1052  000930  0E00               	movlw	high (_mat_disp+48)
  1053  000932  6E02               	movwf	(strcpy@dest+1)^0,c
  1054  000934  0E6D               	movlw	low STR_24
  1055  000936  6E03               	movwf	strcpy@src^0,c
  1056  000938  0E7F               	movlw	high STR_24
  1057  00093A  6E04               	movwf	(strcpy@src+1)^0,c
  1058  00093C  ECA0  F009         	call	_strcpy	;wreg free
  1059  000940                     l1737:
  1060                           
  1061                           ;task_manager.c: 180:     mat_disp[op][15] = '<';
  1062  000940  5043               	movf	_op^0,w,c
  1063  000942  0D10               	mullw	16
  1064  000944  0E8F               	movlw	low (_mat_disp+15)
  1065  000946  24F3               	addwf	243,w,c
  1066  000948  6ED9               	movwf	fsr2l,c
  1067  00094A  0E00               	movlw	high (_mat_disp+15)
  1068  00094C  20F4               	addwfc	prodh,w,c
  1069  00094E  6EDA               	movwf	fsr2h,c
  1070  000950  0E3C               	movlw	60
  1071  000952  6EDF               	movwf	indf2,c
  1072  000954                     
  1073                           ;task_manager.c: 181:     print_mat(lcd);
  1074  000954  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1075  000958  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1076  00095C  EC07  F007         	call	_print_mat	;wreg free
  1077                           
  1078                           ;task_manager.c: 182:     while(!botoes.Enter){
  1079  000960  EFFA  F004         	goto	l1767
  1080  000964                     l243:
  1081                           
  1082                           ;task_manager.c: 183:         if((botoes.U) && (op > 0)){
  1083  000964  A049               	btfss	_botoes^0,0,c
  1084  000966  EFB7  F004         	goto	u1061
  1085  00096A  EFB9  F004         	goto	u1060
  1086  00096E                     u1061:
  1087  00096E  EFDD  F004         	goto	l1753
  1088  000972                     u1060:
  1089  000972  5043               	movf	_op^0,w,c
  1090  000974  B4D8               	btfsc	status,2,c
  1091  000976  EFBF  F004         	goto	u1071
  1092  00097A  EFC1  F004         	goto	u1070
  1093  00097E                     u1071:
  1094  00097E  EFDD  F004         	goto	l1753
  1095  000982                     u1070:
  1096  000982                     
  1097                           ;task_manager.c: 184:             mat_disp[op][15] = '.';
  1098  000982  5043               	movf	_op^0,w,c
  1099  000984  0D10               	mullw	16
  1100  000986  0E8F               	movlw	low (_mat_disp+15)
  1101  000988  24F3               	addwf	243,w,c
  1102  00098A  6ED9               	movwf	fsr2l,c
  1103  00098C  0E00               	movlw	high (_mat_disp+15)
  1104  00098E  20F4               	addwfc	prodh,w,c
  1105  000990  6EDA               	movwf	fsr2h,c
  1106  000992  0E2E               	movlw	46
  1107  000994  6EDF               	movwf	indf2,c
  1108  000996                     
  1109                           ;task_manager.c: 185:             op--;
  1110  000996  0643               	decf	_op^0,f,c
  1111  000998                     
  1112                           ;task_manager.c: 186:             botoes.U = 0;
  1113  000998  9049               	bcf	_botoes^0,0,c
  1114  00099A                     
  1115                           ;task_manager.c: 187:             mat_disp[op][15] = '<';
  1116  00099A  5043               	movf	_op^0,w,c
  1117  00099C  0D10               	mullw	16
  1118  00099E  0E8F               	movlw	low (_mat_disp+15)
  1119  0009A0  24F3               	addwf	243,w,c
  1120  0009A2  6ED9               	movwf	fsr2l,c
  1121  0009A4  0E00               	movlw	high (_mat_disp+15)
  1122  0009A6  20F4               	addwfc	prodh,w,c
  1123  0009A8  6EDA               	movwf	fsr2h,c
  1124  0009AA  0E3C               	movlw	60
  1125  0009AC  6EDF               	movwf	indf2,c
  1126  0009AE                     
  1127                           ;task_manager.c: 188:             print_mat(lcd);
  1128  0009AE  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1129  0009B2  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1130  0009B6  EC07  F007         	call	_print_mat	;wreg free
  1131  0009BA                     l1753:
  1132                           
  1133                           ;task_manager.c: 190:         if((botoes.D) && (op < 3)){
  1134  0009BA  A249               	btfss	_botoes^0,1,c
  1135  0009BC  EFE2  F004         	goto	u1081
  1136  0009C0  EFE4  F004         	goto	u1080
  1137  0009C4                     u1081:
  1138  0009C4  EFFA  F004         	goto	l1767
  1139  0009C8                     u1080:
  1140  0009C8  0E03               	movlw	3
  1141  0009CA  6043               	cpfslt	_op^0,c
  1142  0009CC  EFEA  F004         	goto	u1091
  1143  0009D0  EFEC  F004         	goto	u1090
  1144  0009D4                     u1091:
  1145  0009D4  EFFA  F004         	goto	l1767
  1146  0009D8                     u1090:
  1147  0009D8                     
  1148                           ;task_manager.c: 191:             mat_disp[op][15] = '.';
  1149  0009D8  5043               	movf	_op^0,w,c
  1150  0009DA  0D10               	mullw	16
  1151  0009DC  0E8F               	movlw	low (_mat_disp+15)
  1152  0009DE  24F3               	addwf	243,w,c
  1153  0009E0  6ED9               	movwf	fsr2l,c
  1154  0009E2  0E00               	movlw	high (_mat_disp+15)
  1155  0009E4  20F4               	addwfc	prodh,w,c
  1156  0009E6  6EDA               	movwf	fsr2h,c
  1157  0009E8  0E2E               	movlw	46
  1158  0009EA  6EDF               	movwf	indf2,c
  1159  0009EC                     
  1160                           ;task_manager.c: 192:             op++;
  1161  0009EC  2A43               	incf	_op^0,f,c
  1162  0009EE                     
  1163                           ;task_manager.c: 193:             botoes.D = 0;
  1164  0009EE  9249               	bcf	_botoes^0,1,c
  1165  0009F0  EFA0  F004         	goto	l1737
  1166  0009F4                     l1767:
  1167                           
  1168                           ;task_manager.c: 182:     while(!botoes.Enter){
  1169  0009F4  A849               	btfss	_botoes^0,4,c
  1170  0009F6  EFFF  F004         	goto	u1101
  1171  0009FA  EF01  F005         	goto	u1100
  1172  0009FE                     u1101:
  1173  0009FE  EFB2  F004         	goto	l243
  1174  000A02                     u1100:
  1175  000A02  0012               	return		;funcret
  1176  000A04                     __end_of_menu:
  1177                           	opt callstack 0
  1178                           
  1179 ;; *************** function _jogar *****************
  1180 ;; Defined at:
  1181 ;;		line 47 in file "task_manager.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  lcd             2   40[COMRAM] PTR struct .
  1184 ;;		 -> PORTD(1), 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  j               2   58[COMRAM] int 
  1187 ;;  i               2   60[COMRAM] int 
  1188 ;;  bateu           2   56[COMRAM] int 
  1189 ;;  linha_aleato    2   50[COMRAM] int 
  1190 ;;  pont1           1   55[COMRAM] unsigned char 
  1191 ;;  pont2           1   54[COMRAM] unsigned char 
  1192 ;;  pont3           1   53[COMRAM] unsigned char 
  1193 ;;  pont4           1   52[COMRAM] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1203 ;;      Params:         2       0       0       0       0       0       0
  1204 ;;      Locals:        12       0       0       0       0       0       0
  1205 ;;      Temps:          8       0       0       0       0       0       0
  1206 ;;      Totals:        22       0       0       0       0       0       0
  1207 ;;Total ram usage:       22 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    6
  1210 ;; This function calls:
  1211 ;;		___awmod
  1212 ;;		_print_mat
  1213 ;;		_rand
  1214 ;;		_srand
  1215 ;;		_strcpy
  1216 ;;		_time
  1217 ;; This function is called by:
  1218 ;;		_gerenciador
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text3
  1223  000012                     __ptext3:
  1224                           	opt callstack 0
  1225  000012                     _jogar:
  1226                           	opt callstack 23
  1227  000012                     
  1228                           ;task_manager.c: 48:     srand(time(((void*)0)));
  1229  000012  0E00               	movlw	0
  1230  000014  6E01               	movwf	time@t^0,c
  1231  000016  0E00               	movlw	0
  1232  000018  6E02               	movwf	(time@t+1)^0,c
  1233  00001A  EC58  F009         	call	_time	;wreg free
  1234  00001E  C001  F02B         	movff	?_time,??_jogar
  1235  000022  C002  F02C         	movff	?_time+1,??_jogar+1
  1236  000026  C003  F02D         	movff	?_time+2,??_jogar+2
  1237  00002A  C004  F02E         	movff	?_time+3,??_jogar+3
  1238  00002E  C005  F02F         	movff	?_time+4,??_jogar+4
  1239  000032  C006  F030         	movff	?_time+5,??_jogar+5
  1240  000036  C007  F031         	movff	?_time+6,??_jogar+6
  1241  00003A  C008  F032         	movff	?_time+7,??_jogar+7
  1242  00003E  C02B  F009         	movff	??_jogar,srand@s
  1243  000042  C02D  F00A         	movff	??_jogar+2,srand@s+1
  1244  000046  EC13  F00A         	call	_srand	;wreg free
  1245  00004A                     
  1246                           ;task_manager.c: 49:     int bateu = 0;
  1247  00004A  0E00               	movlw	0
  1248  00004C  6E3A               	movwf	(jogar@bateu+1)^0,c
  1249  00004E  0E00               	movlw	0
  1250  000050  6E39               	movwf	jogar@bateu^0,c
  1251  000052                     
  1252                           ;task_manager.c: 53:     strcpy(mat_disp[0], "     SCORE:     ");
  1253  000052  0E80               	movlw	low _mat_disp
  1254  000054  6E01               	movwf	strcpy@dest^0,c
  1255  000056  0E00               	movlw	high _mat_disp
  1256  000058  6E02               	movwf	(strcpy@dest+1)^0,c
  1257  00005A  0E29               	movlw	low STR_9
  1258  00005C  6E03               	movwf	strcpy@src^0,c
  1259  00005E  0E7F               	movlw	high STR_9
  1260  000060  6E04               	movwf	(strcpy@src+1)^0,c
  1261  000062  ECA0  F009         	call	_strcpy	;wreg free
  1262  000066                     
  1263                           ;task_manager.c: 54:     strcpy(mat_disp[1], "                ");
  1264  000066  0E90               	movlw	low (_mat_disp+16)
  1265  000068  6E01               	movwf	strcpy@dest^0,c
  1266  00006A  0E00               	movlw	high (_mat_disp+16)
  1267  00006C  6E02               	movwf	(strcpy@dest+1)^0,c
  1268  00006E  0EE5               	movlw	low STR_10
  1269  000070  6E03               	movwf	strcpy@src^0,c
  1270  000072  0E7E               	movlw	high STR_10
  1271  000074  6E04               	movwf	(strcpy@src+1)^0,c
  1272  000076  ECA0  F009         	call	_strcpy	;wreg free
  1273  00007A                     
  1274                           ;task_manager.c: 55:     strcpy(mat_disp[2], "                ");
  1275  00007A  0EA0               	movlw	low (_mat_disp+32)
  1276  00007C  6E01               	movwf	strcpy@dest^0,c
  1277  00007E  0E00               	movlw	high (_mat_disp+32)
  1278  000080  6E02               	movwf	(strcpy@dest+1)^0,c
  1279  000082  0EE5               	movlw	low STR_10
  1280  000084  6E03               	movwf	strcpy@src^0,c
  1281  000086  0E7E               	movlw	high STR_10
  1282  000088  6E04               	movwf	(strcpy@src+1)^0,c
  1283  00008A  ECA0  F009         	call	_strcpy	;wreg free
  1284  00008E                     
  1285                           ;task_manager.c: 56:     strcpy(mat_disp[3], "                ");
  1286  00008E  0EB0               	movlw	low (_mat_disp+48)
  1287  000090  6E01               	movwf	strcpy@dest^0,c
  1288  000092  0E00               	movlw	high (_mat_disp+48)
  1289  000094  6E02               	movwf	(strcpy@dest+1)^0,c
  1290  000096  0EE5               	movlw	low STR_10
  1291  000098  6E03               	movwf	strcpy@src^0,c
  1292  00009A  0E7E               	movlw	high STR_10
  1293  00009C  6E04               	movwf	(strcpy@src+1)^0,c
  1294  00009E  ECA0  F009         	call	_strcpy	;wreg free
  1295  0000A2                     
  1296                           ;task_manager.c: 59:     mat_disp[0][15-1] = 0x30;
  1297  0000A2  0E30               	movlw	48
  1298  0000A4  0100               	movlb	0	; () banked
  1299  0000A6  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1300  0000A8                     
  1301                           ; BSR set to: 0
  1302                           ;task_manager.c: 60:     mat_disp[0][14-1] = 0x30;
  1303  0000A8  0E30               	movlw	48
  1304  0000AA  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1305  0000AC                     
  1306                           ; BSR set to: 0
  1307                           ;task_manager.c: 61:     mat_disp[0][13-1] = 0x30;
  1308  0000AC  0E30               	movlw	48
  1309  0000AE  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1310  0000B0                     
  1311                           ; BSR set to: 0
  1312                           ;task_manager.c: 62:     mat_disp[0][12-1] = 0x30;
  1313  0000B0  0E30               	movlw	48
  1314  0000B2  6F8B               	movwf	(_mat_disp+11)& (0+255),b
  1315                           
  1316                           ;task_manager.c: 64:     print_mat(lcd);
  1317  0000B4  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1318  0000B8  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1319  0000BC  EC07  F007         	call	_print_mat	;wreg free
  1320                           
  1321                           ;task_manager.c: 67:     while(!botoes.Esc && bateu == 0){
  1322  0000C0  EF28  F003         	goto	l1923
  1323  0000C4                     l1791:
  1324                           
  1325                           ;task_manager.c: 68:         contador ++;
  1326  0000C4  2A41               	incf	_contador^0,f,c
  1327  0000C6                     
  1328                           ;task_manager.c: 69:         if(contador%4 == 0){
  1329  0000C6  C041  F02B         	movff	_contador,??_jogar
  1330  0000CA  0E03               	movlw	3
  1331  0000CC  162B               	andwf	??_jogar^0,f,c
  1332  0000CE  A4D8               	btfss	status,2,c
  1333  0000D0  EF6C  F000         	goto	u1111
  1334  0000D4  EF6E  F000         	goto	u1110
  1335  0000D8                     u1111:
  1336  0000D8  EF95  F000         	goto	l1799
  1337  0000DC                     u1110:
  1338  0000DC                     
  1339                           ;task_manager.c: 70:             linha_aleatoria = (rand()%3) + 1 ;
  1340  0000DC  EC76  F005         	call	_rand	;wreg free
  1341  0000E0  C019  F023         	movff	?_rand,___awmod@dividend
  1342  0000E4  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
  1343  0000E8  0E00               	movlw	0
  1344  0000EA  6E26               	movwf	(___awmod@divisor+1)^0,c
  1345  0000EC  0E03               	movlw	3
  1346  0000EE  6E25               	movwf	___awmod@divisor^0,c
  1347  0000F0  ECAF  F006         	call	___awmod	;wreg free
  1348  0000F4  0E01               	movlw	1
  1349  0000F6  2423               	addwf	?___awmod^0,w,c
  1350  0000F8  6E33               	movwf	jogar@linha_aleatoria^0,c
  1351  0000FA  0E00               	movlw	0
  1352  0000FC  2024               	addwfc	(?___awmod+1)^0,w,c
  1353  0000FE  6E34               	movwf	(jogar@linha_aleatoria+1)^0,c
  1354  000100                     
  1355                           ;task_manager.c: 71:             mat_disp[linha_aleatoria][15] = '*';
  1356  000100  C033  F02B         	movff	jogar@linha_aleatoria,??_jogar
  1357  000104  C034  F02C         	movff	jogar@linha_aleatoria+1,??_jogar+1
  1358  000108  3A2B               	swapf	??_jogar^0,f,c
  1359  00010A  3A2C               	swapf	(??_jogar+1)^0,f,c
  1360  00010C  0EF0               	movlw	240
  1361  00010E  162C               	andwf	(??_jogar+1)^0,f,c
  1362  000110  502B               	movf	??_jogar^0,w,c
  1363  000112  0B0F               	andlw	15
  1364  000114  122C               	iorwf	(??_jogar+1)^0,f,c
  1365  000116  0EF0               	movlw	240
  1366  000118  162B               	andwf	??_jogar^0,f,c
  1367  00011A  0E8F               	movlw	low (_mat_disp+15)
  1368  00011C  242B               	addwf	??_jogar^0,w,c
  1369  00011E  6ED9               	movwf	fsr2l,c
  1370  000120  0E00               	movlw	high (_mat_disp+15)
  1371  000122  202C               	addwfc	(??_jogar+1)^0,w,c
  1372  000124  6EDA               	movwf	fsr2h,c
  1373  000126  0E2A               	movlw	42
  1374  000128  6EDF               	movwf	indf2,c
  1375  00012A                     l1799:
  1376                           
  1377                           ;task_manager.c: 74:             for(int i = 1; i <= 3; i++){
  1378  00012A  0E00               	movlw	0
  1379  00012C  6E3E               	movwf	(jogar@i+1)^0,c
  1380  00012E  0E01               	movlw	1
  1381  000130  6E3D               	movwf	jogar@i^0,c
  1382  000132                     l1805:
  1383                           
  1384                           ;task_manager.c: 75:                 for(int j = 0; j < 15; j++)
  1385  000132  0E00               	movlw	0
  1386  000134  6E3C               	movwf	(jogar@j+1)^0,c
  1387  000136  0E00               	movlw	0
  1388  000138  6E3B               	movwf	jogar@j^0,c
  1389  00013A                     l1811:
  1390                           
  1391                           ;task_manager.c: 76:                     mat_disp[i][j] = mat_disp[i][j+1];
  1392  00013A  C03D  F02B         	movff	jogar@i,??_jogar
  1393  00013E  C03E  F02C         	movff	jogar@i+1,??_jogar+1
  1394  000142  3A2B               	swapf	??_jogar^0,f,c
  1395  000144  3A2C               	swapf	(??_jogar+1)^0,f,c
  1396  000146  0EF0               	movlw	240
  1397  000148  162C               	andwf	(??_jogar+1)^0,f,c
  1398  00014A  502B               	movf	??_jogar^0,w,c
  1399  00014C  0B0F               	andlw	15
  1400  00014E  122C               	iorwf	(??_jogar+1)^0,f,c
  1401  000150  0EF0               	movlw	240
  1402  000152  162B               	andwf	??_jogar^0,f,c
  1403  000154  0E80               	movlw	low _mat_disp
  1404  000156  6E2D               	movwf	(??_jogar+2)^0,c
  1405  000158  0E00               	movlw	high _mat_disp
  1406  00015A  6E2E               	movwf	(??_jogar+3)^0,c
  1407  00015C  0E01               	movlw	1
  1408  00015E  262D               	addwf	(??_jogar+2)^0,f,c
  1409  000160  0E00               	movlw	0
  1410  000162  222E               	addwfc	(??_jogar+3)^0,f,c
  1411  000164  502B               	movf	??_jogar^0,w,c
  1412  000166  262D               	addwf	(??_jogar+2)^0,f,c
  1413  000168  502C               	movf	(??_jogar+1)^0,w,c
  1414  00016A  222E               	addwfc	(??_jogar+3)^0,f,c
  1415  00016C  503B               	movf	jogar@j^0,w,c
  1416  00016E  242D               	addwf	(??_jogar+2)^0,w,c
  1417  000170  6ED9               	movwf	fsr2l,c
  1418  000172  503C               	movf	(jogar@j+1)^0,w,c
  1419  000174  202E               	addwfc	(??_jogar+3)^0,w,c
  1420  000176  6EDA               	movwf	fsr2h,c
  1421  000178  C03D  F02F         	movff	jogar@i,??_jogar+4
  1422  00017C  C03E  F030         	movff	jogar@i+1,??_jogar+5
  1423  000180  3A2F               	swapf	(??_jogar+4)^0,f,c
  1424  000182  3A30               	swapf	(??_jogar+5)^0,f,c
  1425  000184  0EF0               	movlw	240
  1426  000186  1630               	andwf	(??_jogar+5)^0,f,c
  1427  000188  502F               	movf	(??_jogar+4)^0,w,c
  1428  00018A  0B0F               	andlw	15
  1429  00018C  1230               	iorwf	(??_jogar+5)^0,f,c
  1430  00018E  0EF0               	movlw	240
  1431  000190  162F               	andwf	(??_jogar+4)^0,f,c
  1432  000192  0E80               	movlw	low _mat_disp
  1433  000194  6E31               	movwf	(??_jogar+6)^0,c
  1434  000196  0E00               	movlw	high _mat_disp
  1435  000198  6E32               	movwf	(??_jogar+7)^0,c
  1436  00019A  502F               	movf	(??_jogar+4)^0,w,c
  1437  00019C  2631               	addwf	(??_jogar+6)^0,f,c
  1438  00019E  5030               	movf	(??_jogar+5)^0,w,c
  1439  0001A0  2232               	addwfc	(??_jogar+7)^0,f,c
  1440  0001A2  503B               	movf	jogar@j^0,w,c
  1441  0001A4  2431               	addwf	(??_jogar+6)^0,w,c
  1442  0001A6  6EE1               	movwf	fsr1l,c
  1443  0001A8  503C               	movf	(jogar@j+1)^0,w,c
  1444  0001AA  2032               	addwfc	(??_jogar+7)^0,w,c
  1445  0001AC  6EE2               	movwf	fsr1h,c
  1446  0001AE  CFDF FFE7          	movff	indf2,indf1
  1447  0001B2  4A3B               	infsnz	jogar@j^0,f,c
  1448  0001B4  2A3C               	incf	(jogar@j+1)^0,f,c
  1449  0001B6  BE3C               	btfsc	(jogar@j+1)^0,7,c
  1450  0001B8  EFE7  F000         	goto	u1121
  1451  0001BC  503C               	movf	(jogar@j+1)^0,w,c
  1452  0001BE  E109               	bnz	u1120
  1453  0001C0  0E0F               	movlw	15
  1454  0001C2  5C3B               	subwf	jogar@j^0,w,c
  1455  0001C4  A0D8               	btfss	status,0,c
  1456  0001C6  EFE7  F000         	goto	u1121
  1457  0001CA  EFE9  F000         	goto	u1120
  1458  0001CE                     u1121:
  1459  0001CE  EF9D  F000         	goto	l1811
  1460  0001D2                     u1120:
  1461  0001D2                     
  1462                           ;task_manager.c: 77:                 mat_disp[i][15] = ' ';
  1463  0001D2  C03D  F02B         	movff	jogar@i,??_jogar
  1464  0001D6  C03E  F02C         	movff	jogar@i+1,??_jogar+1
  1465  0001DA  3A2B               	swapf	??_jogar^0,f,c
  1466  0001DC  3A2C               	swapf	(??_jogar+1)^0,f,c
  1467  0001DE  0EF0               	movlw	240
  1468  0001E0  162C               	andwf	(??_jogar+1)^0,f,c
  1469  0001E2  502B               	movf	??_jogar^0,w,c
  1470  0001E4  0B0F               	andlw	15
  1471  0001E6  122C               	iorwf	(??_jogar+1)^0,f,c
  1472  0001E8  0EF0               	movlw	240
  1473  0001EA  162B               	andwf	??_jogar^0,f,c
  1474  0001EC  0E8F               	movlw	low (_mat_disp+15)
  1475  0001EE  242B               	addwf	??_jogar^0,w,c
  1476  0001F0  6ED9               	movwf	fsr2l,c
  1477  0001F2  0E00               	movlw	high (_mat_disp+15)
  1478  0001F4  202C               	addwfc	(??_jogar+1)^0,w,c
  1479  0001F6  6EDA               	movwf	fsr2h,c
  1480  0001F8  0E20               	movlw	32
  1481  0001FA  6EDF               	movwf	indf2,c
  1482  0001FC                     
  1483                           ;task_manager.c: 78:             }
  1484  0001FC  4A3D               	infsnz	jogar@i^0,f,c
  1485  0001FE  2A3E               	incf	(jogar@i+1)^0,f,c
  1486  000200  BE3E               	btfsc	(jogar@i+1)^0,7,c
  1487  000202  EF0C  F001         	goto	u1131
  1488  000206  503E               	movf	(jogar@i+1)^0,w,c
  1489  000208  E109               	bnz	u1130
  1490  00020A  0E04               	movlw	4
  1491  00020C  5C3D               	subwf	jogar@i^0,w,c
  1492  00020E  A0D8               	btfss	status,0,c
  1493  000210  EF0C  F001         	goto	u1131
  1494  000214  EF0E  F001         	goto	u1130
  1495  000218                     u1131:
  1496  000218  EF99  F000         	goto	l1805
  1497  00021C                     u1130:
  1498  00021C                     
  1499                           ;task_manager.c: 79:             mat_disp[x][y-1] = ' ';
  1500  00021C  5054               	movf	_x^0,w,c
  1501  00021E  0D10               	mullw	16
  1502  000220  0EFF               	movlw	255
  1503  000222  6E2B               	movwf	??_jogar^0,c
  1504  000224  0EFF               	movlw	255
  1505  000226  6E2C               	movwf	(??_jogar+1)^0,c
  1506  000228  0E80               	movlw	low _mat_disp
  1507  00022A  6E2D               	movwf	(??_jogar+2)^0,c
  1508  00022C  0E00               	movlw	high _mat_disp
  1509  00022E  6E2E               	movwf	(??_jogar+3)^0,c
  1510  000230  502B               	movf	??_jogar^0,w,c
  1511  000232  262D               	addwf	(??_jogar+2)^0,f,c
  1512  000234  502C               	movf	(??_jogar+1)^0,w,c
  1513  000236  222E               	addwfc	(??_jogar+3)^0,f,c
  1514  000238  50F3               	movf	243,w,c
  1515  00023A  262D               	addwf	(??_jogar+2)^0,f,c
  1516  00023C  50F4               	movf	244,w,c
  1517  00023E  222E               	addwfc	(??_jogar+3)^0,f,c
  1518  000240  5042               	movf	_y^0,w,c
  1519  000242  242D               	addwf	(??_jogar+2)^0,w,c
  1520  000244  6ED9               	movwf	fsr2l,c
  1521  000246  0E00               	movlw	0
  1522  000248  202E               	addwfc	(??_jogar+3)^0,w,c
  1523  00024A  6EDA               	movwf	fsr2h,c
  1524  00024C  0E20               	movlw	32
  1525  00024E  6EDF               	movwf	indf2,c
  1526                           
  1527                           ;task_manager.c: 80:             mat_disp[x][y] = '>';
  1528  000250  5054               	movf	_x^0,w,c
  1529  000252  0D10               	mullw	16
  1530  000254  0E80               	movlw	low _mat_disp
  1531  000256  6E2B               	movwf	??_jogar^0,c
  1532  000258  0E00               	movlw	high _mat_disp
  1533  00025A  6E2C               	movwf	(??_jogar+1)^0,c
  1534  00025C  50F3               	movf	243,w,c
  1535  00025E  262B               	addwf	??_jogar^0,f,c
  1536  000260  50F4               	movf	244,w,c
  1537  000262  222C               	addwfc	(??_jogar+1)^0,f,c
  1538  000264  5042               	movf	_y^0,w,c
  1539  000266  242B               	addwf	??_jogar^0,w,c
  1540  000268  6ED9               	movwf	fsr2l,c
  1541  00026A  0E00               	movlw	0
  1542  00026C  202C               	addwfc	(??_jogar+1)^0,w,c
  1543  00026E  6EDA               	movwf	fsr2h,c
  1544  000270  0E3E               	movlw	62
  1545  000272  6EDF               	movwf	indf2,c
  1546  000274                     
  1547                           ;task_manager.c: 83:         if(mat_disp[1][0] == '*' || mat_disp[2][0] == '*' || mat_di
      +                          sp[3][0] == '*')
  1548  000274  0E2A               	movlw	42
  1549  000276  0100               	movlb	0	; () banked
  1550  000278  1990               	xorwf	(_mat_disp+16)& (0+255),w,b
  1551  00027A  B4D8               	btfsc	status,2,c
  1552  00027C  EF42  F001         	goto	u1141
  1553  000280  EF44  F001         	goto	u1140
  1554  000284                     u1141:
  1555  000284  EF56  F001         	goto	l1831
  1556  000288                     u1140:
  1557  000288                     
  1558                           ; BSR set to: 0
  1559  000288  0E2A               	movlw	42
  1560  00028A  19A0               	xorwf	(_mat_disp+32)& (0+255),w,b
  1561  00028C  B4D8               	btfsc	status,2,c
  1562  00028E  EF4B  F001         	goto	u1151
  1563  000292  EF4D  F001         	goto	u1150
  1564  000296                     u1151:
  1565  000296  EF56  F001         	goto	l1831
  1566  00029A                     u1150:
  1567  00029A                     
  1568                           ; BSR set to: 0
  1569  00029A  0E2A               	movlw	42
  1570  00029C  19B0               	xorwf	(_mat_disp+48)& (0+255),w,b
  1571  00029E  A4D8               	btfss	status,2,c
  1572  0002A0  EF54  F001         	goto	u1161
  1573  0002A4  EF56  F001         	goto	u1160
  1574  0002A8                     u1161:
  1575  0002A8  EF88  F001         	goto	l1855
  1576  0002AC                     u1160:
  1577  0002AC                     l1831:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;task_manager.c: 84:         {;task_manager.c: 85:             mat_disp[0][15-1]++;
  1581  0002AC  2B8E               	incf	(_mat_disp+14)& (0+255),f,b
  1582  0002AE                     
  1583                           ; BSR set to: 0
  1584                           ;task_manager.c: 86:             if(mat_disp[0][15-1]==0x3A)
  1585  0002AE  0E3A               	movlw	58
  1586  0002B0  198E               	xorwf	(_mat_disp+14)& (0+255),w,b
  1587  0002B2  A4D8               	btfss	status,2,c
  1588  0002B4  EF5E  F001         	goto	u1171
  1589  0002B8  EF60  F001         	goto	u1170
  1590  0002BC                     u1171:
  1591  0002BC  EF88  F001         	goto	l1855
  1592  0002C0                     u1170:
  1593  0002C0                     
  1594                           ; BSR set to: 0
  1595                           ;task_manager.c: 87:             {;task_manager.c: 88:                 mat_disp[0][15-1]
      +                           = 0x30;
  1596  0002C0  0E30               	movlw	48
  1597  0002C2  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1598  0002C4                     
  1599                           ; BSR set to: 0
  1600                           ;task_manager.c: 89:                 mat_disp[0][14-1]++;
  1601  0002C4  2B8D               	incf	(_mat_disp+13)& (0+255),f,b
  1602  0002C6                     
  1603                           ; BSR set to: 0
  1604                           ;task_manager.c: 91:                 if(mat_disp[0][14-1]==0x3A)
  1605  0002C6  0E3A               	movlw	58
  1606  0002C8  198D               	xorwf	(_mat_disp+13)& (0+255),w,b
  1607  0002CA  A4D8               	btfss	status,2,c
  1608  0002CC  EF6A  F001         	goto	u1181
  1609  0002D0  EF6C  F001         	goto	u1180
  1610  0002D4                     u1181:
  1611  0002D4  EF88  F001         	goto	l1855
  1612  0002D8                     u1180:
  1613  0002D8                     
  1614                           ; BSR set to: 0
  1615                           ;task_manager.c: 92:                 {;task_manager.c: 93:                     mat_disp[
      +                          0][14-1] = 0x30;
  1616  0002D8  0E30               	movlw	48
  1617  0002DA  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1618  0002DC                     
  1619                           ; BSR set to: 0
  1620                           ;task_manager.c: 94:                     mat_disp[0][13-1]++;
  1621  0002DC  2B8C               	incf	(_mat_disp+12)& (0+255),f,b
  1622  0002DE                     
  1623                           ; BSR set to: 0
  1624                           ;task_manager.c: 96:                     if(mat_disp[0][13-1]==0x3A)
  1625  0002DE  0E3A               	movlw	58
  1626  0002E0  198C               	xorwf	(_mat_disp+12)& (0+255),w,b
  1627  0002E2  A4D8               	btfss	status,2,c
  1628  0002E4  EF76  F001         	goto	u1191
  1629  0002E8  EF78  F001         	goto	u1190
  1630  0002EC                     u1191:
  1631  0002EC  EF88  F001         	goto	l1855
  1632  0002F0                     u1190:
  1633  0002F0                     
  1634                           ; BSR set to: 0
  1635                           ;task_manager.c: 97:                     {;task_manager.c: 98:                         m
      +                          at_disp[0][13-1] = 0x30;
  1636  0002F0  0E30               	movlw	48
  1637  0002F2  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1638  0002F4                     
  1639                           ; BSR set to: 0
  1640                           ;task_manager.c: 99:                         mat_disp[0][12-1]++;
  1641  0002F4  2B8B               	incf	(_mat_disp+11)& (0+255),f,b
  1642  0002F6                     
  1643                           ; BSR set to: 0
  1644                           ;task_manager.c: 101:                         if(mat_disp[0][12-1]==0x3A)
  1645  0002F6  0E3A               	movlw	58
  1646  0002F8  198B               	xorwf	(_mat_disp+11)& (0+255),w,b
  1647  0002FA  A4D8               	btfss	status,2,c
  1648  0002FC  EF82  F001         	goto	u1201
  1649  000300  EF84  F001         	goto	u1200
  1650  000304                     u1201:
  1651  000304  EF88  F001         	goto	l215
  1652  000308                     u1200:
  1653  000308                     
  1654                           ; BSR set to: 0
  1655                           ;task_manager.c: 102:                             mat_disp[0][12-1] = 0x30;
  1656  000308  0E30               	movlw	48
  1657  00030A  6F8B               	movwf	(_mat_disp+11)& (0+255),b
  1658  00030C  EF88  F001         	goto	l1855
  1659  000310                     l215:
  1660  000310                     l1855:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;task_manager.c: 109:         print_mat(lcd);
  1664  000310  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1665  000314  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1666  000318  EC07  F007         	call	_print_mat	;wreg free
  1667  00031C                     
  1668                           ;task_manager.c: 112:         if(mat_disp[x][y] == '>' && mat_disp[x][y+1] == '*')
  1669  00031C  5054               	movf	_x^0,w,c
  1670  00031E  0D10               	mullw	16
  1671  000320  0E80               	movlw	low _mat_disp
  1672  000322  6E2B               	movwf	??_jogar^0,c
  1673  000324  0E00               	movlw	high _mat_disp
  1674  000326  6E2C               	movwf	(??_jogar+1)^0,c
  1675  000328  50F3               	movf	243,w,c
  1676  00032A  262B               	addwf	??_jogar^0,f,c
  1677  00032C  50F4               	movf	244,w,c
  1678  00032E  222C               	addwfc	(??_jogar+1)^0,f,c
  1679  000330  5042               	movf	_y^0,w,c
  1680  000332  242B               	addwf	??_jogar^0,w,c
  1681  000334  6ED9               	movwf	fsr2l,c
  1682  000336  0E00               	movlw	0
  1683  000338  202C               	addwfc	(??_jogar+1)^0,w,c
  1684  00033A  6EDA               	movwf	fsr2h,c
  1685  00033C  0E3E               	movlw	62
  1686  00033E  18DE               	xorwf	postinc2,w,c
  1687  000340  A4D8               	btfss	status,2,c
  1688  000342  EFA5  F001         	goto	u1211
  1689  000346  EFA7  F001         	goto	u1210
  1690  00034A                     u1211:
  1691  00034A  EFC8  F001         	goto	l1863
  1692  00034E                     u1210:
  1693  00034E  5054               	movf	_x^0,w,c
  1694  000350  0D10               	mullw	16
  1695  000352  0E80               	movlw	low _mat_disp
  1696  000354  6E2B               	movwf	??_jogar^0,c
  1697  000356  0E00               	movlw	high _mat_disp
  1698  000358  6E2C               	movwf	(??_jogar+1)^0,c
  1699  00035A  0E01               	movlw	1
  1700  00035C  262B               	addwf	??_jogar^0,f,c
  1701  00035E  0E00               	movlw	0
  1702  000360  222C               	addwfc	(??_jogar+1)^0,f,c
  1703  000362  50F3               	movf	243,w,c
  1704  000364  262B               	addwf	??_jogar^0,f,c
  1705  000366  50F4               	movf	244,w,c
  1706  000368  222C               	addwfc	(??_jogar+1)^0,f,c
  1707  00036A  5042               	movf	_y^0,w,c
  1708  00036C  242B               	addwf	??_jogar^0,w,c
  1709  00036E  6ED9               	movwf	fsr2l,c
  1710  000370  0E00               	movlw	0
  1711  000372  202C               	addwfc	(??_jogar+1)^0,w,c
  1712  000374  6EDA               	movwf	fsr2h,c
  1713  000376  0E2A               	movlw	42
  1714  000378  18DE               	xorwf	postinc2,w,c
  1715  00037A  A4D8               	btfss	status,2,c
  1716  00037C  EFC2  F001         	goto	u1221
  1717  000380  EFC4  F001         	goto	u1220
  1718  000384                     u1221:
  1719  000384  EFC8  F001         	goto	l1863
  1720  000388                     u1220:
  1721  000388                     
  1722                           ;task_manager.c: 113:             bateu = 1;
  1723  000388  0E00               	movlw	0
  1724  00038A  6E3A               	movwf	(jogar@bateu+1)^0,c
  1725  00038C  0E01               	movlw	1
  1726  00038E  6E39               	movwf	jogar@bateu^0,c
  1727  000390                     l1863:
  1728                           
  1729                           ;task_manager.c: 115:         if((botoes.U) && (x > 1)){
  1730  000390  A049               	btfss	_botoes^0,0,c
  1731  000392  EFCD  F001         	goto	u1231
  1732  000396  EFCF  F001         	goto	u1230
  1733  00039A                     u1231:
  1734  00039A  EF45  F002         	goto	l1881
  1735  00039E                     u1230:
  1736  00039E  0E01               	movlw	1
  1737  0003A0  6454               	cpfsgt	_x^0,c
  1738  0003A2  EFD5  F001         	goto	u1241
  1739  0003A6  EFD7  F001         	goto	u1240
  1740  0003AA                     u1241:
  1741  0003AA  EF45  F002         	goto	l1881
  1742  0003AE                     u1240:
  1743  0003AE                     
  1744                           ;task_manager.c: 116:             if(mat_disp[x][y] == '>' && mat_disp[x-1][y] == '*')
  1745  0003AE  5054               	movf	_x^0,w,c
  1746  0003B0  0D10               	mullw	16
  1747  0003B2  0E80               	movlw	low _mat_disp
  1748  0003B4  6E2B               	movwf	??_jogar^0,c
  1749  0003B6  0E00               	movlw	high _mat_disp
  1750  0003B8  6E2C               	movwf	(??_jogar+1)^0,c
  1751  0003BA  50F3               	movf	243,w,c
  1752  0003BC  262B               	addwf	??_jogar^0,f,c
  1753  0003BE  50F4               	movf	244,w,c
  1754  0003C0  222C               	addwfc	(??_jogar+1)^0,f,c
  1755  0003C2  5042               	movf	_y^0,w,c
  1756  0003C4  242B               	addwf	??_jogar^0,w,c
  1757  0003C6  6ED9               	movwf	fsr2l,c
  1758  0003C8  0E00               	movlw	0
  1759  0003CA  202C               	addwfc	(??_jogar+1)^0,w,c
  1760  0003CC  6EDA               	movwf	fsr2h,c
  1761  0003CE  0E3E               	movlw	62
  1762  0003D0  18DE               	xorwf	postinc2,w,c
  1763  0003D2  A4D8               	btfss	status,2,c
  1764  0003D4  EFEE  F001         	goto	u1251
  1765  0003D8  EFF0  F001         	goto	u1250
  1766  0003DC                     u1251:
  1767  0003DC  EF1F  F002         	goto	l1873
  1768  0003E0                     u1250:
  1769  0003E0  5054               	movf	_x^0,w,c
  1770  0003E2  6E2B               	movwf	??_jogar^0,c
  1771  0003E4  6A2C               	clrf	(??_jogar+1)^0,c
  1772  0003E6  3A2B               	swapf	??_jogar^0,f,c
  1773  0003E8  3A2C               	swapf	(??_jogar+1)^0,f,c
  1774  0003EA  0EF0               	movlw	240
  1775  0003EC  162C               	andwf	(??_jogar+1)^0,f,c
  1776  0003EE  502B               	movf	??_jogar^0,w,c
  1777  0003F0  0B0F               	andlw	15
  1778  0003F2  122C               	iorwf	(??_jogar+1)^0,f,c
  1779  0003F4  0EF0               	movlw	240
  1780  0003F6  162B               	andwf	??_jogar^0,f,c
  1781  0003F8  0EF0               	movlw	240
  1782  0003FA  6E2D               	movwf	(??_jogar+2)^0,c
  1783  0003FC  0EFF               	movlw	255
  1784  0003FE  6E2E               	movwf	(??_jogar+3)^0,c
  1785  000400  0E80               	movlw	low _mat_disp
  1786  000402  6E2F               	movwf	(??_jogar+4)^0,c
  1787  000404  0E00               	movlw	high _mat_disp
  1788  000406  6E30               	movwf	(??_jogar+5)^0,c
  1789  000408  502D               	movf	(??_jogar+2)^0,w,c
  1790  00040A  262F               	addwf	(??_jogar+4)^0,f,c
  1791  00040C  502E               	movf	(??_jogar+3)^0,w,c
  1792  00040E  2230               	addwfc	(??_jogar+5)^0,f,c
  1793  000410  502B               	movf	??_jogar^0,w,c
  1794  000412  262F               	addwf	(??_jogar+4)^0,f,c
  1795  000414  502C               	movf	(??_jogar+1)^0,w,c
  1796  000416  2230               	addwfc	(??_jogar+5)^0,f,c
  1797  000418  5042               	movf	_y^0,w,c
  1798  00041A  242F               	addwf	(??_jogar+4)^0,w,c
  1799  00041C  6ED9               	movwf	fsr2l,c
  1800  00041E  0E00               	movlw	0
  1801  000420  2030               	addwfc	(??_jogar+5)^0,w,c
  1802  000422  6EDA               	movwf	fsr2h,c
  1803  000424  0E2A               	movlw	42
  1804  000426  18DE               	xorwf	postinc2,w,c
  1805  000428  A4D8               	btfss	status,2,c
  1806  00042A  EF19  F002         	goto	u1261
  1807  00042E  EF1B  F002         	goto	u1260
  1808  000432                     u1261:
  1809  000432  EF1F  F002         	goto	l1873
  1810  000436                     u1260:
  1811  000436                     
  1812                           ;task_manager.c: 117:                 bateu = 1;
  1813  000436  0E00               	movlw	0
  1814  000438  6E3A               	movwf	(jogar@bateu+1)^0,c
  1815  00043A  0E01               	movlw	1
  1816  00043C  6E39               	movwf	jogar@bateu^0,c
  1817  00043E                     l1873:
  1818                           
  1819                           ;task_manager.c: 118:             mat_disp[x][y] = ' ';
  1820  00043E  5054               	movf	_x^0,w,c
  1821  000440  0D10               	mullw	16
  1822  000442  0E80               	movlw	low _mat_disp
  1823  000444  6E2B               	movwf	??_jogar^0,c
  1824  000446  0E00               	movlw	high _mat_disp
  1825  000448  6E2C               	movwf	(??_jogar+1)^0,c
  1826  00044A  50F3               	movf	243,w,c
  1827  00044C  262B               	addwf	??_jogar^0,f,c
  1828  00044E  50F4               	movf	244,w,c
  1829  000450  222C               	addwfc	(??_jogar+1)^0,f,c
  1830  000452  5042               	movf	_y^0,w,c
  1831  000454  242B               	addwf	??_jogar^0,w,c
  1832  000456  6ED9               	movwf	fsr2l,c
  1833  000458  0E00               	movlw	0
  1834  00045A  202C               	addwfc	(??_jogar+1)^0,w,c
  1835  00045C  6EDA               	movwf	fsr2h,c
  1836  00045E  0E20               	movlw	32
  1837  000460  6EDF               	movwf	indf2,c
  1838  000462                     
  1839                           ;task_manager.c: 119:             x--;
  1840  000462  0654               	decf	_x^0,f,c
  1841  000464                     
  1842                           ;task_manager.c: 120:             botoes.U = 0;
  1843  000464  9049               	bcf	_botoes^0,0,c
  1844  000466                     
  1845                           ;task_manager.c: 121:             mat_disp[x][y] = '>';
  1846  000466  5054               	movf	_x^0,w,c
  1847  000468  0D10               	mullw	16
  1848  00046A  0E80               	movlw	low _mat_disp
  1849  00046C  6E2B               	movwf	??_jogar^0,c
  1850  00046E  0E00               	movlw	high _mat_disp
  1851  000470  6E2C               	movwf	(??_jogar+1)^0,c
  1852  000472  50F3               	movf	243,w,c
  1853  000474  262B               	addwf	??_jogar^0,f,c
  1854  000476  50F4               	movf	244,w,c
  1855  000478  222C               	addwfc	(??_jogar+1)^0,f,c
  1856  00047A  5042               	movf	_y^0,w,c
  1857  00047C  242B               	addwf	??_jogar^0,w,c
  1858  00047E  6ED9               	movwf	fsr2l,c
  1859  000480  0E00               	movlw	0
  1860  000482  202C               	addwfc	(??_jogar+1)^0,w,c
  1861  000484  6EDA               	movwf	fsr2h,c
  1862  000486  0E3E               	movlw	62
  1863  000488  6EDF               	movwf	indf2,c
  1864  00048A                     l1881:
  1865                           
  1866                           ;task_manager.c: 123:         if((botoes.D) && (x < 3)){
  1867  00048A  A249               	btfss	_botoes^0,1,c
  1868  00048C  EF4A  F002         	goto	u1271
  1869  000490  EF4C  F002         	goto	u1270
  1870  000494                     u1271:
  1871  000494  EFBE  F002         	goto	l1899
  1872  000498                     u1270:
  1873  000498  0E03               	movlw	3
  1874  00049A  6054               	cpfslt	_x^0,c
  1875  00049C  EF52  F002         	goto	u1281
  1876  0004A0  EF54  F002         	goto	u1280
  1877  0004A4                     u1281:
  1878  0004A4  EFBE  F002         	goto	l1899
  1879  0004A8                     u1280:
  1880  0004A8                     
  1881                           ;task_manager.c: 124:             if(mat_disp[x][y] == '>' && mat_disp[x+1][y] == '*')
  1882  0004A8  5054               	movf	_x^0,w,c
  1883  0004AA  0D10               	mullw	16
  1884  0004AC  0E80               	movlw	low _mat_disp
  1885  0004AE  6E2B               	movwf	??_jogar^0,c
  1886  0004B0  0E00               	movlw	high _mat_disp
  1887  0004B2  6E2C               	movwf	(??_jogar+1)^0,c
  1888  0004B4  50F3               	movf	243,w,c
  1889  0004B6  262B               	addwf	??_jogar^0,f,c
  1890  0004B8  50F4               	movf	244,w,c
  1891  0004BA  222C               	addwfc	(??_jogar+1)^0,f,c
  1892  0004BC  5042               	movf	_y^0,w,c
  1893  0004BE  242B               	addwf	??_jogar^0,w,c
  1894  0004C0  6ED9               	movwf	fsr2l,c
  1895  0004C2  0E00               	movlw	0
  1896  0004C4  202C               	addwfc	(??_jogar+1)^0,w,c
  1897  0004C6  6EDA               	movwf	fsr2h,c
  1898  0004C8  0E3E               	movlw	62
  1899  0004CA  18DE               	xorwf	postinc2,w,c
  1900  0004CC  A4D8               	btfss	status,2,c
  1901  0004CE  EF6B  F002         	goto	u1291
  1902  0004D2  EF6D  F002         	goto	u1290
  1903  0004D6                     u1291:
  1904  0004D6  EF98  F002         	goto	l1891
  1905  0004DA                     u1290:
  1906  0004DA  5054               	movf	_x^0,w,c
  1907  0004DC  6E2B               	movwf	??_jogar^0,c
  1908  0004DE  6A2C               	clrf	(??_jogar+1)^0,c
  1909  0004E0  3A2B               	swapf	??_jogar^0,f,c
  1910  0004E2  3A2C               	swapf	(??_jogar+1)^0,f,c
  1911  0004E4  0EF0               	movlw	240
  1912  0004E6  162C               	andwf	(??_jogar+1)^0,f,c
  1913  0004E8  502B               	movf	??_jogar^0,w,c
  1914  0004EA  0B0F               	andlw	15
  1915  0004EC  122C               	iorwf	(??_jogar+1)^0,f,c
  1916  0004EE  0EF0               	movlw	240
  1917  0004F0  162B               	andwf	??_jogar^0,f,c
  1918  0004F2  0E80               	movlw	low _mat_disp
  1919  0004F4  6E2D               	movwf	(??_jogar+2)^0,c
  1920  0004F6  0E00               	movlw	high _mat_disp
  1921  0004F8  6E2E               	movwf	(??_jogar+3)^0,c
  1922  0004FA  0E10               	movlw	16
  1923  0004FC  262D               	addwf	(??_jogar+2)^0,f,c
  1924  0004FE  0E00               	movlw	0
  1925  000500  222E               	addwfc	(??_jogar+3)^0,f,c
  1926  000502  502B               	movf	??_jogar^0,w,c
  1927  000504  262D               	addwf	(??_jogar+2)^0,f,c
  1928  000506  502C               	movf	(??_jogar+1)^0,w,c
  1929  000508  222E               	addwfc	(??_jogar+3)^0,f,c
  1930  00050A  5042               	movf	_y^0,w,c
  1931  00050C  242D               	addwf	(??_jogar+2)^0,w,c
  1932  00050E  6ED9               	movwf	fsr2l,c
  1933  000510  0E00               	movlw	0
  1934  000512  202E               	addwfc	(??_jogar+3)^0,w,c
  1935  000514  6EDA               	movwf	fsr2h,c
  1936  000516  0E2A               	movlw	42
  1937  000518  18DE               	xorwf	postinc2,w,c
  1938  00051A  A4D8               	btfss	status,2,c
  1939  00051C  EF92  F002         	goto	u1301
  1940  000520  EF94  F002         	goto	u1300
  1941  000524                     u1301:
  1942  000524  EF98  F002         	goto	l1891
  1943  000528                     u1300:
  1944  000528                     
  1945                           ;task_manager.c: 125:                 bateu = 1;
  1946  000528  0E00               	movlw	0
  1947  00052A  6E3A               	movwf	(jogar@bateu+1)^0,c
  1948  00052C  0E01               	movlw	1
  1949  00052E  6E39               	movwf	jogar@bateu^0,c
  1950  000530                     l1891:
  1951                           
  1952                           ;task_manager.c: 126:             mat_disp[x][y] = ' ';
  1953  000530  5054               	movf	_x^0,w,c
  1954  000532  0D10               	mullw	16
  1955  000534  0E80               	movlw	low _mat_disp
  1956  000536  6E2B               	movwf	??_jogar^0,c
  1957  000538  0E00               	movlw	high _mat_disp
  1958  00053A  6E2C               	movwf	(??_jogar+1)^0,c
  1959  00053C  50F3               	movf	243,w,c
  1960  00053E  262B               	addwf	??_jogar^0,f,c
  1961  000540  50F4               	movf	244,w,c
  1962  000542  222C               	addwfc	(??_jogar+1)^0,f,c
  1963  000544  5042               	movf	_y^0,w,c
  1964  000546  242B               	addwf	??_jogar^0,w,c
  1965  000548  6ED9               	movwf	fsr2l,c
  1966  00054A  0E00               	movlw	0
  1967  00054C  202C               	addwfc	(??_jogar+1)^0,w,c
  1968  00054E  6EDA               	movwf	fsr2h,c
  1969  000550  0E20               	movlw	32
  1970  000552  6EDF               	movwf	indf2,c
  1971  000554                     
  1972                           ;task_manager.c: 127:             x++;
  1973  000554  2A54               	incf	_x^0,f,c
  1974  000556                     
  1975                           ;task_manager.c: 128:             botoes.D = 0;
  1976  000556  9249               	bcf	_botoes^0,1,c
  1977  000558                     
  1978                           ;task_manager.c: 129:             mat_disp[x][y] = '>';
  1979  000558  5054               	movf	_x^0,w,c
  1980  00055A  0D10               	mullw	16
  1981  00055C  0E80               	movlw	low _mat_disp
  1982  00055E  6E2B               	movwf	??_jogar^0,c
  1983  000560  0E00               	movlw	high _mat_disp
  1984  000562  6E2C               	movwf	(??_jogar+1)^0,c
  1985  000564  50F3               	movf	243,w,c
  1986  000566  262B               	addwf	??_jogar^0,f,c
  1987  000568  50F4               	movf	244,w,c
  1988  00056A  222C               	addwfc	(??_jogar+1)^0,f,c
  1989  00056C  5042               	movf	_y^0,w,c
  1990  00056E  242B               	addwf	??_jogar^0,w,c
  1991  000570  6ED9               	movwf	fsr2l,c
  1992  000572  0E00               	movlw	0
  1993  000574  202C               	addwfc	(??_jogar+1)^0,w,c
  1994  000576  6EDA               	movwf	fsr2h,c
  1995  000578  0E3E               	movlw	62
  1996  00057A  6EDF               	movwf	indf2,c
  1997  00057C                     l1899:
  1998                           
  1999                           ;task_manager.c: 131:         if((botoes.R) && (y < 15)){
  2000  00057C  A649               	btfss	_botoes^0,3,c
  2001  00057E  EFC3  F002         	goto	u1311
  2002  000582  EFC5  F002         	goto	u1310
  2003  000586                     u1311:
  2004  000586  EFF3  F002         	goto	l1911
  2005  00058A                     u1310:
  2006  00058A  0E0F               	movlw	15
  2007  00058C  6042               	cpfslt	_y^0,c
  2008  00058E  EFCB  F002         	goto	u1321
  2009  000592  EFCD  F002         	goto	u1320
  2010  000596                     u1321:
  2011  000596  EFF3  F002         	goto	l1911
  2012  00059A                     u1320:
  2013  00059A                     
  2014                           ;task_manager.c: 132:             mat_disp[x][y] = ' ';
  2015  00059A  5054               	movf	_x^0,w,c
  2016  00059C  0D10               	mullw	16
  2017  00059E  0E80               	movlw	low _mat_disp
  2018  0005A0  6E2B               	movwf	??_jogar^0,c
  2019  0005A2  0E00               	movlw	high _mat_disp
  2020  0005A4  6E2C               	movwf	(??_jogar+1)^0,c
  2021  0005A6  50F3               	movf	243,w,c
  2022  0005A8  262B               	addwf	??_jogar^0,f,c
  2023  0005AA  50F4               	movf	244,w,c
  2024  0005AC  222C               	addwfc	(??_jogar+1)^0,f,c
  2025  0005AE  5042               	movf	_y^0,w,c
  2026  0005B0  242B               	addwf	??_jogar^0,w,c
  2027  0005B2  6ED9               	movwf	fsr2l,c
  2028  0005B4  0E00               	movlw	0
  2029  0005B6  202C               	addwfc	(??_jogar+1)^0,w,c
  2030  0005B8  6EDA               	movwf	fsr2h,c
  2031  0005BA  0E20               	movlw	32
  2032  0005BC  6EDF               	movwf	indf2,c
  2033  0005BE                     
  2034                           ;task_manager.c: 133:             y++;
  2035  0005BE  2A42               	incf	_y^0,f,c
  2036  0005C0                     
  2037                           ;task_manager.c: 134:             botoes.R = 0;
  2038  0005C0  9649               	bcf	_botoes^0,3,c
  2039  0005C2                     
  2040                           ;task_manager.c: 135:             mat_disp[x][y] = '>';
  2041  0005C2  5054               	movf	_x^0,w,c
  2042  0005C4  0D10               	mullw	16
  2043  0005C6  0E80               	movlw	low _mat_disp
  2044  0005C8  6E2B               	movwf	??_jogar^0,c
  2045  0005CA  0E00               	movlw	high _mat_disp
  2046  0005CC  6E2C               	movwf	(??_jogar+1)^0,c
  2047  0005CE  50F3               	movf	243,w,c
  2048  0005D0  262B               	addwf	??_jogar^0,f,c
  2049  0005D2  50F4               	movf	244,w,c
  2050  0005D4  222C               	addwfc	(??_jogar+1)^0,f,c
  2051  0005D6  5042               	movf	_y^0,w,c
  2052  0005D8  242B               	addwf	??_jogar^0,w,c
  2053  0005DA  6ED9               	movwf	fsr2l,c
  2054  0005DC  0E00               	movlw	0
  2055  0005DE  202C               	addwfc	(??_jogar+1)^0,w,c
  2056  0005E0  6EDA               	movwf	fsr2h,c
  2057  0005E2  0E3E               	movlw	62
  2058  0005E4  6EDF               	movwf	indf2,c
  2059  0005E6                     l1911:
  2060                           
  2061                           ;task_manager.c: 137:         if((botoes.L) && (y > 0)){
  2062  0005E6  A449               	btfss	_botoes^0,2,c
  2063  0005E8  EFF8  F002         	goto	u1331
  2064  0005EC  EFFA  F002         	goto	u1330
  2065  0005F0                     u1331:
  2066  0005F0  EF28  F003         	goto	l1923
  2067  0005F4                     u1330:
  2068  0005F4  5042               	movf	_y^0,w,c
  2069  0005F6  B4D8               	btfsc	status,2,c
  2070  0005F8  EF00  F003         	goto	u1341
  2071  0005FC  EF02  F003         	goto	u1340
  2072  000600                     u1341:
  2073  000600  EF28  F003         	goto	l1923
  2074  000604                     u1340:
  2075  000604                     
  2076                           ;task_manager.c: 138:             mat_disp[x][y] = ' ';
  2077  000604  5054               	movf	_x^0,w,c
  2078  000606  0D10               	mullw	16
  2079  000608  0E80               	movlw	low _mat_disp
  2080  00060A  6E2B               	movwf	??_jogar^0,c
  2081  00060C  0E00               	movlw	high _mat_disp
  2082  00060E  6E2C               	movwf	(??_jogar+1)^0,c
  2083  000610  50F3               	movf	243,w,c
  2084  000612  262B               	addwf	??_jogar^0,f,c
  2085  000614  50F4               	movf	244,w,c
  2086  000616  222C               	addwfc	(??_jogar+1)^0,f,c
  2087  000618  5042               	movf	_y^0,w,c
  2088  00061A  242B               	addwf	??_jogar^0,w,c
  2089  00061C  6ED9               	movwf	fsr2l,c
  2090  00061E  0E00               	movlw	0
  2091  000620  202C               	addwfc	(??_jogar+1)^0,w,c
  2092  000622  6EDA               	movwf	fsr2h,c
  2093  000624  0E20               	movlw	32
  2094  000626  6EDF               	movwf	indf2,c
  2095  000628                     
  2096                           ;task_manager.c: 139:             y--;
  2097  000628  0642               	decf	_y^0,f,c
  2098  00062A                     
  2099                           ;task_manager.c: 140:             botoes.L = 0;
  2100  00062A  9449               	bcf	_botoes^0,2,c
  2101  00062C                     
  2102                           ;task_manager.c: 141:             mat_disp[x][y] = '>';
  2103  00062C  5054               	movf	_x^0,w,c
  2104  00062E  0D10               	mullw	16
  2105  000630  0E80               	movlw	low _mat_disp
  2106  000632  6E2B               	movwf	??_jogar^0,c
  2107  000634  0E00               	movlw	high _mat_disp
  2108  000636  6E2C               	movwf	(??_jogar+1)^0,c
  2109  000638  50F3               	movf	243,w,c
  2110  00063A  262B               	addwf	??_jogar^0,f,c
  2111  00063C  50F4               	movf	244,w,c
  2112  00063E  222C               	addwfc	(??_jogar+1)^0,f,c
  2113  000640  5042               	movf	_y^0,w,c
  2114  000642  242B               	addwf	??_jogar^0,w,c
  2115  000644  6ED9               	movwf	fsr2l,c
  2116  000646  0E00               	movlw	0
  2117  000648  202C               	addwfc	(??_jogar+1)^0,w,c
  2118  00064A  6EDA               	movwf	fsr2h,c
  2119  00064C  0E3E               	movlw	62
  2120  00064E  6EDF               	movwf	indf2,c
  2121  000650                     l1923:
  2122                           
  2123                           ;task_manager.c: 67:     while(!botoes.Esc && bateu == 0){
  2124  000650  BA49               	btfsc	_botoes^0,5,c
  2125  000652  EF2D  F003         	goto	u1351
  2126  000656  EF2F  F003         	goto	u1350
  2127  00065A                     u1351:
  2128  00065A  EF38  F003         	goto	l228
  2129  00065E                     u1350:
  2130  00065E  5039               	movf	jogar@bateu^0,w,c
  2131  000660  103A               	iorwf	(jogar@bateu+1)^0,w,c
  2132  000662  B4D8               	btfsc	status,2,c
  2133  000664  EF36  F003         	goto	u1361
  2134  000668  EF38  F003         	goto	u1360
  2135  00066C                     u1361:
  2136  00066C  EF62  F000         	goto	l1791
  2137  000670                     u1360:
  2138  000670                     l228:
  2139                           
  2140                           ;task_manager.c: 145:     char pont4 = mat_disp[0][14], pont3 = mat_disp[0][13], pont2 =
      +                           mat_disp[0][12], pont1 = mat_disp[0][11];
  2141  000670  C08E  F035         	movff	_mat_disp+14,jogar@pont4
  2142  000674  C08D  F036         	movff	_mat_disp+13,jogar@pont3
  2143  000678  C08C  F037         	movff	_mat_disp+12,jogar@pont2
  2144  00067C  C08B  F038         	movff	_mat_disp+11,jogar@pont1
  2145  000680                     
  2146                           ;task_manager.c: 146:     if(bateu == 1){
  2147  000680  0439               	decf	jogar@bateu^0,w,c
  2148  000682  103A               	iorwf	(jogar@bateu+1)^0,w,c
  2149  000684  A4D8               	btfss	status,2,c
  2150  000686  EF47  F003         	goto	u1371
  2151  00068A  EF49  F003         	goto	u1370
  2152  00068E                     u1371:
  2153  00068E  EF86  F003         	goto	l1941
  2154  000692                     u1370:
  2155  000692                     
  2156                           ;task_manager.c: 147:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  2157  000692  0E80               	movlw	low _mat_disp
  2158  000694  6E01               	movwf	strcpy@dest^0,c
  2159  000696  0E00               	movlw	high _mat_disp
  2160  000698  6E02               	movwf	(strcpy@dest+1)^0,c
  2161  00069A  0E3A               	movlw	low STR_13
  2162  00069C  6E03               	movwf	strcpy@src^0,c
  2163  00069E  0E7F               	movlw	high STR_13
  2164  0006A0  6E04               	movwf	(strcpy@src+1)^0,c
  2165  0006A2  ECA0  F009         	call	_strcpy	;wreg free
  2166                           
  2167                           ;task_manager.c: 148:             strcpy(mat_disp[1], "SCORE:          ");
  2168  0006A6  0E90               	movlw	low (_mat_disp+16)
  2169  0006A8  6E01               	movwf	strcpy@dest^0,c
  2170  0006AA  0E00               	movlw	high (_mat_disp+16)
  2171  0006AC  6E02               	movwf	(strcpy@dest+1)^0,c
  2172  0006AE  0EF6               	movlw	low STR_14
  2173  0006B0  6E03               	movwf	strcpy@src^0,c
  2174  0006B2  0E7E               	movlw	high STR_14
  2175  0006B4  6E04               	movwf	(strcpy@src+1)^0,c
  2176  0006B6  ECA0  F009         	call	_strcpy	;wreg free
  2177                           
  2178                           ;task_manager.c: 149:             strcpy(mat_disp[2], "APERTE ESC      ");
  2179  0006BA  0EA0               	movlw	low (_mat_disp+32)
  2180  0006BC  6E01               	movwf	strcpy@dest^0,c
  2181  0006BE  0E00               	movlw	high (_mat_disp+32)
  2182  0006C0  6E02               	movwf	(strcpy@dest+1)^0,c
  2183  0006C2  0E18               	movlw	low STR_15
  2184  0006C4  6E03               	movwf	strcpy@src^0,c
  2185  0006C6  0E7F               	movlw	high STR_15
  2186  0006C8  6E04               	movwf	(strcpy@src+1)^0,c
  2187  0006CA  ECA0  F009         	call	_strcpy	;wreg free
  2188                           
  2189                           ;task_manager.c: 150:             strcpy(mat_disp[3], "PARA SAIR       ");
  2190  0006CE  0EB0               	movlw	low (_mat_disp+48)
  2191  0006D0  6E01               	movwf	strcpy@dest^0,c
  2192  0006D2  0E00               	movlw	high (_mat_disp+48)
  2193  0006D4  6E02               	movwf	(strcpy@dest+1)^0,c
  2194  0006D6  0E07               	movlw	low STR_16
  2195  0006D8  6E03               	movwf	strcpy@src^0,c
  2196  0006DA  0E7F               	movlw	high STR_16
  2197  0006DC  6E04               	movwf	(strcpy@src+1)^0,c
  2198  0006DE  ECA0  F009         	call	_strcpy	;wreg free
  2199  0006E2                     
  2200                           ;task_manager.c: 151:             mat_disp[1][6] = pont1;
  2201  0006E2  C038  F096         	movff	jogar@pont1,_mat_disp+22
  2202  0006E6                     
  2203                           ;task_manager.c: 152:             mat_disp[1][7] = pont2;
  2204  0006E6  C037  F097         	movff	jogar@pont2,_mat_disp+23
  2205  0006EA                     
  2206                           ;task_manager.c: 153:             mat_disp[1][8] = pont3;
  2207  0006EA  C036  F098         	movff	jogar@pont3,_mat_disp+24
  2208  0006EE                     
  2209                           ;task_manager.c: 154:             mat_disp[1][9] = pont4;
  2210  0006EE  C035  F099         	movff	jogar@pont4,_mat_disp+25
  2211  0006F2                     
  2212                           ;task_manager.c: 155:             print_mat(lcd);
  2213  0006F2  C029  F010         	movff	jogar@lcd,print_mat@lcd
  2214  0006F6  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  2215  0006FA  EC07  F007         	call	_print_mat	;wreg free
  2216  0006FE                     l230:
  2217  0006FE  AA49               	btfss	_botoes^0,5,c
  2218  000700  EF84  F003         	goto	u1381
  2219  000704  EF86  F003         	goto	u1380
  2220  000708                     u1381:
  2221  000708  EF7F  F003         	goto	l230
  2222  00070C                     u1380:
  2223  00070C                     l1941:
  2224                           
  2225                           ;task_manager.c: 159:     x = 1;
  2226  00070C  0E01               	movlw	1
  2227  00070E  6E54               	movwf	_x^0,c
  2228                           
  2229                           ;task_manager.c: 160:     y = 0;
  2230  000710  0E00               	movlw	0
  2231  000712  6E42               	movwf	_y^0,c
  2232                           
  2233                           ;task_manager.c: 161:     contador = 0;
  2234  000714  0E00               	movlw	0
  2235  000716  6E41               	movwf	_contador^0,c
  2236  000718  0012               	return		;funcret
  2237  00071A                     __end_of_jogar:
  2238                           	opt callstack 0
  2239                           
  2240 ;; *************** function _time *****************
  2241 ;; Defined at:
  2242 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  t               2    0[COMRAM] PTR long long 
  2245 ;;		 -> NULL(0), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  8    0[COMRAM] long long 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2257 ;;      Params:         8       0       0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0
  2260 ;;      Totals:         8       0       0       0       0       0       0
  2261 ;;Total ram usage:        8 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    2
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_jogar
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text4
  2272  0012B0                     __ptext4:
  2273                           	opt callstack 0
  2274  0012B0                     _time:
  2275                           	opt callstack 26
  2276  0012B0  5001               	movf	time@t^0,w,c
  2277  0012B2  1002               	iorwf	(time@t+1)^0,w,c
  2278  0012B4  B4D8               	btfsc	status,2,c
  2279  0012B6  EF5F  F009         	goto	u981
  2280  0012BA  EF61  F009         	goto	u980
  2281  0012BE                     u981:
  2282  0012BE  EF75  F009         	goto	l1687
  2283  0012C2                     u980:
  2284  0012C2  C001  FFD9         	movff	time@t,fsr2l
  2285  0012C6  C002  FFDA         	movff	time@t+1,fsr2h
  2286  0012CA  0EFF               	movlw	255
  2287  0012CC  6EDE               	movwf	postinc2,c
  2288  0012CE  0EFF               	movlw	255
  2289  0012D0  6EDE               	movwf	postinc2,c
  2290  0012D2  0EFF               	movlw	255
  2291  0012D4  6EDE               	movwf	postinc2,c
  2292  0012D6  0EFF               	movlw	255
  2293  0012D8  6EDE               	movwf	postinc2,c
  2294  0012DA  0EFF               	movlw	255
  2295  0012DC  6EDE               	movwf	postinc2,c
  2296  0012DE  0EFF               	movlw	255
  2297  0012E0  6EDE               	movwf	postinc2,c
  2298  0012E2  0EFF               	movlw	255
  2299  0012E4  6EDE               	movwf	postinc2,c
  2300  0012E6  0EFF               	movlw	255
  2301  0012E8  6EDD               	movwf	postdec2,c
  2302  0012EA                     l1687:
  2303  0012EA  6801               	setf	?_time^0,c
  2304  0012EC  6802               	setf	(?_time+1)^0,c
  2305  0012EE  6803               	setf	(?_time+2)^0,c
  2306  0012F0  6804               	setf	(?_time+3)^0,c
  2307  0012F2  6805               	setf	(?_time+4)^0,c
  2308  0012F4  6806               	setf	(?_time+5)^0,c
  2309  0012F6  6807               	setf	(?_time+6)^0,c
  2310  0012F8  6808               	setf	(?_time+7)^0,c
  2311  0012FA  0012               	return		;funcret
  2312  0012FC                     __end_of_time:
  2313                           	opt callstack 0
  2314                           
  2315 ;; *************** function _srand *****************
  2316 ;; Defined at:
  2317 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  s               2    8[COMRAM] unsigned int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2331 ;;      Params:         2       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0
  2333 ;;      Temps:          4       0       0       0       0       0       0
  2334 ;;      Totals:         6       0       0       0       0       0       0
  2335 ;;Total ram usage:        6 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    2
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_jogar
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text5
  2346  001426                     __ptext5:
  2347                           	opt callstack 0
  2348  001426                     _srand:
  2349                           	opt callstack 26
  2350  001426  0EFF               	movlw	255
  2351  001428  6E0B               	movwf	??_srand^0,c
  2352  00142A  0EFF               	movlw	255
  2353  00142C  6E0C               	movwf	(??_srand+1)^0,c
  2354  00142E  C009  F00D         	movff	srand@s,??_srand+2
  2355  001432  C00A  F00E         	movff	srand@s+1,??_srand+3
  2356  001436  500B               	movf	??_srand^0,w,c
  2357  001438  260D               	addwf	(??_srand+2)^0,f,c
  2358  00143A  500C               	movf	(??_srand+1)^0,w,c
  2359  00143C  220E               	addwfc	(??_srand+3)^0,f,c
  2360  00143E  C00D  F04A         	movff	??_srand+2,_seed
  2361  001442  C00E  F04B         	movff	??_srand+3,_seed+1
  2362  001446  6A4C               	clrf	(_seed+2)^0,c
  2363  001448  6A4D               	clrf	(_seed+3)^0,c
  2364  00144A  6A4E               	clrf	(_seed+4)^0,c
  2365  00144C  6A4F               	clrf	(_seed+5)^0,c
  2366  00144E  6A50               	clrf	(_seed+6)^0,c
  2367  001450  6A51               	clrf	(_seed+7)^0,c
  2368  001452  0012               	return		;funcret
  2369  001454                     __end_of_srand:
  2370                           	opt callstack 0
  2371                           
  2372 ;; *************** function _rand *****************
  2373 ;; Defined at:
  2374 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2   24[COMRAM] int 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2388 ;;      Params:         2       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0
  2390 ;;      Temps:          8       0       0       0       0       0       0
  2391 ;;      Totals:        10       0       0       0       0       0       0
  2392 ;;Total ram usage:       10 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    3
  2395 ;; This function calls:
  2396 ;;		___omul
  2397 ;; This function is called by:
  2398 ;;		_jogar
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text6
  2403  000AEC                     __ptext6:
  2404                           	opt callstack 0
  2405  000AEC                     _rand:
  2406                           	opt callstack 25
  2407  000AEC  C04A  F001         	movff	_seed,___omul@multiplier
  2408  000AF0  C04B  F002         	movff	_seed+1,___omul@multiplier+1
  2409  000AF4  C04C  F003         	movff	_seed+2,___omul@multiplier+2
  2410  000AF8  C04D  F004         	movff	_seed+3,___omul@multiplier+3
  2411  000AFC  C04E  F005         	movff	_seed+4,___omul@multiplier+4
  2412  000B00  C04F  F006         	movff	_seed+5,___omul@multiplier+5
  2413  000B04  C050  F007         	movff	_seed+6,___omul@multiplier+6
  2414  000B08  C051  F008         	movff	_seed+7,___omul@multiplier+7
  2415  000B0C  0E2D               	movlw	45
  2416  000B0E  6E09               	movwf	___omul@multiplicand^0,c
  2417  000B10  0E7F               	movlw	127
  2418  000B12  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2419  000B14  0E95               	movlw	149
  2420  000B16  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2421  000B18  0E4C               	movlw	76
  2422  000B1A  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2423  000B1C  0E2D               	movlw	45
  2424  000B1E  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2425  000B20  0EF4               	movlw	244
  2426  000B22  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2427  000B24  0E51               	movlw	81
  2428  000B26  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2429  000B28  0E58               	movlw	88
  2430  000B2A  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2431  000B2C  EC5D  F007         	call	___omul	;wreg free
  2432  000B30  C001  F01B         	movff	?___omul,??_rand
  2433  000B34  C002  F01C         	movff	?___omul+1,??_rand+1
  2434  000B38  C003  F01D         	movff	?___omul+2,??_rand+2
  2435  000B3C  C004  F01E         	movff	?___omul+3,??_rand+3
  2436  000B40  C005  F01F         	movff	?___omul+4,??_rand+4
  2437  000B44  C006  F020         	movff	?___omul+5,??_rand+5
  2438  000B48  C007  F021         	movff	?___omul+6,??_rand+6
  2439  000B4C  C008  F022         	movff	?___omul+7,??_rand+7
  2440  000B50  0E01               	movlw	1
  2441  000B52  241B               	addwf	??_rand^0,w,c
  2442  000B54  6E4A               	movwf	_seed^0,c
  2443  000B56  0E00               	movlw	0
  2444  000B58  201C               	addwfc	(??_rand+1)^0,w,c
  2445  000B5A  6E4B               	movwf	(_seed+1)^0,c
  2446  000B5C  0E00               	movlw	0
  2447  000B5E  201D               	addwfc	(??_rand+2)^0,w,c
  2448  000B60  6E4C               	movwf	(_seed+2)^0,c
  2449  000B62  0E00               	movlw	0
  2450  000B64  201E               	addwfc	(??_rand+3)^0,w,c
  2451  000B66  6E4D               	movwf	(_seed+3)^0,c
  2452  000B68  0E00               	movlw	0
  2453  000B6A  201F               	addwfc	(??_rand+4)^0,w,c
  2454  000B6C  6E4E               	movwf	(_seed+4)^0,c
  2455  000B6E  0E00               	movlw	0
  2456  000B70  2020               	addwfc	(??_rand+5)^0,w,c
  2457  000B72  6E4F               	movwf	(_seed+5)^0,c
  2458  000B74  0E00               	movlw	0
  2459  000B76  2021               	addwfc	(??_rand+6)^0,w,c
  2460  000B78  6E50               	movwf	(_seed+6)^0,c
  2461  000B7A  0E00               	movlw	0
  2462  000B7C  2022               	addwfc	(??_rand+7)^0,w,c
  2463  000B7E  6E51               	movwf	(_seed+7)^0,c
  2464  000B80  C04A  F01B         	movff	_seed,??_rand
  2465  000B84  C04B  F01C         	movff	_seed+1,??_rand+1
  2466  000B88  C04C  F01D         	movff	_seed+2,??_rand+2
  2467  000B8C  C04D  F01E         	movff	_seed+3,??_rand+3
  2468  000B90  C04E  F01F         	movff	_seed+4,??_rand+4
  2469  000B94  C04F  F020         	movff	_seed+5,??_rand+5
  2470  000B98  C050  F021         	movff	_seed+6,??_rand+6
  2471  000B9C  C051  F022         	movff	_seed+7,??_rand+7
  2472  000BA0  0E32               	movlw	50
  2473  000BA2  EFDC  F005         	goto	u990
  2474  000BA6                     u995:
  2475  000BA6  90D8               	bcf	status,0,c
  2476  000BA8  3222               	rrcf	(??_rand+7)^0,f,c
  2477  000BAA  3221               	rrcf	(??_rand+6)^0,f,c
  2478  000BAC  3220               	rrcf	(??_rand+5)^0,f,c
  2479  000BAE  321F               	rrcf	(??_rand+4)^0,f,c
  2480  000BB0  321E               	rrcf	(??_rand+3)^0,f,c
  2481  000BB2  321D               	rrcf	(??_rand+2)^0,f,c
  2482  000BB4  321C               	rrcf	(??_rand+1)^0,f,c
  2483  000BB6  321B               	rrcf	??_rand^0,f,c
  2484  000BB8                     u990:
  2485  000BB8  2EE8               	decfsz	wreg,f,c
  2486  000BBA  EFD3  F005         	goto	u995
  2487  000BBE  C01B  F019         	movff	??_rand,?_rand
  2488  000BC2  C01D  F01A         	movff	??_rand+2,?_rand+1
  2489  000BC6  0012               	return		;funcret
  2490  000BC8                     __end_of_rand:
  2491                           	opt callstack 0
  2492                           
  2493 ;; *************** function ___omul *****************
  2494 ;; Defined at:
  2495 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2498 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  product         8   16[COMRAM] unsigned long long 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  8    0[COMRAM] unsigned long long 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:        16       0       0       0       0       0       0
  2511 ;;      Locals:         8       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0
  2513 ;;      Totals:        24       0       0       0       0       0       0
  2514 ;;Total ram usage:       24 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_rand
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text7
  2525  000EBA                     __ptext7:
  2526                           	opt callstack 0
  2527  000EBA                     ___omul:
  2528                           	opt callstack 25
  2529  000EBA  EE20  F011         	lfsr	2,___omul@product
  2530  000EBE  0E07               	movlw	7
  2531  000EC0                     u921:
  2532  000EC0  6ADE               	clrf	postinc2,c
  2533  000EC2  06E8               	decf	wreg,f,c
  2534  000EC4  E2FD               	bc	u921
  2535  000EC6                     l1647:
  2536  000EC6  A001               	btfss	___omul@multiplier^0,0,c
  2537  000EC8  EF68  F007         	goto	u931
  2538  000ECC  EF6A  F007         	goto	u930
  2539  000ED0                     u931:
  2540  000ED0  EF7A  F007         	goto	l1651
  2541  000ED4                     u930:
  2542  000ED4  5009               	movf	___omul@multiplicand^0,w,c
  2543  000ED6  2611               	addwf	___omul@product^0,f,c
  2544  000ED8  500A               	movf	(___omul@multiplicand+1)^0,w,c
  2545  000EDA  2212               	addwfc	(___omul@product+1)^0,f,c
  2546  000EDC  500B               	movf	(___omul@multiplicand+2)^0,w,c
  2547  000EDE  2213               	addwfc	(___omul@product+2)^0,f,c
  2548  000EE0  500C               	movf	(___omul@multiplicand+3)^0,w,c
  2549  000EE2  2214               	addwfc	(___omul@product+3)^0,f,c
  2550  000EE4  500D               	movf	(___omul@multiplicand+4)^0,w,c
  2551  000EE6  2215               	addwfc	(___omul@product+4)^0,f,c
  2552  000EE8  500E               	movf	(___omul@multiplicand+5)^0,w,c
  2553  000EEA  2216               	addwfc	(___omul@product+5)^0,f,c
  2554  000EEC  500F               	movf	(___omul@multiplicand+6)^0,w,c
  2555  000EEE  2217               	addwfc	(___omul@product+6)^0,f,c
  2556  000EF0  5010               	movf	(___omul@multiplicand+7)^0,w,c
  2557  000EF2  2218               	addwfc	(___omul@product+7)^0,f,c
  2558  000EF4                     l1651:
  2559  000EF4  90D8               	bcf	status,0,c
  2560  000EF6  3609               	rlcf	___omul@multiplicand^0,f,c
  2561  000EF8  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  2562  000EFA  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  2563  000EFC  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  2564  000EFE  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  2565  000F00  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  2566  000F02  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  2567  000F04  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  2568  000F06  90D8               	bcf	status,0,c
  2569  000F08  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  2570  000F0A  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  2571  000F0C  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  2572  000F0E  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  2573  000F10  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  2574  000F12  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  2575  000F14  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  2576  000F16  3201               	rrcf	___omul@multiplier^0,f,c
  2577  000F18  5001               	movf	___omul@multiplier^0,w,c
  2578  000F1A  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  2579  000F1C  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  2580  000F1E  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  2581  000F20  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  2582  000F22  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  2583  000F24  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  2584  000F26  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  2585  000F28  A4D8               	btfss	status,2,c
  2586  000F2A  EF99  F007         	goto	u941
  2587  000F2E  EF9B  F007         	goto	u940
  2588  000F32                     u941:
  2589  000F32  EF63  F007         	goto	l1647
  2590  000F36                     u940:
  2591  000F36  C011  F001         	movff	___omul@product,?___omul
  2592  000F3A  C012  F002         	movff	___omul@product+1,?___omul+1
  2593  000F3E  C013  F003         	movff	___omul@product+2,?___omul+2
  2594  000F42  C014  F004         	movff	___omul@product+3,?___omul+3
  2595  000F46  C015  F005         	movff	___omul@product+4,?___omul+4
  2596  000F4A  C016  F006         	movff	___omul@product+5,?___omul+5
  2597  000F4E  C017  F007         	movff	___omul@product+6,?___omul+6
  2598  000F52  C018  F008         	movff	___omul@product+7,?___omul+7
  2599  000F56  0012               	return		;funcret
  2600  000F58                     __end_of___omul:
  2601                           	opt callstack 0
  2602                           
  2603 ;; *************** function ___awmod *****************
  2604 ;; Defined at:
  2605 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  dividend        2   34[COMRAM] int 
  2608 ;;  divisor         2   36[COMRAM] int 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  sign            1   39[COMRAM] unsigned char 
  2611 ;;  counter         1   38[COMRAM] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  2   34[COMRAM] int 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2621 ;;      Params:         4       0       0       0       0       0       0
  2622 ;;      Locals:         2       0       0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0
  2624 ;;      Totals:         6       0       0       0       0       0       0
  2625 ;;Total ram usage:        6 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_jogar
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text8
  2636  000D5E                     __ptext8:
  2637                           	opt callstack 0
  2638  000D5E                     ___awmod:
  2639                           	opt callstack 26
  2640  000D5E  0E00               	movlw	0
  2641  000D60  6E28               	movwf	___awmod@sign^0,c
  2642  000D62  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  2643  000D64  EFB8  F006         	goto	u1000
  2644  000D68  EFB6  F006         	goto	u1001
  2645  000D6C                     u1001:
  2646  000D6C  EFBE  F006         	goto	l1707
  2647  000D70                     u1000:
  2648  000D70  6C23               	negf	___awmod@dividend^0,c
  2649  000D72  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2650  000D74  B0D8               	btfsc	status,0,c
  2651  000D76  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2652  000D78  0E01               	movlw	1
  2653  000D7A  6E28               	movwf	___awmod@sign^0,c
  2654  000D7C                     l1707:
  2655  000D7C  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  2656  000D7E  EFC5  F006         	goto	u1010
  2657  000D82  EFC3  F006         	goto	u1011
  2658  000D86                     u1011:
  2659  000D86  EFC9  F006         	goto	l1711
  2660  000D8A                     u1010:
  2661  000D8A  6C25               	negf	___awmod@divisor^0,c
  2662  000D8C  1E26               	comf	(___awmod@divisor+1)^0,f,c
  2663  000D8E  B0D8               	btfsc	status,0,c
  2664  000D90  2A26               	incf	(___awmod@divisor+1)^0,f,c
  2665  000D92                     l1711:
  2666  000D92  5025               	movf	___awmod@divisor^0,w,c
  2667  000D94  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  2668  000D96  B4D8               	btfsc	status,2,c
  2669  000D98  EFD0  F006         	goto	u1021
  2670  000D9C  EFD2  F006         	goto	u1020
  2671  000DA0                     u1021:
  2672  000DA0  EFF6  F006         	goto	l1727
  2673  000DA4                     u1020:
  2674  000DA4  0E01               	movlw	1
  2675  000DA6  6E27               	movwf	___awmod@counter^0,c
  2676  000DA8  EFDA  F006         	goto	l1717
  2677  000DAC                     l1715:
  2678  000DAC  90D8               	bcf	status,0,c
  2679  000DAE  3625               	rlcf	___awmod@divisor^0,f,c
  2680  000DB0  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  2681  000DB2  2A27               	incf	___awmod@counter^0,f,c
  2682  000DB4                     l1717:
  2683  000DB4  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  2684  000DB6  EFDF  F006         	goto	u1031
  2685  000DBA  EFE1  F006         	goto	u1030
  2686  000DBE                     u1031:
  2687  000DBE  EFD6  F006         	goto	l1715
  2688  000DC2                     u1030:
  2689  000DC2                     l1719:
  2690  000DC2  5025               	movf	___awmod@divisor^0,w,c
  2691  000DC4  5C23               	subwf	___awmod@dividend^0,w,c
  2692  000DC6  5026               	movf	(___awmod@divisor+1)^0,w,c
  2693  000DC8  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  2694  000DCA  A0D8               	btfss	status,0,c
  2695  000DCC  EFEA  F006         	goto	u1041
  2696  000DD0  EFEC  F006         	goto	u1040
  2697  000DD4                     u1041:
  2698  000DD4  EFF0  F006         	goto	l1723
  2699  000DD8                     u1040:
  2700  000DD8  5025               	movf	___awmod@divisor^0,w,c
  2701  000DDA  5E23               	subwf	___awmod@dividend^0,f,c
  2702  000DDC  5026               	movf	(___awmod@divisor+1)^0,w,c
  2703  000DDE  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  2704  000DE0                     l1723:
  2705  000DE0  90D8               	bcf	status,0,c
  2706  000DE2  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  2707  000DE4  3225               	rrcf	___awmod@divisor^0,f,c
  2708  000DE6  2E27               	decfsz	___awmod@counter^0,f,c
  2709  000DE8  EFE1  F006         	goto	l1719
  2710  000DEC                     l1727:
  2711  000DEC  5028               	movf	___awmod@sign^0,w,c
  2712  000DEE  B4D8               	btfsc	status,2,c
  2713  000DF0  EFFC  F006         	goto	u1051
  2714  000DF4  EFFE  F006         	goto	u1050
  2715  000DF8                     u1051:
  2716  000DF8  EF02  F007         	goto	l1731
  2717  000DFC                     u1050:
  2718  000DFC  6C23               	negf	___awmod@dividend^0,c
  2719  000DFE  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2720  000E00  B0D8               	btfsc	status,0,c
  2721  000E02  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2722  000E04                     l1731:
  2723  000E04  C023  F023         	movff	___awmod@dividend,?___awmod
  2724  000E08  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  2725  000E0C  0012               	return		;funcret
  2726  000E0E                     __end_of___awmod:
  2727                           	opt callstack 0
  2728                           
  2729 ;; *************** function _instrucoes *****************
  2730 ;; Defined at:
  2731 ;;		line 164 in file "task_manager.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  lcd             2   25[COMRAM] PTR struct .
  2734 ;;		 -> PORTD(1), 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2746 ;;      Params:         2       0       0       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0
  2749 ;;      Totals:         2       0       0       0       0       0       0
  2750 ;;Total ram usage:        2 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    6
  2753 ;; This function calls:
  2754 ;;		_print_mat
  2755 ;;		_strcpy
  2756 ;; This function is called by:
  2757 ;;		_gerenciador
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text9
  2762  001178                     __ptext9:
  2763                           	opt callstack 0
  2764  001178                     _instrucoes:
  2765                           	opt callstack 23
  2766  001178                     
  2767                           ;task_manager.c: 165:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  2768  001178  0E80               	movlw	low _mat_disp
  2769  00117A  6E01               	movwf	strcpy@dest^0,c
  2770  00117C  0E00               	movlw	high _mat_disp
  2771  00117E  6E02               	movwf	(strcpy@dest+1)^0,c
  2772  001180  0EDF               	movlw	low STR_17
  2773  001182  6E03               	movwf	strcpy@src^0,c
  2774  001184  0E7F               	movlw	high STR_17
  2775  001186  6E04               	movwf	(strcpy@src+1)^0,c
  2776  001188  ECA0  F009         	call	_strcpy	;wreg free
  2777                           
  2778                           ;task_manager.c: 166:     strcpy(mat_disp[1], "NAVE           ");
  2779  00118C  0E90               	movlw	low (_mat_disp+16)
  2780  00118E  6E01               	movwf	strcpy@dest^0,c
  2781  001190  0E00               	movlw	high (_mat_disp+16)
  2782  001192  6E02               	movwf	(strcpy@dest+1)^0,c
  2783  001194  0E8F               	movlw	low STR_18
  2784  001196  6E03               	movwf	strcpy@src^0,c
  2785  001198  0E7F               	movlw	high STR_18
  2786  00119A  6E04               	movwf	(strcpy@src+1)^0,c
  2787  00119C  ECA0  F009         	call	_strcpy	;wreg free
  2788                           
  2789                           ;task_manager.c: 167:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  2790  0011A0  0EA0               	movlw	low (_mat_disp+32)
  2791  0011A2  6E01               	movwf	strcpy@dest^0,c
  2792  0011A4  0E00               	movlw	high (_mat_disp+32)
  2793  0011A6  6E02               	movwf	(strcpy@dest+1)^0,c
  2794  0011A8  0EAF               	movlw	low STR_19
  2795  0011AA  6E03               	movwf	strcpy@src^0,c
  2796  0011AC  0E7F               	movlw	high STR_19
  2797  0011AE  6E04               	movwf	(strcpy@src+1)^0,c
  2798  0011B0  ECA0  F009         	call	_strcpy	;wreg free
  2799                           
  2800                           ;task_manager.c: 168:     strcpy(mat_disp[3], "MENU           ");
  2801  0011B4  0EB0               	movlw	low (_mat_disp+48)
  2802  0011B6  6E01               	movwf	strcpy@dest^0,c
  2803  0011B8  0E00               	movlw	high (_mat_disp+48)
  2804  0011BA  6E02               	movwf	(strcpy@dest+1)^0,c
  2805  0011BC  0E9F               	movlw	low STR_20
  2806  0011BE  6E03               	movwf	strcpy@src^0,c
  2807  0011C0  0E7F               	movlw	high STR_20
  2808  0011C2  6E04               	movwf	(strcpy@src+1)^0,c
  2809  0011C4  ECA0  F009         	call	_strcpy	;wreg free
  2810  0011C8                     
  2811                           ;task_manager.c: 169:     print_mat(lcd);
  2812  0011C8  C01A  F010         	movff	instrucoes@lcd,print_mat@lcd
  2813  0011CC  C01B  F011         	movff	instrucoes@lcd+1,print_mat@lcd+1
  2814  0011D0  EC07  F007         	call	_print_mat	;wreg free
  2815  0011D4                     l236:
  2816  0011D4  AA49               	btfss	_botoes^0,5,c
  2817  0011D6  EFEF  F008         	goto	u1391
  2818  0011DA  EFF1  F008         	goto	u1390
  2819  0011DE                     u1391:
  2820  0011DE  EFEA  F008         	goto	l236
  2821  0011E2                     u1390:
  2822  0011E2  0012               	return		;funcret
  2823  0011E4                     __end_of_instrucoes:
  2824                           	opt callstack 0
  2825                           
  2826 ;; *************** function _finaliza *****************
  2827 ;; Defined at:
  2828 ;;		line 38 in file "task_manager.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  lcd             2   25[COMRAM] PTR struct .
  2831 ;;		 -> PORTD(1), 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2843 ;;      Params:         2       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0
  2846 ;;      Totals:         2       0       0       0       0       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    6
  2850 ;; This function calls:
  2851 ;;		_print_mat
  2852 ;;		_strcpy
  2853 ;; This function is called by:
  2854 ;;		_gerenciador
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text10
  2859  001250                     __ptext10:
  2860                           	opt callstack 0
  2861  001250                     _finaliza:
  2862                           	opt callstack 23
  2863  001250                     
  2864                           ;task_manager.c: 39:     strcpy(mat_disp[0], "HIBERNANDO.....");
  2865  001250  0E80               	movlw	low _mat_disp
  2866  001252  6E01               	movwf	strcpy@dest^0,c
  2867  001254  0E00               	movlw	high _mat_disp
  2868  001256  6E02               	movwf	(strcpy@dest+1)^0,c
  2869  001258  0EBF               	movlw	low STR_5
  2870  00125A  6E03               	movwf	strcpy@src^0,c
  2871  00125C  0E7F               	movlw	high STR_5
  2872  00125E  6E04               	movwf	(strcpy@src+1)^0,c
  2873  001260  ECA0  F009         	call	_strcpy	;wreg free
  2874                           
  2875                           ;task_manager.c: 40:     strcpy(mat_disp[1], "               ");
  2876  001264  0E90               	movlw	low (_mat_disp+16)
  2877  001266  6E01               	movwf	strcpy@dest^0,c
  2878  001268  0E00               	movlw	high (_mat_disp+16)
  2879  00126A  6E02               	movwf	(strcpy@dest+1)^0,c
  2880  00126C  0EE6               	movlw	low (STR_10+1)
  2881  00126E  6E03               	movwf	strcpy@src^0,c
  2882  001270  0E7E               	movlw	high (STR_10+1)
  2883  001272  6E04               	movwf	(strcpy@src+1)^0,c
  2884  001274  ECA0  F009         	call	_strcpy	;wreg free
  2885                           
  2886                           ;task_manager.c: 41:     strcpy(mat_disp[2], "               ");
  2887  001278  0EA0               	movlw	low (_mat_disp+32)
  2888  00127A  6E01               	movwf	strcpy@dest^0,c
  2889  00127C  0E00               	movlw	high (_mat_disp+32)
  2890  00127E  6E02               	movwf	(strcpy@dest+1)^0,c
  2891  001280  0EE6               	movlw	low (STR_10+1)
  2892  001282  6E03               	movwf	strcpy@src^0,c
  2893  001284  0E7E               	movlw	high (STR_10+1)
  2894  001286  6E04               	movwf	(strcpy@src+1)^0,c
  2895  001288  ECA0  F009         	call	_strcpy	;wreg free
  2896                           
  2897                           ;task_manager.c: 42:     strcpy(mat_disp[3], "               ");
  2898  00128C  0EB0               	movlw	low (_mat_disp+48)
  2899  00128E  6E01               	movwf	strcpy@dest^0,c
  2900  001290  0E00               	movlw	high (_mat_disp+48)
  2901  001292  6E02               	movwf	(strcpy@dest+1)^0,c
  2902  001294  0EE6               	movlw	low (STR_10+1)
  2903  001296  6E03               	movwf	strcpy@src^0,c
  2904  001298  0E7E               	movlw	high (STR_10+1)
  2905  00129A  6E04               	movwf	(strcpy@src+1)^0,c
  2906  00129C  ECA0  F009         	call	_strcpy	;wreg free
  2907  0012A0                     
  2908                           ;task_manager.c: 43:     print_mat(lcd);
  2909  0012A0  C01A  F010         	movff	finaliza@lcd,print_mat@lcd
  2910  0012A4  C01B  F011         	movff	finaliza@lcd+1,print_mat@lcd+1
  2911  0012A8  EC07  F007         	call	_print_mat	;wreg free
  2912  0012AC  0003               	sleep		;# 
  2913  0012AE  0012               	return		;funcret
  2914  0012B0                     __end_of_finaliza:
  2915                           	opt callstack 0
  2916                           
  2917 ;; *************** function _creditos *****************
  2918 ;; Defined at:
  2919 ;;		line 28 in file "task_manager.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  lcd             2   25[COMRAM] PTR struct .
  2922 ;;		 -> PORTD(1), 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2934 ;;      Params:         2       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0
  2937 ;;      Totals:         2       0       0       0       0       0       0
  2938 ;;Total ram usage:        2 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    6
  2941 ;; This function calls:
  2942 ;;		_print_mat
  2943 ;;		_strcpy
  2944 ;; This function is called by:
  2945 ;;		_gerenciador
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text11
  2950  0011E4                     __ptext11:
  2951                           	opt callstack 0
  2952  0011E4                     _creditos:
  2953                           	opt callstack 23
  2954  0011E4                     
  2955                           ;task_manager.c: 30:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  2956  0011E4  0E80               	movlw	low _mat_disp
  2957  0011E6  6E01               	movwf	strcpy@dest^0,c
  2958  0011E8  0E00               	movlw	high _mat_disp
  2959  0011EA  6E02               	movwf	(strcpy@dest+1)^0,c
  2960  0011EC  0ECF               	movlw	low STR_1
  2961  0011EE  6E03               	movwf	strcpy@src^0,c
  2962  0011F0  0E7F               	movlw	high STR_1
  2963  0011F2  6E04               	movwf	(strcpy@src+1)^0,c
  2964  0011F4  ECA0  F009         	call	_strcpy	;wreg free
  2965                           
  2966                           ;task_manager.c: 31:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  2967  0011F8  0E90               	movlw	low (_mat_disp+16)
  2968  0011FA  6E01               	movwf	strcpy@dest^0,c
  2969  0011FC  0E00               	movlw	high (_mat_disp+16)
  2970  0011FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2971  001200  0EEF               	movlw	low STR_2
  2972  001202  6E03               	movwf	strcpy@src^0,c
  2973  001204  0E7F               	movlw	high STR_2
  2974  001206  6E04               	movwf	(strcpy@src+1)^0,c
  2975  001208  ECA0  F009         	call	_strcpy	;wreg free
  2976                           
  2977                           ;task_manager.c: 32:     strcpy(mat_disp[2], "               ");
  2978  00120C  0EA0               	movlw	low (_mat_disp+32)
  2979  00120E  6E01               	movwf	strcpy@dest^0,c
  2980  001210  0E00               	movlw	high (_mat_disp+32)
  2981  001212  6E02               	movwf	(strcpy@dest+1)^0,c
  2982  001214  0EE6               	movlw	low (STR_10+1)
  2983  001216  6E03               	movwf	strcpy@src^0,c
  2984  001218  0E7E               	movlw	high (STR_10+1)
  2985  00121A  6E04               	movwf	(strcpy@src+1)^0,c
  2986  00121C  ECA0  F009         	call	_strcpy	;wreg free
  2987                           
  2988                           ;task_manager.c: 33:     strcpy(mat_disp[3], "               ");
  2989  001220  0EB0               	movlw	low (_mat_disp+48)
  2990  001222  6E01               	movwf	strcpy@dest^0,c
  2991  001224  0E00               	movlw	high (_mat_disp+48)
  2992  001226  6E02               	movwf	(strcpy@dest+1)^0,c
  2993  001228  0EE6               	movlw	low (STR_10+1)
  2994  00122A  6E03               	movwf	strcpy@src^0,c
  2995  00122C  0E7E               	movlw	high (STR_10+1)
  2996  00122E  6E04               	movwf	(strcpy@src+1)^0,c
  2997  001230  ECA0  F009         	call	_strcpy	;wreg free
  2998  001234                     
  2999                           ;task_manager.c: 34:     print_mat(lcd);
  3000  001234  C01A  F010         	movff	creditos@lcd,print_mat@lcd
  3001  001238  C01B  F011         	movff	creditos@lcd+1,print_mat@lcd+1
  3002  00123C  EC07  F007         	call	_print_mat	;wreg free
  3003  001240                     l196:
  3004  001240  AA49               	btfss	_botoes^0,5,c
  3005  001242  EF25  F009         	goto	u1401
  3006  001246  EF27  F009         	goto	u1400
  3007  00124A                     u1401:
  3008  00124A  EF20  F009         	goto	l196
  3009  00124E                     u1400:
  3010  00124E  0012               	return		;funcret
  3011  001250                     __end_of_creditos:
  3012                           	opt callstack 0
  3013                           
  3014 ;; *************** function _strcpy *****************
  3015 ;; Defined at:
  3016 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3019 ;;		 -> mat_disp(64), 
  3020 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3021 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  3022 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  3023 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  3024 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  3025 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  3026 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  d               2    6[COMRAM] PTR unsigned char 
  3029 ;;		 -> mat_disp(64), 
  3030 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3031 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  3032 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  3033 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  3034 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  3035 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  3036 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    0[COMRAM] PTR unsigned char 
  3039 ;; Registers used:
  3040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3046 ;;      Params:         4       0       0       0       0       0       0
  3047 ;;      Locals:         4       0       0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0
  3049 ;;      Totals:         8       0       0       0       0       0       0
  3050 ;;Total ram usage:        8 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    2
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_creditos
  3057 ;;		_finaliza
  3058 ;;		_jogar
  3059 ;;		_instrucoes
  3060 ;;		_menu
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text12
  3065  001340                     __ptext12:
  3066                           	opt callstack 0
  3067  001340                     _strcpy:
  3068                           	opt callstack 26
  3069  001340  C003  F005         	movff	strcpy@src,strcpy@s
  3070  001344  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3071  001348  C001  F007         	movff	strcpy@dest,strcpy@d
  3072  00134C  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3073  001350                     l1681:
  3074  001350  C005  FFF6         	movff	strcpy@s,tblptrl
  3075  001354  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3076  001358  4A05               	infsnz	strcpy@s^0,f,c
  3077  00135A  2A06               	incf	(strcpy@s+1)^0,f,c
  3078  00135C                     	if	0	;tblptru may be non-zero
  3079  00135C                     	endif
  3080  00135C                     	if	0	;tblptru may be non-zero
  3081  00135C                     	endif
  3082  00135C  C007  FFD9         	movff	strcpy@d,fsr2l
  3083  001360  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3084  001364  4A07               	infsnz	strcpy@d^0,f,c
  3085  001366  2A08               	incf	(strcpy@d+1)^0,f,c
  3086  001368  0008               	tblrd		*
  3087  00136A  CFF5 FFDF          	movff	tablat,indf2
  3088  00136E  50DF               	movf	indf2,w,c
  3089  001370  A4D8               	btfss	status,2,c
  3090  001372  EFBD  F009         	goto	u971
  3091  001376  EFBF  F009         	goto	u970
  3092  00137A                     u971:
  3093  00137A  EFA8  F009         	goto	l1681
  3094  00137E                     u970:
  3095  00137E  0012               	return		;funcret
  3096  001380                     __end_of_strcpy:
  3097                           	opt callstack 0
  3098                           
  3099 ;; *************** function _print_mat *****************
  3100 ;; Defined at:
  3101 ;;		line 199 in file "lcd.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  lcd             2   15[COMRAM] PTR struct .
  3104 ;;		 -> PORTD(1), 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  j               2   21[COMRAM] int 
  3107 ;;  i               2   23[COMRAM] int 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3117 ;;      Params:         2       0       0       0       0       0       0
  3118 ;;      Locals:         4       0       0       0       0       0       0
  3119 ;;      Temps:          4       0       0       0       0       0       0
  3120 ;;      Totals:        10       0       0       0       0       0       0
  3121 ;;Total ram usage:       10 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    5
  3124 ;; This function calls:
  3125 ;;		_goto_XY
  3126 ;;		_write_char
  3127 ;; This function is called by:
  3128 ;;		_creditos
  3129 ;;		_finaliza
  3130 ;;		_jogar
  3131 ;;		_instrucoes
  3132 ;;		_menu
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text13
  3137  000E0E                     __ptext13:
  3138                           	opt callstack 0
  3139  000E0E                     _print_mat:
  3140                           	opt callstack 23
  3141  000E0E                     
  3142                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  3143  000E0E  0E00               	movlw	0
  3144  000E10  6E19               	movwf	(print_mat@i+1)^0,c
  3145  000E12  0E00               	movlw	0
  3146  000E14  6E18               	movwf	print_mat@i^0,c
  3147  000E16                     l1661:
  3148                           
  3149                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  3150  000E16  C010  F008         	movff	print_mat@lcd,goto_XY@lcd
  3151  000E1A  C011  F009         	movff	print_mat@lcd+1,goto_XY@lcd+1
  3152  000E1E  2818               	incf	print_mat@i^0,w,c
  3153  000E20  6E0A               	movwf	goto_XY@x^0,c
  3154  000E22  0E01               	movlw	1
  3155  000E24  6E0B               	movwf	goto_XY@y^0,c
  3156  000E26  EC51  F006         	call	_goto_XY	;wreg free
  3157  000E2A                     
  3158                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  3159  000E2A  0E00               	movlw	0
  3160  000E2C  6E17               	movwf	(print_mat@j+1)^0,c
  3161  000E2E  0E00               	movlw	0
  3162  000E30  6E16               	movwf	print_mat@j^0,c
  3163  000E32                     l1669:
  3164                           
  3165                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  3166  000E32  C010  F001         	movff	print_mat@lcd,write_char@lcd
  3167  000E36  C011  F002         	movff	print_mat@lcd+1,write_char@lcd+1
  3168  000E3A  C018  F012         	movff	print_mat@i,??_print_mat
  3169  000E3E  C019  F013         	movff	print_mat@i+1,??_print_mat+1
  3170  000E42  3A12               	swapf	??_print_mat^0,f,c
  3171  000E44  3A13               	swapf	(??_print_mat+1)^0,f,c
  3172  000E46  0EF0               	movlw	240
  3173  000E48  1613               	andwf	(??_print_mat+1)^0,f,c
  3174  000E4A  5012               	movf	??_print_mat^0,w,c
  3175  000E4C  0B0F               	andlw	15
  3176  000E4E  1213               	iorwf	(??_print_mat+1)^0,f,c
  3177  000E50  0EF0               	movlw	240
  3178  000E52  1612               	andwf	??_print_mat^0,f,c
  3179  000E54  0E80               	movlw	low _mat_disp
  3180  000E56  6E14               	movwf	(??_print_mat+2)^0,c
  3181  000E58  0E00               	movlw	high _mat_disp
  3182  000E5A  6E15               	movwf	(??_print_mat+3)^0,c
  3183  000E5C  5012               	movf	??_print_mat^0,w,c
  3184  000E5E  2614               	addwf	(??_print_mat+2)^0,f,c
  3185  000E60  5013               	movf	(??_print_mat+1)^0,w,c
  3186  000E62  2215               	addwfc	(??_print_mat+3)^0,f,c
  3187  000E64  5016               	movf	print_mat@j^0,w,c
  3188  000E66  2414               	addwf	(??_print_mat+2)^0,w,c
  3189  000E68  6ED9               	movwf	fsr2l,c
  3190  000E6A  5017               	movf	(print_mat@j+1)^0,w,c
  3191  000E6C  2015               	addwfc	(??_print_mat+3)^0,w,c
  3192  000E6E  6EDA               	movwf	fsr2h,c
  3193  000E70  50DF               	movf	indf2,w,c
  3194  000E72  6E03               	movwf	write_char@c^0,c
  3195  000E74  EC02  F005         	call	_write_char	;wreg free
  3196  000E78  4A16               	infsnz	print_mat@j^0,f,c
  3197  000E7A  2A17               	incf	(print_mat@j+1)^0,f,c
  3198  000E7C  BE17               	btfsc	(print_mat@j+1)^0,7,c
  3199  000E7E  EF4A  F007         	goto	u951
  3200  000E82  5017               	movf	(print_mat@j+1)^0,w,c
  3201  000E84  E109               	bnz	u950
  3202  000E86  0E10               	movlw	16
  3203  000E88  5C16               	subwf	print_mat@j^0,w,c
  3204  000E8A  A0D8               	btfss	status,0,c
  3205  000E8C  EF4A  F007         	goto	u951
  3206  000E90  EF4C  F007         	goto	u950
  3207  000E94                     u951:
  3208  000E94  EF19  F007         	goto	l1669
  3209  000E98                     u950:
  3210  000E98                     
  3211                           ;lcd.c: 204:     }
  3212  000E98  4A18               	infsnz	print_mat@i^0,f,c
  3213  000E9A  2A19               	incf	(print_mat@i+1)^0,f,c
  3214  000E9C  BE19               	btfsc	(print_mat@i+1)^0,7,c
  3215  000E9E  EF5A  F007         	goto	u961
  3216  000EA2  5019               	movf	(print_mat@i+1)^0,w,c
  3217  000EA4  E109               	bnz	u960
  3218  000EA6  0E04               	movlw	4
  3219  000EA8  5C18               	subwf	print_mat@i^0,w,c
  3220  000EAA  A0D8               	btfss	status,0,c
  3221  000EAC  EF5A  F007         	goto	u961
  3222  000EB0  EF5C  F007         	goto	u960
  3223  000EB4                     u961:
  3224  000EB4  EF0B  F007         	goto	l1661
  3225  000EB8                     u960:
  3226  000EB8  0012               	return		;funcret
  3227  000EBA                     __end_of_print_mat:
  3228                           	opt callstack 0
  3229                           
  3230 ;; *************** function _write_char *****************
  3231 ;; Defined at:
  3232 ;;		line 133 in file "lcd.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  lcd             2    0[COMRAM] PTR struct .
  3235 ;;		 -> PORTD(1), 
  3236 ;;  c               1    2[COMRAM] unsigned char 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3248 ;;      Params:         3       0       0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0       0
  3250 ;;      Temps:          1       0       0       0       0       0       0
  3251 ;;      Totals:         4       0       0       0       0       0       0
  3252 ;;Total ram usage:        4 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    2
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_print_mat
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text14
  3263  000A04                     __ptext14:
  3264                           	opt callstack 0
  3265  000A04                     _write_char:
  3266                           	opt callstack 25
  3267  000A04                     
  3268                           ;lcd.c: 134:     lcd->E = 0;
  3269  000A04  C001  FFD9         	movff	write_char@lcd,fsr2l
  3270  000A08  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3271  000A0C  94DF               	bcf	indf2,2,c
  3272                           
  3273                           ;lcd.c: 135:     lcd->RS = 1;
  3274  000A0E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3275  000A12  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3276  000A16  80DF               	bsf	indf2,0,c
  3277                           
  3278                           ;lcd.c: 136:     lcd->R_W = 0;
  3279  000A18  C001  FFD9         	movff	write_char@lcd,fsr2l
  3280  000A1C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3281  000A20  92DF               	bcf	indf2,1,c
  3282  000A22                     
  3283                           ;lcd.c: 139:     lcd->data = (c>>4);
  3284  000A22  C003  F004         	movff	write_char@c,??_write_char
  3285  000A26  3A04               	swapf	??_write_char^0,f,c
  3286  000A28  0E0F               	movlw	15
  3287  000A2A  1604               	andwf	??_write_char^0,f,c
  3288  000A2C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3289  000A30  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3290  000A34  3A04               	swapf	??_write_char^0,f,c
  3291  000A36  50DF               	movf	indf2,w,c
  3292  000A38  1804               	xorwf	??_write_char^0,w,c
  3293  000A3A  0B0F               	andlw	-241
  3294  000A3C  1804               	xorwf	??_write_char^0,w,c
  3295  000A3E  6EDF               	movwf	indf2,c
  3296  000A40                     
  3297                           ;lcd.c: 140:     lcd->E = 1;
  3298  000A40  C001  FFD9         	movff	write_char@lcd,fsr2l
  3299  000A44  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3300  000A48  84DF               	bsf	indf2,2,c
  3301  000A4A                     
  3302                           ;lcd.c: 141:     lcd->E = 0;
  3303  000A4A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3304  000A4E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3305  000A52  94DF               	bcf	indf2,2,c
  3306  000A54                     
  3307                           ;lcd.c: 144:     lcd->data = (c);
  3308  000A54  C003  F004         	movff	write_char@c,??_write_char
  3309  000A58  C001  FFD9         	movff	write_char@lcd,fsr2l
  3310  000A5C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3311  000A60  3A04               	swapf	??_write_char^0,f,c
  3312  000A62  50DF               	movf	indf2,w,c
  3313  000A64  1804               	xorwf	??_write_char^0,w,c
  3314  000A66  0B0F               	andlw	-241
  3315  000A68  1804               	xorwf	??_write_char^0,w,c
  3316  000A6A  6EDF               	movwf	indf2,c
  3317                           
  3318                           ;lcd.c: 145:     lcd->E = 1;
  3319  000A6C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3320  000A70  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3321  000A74  84DF               	bsf	indf2,2,c
  3322                           
  3323                           ;lcd.c: 146:     lcd->E = 0;
  3324  000A76  C001  FFD9         	movff	write_char@lcd,fsr2l
  3325  000A7A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3326  000A7E  94DF               	bcf	indf2,2,c
  3327  000A80                     
  3328                           ;lcd.c: 149:     TRISD = 0xF0;
  3329  000A80  0EF0               	movlw	240
  3330  000A82  6E95               	movwf	149,c	;volatile
  3331  000A84                     
  3332                           ;lcd.c: 150:     lcd->RS = 0;
  3333  000A84  C001  FFD9         	movff	write_char@lcd,fsr2l
  3334  000A88  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3335  000A8C  90DF               	bcf	indf2,0,c
  3336  000A8E                     
  3337                           ;lcd.c: 151:     lcd->R_W = 1;
  3338  000A8E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3339  000A92  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3340  000A96  82DF               	bsf	indf2,1,c
  3341  000A98                     l1631:
  3342                           
  3343                           ;lcd.c: 153:        lcd->E = 1;
  3344  000A98  C001  FFD9         	movff	write_char@lcd,fsr2l
  3345  000A9C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3346  000AA0  84DF               	bsf	indf2,2,c
  3347  000AA2                     
  3348                           ;lcd.c: 154:        lcd->E = 0;
  3349  000AA2  C001  FFD9         	movff	write_char@lcd,fsr2l
  3350  000AA6  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3351  000AAA  94DF               	bcf	indf2,2,c
  3352  000AAC                     
  3353                           ;lcd.c: 155:        lcd->E = 1;
  3354  000AAC  C001  FFD9         	movff	write_char@lcd,fsr2l
  3355  000AB0  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3356  000AB4  84DF               	bsf	indf2,2,c
  3357  000AB6                     
  3358                           ;lcd.c: 156:        lcd->E = 0;
  3359  000AB6  C001  FFD9         	movff	write_char@lcd,fsr2l
  3360  000ABA  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3361  000ABE  94DF               	bcf	indf2,2,c
  3362  000AC0                     
  3363                           ;lcd.c: 157:     } while(lcd->data&0x08);
  3364  000AC0  C001  FFD9         	movff	write_char@lcd,fsr2l
  3365  000AC4  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3366  000AC8  38DF               	swapf	indf2,w,c
  3367  000ACA  0B0F               	andlw	15
  3368  000ACC  6E04               	movwf	??_write_char^0,c
  3369  000ACE  B604               	btfsc	??_write_char^0,3,c
  3370  000AD0  EF6C  F005         	goto	u911
  3371  000AD4  EF6E  F005         	goto	u910
  3372  000AD8                     u911:
  3373  000AD8  EF4C  F005         	goto	l1631
  3374  000ADC                     u910:
  3375  000ADC                     
  3376                           ;lcd.c: 158:     lcd->R_W = 0;
  3377  000ADC  C001  FFD9         	movff	write_char@lcd,fsr2l
  3378  000AE0  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3379  000AE4  92DF               	bcf	indf2,1,c
  3380  000AE6                     
  3381                           ;lcd.c: 159:     TRISD = 0x00;
  3382  000AE6  0E00               	movlw	0
  3383  000AE8  6E95               	movwf	149,c	;volatile
  3384  000AEA  0012               	return		;funcret
  3385  000AEC                     __end_of_write_char:
  3386                           	opt callstack 0
  3387                           
  3388 ;; *************** function _goto_XY *****************
  3389 ;; Defined at:
  3390 ;;		line 76 in file "lcd.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  lcd             2    7[COMRAM] PTR struct .
  3393 ;;		 -> PORTD(1), 
  3394 ;;  x               1    9[COMRAM] unsigned char 
  3395 ;;  y               1   10[COMRAM] unsigned char 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  temp            1   14[COMRAM] unsigned char 
  3398 ;;  a               1   13[COMRAM] unsigned char 
  3399 ;;  z               1   12[COMRAM] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         4       0       0       0       0       0       0
  3410 ;;      Locals:         3       0       0       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0       0       0
  3412 ;;      Totals:         8       0       0       0       0       0       0
  3413 ;;Total ram usage:        8 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    4
  3416 ;; This function calls:
  3417 ;;		_lcd_cmd
  3418 ;; This function is called by:
  3419 ;;		_print_mat
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text15
  3424  000CA2                     __ptext15:
  3425                           	opt callstack 0
  3426  000CA2                     _goto_XY:
  3427                           	opt callstack 23
  3428  000CA2                     
  3429                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  3430  000CA2  040A               	decf	goto_XY@x^0,w,c
  3431  000CA4  A4D8               	btfss	status,2,c
  3432  000CA6  EF57  F006         	goto	u871
  3433  000CAA  EF59  F006         	goto	u870
  3434  000CAE                     u871:
  3435  000CAE  EF7B  F006         	goto	l1579
  3436  000CB2                     u870:
  3437  000CB2                     
  3438                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  3439  000CB2  500B               	movf	goto_XY@y^0,w,c
  3440  000CB4  0F7F               	addlw	127
  3441  000CB6  6E0F               	movwf	goto_XY@temp^0,c
  3442                           
  3443                           ;lcd.c: 81:        z = temp>>4;
  3444  000CB8  380F               	swapf	goto_XY@temp^0,w,c
  3445  000CBA  0B0F               	andlw	15
  3446  000CBC  6E0D               	movwf	goto_XY@z^0,c
  3447  000CBE                     l1571:
  3448                           
  3449                           ;lcd.c: 82:        a = temp;
  3450  000CBE  C00F  F00E         	movff	goto_XY@temp,goto_XY@a
  3451  000CC2                     
  3452                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  3453  000CC2  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3454  000CC6  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3455  000CCA  C00D  F006         	movff	goto_XY@z,lcd_cmd@a
  3456  000CCE  ECC0  F009         	call	_lcd_cmd	;wreg free
  3457  000CD2                     
  3458                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  3459  000CD2  0E06               	movlw	6
  3460  000CD4  6E0C               	movwf	??_goto_XY^0,c
  3461  000CD6  0E30               	movlw	48
  3462  000CD8                     u1457:
  3463  000CD8  2EE8               	decfsz	wreg,f,c
  3464  000CDA  D7FE               	bra	u1457
  3465  000CDC  2E0C               	decfsz	??_goto_XY^0,f,c
  3466  000CDE  D7FC               	bra	u1457
  3467  000CE0  D000               	nop2	
  3468  000CE2                     
  3469                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  3470  000CE2  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3471  000CE6  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3472  000CEA  C00E  F006         	movff	goto_XY@a,lcd_cmd@a
  3473  000CEE  ECC0  F009         	call	_lcd_cmd	;wreg free
  3474                           
  3475                           ;lcd.c: 86:     }
  3476  000CF2  EFAE  F006         	goto	l74
  3477  000CF6                     l1579:
  3478  000CF6  0E02               	movlw	2
  3479  000CF8  180A               	xorwf	goto_XY@x^0,w,c
  3480  000CFA  A4D8               	btfss	status,2,c
  3481  000CFC  EF82  F006         	goto	u881
  3482  000D00  EF84  F006         	goto	u880
  3483  000D04                     u881:
  3484  000D04  EF8C  F006         	goto	l1591
  3485  000D08                     u880:
  3486  000D08                     
  3487                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  3488  000D08  500B               	movf	goto_XY@y^0,w,c
  3489  000D0A  0FBF               	addlw	191
  3490  000D0C  6E0F               	movwf	goto_XY@temp^0,c
  3491                           
  3492                           ;lcd.c: 90:        z = temp>>4;
  3493  000D0E  380F               	swapf	goto_XY@temp^0,w,c
  3494  000D10  0B0F               	andlw	15
  3495  000D12  6E0D               	movwf	goto_XY@z^0,c
  3496  000D14  EF5F  F006         	goto	l1571
  3497  000D18                     l1591:
  3498  000D18  0E03               	movlw	3
  3499  000D1A  180A               	xorwf	goto_XY@x^0,w,c
  3500  000D1C  A4D8               	btfss	status,2,c
  3501  000D1E  EF93  F006         	goto	u891
  3502  000D22  EF95  F006         	goto	u890
  3503  000D26                     u891:
  3504  000D26  EF9D  F006         	goto	l1603
  3505  000D2A                     u890:
  3506  000D2A                     
  3507                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  3508  000D2A  500B               	movf	goto_XY@y^0,w,c
  3509  000D2C  0F8F               	addlw	143
  3510  000D2E  6E0F               	movwf	goto_XY@temp^0,c
  3511                           
  3512                           ;lcd.c: 99:        z = temp>>4;
  3513  000D30  380F               	swapf	goto_XY@temp^0,w,c
  3514  000D32  0B0F               	andlw	15
  3515  000D34  6E0D               	movwf	goto_XY@z^0,c
  3516  000D36  EF5F  F006         	goto	l1571
  3517  000D3A                     l1603:
  3518  000D3A  0E04               	movlw	4
  3519  000D3C  180A               	xorwf	goto_XY@x^0,w,c
  3520  000D3E  A4D8               	btfss	status,2,c
  3521  000D40  EFA4  F006         	goto	u901
  3522  000D44  EFA6  F006         	goto	u900
  3523  000D48                     u901:
  3524  000D48  EFAE  F006         	goto	l70
  3525  000D4C                     u900:
  3526  000D4C                     
  3527                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  3528  000D4C  500B               	movf	goto_XY@y^0,w,c
  3529  000D4E  0FCF               	addlw	207
  3530  000D50  6E0F               	movwf	goto_XY@temp^0,c
  3531                           
  3532                           ;lcd.c: 108:        z = temp>>4;
  3533  000D52  380F               	swapf	goto_XY@temp^0,w,c
  3534  000D54  0B0F               	andlw	15
  3535  000D56  6E0D               	movwf	goto_XY@z^0,c
  3536  000D58  EF5F  F006         	goto	l1571
  3537  000D5C                     l70:
  3538  000D5C                     l74:
  3539  000D5C  0012               	return		;funcret
  3540  000D5E                     __end_of_goto_XY:
  3541                           	opt callstack 0
  3542                           
  3543 ;; *************** function _lcd_cmd *****************
  3544 ;; Defined at:
  3545 ;;		line 67 in file "lcd.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  lcd             2    3[COMRAM] PTR struct .
  3548 ;;		 -> PORTD(1), 
  3549 ;;  a               1    5[COMRAM] unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3561 ;;      Params:         3       0       0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0
  3563 ;;      Temps:          1       0       0       0       0       0       0
  3564 ;;      Totals:         4       0       0       0       0       0       0
  3565 ;;Total ram usage:        4 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    3
  3568 ;; This function calls:
  3569 ;;		_pulso
  3570 ;; This function is called by:
  3571 ;;		_goto_XY
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text16
  3576  001380                     __ptext16:
  3577                           	opt callstack 0
  3578  001380                     _lcd_cmd:
  3579                           	opt callstack 23
  3580  001380                     
  3581                           ;lcd.c: 68:     lcd->RS = 0;
  3582  001380  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3583  001384  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3584  001388  90DF               	bcf	indf2,0,c
  3585  00138A                     
  3586                           ;lcd.c: 69:     lcd->data = (a);
  3587  00138A  C006  F007         	movff	lcd_cmd@a,??_lcd_cmd
  3588  00138E  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3589  001392  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3590  001396  3A07               	swapf	??_lcd_cmd^0,f,c
  3591  001398  50DF               	movf	indf2,w,c
  3592  00139A  1807               	xorwf	??_lcd_cmd^0,w,c
  3593  00139C  0B0F               	andlw	-241
  3594  00139E  1807               	xorwf	??_lcd_cmd^0,w,c
  3595  0013A0  6EDF               	movwf	indf2,c
  3596  0013A2                     
  3597                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3598  0013A2  0E06               	movlw	6
  3599  0013A4  6E07               	movwf	??_lcd_cmd^0,c
  3600  0013A6  0E30               	movlw	48
  3601  0013A8                     u1467:
  3602  0013A8  2EE8               	decfsz	wreg,f,c
  3603  0013AA  D7FE               	bra	u1467
  3604  0013AC  2E07               	decfsz	??_lcd_cmd^0,f,c
  3605  0013AE  D7FC               	bra	u1467
  3606  0013B0  D000               	nop2	
  3607  0013B2                     
  3608                           ;lcd.c: 72:     pulso(lcd);
  3609  0013B2  C004  F001         	movff	lcd_cmd@lcd,pulso@lcd
  3610  0013B6  C005  F002         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  3611  0013BA  ECE0  F009         	call	_pulso	;wreg free
  3612  0013BE  0012               	return		;funcret
  3613  0013C0                     __end_of_lcd_cmd:
  3614                           	opt callstack 0
  3615                           
  3616 ;; *************** function _function_set *****************
  3617 ;; Defined at:
  3618 ;;		line 21 in file "lcd.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  lcd             2    3[COMRAM] PTR struct .
  3621 ;;		 -> PORTD(1), 
  3622 ;;  data_lenght     1    5[COMRAM] unsigned char 
  3623 ;;  num_lines       1    6[COMRAM] unsigned char 
  3624 ;;  char_font       1    7[COMRAM] unsigned char 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3636 ;;      Params:         5       0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0
  3638 ;;      Temps:          3       0       0       0       0       0       0
  3639 ;;      Totals:         8       0       0       0       0       0       0
  3640 ;;Total ram usage:        8 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    3
  3643 ;; This function calls:
  3644 ;;		_pulso
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text17
  3651  000BC8                     __ptext17:
  3652                           	opt callstack 0
  3653  000BC8                     _function_set:
  3654                           	opt callstack 27
  3655  000BC8                     
  3656                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  3657  000BC8  C004  FFD9         	movff	function_set@lcd,fsr2l
  3658  000BCC  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3659  000BD0  94DF               	bcf	indf2,2,c
  3660                           
  3661                           ;lcd.c: 24:     lcd->RS = 0;
  3662  000BD2  C004  FFD9         	movff	function_set@lcd,fsr2l
  3663  000BD6  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3664  000BDA  90DF               	bcf	indf2,0,c
  3665                           
  3666                           ;lcd.c: 25:     lcd->R_W = 0;
  3667  000BDC  C004  FFD9         	movff	function_set@lcd,fsr2l
  3668  000BE0  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3669  000BE4  92DF               	bcf	indf2,1,c
  3670  000BE6                     
  3671                           ;lcd.c: 28:     lcd->data = 0x02;
  3672  000BE6  C004  FFD9         	movff	function_set@lcd,fsr2l
  3673  000BEA  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3674  000BEE  50DF               	movf	indf2,w,c
  3675  000BF0  0B0F               	andlw	-241
  3676  000BF2  0920               	iorlw	32
  3677  000BF4  6EDF               	movwf	indf2,c
  3678  000BF6                     
  3679                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3680  000BF6  0E06               	movlw	6
  3681  000BF8  6E09               	movwf	??_function_set^0,c
  3682  000BFA  0E30               	movlw	48
  3683  000BFC                     u1477:
  3684  000BFC  2EE8               	decfsz	wreg,f,c
  3685  000BFE  D7FE               	bra	u1477
  3686  000C00  2E09               	decfsz	??_function_set^0,f,c
  3687  000C02  D7FC               	bra	u1477
  3688  000C04  D000               	nop2	
  3689  000C06                     
  3690                           ;lcd.c: 31:     pulso(lcd);
  3691  000C06  C004  F001         	movff	function_set@lcd,pulso@lcd
  3692  000C0A  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3693  000C0E  ECE0  F009         	call	_pulso	;wreg free
  3694  000C12                     
  3695                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  3696  000C12  C006  F009         	movff	function_set@data_lenght,??_function_set
  3697  000C16  0E02               	movlw	2
  3698  000C18  1209               	iorwf	??_function_set^0,f,c
  3699  000C1A  C004  FFD9         	movff	function_set@lcd,fsr2l
  3700  000C1E  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3701  000C22  3A09               	swapf	??_function_set^0,f,c
  3702  000C24  50DF               	movf	indf2,w,c
  3703  000C26  1809               	xorwf	??_function_set^0,w,c
  3704  000C28  0B0F               	andlw	-241
  3705  000C2A  1809               	xorwf	??_function_set^0,w,c
  3706  000C2C  6EDF               	movwf	indf2,c
  3707  000C2E                     
  3708                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3709  000C2E  0E06               	movlw	6
  3710  000C30  6E09               	movwf	??_function_set^0,c
  3711  000C32  0E30               	movlw	48
  3712  000C34                     u1487:
  3713  000C34  2EE8               	decfsz	wreg,f,c
  3714  000C36  D7FE               	bra	u1487
  3715  000C38  2E09               	decfsz	??_function_set^0,f,c
  3716  000C3A  D7FC               	bra	u1487
  3717  000C3C  D000               	nop2	
  3718  000C3E                     
  3719                           ;lcd.c: 37:     pulso(lcd);
  3720  000C3E  C004  F001         	movff	function_set@lcd,pulso@lcd
  3721  000C42  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3722  000C46  ECE0  F009         	call	_pulso	;wreg free
  3723  000C4A                     
  3724                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  3725  000C4A  C004  FFD9         	movff	function_set@lcd,fsr2l
  3726  000C4E  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3727  000C52  38DF               	swapf	indf2,w,c
  3728  000C54  0B0F               	andlw	15
  3729  000C56  6E09               	movwf	??_function_set^0,c
  3730  000C58  C008  F00A         	movff	function_set@char_font,??_function_set+1
  3731  000C5C  90D8               	bcf	status,0,c
  3732  000C5E  360A               	rlcf	(??_function_set+1)^0,f,c
  3733  000C60  90D8               	bcf	status,0,c
  3734  000C62  360A               	rlcf	(??_function_set+1)^0,f,c
  3735  000C64  3807               	swapf	function_set@num_lines^0,w,c
  3736  000C66  42E8               	rrncf	wreg,f,c
  3737  000C68  0BF8               	andlw	248
  3738  000C6A  100A               	iorwf	(??_function_set+1)^0,w,c
  3739  000C6C  1009               	iorwf	??_function_set^0,w,c
  3740  000C6E  6E0B               	movwf	(??_function_set+2)^0,c
  3741  000C70  C004  FFD9         	movff	function_set@lcd,fsr2l
  3742  000C74  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3743  000C78  3A0B               	swapf	(??_function_set+2)^0,f,c
  3744  000C7A  50DF               	movf	indf2,w,c
  3745  000C7C  180B               	xorwf	(??_function_set+2)^0,w,c
  3746  000C7E  0B0F               	andlw	-241
  3747  000C80  180B               	xorwf	(??_function_set+2)^0,w,c
  3748  000C82  6EDF               	movwf	indf2,c
  3749  000C84                     
  3750                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3751  000C84  0E06               	movlw	6
  3752  000C86  6E09               	movwf	??_function_set^0,c
  3753  000C88  0E30               	movlw	48
  3754  000C8A                     u1497:
  3755  000C8A  2EE8               	decfsz	wreg,f,c
  3756  000C8C  D7FE               	bra	u1497
  3757  000C8E  2E09               	decfsz	??_function_set^0,f,c
  3758  000C90  D7FC               	bra	u1497
  3759  000C92  D000               	nop2	
  3760  000C94                     
  3761                           ;lcd.c: 44:     pulso(lcd);
  3762  000C94  C004  F001         	movff	function_set@lcd,pulso@lcd
  3763  000C98  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3764  000C9C  ECE0  F009         	call	_pulso	;wreg free
  3765  000CA0  0012               	return		;funcret
  3766  000CA2                     __end_of_function_set:
  3767                           	opt callstack 0
  3768                           
  3769 ;; *************** function _entry_mode_set *****************
  3770 ;; Defined at:
  3771 ;;		line 116 in file "lcd.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  lcd             2    3[COMRAM] PTR struct .
  3774 ;;		 -> PORTD(1), 
  3775 ;;  move_directi    1    5[COMRAM] unsigned char 
  3776 ;;  display_shif    1    6[COMRAM] unsigned char 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3788 ;;      Params:         4       0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0
  3790 ;;      Temps:          1       0       0       0       0       0       0
  3791 ;;      Totals:         5       0       0       0       0       0       0
  3792 ;;Total ram usage:        5 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    3
  3795 ;; This function calls:
  3796 ;;		_pulso
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text18
  3803  00107C                     __ptext18:
  3804                           	opt callstack 0
  3805  00107C                     _entry_mode_set:
  3806                           	opt callstack 27
  3807  00107C                     
  3808                           ;lcd.c: 117:     lcd->E = 0;
  3809  00107C  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3810  001080  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3811  001084  94DF               	bcf	indf2,2,c
  3812                           
  3813                           ;lcd.c: 118:     lcd->RS = 0;
  3814  001086  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3815  00108A  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3816  00108E  90DF               	bcf	indf2,0,c
  3817                           
  3818                           ;lcd.c: 119:     lcd->R_W = 0;
  3819  001090  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3820  001094  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3821  001098  92DF               	bcf	indf2,1,c
  3822  00109A                     
  3823                           ;lcd.c: 121:     lcd->data = 0x00;
  3824  00109A  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3825  00109E  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3826  0010A2  0E0F               	movlw	-241
  3827  0010A4  16DF               	andwf	indf2,f,c
  3828  0010A6                     
  3829                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3830  0010A6  0E06               	movlw	6
  3831  0010A8  6E08               	movwf	??_entry_mode_set^0,c
  3832  0010AA  0E30               	movlw	48
  3833  0010AC                     u1507:
  3834  0010AC  2EE8               	decfsz	wreg,f,c
  3835  0010AE  D7FE               	bra	u1507
  3836  0010B0  2E08               	decfsz	??_entry_mode_set^0,f,c
  3837  0010B2  D7FC               	bra	u1507
  3838  0010B4  D000               	nop2	
  3839  0010B6                     
  3840                           ;lcd.c: 124:     pulso(lcd);
  3841  0010B6  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3842  0010BA  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3843  0010BE  ECE0  F009         	call	_pulso	;wreg free
  3844  0010C2                     
  3845                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  3846  0010C2  5006               	movf	entry_mode_set@move_direction^0,w,c
  3847  0010C4  2406               	addwf	entry_mode_set@move_direction^0,w,c
  3848  0010C6  1007               	iorwf	entry_mode_set@display_shift^0,w,c
  3849  0010C8  6E08               	movwf	??_entry_mode_set^0,c
  3850  0010CA  0E04               	movlw	4
  3851  0010CC  1208               	iorwf	??_entry_mode_set^0,f,c
  3852  0010CE  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3853  0010D2  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3854  0010D6  3A08               	swapf	??_entry_mode_set^0,f,c
  3855  0010D8  50DF               	movf	indf2,w,c
  3856  0010DA  1808               	xorwf	??_entry_mode_set^0,w,c
  3857  0010DC  0B0F               	andlw	-241
  3858  0010DE  1808               	xorwf	??_entry_mode_set^0,w,c
  3859  0010E0  6EDF               	movwf	indf2,c
  3860  0010E2                     
  3861                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3862  0010E2  0E06               	movlw	6
  3863  0010E4  6E08               	movwf	??_entry_mode_set^0,c
  3864  0010E6  0E30               	movlw	48
  3865  0010E8                     u1517:
  3866  0010E8  2EE8               	decfsz	wreg,f,c
  3867  0010EA  D7FE               	bra	u1517
  3868  0010EC  2E08               	decfsz	??_entry_mode_set^0,f,c
  3869  0010EE  D7FC               	bra	u1517
  3870  0010F0  D000               	nop2	
  3871  0010F2                     
  3872                           ;lcd.c: 130:     pulso(lcd);
  3873  0010F2  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3874  0010F6  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3875  0010FA  ECE0  F009         	call	_pulso	;wreg free
  3876  0010FE  0012               	return		;funcret
  3877  001100                     __end_of_entry_mode_set:
  3878                           	opt callstack 0
  3879                           
  3880 ;; *************** function _display_onoff_control *****************
  3881 ;; Defined at:
  3882 ;;		line 47 in file "lcd.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  lcd             2    3[COMRAM] PTR struct .
  3885 ;;		 -> PORTD(1), 
  3886 ;;  display_on      1    5[COMRAM] unsigned char 
  3887 ;;  cursor_on       1    6[COMRAM] unsigned char 
  3888 ;;  blink           1    7[COMRAM] unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3900 ;;      Params:         5       0       0       0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0       0       0
  3902 ;;      Temps:          2       0       0       0       0       0       0
  3903 ;;      Totals:         7       0       0       0       0       0       0
  3904 ;;Total ram usage:        7 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    3
  3907 ;; This function calls:
  3908 ;;		_pulso
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text19
  3915  000FEE                     __ptext19:
  3916                           	opt callstack 0
  3917  000FEE                     _display_onoff_control:
  3918                           	opt callstack 27
  3919  000FEE                     
  3920                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  3921  000FEE  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3922  000FF2  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3923  000FF6  94DF               	bcf	indf2,2,c
  3924                           
  3925                           ;lcd.c: 50:     lcd->RS = 0;
  3926  000FF8  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3927  000FFC  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3928  001000  90DF               	bcf	indf2,0,c
  3929                           
  3930                           ;lcd.c: 51:     lcd->R_W = 0;
  3931  001002  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3932  001006  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3933  00100A  92DF               	bcf	indf2,1,c
  3934  00100C                     
  3935                           ;lcd.c: 54:     lcd->data = 0x00;
  3936  00100C  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3937  001010  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3938  001014  0E0F               	movlw	-241
  3939  001016  16DF               	andwf	indf2,f,c
  3940  001018                     
  3941                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3942  001018  0E06               	movlw	6
  3943  00101A  6E09               	movwf	??_display_onoff_control^0,c
  3944  00101C  0E30               	movlw	48
  3945  00101E                     u1527:
  3946  00101E  2EE8               	decfsz	wreg,f,c
  3947  001020  D7FE               	bra	u1527
  3948  001022  2E09               	decfsz	??_display_onoff_control^0,f,c
  3949  001024  D7FC               	bra	u1527
  3950  001026  D000               	nop2	
  3951  001028                     
  3952                           ;lcd.c: 57:     pulso(lcd);
  3953  001028  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3954  00102C  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3955  001030  ECE0  F009         	call	_pulso	;wreg free
  3956  001034                     
  3957                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  3958  001034  90D8               	bcf	status,0,c
  3959  001036  3407               	rlcf	display_onoff_control@cursor_on^0,w,c
  3960  001038  6E09               	movwf	??_display_onoff_control^0,c
  3961  00103A  4406               	rlncf	display_onoff_control@display_on^0,w,c
  3962  00103C  46E8               	rlncf	wreg,f,c
  3963  00103E  0BFC               	andlw	252
  3964  001040  1009               	iorwf	??_display_onoff_control^0,w,c
  3965  001042  1008               	iorwf	display_onoff_control@blink^0,w,c
  3966  001044  6E0A               	movwf	(??_display_onoff_control+1)^0,c
  3967  001046  0E08               	movlw	8
  3968  001048  120A               	iorwf	(??_display_onoff_control+1)^0,f,c
  3969  00104A  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3970  00104E  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3971  001052  3A0A               	swapf	(??_display_onoff_control+1)^0,f,c
  3972  001054  50DF               	movf	indf2,w,c
  3973  001056  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3974  001058  0B0F               	andlw	-241
  3975  00105A  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3976  00105C  6EDF               	movwf	indf2,c
  3977  00105E                     
  3978                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3979  00105E  0E06               	movlw	6
  3980  001060  6E09               	movwf	??_display_onoff_control^0,c
  3981  001062  0E30               	movlw	48
  3982  001064                     u1537:
  3983  001064  2EE8               	decfsz	wreg,f,c
  3984  001066  D7FE               	bra	u1537
  3985  001068  2E09               	decfsz	??_display_onoff_control^0,f,c
  3986  00106A  D7FC               	bra	u1537
  3987  00106C  D000               	nop2	
  3988  00106E                     
  3989                           ;lcd.c: 64:     pulso(lcd);
  3990  00106E  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3991  001072  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3992  001076  ECE0  F009         	call	_pulso	;wreg free
  3993  00107A  0012               	return		;funcret
  3994  00107C                     __end_of_display_onoff_control:
  3995                           	opt callstack 0
  3996                           
  3997 ;; *************** function _pulso *****************
  3998 ;; Defined at:
  3999 ;;		line 11 in file "lcd.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  lcd             2    0[COMRAM] PTR struct .
  4002 ;;		 -> PORTD(1), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr2l, fsr2h
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4014 ;;      Params:         2       0       0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0
  4016 ;;      Temps:          1       0       0       0       0       0       0
  4017 ;;      Totals:         3       0       0       0       0       0       0
  4018 ;;Total ram usage:        3 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    2
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_function_set
  4025 ;;		_display_onoff_control
  4026 ;;		_lcd_cmd
  4027 ;;		_entry_mode_set
  4028 ;;		_clear_display
  4029 ;;		_return_home
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text20
  4034  0013C0                     __ptext20:
  4035                           	opt callstack 0
  4036  0013C0                     _pulso:
  4037                           	opt callstack 23
  4038  0013C0                     
  4039                           ;lcd.c: 13:     lcd->E = 1;
  4040  0013C0  C001  FFD9         	movff	pulso@lcd,fsr2l
  4041  0013C4  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  4042  0013C8  84DF               	bsf	indf2,2,c
  4043  0013CA                     
  4044                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4045  0013CA  0E06               	movlw	6
  4046  0013CC  6E03               	movwf	??_pulso^0,c
  4047  0013CE  0E30               	movlw	48
  4048  0013D0                     u1547:
  4049  0013D0  2EE8               	decfsz	wreg,f,c
  4050  0013D2  D7FE               	bra	u1547
  4051  0013D4  2E03               	decfsz	??_pulso^0,f,c
  4052  0013D6  D7FC               	bra	u1547
  4053  0013D8  D000               	nop2	
  4054  0013DA                     
  4055                           ;lcd.c: 17:     lcd->E = 0;
  4056  0013DA  C001  FFD9         	movff	pulso@lcd,fsr2l
  4057  0013DE  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  4058  0013E2  94DF               	bcf	indf2,2,c
  4059                           
  4060                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4061  0013E4  0E06               	movlw	6
  4062  0013E6  6E03               	movwf	??_pulso^0,c
  4063  0013E8  0E30               	movlw	48
  4064  0013EA                     u1557:
  4065  0013EA  2EE8               	decfsz	wreg,f,c
  4066  0013EC  D7FE               	bra	u1557
  4067  0013EE  2E03               	decfsz	??_pulso^0,f,c
  4068  0013F0  D7FC               	bra	u1557
  4069  0013F2  D000               	nop2	
  4070  0013F4  0012               	return		;funcret
  4071  0013F6                     __end_of_pulso:
  4072                           	opt callstack 0
  4073                           
  4074 ;; *************** function _int_handler *****************
  4075 ;; Defined at:
  4076 ;;		line 24 in file "main.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4090 ;;      Params:         0       0       0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    1
  4097 ;; This function calls:
  4098 ;;		_le_entrada
  4099 ;; This function is called by:
  4100 ;;		Interrupt level 2
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	intcode
  4105  000008                     __pintcode:
  4106                           	opt callstack 0
  4107  000008                     _int_handler:
  4108                           	opt callstack 23
  4109                           
  4110                           ;incstack = 0
  4111  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4112  00000A  EDFB  F009         	call	int_func,f	;refresh shadow registers
  4113                           
  4114                           	psect	intcode_body
  4115  0013F6                     __pintcode_body:
  4116                           	opt callstack 23
  4117  0013F6                     int_func:
  4118                           	opt callstack 23
  4119  0013F6  0006               	pop		; remove dummy address from shadow register refresh
  4120  0013F8                     
  4121                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  4122  0013F8  A4F2               	btfss	242,2,c	;volatile
  4123  0013FA  EF01  F00A         	goto	i2u85_41
  4124  0013FE  EF03  F00A         	goto	i2u85_40
  4125  001402                     i2u85_41:
  4126  001402  EF08  F00A         	goto	i2l1499
  4127  001406                     i2u85_40:
  4128  001406                     
  4129                           ;main.c: 26:         TMR0L = 0x63;
  4130  001406  0E63               	movlw	99
  4131  001408  6ED6               	movwf	214,c	;volatile
  4132  00140A                     
  4133                           ;main.c: 27:         le_entrada();
  4134  00140A  EC8D  F003         	call	_le_entrada	;wreg free
  4135  00140E                     
  4136                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  4137  00140E  94F2               	bcf	242,2,c	;volatile
  4138  001410                     i2l1499:
  4139                           
  4140                           ;main.c: 30:     if(INTCONbits.INT0IF == 1){
  4141  001410  A2F2               	btfss	242,1,c	;volatile
  4142  001412  EF0D  F00A         	goto	i2u86_41
  4143  001416  EF0F  F00A         	goto	i2u86_40
  4144  00141A                     i2u86_41:
  4145  00141A  EF11  F00A         	goto	i2l41
  4146  00141E                     i2u86_40:
  4147  00141E                     
  4148                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  4149  00141E  92F2               	bcf	242,1,c	;volatile
  4150  001420  00FF               	reset		;# 
  4151  001422                     i2l41:
  4152  001422  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4153  001424  0011               	retfie		f
  4154  001426                     __end_of_int_handler:
  4155                           	opt callstack 0
  4156                           
  4157 ;; *************** function _le_entrada *****************
  4158 ;; Defined at:
  4159 ;;		line 12 in file "keyboard.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4173 ;;      Params:         0       0       0       0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0
  4176 ;;      Totals:         0       0       0       0       0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_int_handler
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text22
  4187  00071A                     __ptext22:
  4188                           	opt callstack 0
  4189  00071A                     _le_entrada:
  4190                           	opt callstack 23
  4191  00071A                     
  4192                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  4193  00071A  8E81               	bsf	129,7,c	;volatile
  4194                           
  4195                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  4196  00071C  B048               	btfsc	_botoes_ant^0,0,c
  4197  00071E  EF93  F003         	goto	i2u55_41
  4198  000722  EF95  F003         	goto	i2u55_40
  4199  000726                     i2u55_41:
  4200  000726  EF9C  F003         	goto	i2l1347
  4201  00072A                     i2u55_40:
  4202  00072A  B481               	btfsc	129,2,c	;volatile
  4203  00072C  EF9A  F003         	goto	i2u56_41
  4204  000730  EF9C  F003         	goto	i2u56_40
  4205  000734                     i2u56_41:
  4206  000734  EFA4  F003         	goto	i2l114
  4207  000738                     i2u56_40:
  4208  000738                     i2l1347:
  4209  000738  0E32               	movlw	50
  4210  00073A  6447               	cpfsgt	_cont_u^0,c
  4211  00073C  EFA2  F003         	goto	i2u57_41
  4212  000740  EFA4  F003         	goto	i2u57_40
  4213  000744                     i2u57_41:
  4214  000744  EFAA  F003         	goto	i2l112
  4215  000748                     i2u57_40:
  4216  000748                     i2l114:
  4217                           
  4218                           ;keyboard.c: 15:         botoes.U = 1;
  4219  000748  8049               	bsf	_botoes^0,0,c
  4220                           
  4221                           ;keyboard.c: 16:         botoes_ant.U = 1;
  4222  00074A  8048               	bsf	_botoes_ant^0,0,c
  4223  00074C                     i2l1349:
  4224                           
  4225                           ;keyboard.c: 17:         cont_u = 0;
  4226  00074C  0E00               	movlw	0
  4227  00074E  6E47               	movwf	_cont_u^0,c
  4228                           
  4229                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  4230  000750  EFC4  F003         	goto	i2l1359
  4231  000754                     i2l112:
  4232  000754  A048               	btfss	_botoes_ant^0,0,c
  4233  000756  EFAF  F003         	goto	i2u58_41
  4234  00075A  EFB1  F003         	goto	i2u58_40
  4235  00075E                     i2u58_41:
  4236  00075E  EFBC  F003         	goto	i2l118
  4237  000762                     i2u58_40:
  4238  000762  B481               	btfsc	129,2,c	;volatile
  4239  000764  EFB6  F003         	goto	i2u59_41
  4240  000768  EFB8  F003         	goto	i2u59_40
  4241  00076C                     i2u59_41:
  4242  00076C  EFBC  F003         	goto	i2l118
  4243  000770                     i2u59_40:
  4244  000770                     
  4245                           ;keyboard.c: 19:         botoes.U = 0;
  4246  000770  9049               	bcf	_botoes^0,0,c
  4247                           
  4248                           ;keyboard.c: 20:         botoes_ant.U = 0;
  4249  000772  9048               	bcf	_botoes_ant^0,0,c
  4250  000774  EFA6  F003         	goto	i2l1349
  4251  000778                     i2l118:
  4252  000778  A481               	btfss	129,2,c	;volatile
  4253  00077A  EFC1  F003         	goto	i2u60_41
  4254  00077E  EFC3  F003         	goto	i2u60_40
  4255  000782                     i2u60_41:
  4256  000782  EFC4  F003         	goto	i2l1359
  4257  000786                     i2u60_40:
  4258  000786  2A47               	incf	_cont_u^0,f,c
  4259  000788                     i2l1359:
  4260                           
  4261                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  4262  000788  9E81               	bcf	129,7,c	;volatile
  4263  00078A                     
  4264                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  4265  00078A  8C81               	bsf	129,6,c	;volatile
  4266  00078C                     
  4267                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  4268  00078C  B448               	btfsc	_botoes_ant^0,2,c
  4269  00078E  EFCB  F003         	goto	i2u61_41
  4270  000792  EFCD  F003         	goto	i2u61_40
  4271  000796                     i2u61_41:
  4272  000796  EFD4  F003         	goto	i2l1367
  4273  00079A                     i2u61_40:
  4274  00079A  B281               	btfsc	129,1,c	;volatile
  4275  00079C  EFD2  F003         	goto	i2u62_41
  4276  0007A0  EFD4  F003         	goto	i2u62_40
  4277  0007A4                     i2u62_41:
  4278  0007A4  EFDC  F003         	goto	i2l123
  4279  0007A8                     i2u62_40:
  4280  0007A8                     i2l1367:
  4281  0007A8  0E32               	movlw	50
  4282  0007AA  6445               	cpfsgt	_cont_l^0,c
  4283  0007AC  EFDA  F003         	goto	i2u63_41
  4284  0007B0  EFDC  F003         	goto	i2u63_40
  4285  0007B4                     i2u63_41:
  4286  0007B4  EFE2  F003         	goto	i2l121
  4287  0007B8                     i2u63_40:
  4288  0007B8                     i2l123:
  4289                           
  4290                           ;keyboard.c: 27:         botoes.L = 1;
  4291  0007B8  8449               	bsf	_botoes^0,2,c
  4292                           
  4293                           ;keyboard.c: 28:         botoes_ant.L = 1;
  4294  0007BA  8448               	bsf	_botoes_ant^0,2,c
  4295  0007BC                     i2l1369:
  4296                           
  4297                           ;keyboard.c: 29:         cont_l = 0;
  4298  0007BC  0E00               	movlw	0
  4299  0007BE  6E45               	movwf	_cont_l^0,c
  4300                           
  4301                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  4302  0007C0  EFFC  F003         	goto	i2l1379
  4303  0007C4                     i2l121:
  4304  0007C4  A448               	btfss	_botoes_ant^0,2,c
  4305  0007C6  EFE7  F003         	goto	i2u64_41
  4306  0007CA  EFE9  F003         	goto	i2u64_40
  4307  0007CE                     i2u64_41:
  4308  0007CE  EFF4  F003         	goto	i2l127
  4309  0007D2                     i2u64_40:
  4310  0007D2  B281               	btfsc	129,1,c	;volatile
  4311  0007D4  EFEE  F003         	goto	i2u65_41
  4312  0007D8  EFF0  F003         	goto	i2u65_40
  4313  0007DC                     i2u65_41:
  4314  0007DC  EFF4  F003         	goto	i2l127
  4315  0007E0                     i2u65_40:
  4316  0007E0                     
  4317                           ;keyboard.c: 31:         botoes.L = 0;
  4318  0007E0  9449               	bcf	_botoes^0,2,c
  4319                           
  4320                           ;keyboard.c: 32:         botoes_ant.L = 0;
  4321  0007E2  9448               	bcf	_botoes_ant^0,2,c
  4322  0007E4  EFDE  F003         	goto	i2l1369
  4323  0007E8                     i2l127:
  4324  0007E8  A281               	btfss	129,1,c	;volatile
  4325  0007EA  EFF9  F003         	goto	i2u66_41
  4326  0007EE  EFFB  F003         	goto	i2u66_40
  4327  0007F2                     i2u66_41:
  4328  0007F2  EFFC  F003         	goto	i2l1379
  4329  0007F6                     i2u66_40:
  4330  0007F6  2A45               	incf	_cont_l^0,f,c
  4331  0007F8                     i2l1379:
  4332                           
  4333                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  4334  0007F8  B648               	btfsc	_botoes_ant^0,3,c
  4335  0007FA  EF01  F004         	goto	i2u67_41
  4336  0007FE  EF03  F004         	goto	i2u67_40
  4337  000802                     i2u67_41:
  4338  000802  EF0A  F004         	goto	i2l1383
  4339  000806                     i2u67_40:
  4340  000806  B681               	btfsc	129,3,c	;volatile
  4341  000808  EF08  F004         	goto	i2u68_41
  4342  00080C  EF0A  F004         	goto	i2u68_40
  4343  000810                     i2u68_41:
  4344  000810  EF12  F004         	goto	i2l132
  4345  000814                     i2u68_40:
  4346  000814                     i2l1383:
  4347  000814  0E32               	movlw	50
  4348  000816  6444               	cpfsgt	_cont_r^0,c
  4349  000818  EF10  F004         	goto	i2u69_41
  4350  00081C  EF12  F004         	goto	i2u69_40
  4351  000820                     i2u69_41:
  4352  000820  EF18  F004         	goto	i2l130
  4353  000824                     i2u69_40:
  4354  000824                     i2l132:
  4355                           
  4356                           ;keyboard.c: 37:         botoes.R = 1;
  4357  000824  8649               	bsf	_botoes^0,3,c
  4358                           
  4359                           ;keyboard.c: 38:         botoes_ant.R = 1;
  4360  000826  8648               	bsf	_botoes_ant^0,3,c
  4361  000828                     i2l1385:
  4362                           
  4363                           ;keyboard.c: 39:         cont_r = 0;
  4364  000828  0E00               	movlw	0
  4365  00082A  6E44               	movwf	_cont_r^0,c
  4366                           
  4367                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  4368  00082C  EF32  F004         	goto	i2l1395
  4369  000830                     i2l130:
  4370  000830  A648               	btfss	_botoes_ant^0,3,c
  4371  000832  EF1D  F004         	goto	i2u70_41
  4372  000836  EF1F  F004         	goto	i2u70_40
  4373  00083A                     i2u70_41:
  4374  00083A  EF2A  F004         	goto	i2l136
  4375  00083E                     i2u70_40:
  4376  00083E  B681               	btfsc	129,3,c	;volatile
  4377  000840  EF24  F004         	goto	i2u71_41
  4378  000844  EF26  F004         	goto	i2u71_40
  4379  000848                     i2u71_41:
  4380  000848  EF2A  F004         	goto	i2l136
  4381  00084C                     i2u71_40:
  4382  00084C                     
  4383                           ;keyboard.c: 41:         botoes.R = 0;
  4384  00084C  9649               	bcf	_botoes^0,3,c
  4385                           
  4386                           ;keyboard.c: 42:         botoes_ant.R = 0;
  4387  00084E  9648               	bcf	_botoes_ant^0,3,c
  4388  000850  EF14  F004         	goto	i2l1385
  4389  000854                     i2l136:
  4390  000854  A681               	btfss	129,3,c	;volatile
  4391  000856  EF2F  F004         	goto	i2u72_41
  4392  00085A  EF31  F004         	goto	i2u72_40
  4393  00085E                     i2u72_41:
  4394  00085E  EF32  F004         	goto	i2l1395
  4395  000862                     i2u72_40:
  4396  000862  2A44               	incf	_cont_r^0,f,c
  4397  000864                     i2l1395:
  4398                           
  4399                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  4400  000864  9C81               	bcf	129,6,c	;volatile
  4401  000866                     
  4402                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  4403  000866  8A81               	bsf	129,5,c	;volatile
  4404  000868                     
  4405                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  4406  000868  B248               	btfsc	_botoes_ant^0,1,c
  4407  00086A  EF39  F004         	goto	i2u73_41
  4408  00086E  EF3B  F004         	goto	i2u73_40
  4409  000872                     i2u73_41:
  4410  000872  EF42  F004         	goto	i2l1403
  4411  000876                     i2u73_40:
  4412  000876  B481               	btfsc	129,2,c	;volatile
  4413  000878  EF40  F004         	goto	i2u74_41
  4414  00087C  EF42  F004         	goto	i2u74_40
  4415  000880                     i2u74_41:
  4416  000880  EF4A  F004         	goto	i2l141
  4417  000884                     i2u74_40:
  4418  000884                     i2l1403:
  4419  000884  0E32               	movlw	50
  4420  000886  6446               	cpfsgt	_cont_d^0,c
  4421  000888  EF48  F004         	goto	i2u75_41
  4422  00088C  EF4A  F004         	goto	i2u75_40
  4423  000890                     i2u75_41:
  4424  000890  EF50  F004         	goto	i2l139
  4425  000894                     i2u75_40:
  4426  000894                     i2l141:
  4427                           
  4428                           ;keyboard.c: 49:         botoes.D = 1;
  4429  000894  8249               	bsf	_botoes^0,1,c
  4430                           
  4431                           ;keyboard.c: 50:         botoes_ant.D = 1;
  4432  000896  8248               	bsf	_botoes_ant^0,1,c
  4433  000898                     i2l1405:
  4434                           
  4435                           ;keyboard.c: 51:         cont_d = 0;
  4436  000898  0E00               	movlw	0
  4437  00089A  6E46               	movwf	_cont_d^0,c
  4438                           
  4439                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  4440  00089C  EF6A  F004         	goto	i2l1415
  4441  0008A0                     i2l139:
  4442  0008A0  A248               	btfss	_botoes_ant^0,1,c
  4443  0008A2  EF55  F004         	goto	i2u76_41
  4444  0008A6  EF57  F004         	goto	i2u76_40
  4445  0008AA                     i2u76_41:
  4446  0008AA  EF62  F004         	goto	i2l145
  4447  0008AE                     i2u76_40:
  4448  0008AE  B481               	btfsc	129,2,c	;volatile
  4449  0008B0  EF5C  F004         	goto	i2u77_41
  4450  0008B4  EF5E  F004         	goto	i2u77_40
  4451  0008B8                     i2u77_41:
  4452  0008B8  EF62  F004         	goto	i2l145
  4453  0008BC                     i2u77_40:
  4454  0008BC                     
  4455                           ;keyboard.c: 53:         botoes.D = 0;
  4456  0008BC  9249               	bcf	_botoes^0,1,c
  4457                           
  4458                           ;keyboard.c: 54:         botoes_ant.D = 0;
  4459  0008BE  9248               	bcf	_botoes_ant^0,1,c
  4460  0008C0  EF4C  F004         	goto	i2l1405
  4461  0008C4                     i2l145:
  4462  0008C4  A481               	btfss	129,2,c	;volatile
  4463  0008C6  EF67  F004         	goto	i2u78_41
  4464  0008CA  EF69  F004         	goto	i2u78_40
  4465  0008CE                     i2u78_41:
  4466  0008CE  EF6A  F004         	goto	i2l1415
  4467  0008D2                     i2u78_40:
  4468  0008D2  2A46               	incf	_cont_d^0,f,c
  4469  0008D4                     i2l1415:
  4470                           
  4471                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  4472  0008D4  9A81               	bcf	129,5,c	;volatile
  4473  0008D6                     
  4474                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  4475  0008D6  8881               	bsf	129,4,c	;volatile
  4476  0008D8                     
  4477                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  4478  0008D8  A281               	btfss	129,1,c	;volatile
  4479  0008DA  D002               	bra	i2u79_45
  4480  0008DC  8849               	bsf	_botoes^0,4,c
  4481  0008DE  D001               	bra	i2u79_47
  4482  0008E0                     i2u79_45:
  4483  0008E0  9849               	bcf	_botoes^0,4,c
  4484  0008E2                     i2u79_47:
  4485  0008E2                     
  4486                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  4487  0008E2  A681               	btfss	129,3,c	;volatile
  4488  0008E4  D002               	bra	i2u80_45
  4489  0008E6  8A49               	bsf	_botoes^0,5,c
  4490  0008E8  D001               	bra	i2u80_47
  4491  0008EA                     i2u80_45:
  4492  0008EA  9A49               	bcf	_botoes^0,5,c
  4493  0008EC                     i2u80_47:
  4494  0008EC                     
  4495                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  4496  0008EC  9881               	bcf	129,4,c	;volatile
  4497  0008EE  0012               	return		;funcret
  4498  0008F0                     __end_of_le_entrada:
  4499                           	opt callstack 0
  4500                           
  4501                           	psect	rparam
  4502  0000                     
  4503                           	psect	temp
  4504  000055                     btemp:
  4505                           	opt callstack 0
  4506  000055                     	ds	1
  4507  0000                     int$flags	set	btemp
  4508  0000                     wtemp8	set	btemp+1
  4509  0000                     ttemp5	set	btemp+1
  4510  0000                     ttemp6	set	btemp+4
  4511  0000                     ttemp7	set	btemp+8
  4512                           tosu	equ	0xFFF
  4513                           tosh	equ	0xFFE
  4514                           tosl	equ	0xFFD
  4515                           stkptr	equ	0xFFC
  4516                           pclatu	equ	0xFFB
  4517                           pclath	equ	0xFFA
  4518                           pcl	equ	0xFF9
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           prodh	equ	0xFF4
  4524                           prodl	equ	0xFF3
  4525                           indf0	equ	0xFEF
  4526                           postinc0	equ	0xFEE
  4527                           postdec0	equ	0xFED
  4528                           preinc0	equ	0xFEC
  4529                           plusw0	equ	0xFEB
  4530                           fsr0h	equ	0xFEA
  4531                           fsr0l	equ	0xFE9
  4532                           wreg	equ	0xFE8
  4533                           indf1	equ	0xFE7
  4534                           postinc1	equ	0xFE6
  4535                           postdec1	equ	0xFE5
  4536                           preinc1	equ	0xFE4
  4537                           plusw1	equ	0xFE3
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           bsr	equ	0xFE0
  4541                           indf2	equ	0xFDF
  4542                           postinc2	equ	0xFDE
  4543                           postdec2	equ	0xFDD
  4544                           preinc2	equ	0xFDC
  4545                           plusw2	equ	0xFDB
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8


Data Sizes:
    Strings     282
    Constant    0
    Data        3
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     64      84
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48594
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   44186
                                             62 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8546
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                               22    20      2    9948
                                             40 COMRAM    22    20      2
                            ___awmod
                          _print_mat
                               _rand
                              _srand
                             _strcpy
                               _time
 ---------------------------------------------------------------------------------
 (3) _time                                                 8     0      8     120
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _srand                                                6     4      2      98
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    3744
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4660
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       ___awmod
         _rand (ARG)
           ___omul
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _rand
         ___omul
       _srand
         _time (ARG)
       _strcpy
       _time
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     40      54       1       66.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      15        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 20 20:38:43 2020

                              _x 0054                                _y 0042  
         ?_display_onoff_control 0004                               l61 107A  
                             l70 0D5C                               l46 1174  
                             l55 13F4                               l64 13BE  
                             l58 0CA0                               l74 0D5C  
                             l82 0AEA                               l77 10FE  
                             l95 0EB8                               _op 0043  
                    creditos@lcd 001A                      __CFG_OSC$HS 000000  
                            l202 12AE                              l230 06FE  
                            l215 0310                              l233 0718  
                            l243 0964                              l236 11D4  
                            l228 0670                              l239 11E2  
                            l247 0A02                              l183 0F58  
                            l185 0FE8                              l267 0F36  
                            l196 1240                              l268 0F56  
                            l199 124E                              l494 0E0C  
                            l926 1452                              l935 137E  
                            l929 0BC6                              l939 12FA  
                            u900 0D4C                              u901 0D48  
                            u910 0ADC                              u911 0AD8  
                            u921 0EC0                              u930 0ED4  
                            u931 0ED0                              u940 0F36  
                            u941 0F32                              u870 0CB2  
                            u950 0E98                              u871 0CAE  
                            u951 0E94                              u880 0D08  
                            u960 0EB8                              u881 0D04  
                            u961 0EB4                              u890 0D2A  
                            u970 137E                              u891 0D26  
                            u971 137A                              u980 12C2  
                            u981 12BE                              u990 0BB8  
                            u995 0BA6                      finaliza@lcd 001A  
                            _lcd 0052                     ___awmod@sign 0028  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0001                     __CFG_WDT$OFF 000000  
                           l2001 10F2                             l2011 0F94  
                           l2003 0F58                             l2013 0FA4  
                           l2005 0F64                             l2021 1100  
                           l2015 0FB6                             l2007 0F74  
                           l2031 1120                             l2023 1118  
                           l2017 0FC6                             l2009 0F84  
                           l2041 1168                             l2033 1122  
                           l2025 111A                             l2019 0FD8  
                           l2035 113A                             l2027 111C  
                           l2037 1152                             l2029 111E  
                           l2039 1166                             l1603 0D3A  
                           l1605 0D4C                             l1621 0A4A  
                           l1701 0D62                             l1631 0A98  
                           l1623 0A54                             l1615 0A04  
                           l1711 0D92                             l1703 0D70  
                           l1553 13C0                             l1561 138A  
                           l1641 0ADC                             l1633 0AA2  
                           l1625 0A80                             l1617 0A22  
                           l1721 0DD8                             l1713 0DA4  
                           l1705 0D78                             l1555 13CA  
                           l1563 13A2                             l1571 0CBE  
                           l1643 0AE6                             l1635 0AAC  
                           l1627 0A84                             l1619 0A40  
                           l1731 0E04                             l1723 0DE0  
                           l1715 0DAC                             l1707 0D7C  
                           l1651 0EF4                             l1811 013A  
                           l1557 13DA                             l1565 13B2  
                           l1581 0D08                             l1573 0CC2  
                           l1637 0AB6                             l1629 0A8E  
                           l1661 0E16                             l1725 0DE6  
                           l1717 0DB4                             l1709 0D8A  
                           l1653 0F06                             l1645 0EBA  
                           l1901 058A                             l1821 0200  
                           l1813 01B2                             l1805 0132  
                           l1741 0972                             l1559 1380  
                           l1591 0D18                             l1575 0CD2  
                           l1567 0CA2                             l1639 0AC0  
                           l1671 0E78                             l1663 0E2A  
                           l1655 0E0E                             l1719 0DC2  
                           l1727 0DEC                             l1647 0EC6  
                           l1903 059A                             l1911 05E6  
                           l1831 02AC                             l1823 021C  
                           l1815 01B6                             l1751 09AE  
                           l1743 0982                             l1735 08F0  
                           l1593 0D2A                             l1577 0CE2  
                           l1569 0CB2                             l1673 0E7C  
                           l1681 1350                             l1729 0DFC  
                           l1649 0ED4                             l1921 062C  
                           l1913 05F4                             l1905 05BE  
                           l1841 02D8                             l1833 02AE  
                           l1825 0274                             l1817 01D2  
                           l1761 09EE                             l1745 0996  
                           l1753 09BA                             l1737 0940  
                           l1579 0CF6                             l1675 0E98  
                           l1691 1426                             l1683 12B0  
                           l1931 06E2                             l1915 0604  
                           l1907 05C0                             l1851 02F6  
                           l1843 02DC                             l1835 02C0  
                           l1827 0288                             l1819 01FC  
                           l1923 0650                             l1771 004A  
                           l1755 09C8                             l1747 0998  
                           l1739 0954                             l1677 0E9C  
                           l1669 0E32                             l1693 0AEC  
                           l1685 12C2                             l1933 06E6  
                           l1941 070C                             l1925 065E  
                           l1917 0628                             l1909 05C2  
                           l1861 0388                             l1853 0308  
                           l1845 02DE                             l1837 02C4  
                           l1829 029A                             l1781 008E  
                           l1773 0052                             l1757 09D8  
                           l1749 099A                             l1679 1340  
                           l1951 1250                             l1943 1178  
                           l1695 0B80                             l1687 12EA  
                           l1935 06EA                             l1927 0680  
                           l1919 062A                             l1871 0436  
                           l1863 0390                             l1847 02F0  
                           l1839 02C6                             l1855 0310  
                           l1791 00C4                             l1783 00A2  
                           l1775 0052                             l1759 09EC  
                           l1767 09F4                             l1961 0C06  
                           l1953 12A0                             l1945 11C8  
                           l1937 06EE                             l1929 0692  
                           l1873 043E                             l1865 039E  
                           l1881 048A                             l1857 031C  
                           l1849 02F4                             l1793 00C6  
                           l1785 00A8                             l1777 0066  
                           l1769 0012                             l1971 0C84  
                           l1963 0C12                             l1955 0BC8  
                           l1947 11E4                             l1699 0D5E  
                           l1939 06F2                             l1891 0530  
                           l1883 0498                             l1875 0462  
                           l1867 03AE                             l1859 034E  
                           l1795 00DC                             l1787 00AC  
                           l1779 007A                             l1981 1028  
                           l1973 0C94                             l1965 0C2E  
                           l1957 0BE6                             l1949 1234  
                           l1893 0554                             l1885 04A8  
                           l1877 0464                             l1869 03E0  
                           l1797 0100                             l1789 00B0  
                           l1983 1034                             l1975 0FEE  
                           l1991 109A                             l1967 0C3E  
                           l1959 0BF6                             l1895 0556  
                           l1887 04DA                             l1879 0466  
                           l1799 012A                             l1985 105E  
                           l1977 100C                             l1993 10A6  
                           l1969 0C4A                             l1897 0558  
                           l1889 0528                             l1987 106E  
                           l1979 1018                             l1995 10B6  
                           l1899 057C                             l1997 10C2  
                           l1989 107C                             l1999 10E2  
                           STR_1 7FCF                             STR_2 7FEF  
                           STR_3 7EE6                             STR_4 7EE6  
                           STR_5 7FBF                             STR_6 7EE6  
                           STR_7 7EE6                             STR_8 7EE6  
                           STR_9 7F29                             u1000 0D70  
                           u1001 0D6C                             u1010 0D8A  
                           u1011 0D86                             u1020 0DA4  
                           u1100 0A02                             u1021 0DA0  
                           u1101 09FE                             u1030 0DC2  
                           u1110 00DC                             u1031 0DBE  
                           u1111 00D8                             u1040 0DD8  
                           u1200 0308                             u1120 01D2  
                           u1041 0DD4                             u1201 0304  
                           u1121 01CE                             u1050 0DFC  
                           u1210 034E                             u1130 021C  
                           u1051 0DF8                             u1211 034A  
                           u1131 0218                             u1300 0528  
                           u1220 0388                             u1140 0288  
                           u1060 0972                             u1301 0524  
                           u1221 0384                             u1141 0284  
                           u1061 096E                             u1310 058A  
                           u1230 039E                             u1150 029A  
                           u1070 0982                             u1311 0586  
                           u1231 039A                             u1151 0296  
                           u1071 097E                             u1400 124E  
                           u1320 059A                             u1240 03AE  
                           u1160 02AC                             u1080 09C8  
                           u1401 124A                             u1321 0596  
                           u1241 03AA                             u1161 02A8  
                           u1081 09C4                             u1330 05F4  
                           u1250 03E0                             u1170 02C0  
                           u1090 09D8                             u1410 0F74  
                           u1331 05F0                             u1251 03DC  
                           u1171 02BC                             u1091 09D4  
                           u1411 0F70                             u1340 0604  
                           u1260 0436                             u1180 02D8  
                           u1420 0F94                             u1341 0600  
                           u1261 0432                             u1181 02D4  
                           u1421 0F90                             u1350 065E  
                           u1270 0498                             u1190 02F0  
                           u1430 0FB6                             u1351 065A  
                           u1271 0494                             u1191 02EC  
                           u1431 0FB2                             u1360 0670  
                           u1280 04A8                             u1440 0FD8  
                           u1361 066C                             u1281 04A4  
                           u1441 0FD4                             u1370 0692  
                           u1290 04DA                             u1507 10AC  
                           u1371 068E                             u1291 04D6  
                           u1380 070C                             u1517 10E8  
                           u1381 0708                             u1390 11E2  
                           u1527 101E                             u1391 11DE  
                           u1537 1064                             u1457 0CD8  
                           u1547 13D0                             u1467 13A8  
                           u1557 13EA                             u1477 0BFC  
                           u1487 0C34                             u1497 0C8A  
                           i2l41 1422                             _main 1100  
                           _menu 08F0                             _rand 0AEC  
                           _seed 004A                             _time 12B0  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0055  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E            function_set@num_lines 0007  
                   print_mat@lcd 0010                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 0004  
                          ?_main 0001                            ?_menu 001A  
                          ?_rand 0019                            STR_10 7EE5  
                          STR_11 7EE5                            STR_12 7EE5  
                          STR_20 7F9F                            STR_21 7F4B  
                          STR_13 7F3A                            STR_22 7F7E  
                          STR_14 7EF6                            STR_23 7F5C  
                          STR_15 7F18                            STR_24 7F6D  
                          STR_16 7F07                            STR_17 7FDF  
                          STR_18 7F8F                            STR_19 7FAF  
                __end_of___awmod 0E0E                            ?_time 0001  
                          _T0CON 000FD5                            i2l112 0754  
                          i2l121 07C4                            i2l130 0830  
                          i2l114 0748                            i2l123 07B8  
                          i2l132 0824                            i2l141 0894  
                          i2l118 0778                            i2l127 07E8  
                          i2l136 0854                            i2l145 08C4  
                          i2l139 08A0                            i2l148 08EE  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0001  
                __end_of_lcd_cmd 13C0                  __end_of_goto_XY 0D5E  
                          _jogar 0012                            _srand 1426  
                          _pulso 13C0                            tablat 000FF5  
                          time@t 0001                            ttemp5 0056  
                          ttemp6 0059                            ttemp7 005D  
                          status 000FD8                            wtemp8 0056  
                __initialization 12FC                     __end_of_main 1178  
                   __end_of_menu 0A04                     __end_of_rand 0BC8  
                   __end_of_time 12FC                           ??_main 0041  
                         ??_menu 001C                           ??_rand 001B  
                         ??_time 0009                    __activetblptr 000002  
                         _ADCON1 000FC1                           ?_jogar 0029  
                         ?_srand 0009                           ?_pulso 0001  
                         i2l1401 0876                           i2l1403 0884  
                         i2l1421 08E2                           i2l1413 08D2  
                         i2l1405 0898                           i2l1501 141E  
                         i2l1423 08EC                           i2l1407 08AE  
                         i2l1415 08D4                           i2l1351 0762  
                         i2l1343 071A                           i2l1417 08D6  
                         i2l1409 08BC                           i2l1361 078A  
                         i2l1353 0770                           i2l1345 072A  
                         i2l1419 08D8                           i2l1371 07D2  
                         i2l1363 078C                           i2l1347 0738  
                         i2l1381 0806                           i2l1373 07E0  
                         i2l1365 079A                           i2l1357 0786  
                         i2l1349 074C                           i2l1383 0814  
                         i2l1367 07A8                           i2l1359 0788  
                         i2l1393 0862                           i2l1385 0828  
                         i2l1377 07F6                           i2l1369 07BC  
                         i2l1387 083E                           i2l1395 0864  
                         i2l1379 07F8                           i2l1491 13F8  
                         i2l1397 0866                           i2l1389 084C  
                         i2l1493 1406                           i2l1399 0868  
                         i2l1495 140A                           i2l1497 140E  
                         i2l1499 1410                 __end_of_creditos 1250  
               __end_of_finaliza 12B0                      goto_XY@temp 000F  
                         ___omul 0EBA                        ??___awmod 0027  
           __size_of_gerenciador 0096                           _cont_d 0046  
                         _cont_l 0045                           _cont_r 0044  
                         _cont_u 0047                           _botoes 0049  
                         clear_0 1320                           clear_1 132C  
                ___awmod@divisor 0025                  ___awmod@counter 0027  
                  ?_function_set 0004                        ??_lcd_cmd 0007  
                         _strcpy 1340                           jogar@i 003D  
                         jogar@j 003B                        ??_goto_XY 000C  
                   __pdataCOMRAM 0052                     __mediumconst 7EE4  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                           srand@s 0009  
       display_onoff_control@lcd 0004                       __accesstop 0080  
        __end_of__initialization 1332                    ___rparam_used 000001  
        ??_display_onoff_control 0009                   __pcstackCOMRAM 0001  
                  __end_of_jogar 071A                   gerenciador@lcd 003F  
                  __end_of_srand 1454                    __end_of_pulso 13F6  
                 ??_function_set 0009                          ??_jogar 002B  
                        ??_srand 000B             __size_of_int_handler 141E  
                        ??_pulso 0003                       __pbssBANK0 0080  
                        ?___omul 0001              ___omul@multiplicand 0009  
                        ?_strcpy 0001               __size_of_print_mat 00AC  
    entry_mode_set@display_shift 0007                          i2u60_40 0786  
                        i2u60_41 0782                          i2u61_40 079A  
                        i2u61_41 0796                          i2u70_40 083E  
                        i2u62_40 07A8                          i2u70_41 083A  
                        i2u62_41 07A4                          i2u71_40 084C  
                        i2u63_40 07B8                          i2u55_40 072A  
                        i2u71_41 0848                          i2u63_41 07B4  
                        i2u55_41 0726                          i2u72_40 0862  
                        i2u64_40 07D2                          i2u56_40 0738  
                        i2u72_41 085E                          i2u64_41 07CE  
                        i2u56_41 0734                          i2u80_45 08EA  
                        i2u80_47 08EC                          i2u73_40 0876  
                        i2u65_40 07E0                          i2u57_40 0748  
                        i2u73_41 0872                          i2u65_41 07DC  
                        i2u57_41 0744                          i2u74_40 0884  
                        i2u66_40 07F6                          i2u58_40 0762  
                        i2u74_41 0880                          i2u66_41 07F2  
                        i2u58_41 075E                          i2u75_40 0894  
                        i2u67_40 0806                          i2u59_40 0770  
                        i2u75_41 0890                          i2u67_41 0802  
                        i2u59_41 076C                          i2u76_40 08AE  
                        i2u68_40 0814                          i2u76_41 08AA  
                        i2u68_41 0810                          i2u77_40 08BC  
                        i2u69_40 0824                          i2u85_40 1406  
                        i2u77_41 08B8                          i2u69_41 0820  
                        i2u85_41 1402                          i2u78_40 08D2  
                        i2u86_40 141E                          i2u78_41 08CE  
                        i2u86_41 141A                          i2u79_45 08E0  
                        i2u79_47 08E2                        ?_creditos 001A  
                     _le_entrada 071A                        ?_finaliza 001A  
                     _botoes_ant 0048          __size_of_entry_mode_set 0084  
                        __Hparam 0000   display_onoff_control@cursor_on 0007  
                        __Lparam 0000                          ___awmod 0D5E  
                __size_of___omul 009E                          __pcinit 12FC  
                        __ramtop 0600                    instrucoes@lcd 001A  
                        __ptext0 1100                          __ptext1 0F58  
                        __ptext2 08F0                          __ptext3 0012  
                        __ptext4 12B0                          __ptext5 1426  
                        __ptext6 0AEC                          __ptext7 0EBA  
                        __ptext8 0D5E                          __ptext9 1178  
                        _lcd_cmd 1380                        _T0CONbits 000FD5  
                __size_of_strcpy 0040                          _goto_XY 0CA2  
               ___awmod@dividend 0023                       ??_creditos 001C  
                     ??_finaliza 001C                   __pintcode_body 13F6  
           end_of_initialization 1332                       _instrucoes 1178  
                        menu@lcd 001A                   ___omul@product 0011  
           __end_of_function_set 0CA2                    __Lmediumconst 7EE4  
                        int_func 13F6                __end_of_print_mat 0EBA  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE                          strcpy@d 0007  
                        strcpy@s 0005                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0004                      ?_le_entrada 0001  
                  ??_gerenciador 0041   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 107C                   __end_of___omul 0F58  
                     _write_char 0A04                    __pidataCOMRAM 1454  
                 __end_of_strcpy 1380              start_initialization 12FC  
                    ?_instrucoes 001A                       jogar@bateu 0039  
              ___omul@multiplier 0001                       jogar@pont1 0038  
                     jogar@pont2 0037                       jogar@pont3 0036  
                     jogar@pont4 0035                   _entry_mode_set 107C  
                     goto_XY@lcd 0008                         ??___omul 0011  
            __size_of_le_entrada 01D6              __end_of_gerenciador 0FEE  
                       ??_strcpy 0005                      __pbssCOMRAM 0041  
                  ??_int_handler 0001            __size_of_function_set 00DA  
              __size_of_creditos 006C                __size_of_finaliza 0060  
         __end_of_entry_mode_set 1100                        __pintcode 0008  
                  __pmediumconst 7EE4                         ?___awmod 0023  
                    ?_write_char 0001              __size_of_instrucoes 006C  
                       ?_lcd_cmd 0004                     _function_set 0BC8  
                       ?_goto_XY 0008                   __size_of_jogar 0708  
                 __size_of_srand 002E                   __size_of_pulso 0036  
            __end_of_int_handler 1426                  ?_entry_mode_set 0004  
                    _gerenciador 0F58     entry_mode_set@move_direction 0006  
                      _print_mat 0E0E  display_onoff_control@display_on 0006  
     display_onoff_control@blink 0008                      write_char@c 0003  
                     print_mat@i 0018                       print_mat@j 0016  
                   ??_le_entrada 0001              __size_of_write_char 00E8  
                       __Hrparam 0000                         __Lrparam 0000  
              entry_mode_set@lcd 0004                 __size_of___awmod 00B0  
                     ?_print_mat 0010               __end_of_le_entrada 08F0  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 1250  
                       __ptext11 11E4                         __ptext20 13C0  
                       __ptext12 1340                         __ptext13 0E0E  
                       __ptext22 071A                         __ptext14 0A04  
                       __ptext15 0CA2                         __ptext16 1380  
                       __ptext17 0BC8                         __ptext18 107C  
                       __ptext19 0FEE                         _creditos 11E4  
                       _finaliza 1250                         _contador 0041  
                   ??_instrucoes 001C                       strcpy@dest 0001  
           jogar@linha_aleatoria 0033                         _mat_disp 0080  
                  __size_of_main 0078                    __size_of_menu 0114  
                  __size_of_rand 00DC                    __size_of_time 004C  
                       int$flags 0055                         lcd_cmd@a 0006  
          _display_onoff_control 0FEE               __end_of_instrucoes 11E4  
                     _INTCONbits 000FF2                         jogar@lcd 0029  
                       goto_XY@a 000E                         goto_XY@x 000A  
                       goto_XY@y 000B                         goto_XY@z 000D  
                       intlevel2 0000                        strcpy@src 0003  
        function_set@data_lenght 0006                      ??_print_mat 0012  
                   ??_write_char 0004                         pulso@lcd 0001  
               ??_entry_mode_set 0008            function_set@char_font 0008  
             __end_of_write_char 0AEC                     ?_gerenciador 003F  
