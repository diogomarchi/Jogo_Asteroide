

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 20:58:58 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001AC4                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for _lcd
    80  001AC4  83                 	db	131
    81  001AC5  0F                 	db	15
    82                           
    83                           ;initializer for _x
    84  001AC6  01                 	db	1
    85  0000                     _PORTBbits	set	3969
    86  0000                     _T0CONbits	set	4053
    87  0000                     _T0CON	set	4053
    88  0000                     _TRISD	set	3989
    89  0000                     _PORTB	set	3969
    90  0000                     _TRISB	set	3987
    91  0000                     _ADCON1	set	4033
    92  0000                     _TMR0L	set	4054
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTD	set	3971
    95                           
    96                           	psect	smallconst
    97  000600                     __psmallconst:
    98                           	opt callstack 0
    99  000600  00                 	db	0
   100  000601                     STR_9:
   101  000601  20                 	db	32
   102  000602  20                 	db	32
   103  000603  20                 	db	32
   104  000604  20                 	db	32
   105  000605  20                 	db	32
   106  000606  20                 	db	32
   107  000607  20                 	db	32
   108  000608  20                 	db	32
   109  000609  20                 	db	32
   110  00060A  20                 	db	32
   111  00060B  20                 	db	32
   112  00060C  20                 	db	32
   113  00060D  20                 	db	32
   114  00060E  20                 	db	32
   115  00060F  20                 	db	32
   116  000610  20                 	db	32
   117  000611  00                 	db	0
   118  000612                     STR_15:
   119  000612  50                 	db	80	;'P'
   120  000613  41                 	db	65	;'A'
   121  000614  52                 	db	82	;'R'
   122  000615  41                 	db	65	;'A'
   123  000616  20                 	db	32
   124  000617  53                 	db	83	;'S'
   125  000618  41                 	db	65	;'A'
   126  000619  49                 	db	73	;'I'
   127  00061A  52                 	db	82	;'R'
   128  00061B  20                 	db	32
   129  00061C  20                 	db	32
   130  00061D  20                 	db	32
   131  00061E  20                 	db	32
   132  00061F  20                 	db	32
   133  000620  20                 	db	32
   134  000621  20                 	db	32
   135  000622  00                 	db	0
   136  000623                     STR_14:
   137  000623  41                 	db	65	;'A'
   138  000624  50                 	db	80	;'P'
   139  000625  45                 	db	69	;'E'
   140  000626  52                 	db	82	;'R'
   141  000627  54                 	db	84	;'T'
   142  000628  45                 	db	69	;'E'
   143  000629  20                 	db	32
   144  00062A  45                 	db	69	;'E'
   145  00062B  53                 	db	83	;'S'
   146  00062C  43                 	db	67	;'C'
   147  00062D  20                 	db	32
   148  00062E  20                 	db	32
   149  00062F  20                 	db	32
   150  000630  20                 	db	32
   151  000631  20                 	db	32
   152  000632  20                 	db	32
   153  000633  00                 	db	0
   154  000634                     STR_13:
   155  000634  21                 	db	33
   156  000635  21                 	db	33
   157  000636  21                 	db	33
   158  000637  56                 	db	86	;'V'
   159  000638  4F                 	db	79	;'O'
   160  000639  43                 	db	67	;'C'
   161  00063A  45                 	db	69	;'E'
   162  00063B  20                 	db	32
   163  00063C  42                 	db	66	;'B'
   164  00063D  41                 	db	65	;'A'
   165  00063E  54                 	db	84	;'T'
   166  00063F  45                 	db	69	;'E'
   167  000640  55                 	db	85	;'U'
   168  000641  21                 	db	33
   169  000642  21                 	db	33
   170  000643  21                 	db	33
   171  000644  00                 	db	0
   172  000645                     STR_21:
   173  000645  31                 	db	49	;'1'
   174  000646  2E                 	db	46
   175  000647  4A                 	db	74	;'J'
   176  000648  4F                 	db	79	;'O'
   177  000649  47                 	db	71	;'G'
   178  00064A  41                 	db	65	;'A'
   179  00064B  52                 	db	82	;'R'
   180  00064C  2E                 	db	46
   181  00064D  2E                 	db	46
   182  00064E  2E                 	db	46
   183  00064F  2E                 	db	46
   184  000650  2E                 	db	46
   185  000651  2E                 	db	46
   186  000652  2E                 	db	46
   187  000653  2E                 	db	46
   188  000654  2E                 	db	46
   189  000655  00                 	db	0
   190  000656                     STR_23:
   191  000656  33                 	db	51	;'3'
   192  000657  2E                 	db	46
   193  000658  43                 	db	67	;'C'
   194  000659  52                 	db	82	;'R'
   195  00065A  45                 	db	69	;'E'
   196  00065B  44                 	db	68	;'D'
   197  00065C  49                 	db	73	;'I'
   198  00065D  54                 	db	84	;'T'
   199  00065E  4F                 	db	79	;'O'
   200  00065F  53                 	db	83	;'S'
   201  000660  2E                 	db	46
   202  000661  2E                 	db	46
   203  000662  2E                 	db	46
   204  000663  2E                 	db	46
   205  000664  2E                 	db	46
   206  000665  2E                 	db	46
   207  000666  00                 	db	0
   208  000667                     STR_24:
   209  000667  34                 	db	52	;'4'
   210  000668  2E                 	db	46
   211  000669  46                 	db	70	;'F'
   212  00066A  49                 	db	73	;'I'
   213  00066B  4E                 	db	78	;'N'
   214  00066C  41                 	db	65	;'A'
   215  00066D  4C                 	db	76	;'L'
   216  00066E  49                 	db	73	;'I'
   217  00066F  5A                 	db	90	;'Z'
   218  000670  41                 	db	65	;'A'
   219  000671  52                 	db	82	;'R'
   220  000672  2E                 	db	46
   221  000673  2E                 	db	46
   222  000674  2E                 	db	46
   223  000675  2E                 	db	46
   224  000676  2E                 	db	46
   225  000677  00                 	db	0
   226  000678                     STR_22:
   227  000678  32                 	db	50	;'2'
   228  000679  2E                 	db	46
   229  00067A  49                 	db	73	;'I'
   230  00067B  4E                 	db	78	;'N'
   231  00067C  53                 	db	83	;'S'
   232  00067D  54                 	db	84	;'T'
   233  00067E  52                 	db	82	;'R'
   234  00067F  55                 	db	85	;'U'
   235  000680  43                 	db	67	;'C'
   236  000681  4F                 	db	79	;'O'
   237  000682  45                 	db	69	;'E'
   238  000683  53                 	db	83	;'S'
   239  000684  2E                 	db	46
   240  000685  2E                 	db	46
   241  000686  2E                 	db	46
   242  000687  2E                 	db	46
   243  000688  00                 	db	0
   244  000689                     STR_18:
   245  000689  4E                 	db	78	;'N'
   246  00068A  41                 	db	65	;'A'
   247  00068B  56                 	db	86	;'V'
   248  00068C  45                 	db	69	;'E'
   249  00068D  20                 	db	32
   250  00068E  20                 	db	32
   251  00068F  20                 	db	32
   252  000690  20                 	db	32
   253  000691  20                 	db	32
   254  000692  20                 	db	32
   255  000693  20                 	db	32
   256  000694  20                 	db	32
   257  000695  20                 	db	32
   258  000696  20                 	db	32
   259  000697  20                 	db	32
   260  000698  00                 	db	0
   261  000699                     STR_20:
   262  000699  4D                 	db	77	;'M'
   263  00069A  45                 	db	69	;'E'
   264  00069B  4E                 	db	78	;'N'
   265  00069C  55                 	db	85	;'U'
   266  00069D  20                 	db	32
   267  00069E  20                 	db	32
   268  00069F  20                 	db	32
   269  0006A0  20                 	db	32
   270  0006A1  20                 	db	32
   271  0006A2  20                 	db	32
   272  0006A3  20                 	db	32
   273  0006A4  20                 	db	32
   274  0006A5  20                 	db	32
   275  0006A6  20                 	db	32
   276  0006A7  20                 	db	32
   277  0006A8  00                 	db	0
   278  0006A9                     STR_19:
   279  0006A9  32                 	db	50	;'2'
   280  0006AA  2E                 	db	46
   281  0006AB  45                 	db	69	;'E'
   282  0006AC  53                 	db	83	;'S'
   283  0006AD  43                 	db	67	;'C'
   284  0006AE  41                 	db	65	;'A'
   285  0006AF  50                 	db	80	;'P'
   286  0006B0  45                 	db	69	;'E'
   287  0006B1  20                 	db	32
   288  0006B2  56                 	db	86	;'V'
   289  0006B3  4F                 	db	79	;'O'
   290  0006B4  4C                 	db	76	;'L'
   291  0006B5  54                 	db	84	;'T'
   292  0006B6  41                 	db	65	;'A'
   293  0006B7  20                 	db	32
   294  0006B8  00                 	db	0
   295  0006B9                     STR_5:
   296  0006B9  48                 	db	72	;'H'
   297  0006BA  49                 	db	73	;'I'
   298  0006BB  42                 	db	66	;'B'
   299  0006BC  45                 	db	69	;'E'
   300  0006BD  52                 	db	82	;'R'
   301  0006BE  4E                 	db	78	;'N'
   302  0006BF  41                 	db	65	;'A'
   303  0006C0  4E                 	db	78	;'N'
   304  0006C1  44                 	db	68	;'D'
   305  0006C2  4F                 	db	79	;'O'
   306  0006C3  2E                 	db	46
   307  0006C4  2E                 	db	46
   308  0006C5  2E                 	db	46
   309  0006C6  2E                 	db	46
   310  0006C7  2E                 	db	46
   311  0006C8  00                 	db	0
   312  0006C9                     STR_1:
   313  0006C9  31                 	db	49	;'1'
   314  0006CA  2E                 	db	46
   315  0006CB  44                 	db	68	;'D'
   316  0006CC  49                 	db	73	;'I'
   317  0006CD  4F                 	db	79	;'O'
   318  0006CE  47                 	db	71	;'G'
   319  0006CF  4F                 	db	79	;'O'
   320  0006D0  20                 	db	32
   321  0006D1  4D                 	db	77	;'M'
   322  0006D2  41                 	db	65	;'A'
   323  0006D3  52                 	db	82	;'R'
   324  0006D4  43                 	db	67	;'C'
   325  0006D5  48                 	db	72	;'H'
   326  0006D6  49                 	db	73	;'I'
   327  0006D7  2E                 	db	46
   328  0006D8  00                 	db	0
   329  0006D9                     STR_17:
   330  0006D9  31                 	db	49	;'1'
   331  0006DA  2E                 	db	46
   332  0006DB  53                 	db	83	;'S'
   333  0006DC  45                 	db	69	;'E'
   334  0006DD  54                 	db	84	;'T'
   335  0006DE  41                 	db	65	;'A'
   336  0006DF  53                 	db	83	;'S'
   337  0006E0  20                 	db	32
   338  0006E1  4D                 	db	77	;'M'
   339  0006E2  4F                 	db	79	;'O'
   340  0006E3  56                 	db	86	;'V'
   341  0006E4  45                 	db	69	;'E'
   342  0006E5  4D                 	db	77	;'M'
   343  0006E6  20                 	db	32
   344  0006E7  41                 	db	65	;'A'
   345  0006E8  00                 	db	0
   346  0006E9                     STR_2:
   347  0006E9  32                 	db	50	;'2'
   348  0006EA  2E                 	db	46
   349  0006EB  47                 	db	71	;'G'
   350  0006EC  45                 	db	69	;'E'
   351  0006ED  4F                 	db	79	;'O'
   352  0006EE  52                 	db	82	;'R'
   353  0006EF  47                 	db	71	;'G'
   354  0006F0  45                 	db	69	;'E'
   355  0006F1  20                 	db	32
   356  0006F2  4E                 	db	78	;'N'
   357  0006F3  41                 	db	65	;'A'
   358  0006F4  52                 	db	82	;'R'
   359  0006F5  44                 	db	68	;'D'
   360  0006F6  45                 	db	69	;'E'
   361  0006F7  53                 	db	83	;'S'
   362  0006F8  00                 	db	0
   363  0000                     
   364                           ; #config settings
   365  0006F9  00                 	db	0	; dummy byte at the end
   366  0000                     
   367                           	psect	cinit
   368  001968                     __pcinit:
   369                           	opt callstack 0
   370  001968                     start_initialization:
   371                           	opt callstack 0
   372  001968                     __initialization:
   373                           	opt callstack 0
   374                           
   375                           ; Initialize objects allocated to COMRAM (3 bytes)
   376                           ; load TBLPTR registers with __pidataCOMRAM
   377  001968  0EC4               	movlw	low __pidataCOMRAM
   378  00196A  6EF6               	movwf	tblptrl,c
   379  00196C  0E1A               	movlw	high __pidataCOMRAM
   380  00196E  6EF7               	movwf	tblptrh,c
   381  001970  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   382  001972  6EF8               	movwf	tblptru,c
   383  001974  0009               	tblrd		*+	;fetch initializer
   384  001976  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   385  00197A  0009               	tblrd		*+	;fetch initializer
   386  00197C  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   387  001980  0009               	tblrd		*+	;fetch initializer
   388  001982  CFF5 F051          	movff	tablat,__pdataCOMRAM+2
   389                           
   390                           ; Clear objects allocated to BANK0 (64 bytes)
   391  001986  EE00  F080         	lfsr	0,__pbssBANK0
   392  00198A  0E40               	movlw	64
   393  00198C                     clear_0:
   394  00198C  6AEE               	clrf	postinc0,c
   395  00198E  06E8               	decf	wreg,f,c
   396  001990  E1FD               	bnz	clear_0
   397                           
   398                           ; Clear objects allocated to COMRAM (17 bytes)
   399  001992  EE00  F03E         	lfsr	0,__pbssCOMRAM
   400  001996  0E11               	movlw	17
   401  001998                     clear_1:
   402  001998  6AEE               	clrf	postinc0,c
   403  00199A  06E8               	decf	wreg,f,c
   404  00199C  E1FD               	bnz	clear_1
   405  00199E                     end_of_initialization:
   406                           	opt callstack 0
   407  00199E                     __end_of__initialization:
   408                           	opt callstack 0
   409  00199E  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   410  0019A0  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   411  0019A2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   412  0019A4  6EF8               	movwf	tblptru,c
   413  0019A6  0E06               	movlw	high __Lsmallconst
   414  0019A8  6EF7               	movwf	tblptrh,c
   415  0019AA  0100               	movlb	0
   416  0019AC  EFB6  F00B         	goto	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMRAM
   419  00003E                     __pbssCOMRAM:
   420                           	opt callstack 0
   421  00003E                     _contador:
   422                           	opt callstack 0
   423  00003E                     	ds	1
   424  00003F                     _y:
   425                           	opt callstack 0
   426  00003F                     	ds	1
   427  000040                     _op:
   428                           	opt callstack 0
   429  000040                     	ds	1
   430  000041                     _cont_r:
   431                           	opt callstack 0
   432  000041                     	ds	1
   433  000042                     _cont_l:
   434                           	opt callstack 0
   435  000042                     	ds	1
   436  000043                     _cont_d:
   437                           	opt callstack 0
   438  000043                     	ds	1
   439  000044                     _cont_u:
   440                           	opt callstack 0
   441  000044                     	ds	1
   442  000045                     _botoes_ant:
   443                           	opt callstack 0
   444  000045                     	ds	1
   445  000046                     _botoes:
   446                           	opt callstack 0
   447  000046                     	ds	1
   448  000047                     _seed:
   449                           	opt callstack 0
   450  000047                     	ds	8
   451                           
   452                           	psect	dataCOMRAM
   453  00004F                     __pdataCOMRAM:
   454                           	opt callstack 0
   455  00004F                     _lcd:
   456                           	opt callstack 0
   457  00004F                     	ds	2
   458  000051                     _x:
   459                           	opt callstack 0
   460  000051                     	ds	1
   461                           
   462                           	psect	bssBANK0
   463  000080                     __pbssBANK0:
   464                           	opt callstack 0
   465  000080                     _mat_disp:
   466                           	opt callstack 0
   467  000080                     	ds	64
   468                           
   469                           	psect	cstackCOMRAM
   470  000001                     __pcstackCOMRAM:
   471                           	opt callstack 0
   472  000001                     ?_time:
   473                           	opt callstack 0
   474  000001                     ?___omul:
   475                           	opt callstack 0
   476  000001                     pulso@lcd:
   477                           	opt callstack 0
   478  000001                     write_char@lcd:
   479                           	opt callstack 0
   480  000001                     strcpy@dest:
   481                           	opt callstack 0
   482  000001                     time@t:
   483                           	opt callstack 0
   484  000001                     ___omul@multiplier:
   485                           	opt callstack 0
   486                           
   487                           ; 8 bytes @ 0x0
   488  000001                     	ds	2
   489  000003                     ??_pulso:
   490  000003                     write_char@c:
   491                           	opt callstack 0
   492  000003                     strcpy@src:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496  000003                     	ds	1
   497  000004                     ??_write_char:
   498  000004                     function_set@lcd:
   499                           	opt callstack 0
   500  000004                     display_onoff_control@lcd:
   501                           	opt callstack 0
   502  000004                     lcd_cmd@lcd:
   503                           	opt callstack 0
   504  000004                     entry_mode_set@lcd:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x3
   508  000004                     	ds	1
   509  000005                     strcpy@s:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x4
   513  000005                     	ds	1
   514  000006                     function_set@data_lenght:
   515                           	opt callstack 0
   516  000006                     display_onoff_control@display_on:
   517                           	opt callstack 0
   518  000006                     lcd_cmd@a:
   519                           	opt callstack 0
   520  000006                     entry_mode_set@move_direction:
   521                           	opt callstack 0
   522                           
   523                           ; 1 bytes @ 0x5
   524  000006                     	ds	1
   525  000007                     ??_lcd_cmd:
   526  000007                     function_set@num_lines:
   527                           	opt callstack 0
   528  000007                     display_onoff_control@cursor_on:
   529                           	opt callstack 0
   530  000007                     entry_mode_set@display_shift:
   531                           	opt callstack 0
   532  000007                     strcpy@d:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000007                     	ds	1
   537  000008                     ??_entry_mode_set:
   538  000008                     function_set@char_font:
   539                           	opt callstack 0
   540  000008                     display_onoff_control@blink:
   541                           	opt callstack 0
   542  000008                     goto_XY@lcd:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x7
   546  000008                     	ds	1
   547  000009                     ??_function_set:
   548  000009                     ??_display_onoff_control:
   549  000009                     srand@s:
   550                           	opt callstack 0
   551  000009                     ___omul@multiplicand:
   552                           	opt callstack 0
   553                           
   554                           ; 8 bytes @ 0x8
   555  000009                     	ds	1
   556  00000A                     goto_XY@x:
   557                           	opt callstack 0
   558                           
   559                           ; 1 bytes @ 0x9
   560  00000A                     	ds	1
   561  00000B                     ??_srand:
   562  00000B                     goto_XY@y:
   563                           	opt callstack 0
   564                           
   565                           ; 1 bytes @ 0xA
   566  00000B                     	ds	1
   567  00000C                     ??_goto_XY:
   568                           
   569                           ; 1 bytes @ 0xB
   570  00000C                     	ds	1
   571  00000D                     goto_XY@z:
   572                           	opt callstack 0
   573                           
   574                           ; 1 bytes @ 0xC
   575  00000D                     	ds	1
   576  00000E                     goto_XY@a:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0xD
   580  00000E                     	ds	1
   581  00000F                     goto_XY@temp:
   582                           	opt callstack 0
   583                           
   584                           ; 1 bytes @ 0xE
   585  00000F                     	ds	1
   586  000010                     print_mat@lcd:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0xF
   590  000010                     	ds	1
   591  000011                     ___omul@product:
   592                           	opt callstack 0
   593                           
   594                           ; 8 bytes @ 0x10
   595  000011                     	ds	1
   596  000012                     ??_print_mat:
   597                           
   598                           ; 1 bytes @ 0x11
   599  000012                     	ds	4
   600  000016                     print_mat@j:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x15
   604  000016                     	ds	2
   605  000018                     print_mat@i:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x17
   609  000018                     	ds	1
   610  000019                     ?_rand:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x18
   614  000019                     	ds	1
   615  00001A                     creditos@lcd:
   616                           	opt callstack 0
   617  00001A                     finaliza@lcd:
   618                           	opt callstack 0
   619  00001A                     instrucoes@lcd:
   620                           	opt callstack 0
   621  00001A                     menu@lcd:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x19
   625  00001A                     	ds	1
   626  00001B                     ??_rand:
   627                           
   628                           ; 1 bytes @ 0x1A
   629  00001B                     	ds	1
   630  00001C                     
   631                           ; 1 bytes @ 0x1B
   632  00001C                     	ds	7
   633  000023                     ?___awmod:
   634                           	opt callstack 0
   635  000023                     ___awmod@dividend:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x22
   639  000023                     	ds	2
   640  000025                     ___awmod@divisor:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x24
   644  000025                     	ds	2
   645  000027                     ___awmod@counter:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x26
   649  000027                     	ds	1
   650  000028                     ___awmod@sign:
   651                           	opt callstack 0
   652                           
   653                           ; 1 bytes @ 0x27
   654  000028                     	ds	1
   655  000029                     jogar@lcd:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x28
   659  000029                     	ds	2
   660  00002B                     ??_jogar:
   661                           
   662                           ; 1 bytes @ 0x2A
   663  00002B                     	ds	8
   664  000033                     jogar@i:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x32
   668  000033                     	ds	2
   669  000035                     jogar@score:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0x34
   673  000035                     	ds	1
   674  000036                     jogar@bateu:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x35
   678  000036                     	ds	2
   679  000038                     jogar@j:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x37
   683  000038                     	ds	2
   684  00003A                     jogar@i_485:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x39
   688  00003A                     	ds	2
   689  00003C                     gerenciador@lcd:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x3B
   693  00003C                     	ds	2
   694  00003E                     
   695                           ; 1 bytes @ 0x3D
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   698 ;;
   699 ;; *************** function _main *****************
   700 ;; Defined at:
   701 ;;		line 36 in file "main.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   715 ;;      Params:         0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels required when called:    8
   721 ;; This function calls:
   722 ;;		_display_onoff_control
   723 ;;		_entry_mode_set
   724 ;;		_function_set
   725 ;;		_gerenciador
   726 ;; This function is called by:
   727 ;;		Startup code after reset
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text0
   732  00176C                     __ptext0:
   733                           	opt callstack 0
   734  00176C                     _main:
   735                           	opt callstack 23
   736  00176C                     
   737                           ;main.c: 38:     ADCON1 = 0x0F;
   738  00176C  0E0F               	movlw	15
   739  00176E  6EC1               	movwf	193,c	;volatile
   740                           
   741                           ;main.c: 43:     TRISB = 0x0F;
   742  001770  0E0F               	movlw	15
   743  001772  6E93               	movwf	147,c	;volatile
   744                           
   745                           ;main.c: 46:     PORTB = 0x00;
   746  001774  0E00               	movlw	0
   747  001776  6E81               	movwf	129,c	;volatile
   748                           
   749                           ;main.c: 49:     TRISD = 0x00;
   750  001778  0E00               	movlw	0
   751  00177A  6E95               	movwf	149,c	;volatile
   752                           
   753                           ;main.c: 52:     T0CON = 0x47;
   754  00177C  0E47               	movlw	71
   755  00177E  6ED5               	movwf	213,c	;volatile
   756                           
   757                           ;main.c: 55:     TMR0L = 0x63;
   758  001780  0E63               	movlw	99
   759  001782  6ED6               	movwf	214,c	;volatile
   760  001784                     
   761                           ;main.c: 58:     INTCONbits.TMR0IF = 0;
   762  001784  94F2               	bcf	242,2,c	;volatile
   763  001786                     
   764                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   765  001786  8AF2               	bsf	242,5,c	;volatile
   766  001788                     
   767                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   768  001788  88F2               	bsf	242,4,c	;volatile
   769  00178A                     
   770                           ;main.c: 61:     INTCONbits.INT0IF = 0;
   771  00178A  92F2               	bcf	242,1,c	;volatile
   772  00178C                     
   773                           ;main.c: 62:     INTCONbits.GIE = 1;
   774  00178C  8EF2               	bsf	242,7,c	;volatile
   775  00178E                     
   776                           ;main.c: 64:     function_set(lcd, 0, 1, 0);
   777  00178E  0E83               	movlw	131
   778  001790  6E04               	movwf	function_set@lcd^0,c
   779  001792  0E0F               	movlw	15
   780  001794  6E05               	movwf	(function_set@lcd+1)^0,c
   781  001796  0E00               	movlw	0
   782  001798  6E06               	movwf	function_set@data_lenght^0,c
   783  00179A  0E01               	movlw	1
   784  00179C  6E07               	movwf	function_set@num_lines^0,c
   785  00179E  0E00               	movlw	0
   786  0017A0  6E08               	movwf	function_set@char_font^0,c
   787  0017A2  EC1A  F009         	call	_function_set	;wreg free
   788  0017A6                     
   789                           ;main.c: 65:     display_onoff_control(lcd, 1, 0, 0);
   790  0017A6  0E83               	movlw	131
   791  0017A8  6E04               	movwf	display_onoff_control@lcd^0,c
   792  0017AA  0E0F               	movlw	15
   793  0017AC  6E05               	movwf	(display_onoff_control@lcd+1)^0,c
   794  0017AE  0E01               	movlw	1
   795  0017B0  6E06               	movwf	display_onoff_control@display_on^0,c
   796  0017B2  0E00               	movlw	0
   797  0017B4  6E07               	movwf	display_onoff_control@cursor_on^0,c
   798  0017B6  0E00               	movlw	0
   799  0017B8  6E08               	movwf	display_onoff_control@blink^0,c
   800  0017BA  EC2D  F00B         	call	_display_onoff_control	;wreg free
   801  0017BE                     
   802                           ;main.c: 66:     entry_mode_set(lcd, 1,0);
   803  0017BE  0E83               	movlw	131
   804  0017C0  6E04               	movwf	entry_mode_set@lcd^0,c
   805  0017C2  0E0F               	movlw	15
   806  0017C4  6E05               	movwf	(entry_mode_set@lcd+1)^0,c
   807  0017C6  0E01               	movlw	1
   808  0017C8  6E06               	movwf	entry_mode_set@move_direction^0,c
   809  0017CA  0E00               	movlw	0
   810  0017CC  6E07               	movwf	entry_mode_set@display_shift^0,c
   811  0017CE  EC74  F00B         	call	_entry_mode_set	;wreg free
   812  0017D2                     
   813                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   814  0017D2  8ED5               	bsf	213,7,c	;volatile
   815  0017D4                     
   816                           ;main.c: 70:     gerenciador(lcd);
   817  0017D4  0E83               	movlw	131
   818  0017D6  6E3C               	movwf	gerenciador@lcd^0,c
   819  0017D8  0E0F               	movlw	15
   820  0017DA  6E3D               	movwf	(gerenciador@lcd+1)^0,c
   821  0017DC  ECE2  F00A         	call	_gerenciador	;wreg free
   822  0017E0  EF07  F000         	goto	start
   823  0017E4                     __end_of_main:
   824                           	opt callstack 0
   825                           
   826 ;; *************** function _gerenciador *****************
   827 ;; Defined at:
   828 ;;		line 16 in file "task_manager.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  lcd             2   59[COMRAM] PTR struct .
   831 ;;		 -> PORTD(1), 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   843 ;;      Params:         2       0       0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0
   846 ;;      Totals:         2       0       0       0       0       0       0
   847 ;;Total ram usage:        2 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    7
   850 ;; This function calls:
   851 ;;		_creditos
   852 ;;		_finaliza
   853 ;;		_instrucoes
   854 ;;		_jogar
   855 ;;		_menu
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text1
   862  0015C4                     __ptext1:
   863                           	opt callstack 0
   864  0015C4                     _gerenciador:
   865                           	opt callstack 23
   866  0015C4                     l183:
   867  0015C4                     
   868                           ;task_manager.c: 18:         menu(lcd);
   869  0015C4  C03C  F01A         	movff	gerenciador@lcd,menu@lcd
   870  0015C8  C03D  F01B         	movff	gerenciador@lcd+1,menu@lcd+1
   871  0015CC  ECAE  F007         	call	_menu	;wreg free
   872  0015D0                     
   873                           ;task_manager.c: 19:         if(op == 0) jogar(lcd);
   874  0015D0  5040               	movf	_op^0,w,c
   875  0015D2  A4D8               	btfss	status,2,c
   876  0015D4  EFEE  F00A         	goto	u1331
   877  0015D8  EFF0  F00A         	goto	u1330
   878  0015DC                     u1331:
   879  0015DC  EFF8  F00A         	goto	l1945
   880  0015E0                     u1330:
   881  0015E0  C03C  F029         	movff	gerenciador@lcd,jogar@lcd
   882  0015E4  C03D  F02A         	movff	gerenciador@lcd+1,jogar@lcd+1
   883  0015E8  EC7D  F003         	call	_jogar	;wreg free
   884  0015EC  EFE2  F00A         	goto	l183
   885  0015F0                     l1945:
   886  0015F0  0440               	decf	_op^0,w,c
   887  0015F2  A4D8               	btfss	status,2,c
   888  0015F4  EFFE  F00A         	goto	u1341
   889  0015F8  EF00  F00B         	goto	u1340
   890  0015FC                     u1341:
   891  0015FC  EF08  F00B         	goto	l1949
   892  001600                     u1340:
   893  001600  C03C  F01A         	movff	gerenciador@lcd,instrucoes@lcd
   894  001604  C03D  F01B         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   895  001608  ECF2  F00B         	call	_instrucoes	;wreg free
   896  00160C  EFE2  F00A         	goto	l183
   897  001610                     l1949:
   898  001610  0E02               	movlw	2
   899  001612  1840               	xorwf	_op^0,w,c
   900  001614  A4D8               	btfss	status,2,c
   901  001616  EF0F  F00B         	goto	u1351
   902  00161A  EF11  F00B         	goto	u1350
   903  00161E                     u1351:
   904  00161E  EF19  F00B         	goto	l1953
   905  001622                     u1350:
   906  001622  C03C  F01A         	movff	gerenciador@lcd,creditos@lcd
   907  001626  C03D  F01B         	movff	gerenciador@lcd+1,creditos@lcd+1
   908  00162A  EC28  F00C         	call	_creditos	;wreg free
   909  00162E  EFE2  F00A         	goto	l183
   910  001632                     l1953:
   911  001632  0E03               	movlw	3
   912  001634  1840               	xorwf	_op^0,w,c
   913  001636  A4D8               	btfss	status,2,c
   914  001638  EF20  F00B         	goto	u1361
   915  00163C  EF22  F00B         	goto	u1360
   916  001640                     u1361:
   917  001640  EF2A  F00B         	goto	l185
   918  001644                     u1360:
   919  001644  C03C  F01A         	movff	gerenciador@lcd,finaliza@lcd
   920  001648  C03D  F01B         	movff	gerenciador@lcd+1,finaliza@lcd+1
   921  00164C  EC5E  F00C         	call	_finaliza	;wreg free
   922  001650  EFE2  F00A         	goto	l183
   923  001654                     l185:
   924  001654  EFE2  F00A         	goto	l183
   925  001658  0012               	return		;funcret
   926  00165A                     __end_of_gerenciador:
   927                           	opt callstack 0
   928                           
   929 ;; *************** function _menu *****************
   930 ;; Defined at:
   931 ;;		line 140 in file "task_manager.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  lcd             2   25[COMRAM] PTR struct .
   934 ;;		 -> PORTD(1), 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      unsigned char 
   939 ;; Registers used:
   940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         2       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0
   949 ;;      Totals:         2       0       0       0       0       0       0
   950 ;;Total ram usage:        2 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    6
   953 ;; This function calls:
   954 ;;		_print_mat
   955 ;;		_strcpy
   956 ;; This function is called by:
   957 ;;		_gerenciador
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text2
   962  000F5C                     __ptext2:
   963                           	opt callstack 0
   964  000F5C                     _menu:
   965                           	opt callstack 23
   966  000F5C                     
   967                           ;task_manager.c: 141:     strcpy(mat_disp[0], "1.JOGAR.........");
   968  000F5C  0E80               	movlw	low _mat_disp
   969  000F5E  6E01               	movwf	strcpy@dest^0,c
   970  000F60  0E00               	movlw	high _mat_disp
   971  000F62  6E02               	movwf	(strcpy@dest+1)^0,c
   972  000F64  0E45               	movlw	low STR_21
   973  000F66  6E03               	movwf	strcpy@src^0,c
   974  000F68  0E06               	movlw	high STR_21
   975  000F6A  6E04               	movwf	(strcpy@src+1)^0,c
   976  000F6C  ECD8  F00C         	call	_strcpy	;wreg free
   977                           
   978                           ;task_manager.c: 142:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   979  000F70  0E90               	movlw	low (_mat_disp+16)
   980  000F72  6E01               	movwf	strcpy@dest^0,c
   981  000F74  0E00               	movlw	high (_mat_disp+16)
   982  000F76  6E02               	movwf	(strcpy@dest+1)^0,c
   983  000F78  0E78               	movlw	low STR_22
   984  000F7A  6E03               	movwf	strcpy@src^0,c
   985  000F7C  0E06               	movlw	high STR_22
   986  000F7E  6E04               	movwf	(strcpy@src+1)^0,c
   987  000F80  ECD8  F00C         	call	_strcpy	;wreg free
   988                           
   989                           ;task_manager.c: 143:     strcpy(mat_disp[2], "3.CREDITOS......");
   990  000F84  0EA0               	movlw	low (_mat_disp+32)
   991  000F86  6E01               	movwf	strcpy@dest^0,c
   992  000F88  0E00               	movlw	high (_mat_disp+32)
   993  000F8A  6E02               	movwf	(strcpy@dest+1)^0,c
   994  000F8C  0E56               	movlw	low STR_23
   995  000F8E  6E03               	movwf	strcpy@src^0,c
   996  000F90  0E06               	movlw	high STR_23
   997  000F92  6E04               	movwf	(strcpy@src+1)^0,c
   998  000F94  ECD8  F00C         	call	_strcpy	;wreg free
   999                           
  1000                           ;task_manager.c: 144:     strcpy(mat_disp[3], "4.FINALIZAR.....");
  1001  000F98  0EB0               	movlw	low (_mat_disp+48)
  1002  000F9A  6E01               	movwf	strcpy@dest^0,c
  1003  000F9C  0E00               	movlw	high (_mat_disp+48)
  1004  000F9E  6E02               	movwf	(strcpy@dest+1)^0,c
  1005  000FA0  0E67               	movlw	low STR_24
  1006  000FA2  6E03               	movwf	strcpy@src^0,c
  1007  000FA4  0E06               	movlw	high STR_24
  1008  000FA6  6E04               	movwf	(strcpy@src+1)^0,c
  1009  000FA8  ECD8  F00C         	call	_strcpy	;wreg free
  1010  000FAC                     l1703:
  1011                           
  1012                           ;task_manager.c: 147:     mat_disp[op][15] = '<';
  1013  000FAC  5040               	movf	_op^0,w,c
  1014  000FAE  0D10               	mullw	16
  1015  000FB0  0E8F               	movlw	low (_mat_disp+15)
  1016  000FB2  24F3               	addwf	243,w,c
  1017  000FB4  6ED9               	movwf	fsr2l,c
  1018  000FB6  0E00               	movlw	high (_mat_disp+15)
  1019  000FB8  20F4               	addwfc	prodh,w,c
  1020  000FBA  6EDA               	movwf	fsr2h,c
  1021  000FBC  0E3C               	movlw	60
  1022  000FBE  6EDF               	movwf	indf2,c
  1023  000FC0                     
  1024                           ;task_manager.c: 148:     print_mat(lcd);
  1025  000FC0  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1026  000FC4  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1027  000FC8  EC3D  F00A         	call	_print_mat	;wreg free
  1028                           
  1029                           ;task_manager.c: 149:     while(!botoes.Enter){
  1030  000FCC  EF30  F008         	goto	l1733
  1031  000FD0                     l239:
  1032                           
  1033                           ;task_manager.c: 150:         if((botoes.U) && (op > 0)){
  1034  000FD0  A046               	btfss	_botoes^0,0,c
  1035  000FD2  EFED  F007         	goto	u1021
  1036  000FD6  EFEF  F007         	goto	u1020
  1037  000FDA                     u1021:
  1038  000FDA  EF13  F008         	goto	l1719
  1039  000FDE                     u1020:
  1040  000FDE  5040               	movf	_op^0,w,c
  1041  000FE0  B4D8               	btfsc	status,2,c
  1042  000FE2  EFF5  F007         	goto	u1031
  1043  000FE6  EFF7  F007         	goto	u1030
  1044  000FEA                     u1031:
  1045  000FEA  EF13  F008         	goto	l1719
  1046  000FEE                     u1030:
  1047  000FEE                     
  1048                           ;task_manager.c: 151:             mat_disp[op][15] = '.';
  1049  000FEE  5040               	movf	_op^0,w,c
  1050  000FF0  0D10               	mullw	16
  1051  000FF2  0E8F               	movlw	low (_mat_disp+15)
  1052  000FF4  24F3               	addwf	243,w,c
  1053  000FF6  6ED9               	movwf	fsr2l,c
  1054  000FF8  0E00               	movlw	high (_mat_disp+15)
  1055  000FFA  20F4               	addwfc	prodh,w,c
  1056  000FFC  6EDA               	movwf	fsr2h,c
  1057  000FFE  0E2E               	movlw	46
  1058  001000  6EDF               	movwf	indf2,c
  1059  001002                     
  1060                           ;task_manager.c: 152:             op--;
  1061  001002  0640               	decf	_op^0,f,c
  1062  001004                     
  1063                           ;task_manager.c: 153:             botoes.U = 0;
  1064  001004  9046               	bcf	_botoes^0,0,c
  1065  001006                     
  1066                           ;task_manager.c: 154:             mat_disp[op][15] = '<';
  1067  001006  5040               	movf	_op^0,w,c
  1068  001008  0D10               	mullw	16
  1069  00100A  0E8F               	movlw	low (_mat_disp+15)
  1070  00100C  24F3               	addwf	243,w,c
  1071  00100E  6ED9               	movwf	fsr2l,c
  1072  001010  0E00               	movlw	high (_mat_disp+15)
  1073  001012  20F4               	addwfc	prodh,w,c
  1074  001014  6EDA               	movwf	fsr2h,c
  1075  001016  0E3C               	movlw	60
  1076  001018  6EDF               	movwf	indf2,c
  1077  00101A                     
  1078                           ;task_manager.c: 155:             print_mat(lcd);
  1079  00101A  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1080  00101E  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1081  001022  EC3D  F00A         	call	_print_mat	;wreg free
  1082  001026                     l1719:
  1083                           
  1084                           ;task_manager.c: 157:         if((botoes.D) && (op < 3)){
  1085  001026  A246               	btfss	_botoes^0,1,c
  1086  001028  EF18  F008         	goto	u1041
  1087  00102C  EF1A  F008         	goto	u1040
  1088  001030                     u1041:
  1089  001030  EF30  F008         	goto	l1733
  1090  001034                     u1040:
  1091  001034  0E03               	movlw	3
  1092  001036  6040               	cpfslt	_op^0,c
  1093  001038  EF20  F008         	goto	u1051
  1094  00103C  EF22  F008         	goto	u1050
  1095  001040                     u1051:
  1096  001040  EF30  F008         	goto	l1733
  1097  001044                     u1050:
  1098  001044                     
  1099                           ;task_manager.c: 158:             mat_disp[op][15] = '.';
  1100  001044  5040               	movf	_op^0,w,c
  1101  001046  0D10               	mullw	16
  1102  001048  0E8F               	movlw	low (_mat_disp+15)
  1103  00104A  24F3               	addwf	243,w,c
  1104  00104C  6ED9               	movwf	fsr2l,c
  1105  00104E  0E00               	movlw	high (_mat_disp+15)
  1106  001050  20F4               	addwfc	prodh,w,c
  1107  001052  6EDA               	movwf	fsr2h,c
  1108  001054  0E2E               	movlw	46
  1109  001056  6EDF               	movwf	indf2,c
  1110  001058                     
  1111                           ;task_manager.c: 159:             op++;
  1112  001058  2A40               	incf	_op^0,f,c
  1113  00105A                     
  1114                           ;task_manager.c: 160:             botoes.D = 0;
  1115  00105A  9246               	bcf	_botoes^0,1,c
  1116  00105C  EFD6  F007         	goto	l1703
  1117  001060                     l1733:
  1118                           
  1119                           ;task_manager.c: 149:     while(!botoes.Enter){
  1120  001060  A846               	btfss	_botoes^0,4,c
  1121  001062  EF35  F008         	goto	u1061
  1122  001066  EF37  F008         	goto	u1060
  1123  00106A                     u1061:
  1124  00106A  EFE8  F007         	goto	l239
  1125  00106E                     u1060:
  1126  00106E  0012               	return		;funcret
  1127  001070                     __end_of_menu:
  1128                           	opt callstack 0
  1129                           
  1130 ;; *************** function _jogar *****************
  1131 ;; Defined at:
  1132 ;;		line 47 in file "task_manager.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  lcd             2   40[COMRAM] PTR struct .
  1135 ;;		 -> PORTD(1), 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  j               2   55[COMRAM] int 
  1138 ;;  i               2   57[COMRAM] int 
  1139 ;;  bateu           2   53[COMRAM] int 
  1140 ;;  i               2   50[COMRAM] int 
  1141 ;;  score           1   52[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         2       0       0       0       0       0       0
  1152 ;;      Locals:         9       0       0       0       0       0       0
  1153 ;;      Temps:          8       0       0       0       0       0       0
  1154 ;;      Totals:        19       0       0       0       0       0       0
  1155 ;;Total ram usage:       19 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    6
  1158 ;; This function calls:
  1159 ;;		___awmod
  1160 ;;		_print_mat
  1161 ;;		_rand
  1162 ;;		_srand
  1163 ;;		_strcpy
  1164 ;;		_time
  1165 ;; This function is called by:
  1166 ;;		_gerenciador
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text3
  1171  0006FA                     __ptext3:
  1172                           	opt callstack 0
  1173  0006FA                     _jogar:
  1174                           	opt callstack 23
  1175  0006FA                     
  1176                           ;task_manager.c: 48:     srand(time(((void*)0)));
  1177  0006FA  0E00               	movlw	0
  1178  0006FC  6E01               	movwf	time@t^0,c
  1179  0006FE  0E00               	movlw	0
  1180  000700  6E02               	movwf	(time@t+1)^0,c
  1181  000702  EC8E  F00C         	call	_time	;wreg free
  1182  000706  C001  F02B         	movff	?_time,??_jogar
  1183  00070A  C002  F02C         	movff	?_time+1,??_jogar+1
  1184  00070E  C003  F02D         	movff	?_time+2,??_jogar+2
  1185  000712  C004  F02E         	movff	?_time+3,??_jogar+3
  1186  000716  C005  F02F         	movff	?_time+4,??_jogar+4
  1187  00071A  C006  F030         	movff	?_time+5,??_jogar+5
  1188  00071E  C007  F031         	movff	?_time+6,??_jogar+6
  1189  000722  C008  F032         	movff	?_time+7,??_jogar+7
  1190  000726  C02B  F009         	movff	??_jogar,srand@s
  1191  00072A  C02D  F00A         	movff	??_jogar+2,srand@s+1
  1192  00072E  EC4B  F00D         	call	_srand	;wreg free
  1193  000732                     
  1194                           ;task_manager.c: 49:     char score = 0x31;
  1195  000732  0E31               	movlw	49
  1196  000734  6E35               	movwf	jogar@score^0,c
  1197  000736                     
  1198                           ;task_manager.c: 50:     int bateu = 0;
  1199  000736  0E00               	movlw	0
  1200  000738  6E37               	movwf	(jogar@bateu+1)^0,c
  1201  00073A  0E00               	movlw	0
  1202  00073C  6E36               	movwf	jogar@bateu^0,c
  1203  00073E                     
  1204                           ;task_manager.c: 54:     strcpy(mat_disp[0], "                ");
  1205  00073E  0E80               	movlw	low _mat_disp
  1206  000740  6E01               	movwf	strcpy@dest^0,c
  1207  000742  0E00               	movlw	high _mat_disp
  1208  000744  6E02               	movwf	(strcpy@dest+1)^0,c
  1209  000746  0E01               	movlw	low STR_9
  1210  000748  6E03               	movwf	strcpy@src^0,c
  1211  00074A  0E06               	movlw	high STR_9
  1212  00074C  6E04               	movwf	(strcpy@src+1)^0,c
  1213  00074E  ECD8  F00C         	call	_strcpy	;wreg free
  1214  000752                     
  1215                           ;task_manager.c: 55:     strcpy(mat_disp[1], "                ");
  1216  000752  0E90               	movlw	low (_mat_disp+16)
  1217  000754  6E01               	movwf	strcpy@dest^0,c
  1218  000756  0E00               	movlw	high (_mat_disp+16)
  1219  000758  6E02               	movwf	(strcpy@dest+1)^0,c
  1220  00075A  0E01               	movlw	low STR_9
  1221  00075C  6E03               	movwf	strcpy@src^0,c
  1222  00075E  0E06               	movlw	high STR_9
  1223  000760  6E04               	movwf	(strcpy@src+1)^0,c
  1224  000762  ECD8  F00C         	call	_strcpy	;wreg free
  1225  000766                     
  1226                           ;task_manager.c: 56:     strcpy(mat_disp[2], "                ");
  1227  000766  0EA0               	movlw	low (_mat_disp+32)
  1228  000768  6E01               	movwf	strcpy@dest^0,c
  1229  00076A  0E00               	movlw	high (_mat_disp+32)
  1230  00076C  6E02               	movwf	(strcpy@dest+1)^0,c
  1231  00076E  0E01               	movlw	low STR_9
  1232  000770  6E03               	movwf	strcpy@src^0,c
  1233  000772  0E06               	movlw	high STR_9
  1234  000774  6E04               	movwf	(strcpy@src+1)^0,c
  1235  000776  ECD8  F00C         	call	_strcpy	;wreg free
  1236  00077A                     
  1237                           ;task_manager.c: 57:     strcpy(mat_disp[3], "                ");
  1238  00077A  0EB0               	movlw	low (_mat_disp+48)
  1239  00077C  6E01               	movwf	strcpy@dest^0,c
  1240  00077E  0E00               	movlw	high (_mat_disp+48)
  1241  000780  6E02               	movwf	(strcpy@dest+1)^0,c
  1242  000782  0E01               	movlw	low STR_9
  1243  000784  6E03               	movwf	strcpy@src^0,c
  1244  000786  0E06               	movlw	high STR_9
  1245  000788  6E04               	movwf	(strcpy@src+1)^0,c
  1246  00078A  ECD8  F00C         	call	_strcpy	;wreg free
  1247  00078E                     
  1248                           ;task_manager.c: 58:     mat_disp[0][2] = score;
  1249  00078E  0E31               	movlw	49
  1250  000790  0100               	movlb	0	; () banked
  1251  000792  6F82               	movwf	(_mat_disp+2)& (0+255),b
  1252  000794                     
  1253                           ; BSR set to: 0
  1254                           ;task_manager.c: 59:     print_mat(lcd);
  1255  000794  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1256  000798  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1257  00079C  EC3D  F00A         	call	_print_mat	;wreg free
  1258                           
  1259                           ;task_manager.c: 61:     while(!botoes.Esc && bateu == 0){
  1260  0007A0  EF6E  F006         	goto	l1867
  1261  0007A4                     l1755:
  1262                           
  1263                           ;task_manager.c: 62:         contador ++;
  1264  0007A4  2A3E               	incf	_contador^0,f,c
  1265  0007A6                     
  1266                           ;task_manager.c: 63:         if(contador%10 == 0){
  1267  0007A6  C03E  F023         	movff	_contador,___awmod@dividend
  1268  0007AA  6A24               	clrf	(___awmod@dividend+1)^0,c
  1269  0007AC  0E00               	movlw	0
  1270  0007AE  6E26               	movwf	(___awmod@divisor+1)^0,c
  1271  0007B0  0E0A               	movlw	10
  1272  0007B2  6E25               	movwf	___awmod@divisor^0,c
  1273  0007B4  ECE5  F009         	call	___awmod	;wreg free
  1274  0007B8  5023               	movf	?___awmod^0,w,c
  1275  0007BA  1024               	iorwf	(?___awmod+1)^0,w,c
  1276  0007BC  A4D8               	btfss	status,2,c
  1277  0007BE  EFE3  F003         	goto	u1071
  1278  0007C2  EFE5  F003         	goto	u1070
  1279  0007C6                     u1071:
  1280  0007C6  EF0A  F004         	goto	l1763
  1281  0007CA                     u1070:
  1282  0007CA                     
  1283                           ;task_manager.c: 64:             i = rand()%3;
  1284  0007CA  ECAC  F008         	call	_rand	;wreg free
  1285  0007CE  C019  F023         	movff	?_rand,___awmod@dividend
  1286  0007D2  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
  1287  0007D6  0E00               	movlw	0
  1288  0007D8  6E26               	movwf	(___awmod@divisor+1)^0,c
  1289  0007DA  0E03               	movlw	3
  1290  0007DC  6E25               	movwf	___awmod@divisor^0,c
  1291  0007DE  ECE5  F009         	call	___awmod	;wreg free
  1292  0007E2  C023  F033         	movff	?___awmod,jogar@i
  1293  0007E6  C024  F034         	movff	?___awmod+1,jogar@i+1
  1294  0007EA                     
  1295                           ;task_manager.c: 65:             mat_disp[i+1][15] = '*';
  1296  0007EA  C033  F02B         	movff	jogar@i,??_jogar
  1297  0007EE  C034  F02C         	movff	jogar@i+1,??_jogar+1
  1298  0007F2  3A2B               	swapf	??_jogar^0,f,c
  1299  0007F4  3A2C               	swapf	(??_jogar+1)^0,f,c
  1300  0007F6  0EF0               	movlw	240
  1301  0007F8  162C               	andwf	(??_jogar+1)^0,f,c
  1302  0007FA  502B               	movf	??_jogar^0,w,c
  1303  0007FC  0B0F               	andlw	15
  1304  0007FE  122C               	iorwf	(??_jogar+1)^0,f,c
  1305  000800  0EF0               	movlw	240
  1306  000802  162B               	andwf	??_jogar^0,f,c
  1307  000804  0E9F               	movlw	low (_mat_disp+31)
  1308  000806  242B               	addwf	??_jogar^0,w,c
  1309  000808  6ED9               	movwf	fsr2l,c
  1310  00080A  0E00               	movlw	high (_mat_disp+31)
  1311  00080C  202C               	addwfc	(??_jogar+1)^0,w,c
  1312  00080E  6EDA               	movwf	fsr2h,c
  1313  000810  0E2A               	movlw	42
  1314  000812  6EDF               	movwf	indf2,c
  1315  000814                     l1763:
  1316                           
  1317                           ;task_manager.c: 67:         for(int i = 1; i <= 3; i++){
  1318  000814  0E00               	movlw	0
  1319  000816  6E3B               	movwf	(jogar@i_485+1)^0,c
  1320  000818  0E01               	movlw	1
  1321  00081A  6E3A               	movwf	jogar@i_485^0,c
  1322  00081C                     l1769:
  1323                           
  1324                           ;task_manager.c: 68:             for(int j = 0; j < 15; j++)
  1325  00081C  0E00               	movlw	0
  1326  00081E  6E39               	movwf	(jogar@j+1)^0,c
  1327  000820  0E00               	movlw	0
  1328  000822  6E38               	movwf	jogar@j^0,c
  1329  000824                     l1775:
  1330                           
  1331                           ;task_manager.c: 69:                 mat_disp[i][j] = mat_disp[i][j+1];
  1332  000824  C03A  F02B         	movff	jogar@i_485,??_jogar
  1333  000828  C03B  F02C         	movff	jogar@i_485+1,??_jogar+1
  1334  00082C  3A2B               	swapf	??_jogar^0,f,c
  1335  00082E  3A2C               	swapf	(??_jogar+1)^0,f,c
  1336  000830  0EF0               	movlw	240
  1337  000832  162C               	andwf	(??_jogar+1)^0,f,c
  1338  000834  502B               	movf	??_jogar^0,w,c
  1339  000836  0B0F               	andlw	15
  1340  000838  122C               	iorwf	(??_jogar+1)^0,f,c
  1341  00083A  0EF0               	movlw	240
  1342  00083C  162B               	andwf	??_jogar^0,f,c
  1343  00083E  0E80               	movlw	low _mat_disp
  1344  000840  6E2D               	movwf	(??_jogar+2)^0,c
  1345  000842  0E00               	movlw	high _mat_disp
  1346  000844  6E2E               	movwf	(??_jogar+3)^0,c
  1347  000846  0E01               	movlw	1
  1348  000848  262D               	addwf	(??_jogar+2)^0,f,c
  1349  00084A  0E00               	movlw	0
  1350  00084C  222E               	addwfc	(??_jogar+3)^0,f,c
  1351  00084E  502B               	movf	??_jogar^0,w,c
  1352  000850  262D               	addwf	(??_jogar+2)^0,f,c
  1353  000852  502C               	movf	(??_jogar+1)^0,w,c
  1354  000854  222E               	addwfc	(??_jogar+3)^0,f,c
  1355  000856  5038               	movf	jogar@j^0,w,c
  1356  000858  242D               	addwf	(??_jogar+2)^0,w,c
  1357  00085A  6ED9               	movwf	fsr2l,c
  1358  00085C  5039               	movf	(jogar@j+1)^0,w,c
  1359  00085E  202E               	addwfc	(??_jogar+3)^0,w,c
  1360  000860  6EDA               	movwf	fsr2h,c
  1361  000862  C03A  F02F         	movff	jogar@i_485,??_jogar+4
  1362  000866  C03B  F030         	movff	jogar@i_485+1,??_jogar+5
  1363  00086A  3A2F               	swapf	(??_jogar+4)^0,f,c
  1364  00086C  3A30               	swapf	(??_jogar+5)^0,f,c
  1365  00086E  0EF0               	movlw	240
  1366  000870  1630               	andwf	(??_jogar+5)^0,f,c
  1367  000872  502F               	movf	(??_jogar+4)^0,w,c
  1368  000874  0B0F               	andlw	15
  1369  000876  1230               	iorwf	(??_jogar+5)^0,f,c
  1370  000878  0EF0               	movlw	240
  1371  00087A  162F               	andwf	(??_jogar+4)^0,f,c
  1372  00087C  0E80               	movlw	low _mat_disp
  1373  00087E  6E31               	movwf	(??_jogar+6)^0,c
  1374  000880  0E00               	movlw	high _mat_disp
  1375  000882  6E32               	movwf	(??_jogar+7)^0,c
  1376  000884  502F               	movf	(??_jogar+4)^0,w,c
  1377  000886  2631               	addwf	(??_jogar+6)^0,f,c
  1378  000888  5030               	movf	(??_jogar+5)^0,w,c
  1379  00088A  2232               	addwfc	(??_jogar+7)^0,f,c
  1380  00088C  5038               	movf	jogar@j^0,w,c
  1381  00088E  2431               	addwf	(??_jogar+6)^0,w,c
  1382  000890  6EE1               	movwf	fsr1l,c
  1383  000892  5039               	movf	(jogar@j+1)^0,w,c
  1384  000894  2032               	addwfc	(??_jogar+7)^0,w,c
  1385  000896  6EE2               	movwf	fsr1h,c
  1386  000898  CFDF FFE7          	movff	indf2,indf1
  1387  00089C  4A38               	infsnz	jogar@j^0,f,c
  1388  00089E  2A39               	incf	(jogar@j+1)^0,f,c
  1389  0008A0  BE39               	btfsc	(jogar@j+1)^0,7,c
  1390  0008A2  EF5C  F004         	goto	u1081
  1391  0008A6  5039               	movf	(jogar@j+1)^0,w,c
  1392  0008A8  E109               	bnz	u1080
  1393  0008AA  0E0F               	movlw	15
  1394  0008AC  5C38               	subwf	jogar@j^0,w,c
  1395  0008AE  A0D8               	btfss	status,0,c
  1396  0008B0  EF5C  F004         	goto	u1081
  1397  0008B4  EF5E  F004         	goto	u1080
  1398  0008B8                     u1081:
  1399  0008B8  EF12  F004         	goto	l1775
  1400  0008BC                     u1080:
  1401  0008BC                     
  1402                           ;task_manager.c: 70:             mat_disp[i][15] = ' ';
  1403  0008BC  C03A  F02B         	movff	jogar@i_485,??_jogar
  1404  0008C0  C03B  F02C         	movff	jogar@i_485+1,??_jogar+1
  1405  0008C4  3A2B               	swapf	??_jogar^0,f,c
  1406  0008C6  3A2C               	swapf	(??_jogar+1)^0,f,c
  1407  0008C8  0EF0               	movlw	240
  1408  0008CA  162C               	andwf	(??_jogar+1)^0,f,c
  1409  0008CC  502B               	movf	??_jogar^0,w,c
  1410  0008CE  0B0F               	andlw	15
  1411  0008D0  122C               	iorwf	(??_jogar+1)^0,f,c
  1412  0008D2  0EF0               	movlw	240
  1413  0008D4  162B               	andwf	??_jogar^0,f,c
  1414  0008D6  0E8F               	movlw	low (_mat_disp+15)
  1415  0008D8  242B               	addwf	??_jogar^0,w,c
  1416  0008DA  6ED9               	movwf	fsr2l,c
  1417  0008DC  0E00               	movlw	high (_mat_disp+15)
  1418  0008DE  202C               	addwfc	(??_jogar+1)^0,w,c
  1419  0008E0  6EDA               	movwf	fsr2h,c
  1420  0008E2  0E20               	movlw	32
  1421  0008E4  6EDF               	movwf	indf2,c
  1422  0008E6                     
  1423                           ;task_manager.c: 71:         }
  1424  0008E6  4A3A               	infsnz	jogar@i_485^0,f,c
  1425  0008E8  2A3B               	incf	(jogar@i_485+1)^0,f,c
  1426  0008EA  BE3B               	btfsc	(jogar@i_485+1)^0,7,c
  1427  0008EC  EF81  F004         	goto	u1091
  1428  0008F0  503B               	movf	(jogar@i_485+1)^0,w,c
  1429  0008F2  E109               	bnz	u1090
  1430  0008F4  0E04               	movlw	4
  1431  0008F6  5C3A               	subwf	jogar@i_485^0,w,c
  1432  0008F8  A0D8               	btfss	status,0,c
  1433  0008FA  EF81  F004         	goto	u1091
  1434  0008FE  EF83  F004         	goto	u1090
  1435  000902                     u1091:
  1436  000902  EF0E  F004         	goto	l1769
  1437  000906                     u1090:
  1438  000906                     
  1439                           ;task_manager.c: 72:         mat_disp[x][y-1] = ' ';
  1440  000906  5051               	movf	_x^0,w,c
  1441  000908  0D10               	mullw	16
  1442  00090A  0EFF               	movlw	255
  1443  00090C  6E2B               	movwf	??_jogar^0,c
  1444  00090E  0EFF               	movlw	255
  1445  000910  6E2C               	movwf	(??_jogar+1)^0,c
  1446  000912  0E80               	movlw	low _mat_disp
  1447  000914  6E2D               	movwf	(??_jogar+2)^0,c
  1448  000916  0E00               	movlw	high _mat_disp
  1449  000918  6E2E               	movwf	(??_jogar+3)^0,c
  1450  00091A  502B               	movf	??_jogar^0,w,c
  1451  00091C  262D               	addwf	(??_jogar+2)^0,f,c
  1452  00091E  502C               	movf	(??_jogar+1)^0,w,c
  1453  000920  222E               	addwfc	(??_jogar+3)^0,f,c
  1454  000922  50F3               	movf	243,w,c
  1455  000924  262D               	addwf	(??_jogar+2)^0,f,c
  1456  000926  50F4               	movf	244,w,c
  1457  000928  222E               	addwfc	(??_jogar+3)^0,f,c
  1458  00092A  503F               	movf	_y^0,w,c
  1459  00092C  242D               	addwf	(??_jogar+2)^0,w,c
  1460  00092E  6ED9               	movwf	fsr2l,c
  1461  000930  0E00               	movlw	0
  1462  000932  202E               	addwfc	(??_jogar+3)^0,w,c
  1463  000934  6EDA               	movwf	fsr2h,c
  1464  000936  0E20               	movlw	32
  1465  000938  6EDF               	movwf	indf2,c
  1466                           
  1467                           ;task_manager.c: 73:         mat_disp[x][y] = '>';
  1468  00093A  5051               	movf	_x^0,w,c
  1469  00093C  0D10               	mullw	16
  1470  00093E  0E80               	movlw	low _mat_disp
  1471  000940  6E2B               	movwf	??_jogar^0,c
  1472  000942  0E00               	movlw	high _mat_disp
  1473  000944  6E2C               	movwf	(??_jogar+1)^0,c
  1474  000946  50F3               	movf	243,w,c
  1475  000948  262B               	addwf	??_jogar^0,f,c
  1476  00094A  50F4               	movf	244,w,c
  1477  00094C  222C               	addwfc	(??_jogar+1)^0,f,c
  1478  00094E  503F               	movf	_y^0,w,c
  1479  000950  242B               	addwf	??_jogar^0,w,c
  1480  000952  6ED9               	movwf	fsr2l,c
  1481  000954  0E00               	movlw	0
  1482  000956  202C               	addwfc	(??_jogar+1)^0,w,c
  1483  000958  6EDA               	movwf	fsr2h,c
  1484  00095A  0E3E               	movlw	62
  1485  00095C  6EDF               	movwf	indf2,c
  1486  00095E                     
  1487                           ;task_manager.c: 74:         if(mat_disp[1][0] == '*' || mat_disp[2][0] == '*' || mat_di
      +                          sp[3][0] == '*')
  1488  00095E  0E2A               	movlw	42
  1489  000960  0100               	movlb	0	; () banked
  1490  000962  1990               	xorwf	(_mat_disp+16)& (0+255),w,b
  1491  000964  B4D8               	btfsc	status,2,c
  1492  000966  EFB7  F004         	goto	u1101
  1493  00096A  EFB9  F004         	goto	u1100
  1494  00096E                     u1101:
  1495  00096E  EFCB  F004         	goto	l1795
  1496  000972                     u1100:
  1497  000972                     
  1498                           ; BSR set to: 0
  1499  000972  0E2A               	movlw	42
  1500  000974  19A0               	xorwf	(_mat_disp+32)& (0+255),w,b
  1501  000976  B4D8               	btfsc	status,2,c
  1502  000978  EFC0  F004         	goto	u1111
  1503  00097C  EFC2  F004         	goto	u1110
  1504  000980                     u1111:
  1505  000980  EFCB  F004         	goto	l1795
  1506  000984                     u1110:
  1507  000984                     
  1508                           ; BSR set to: 0
  1509  000984  0E2A               	movlw	42
  1510  000986  19B0               	xorwf	(_mat_disp+48)& (0+255),w,b
  1511  000988  A4D8               	btfss	status,2,c
  1512  00098A  EFC9  F004         	goto	u1121
  1513  00098E  EFCB  F004         	goto	u1120
  1514  000992                     u1121:
  1515  000992  EFCC  F004         	goto	l1797
  1516  000996                     u1120:
  1517  000996                     l1795:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;task_manager.c: 75:             score++;
  1521  000996  2A35               	incf	jogar@score^0,f,c
  1522  000998                     l1797:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;task_manager.c: 77:         mat_disp[0][2] = score;
  1526  000998  C035  F082         	movff	jogar@score,_mat_disp+2
  1527  00099C                     
  1528                           ; BSR set to: 0
  1529                           ;task_manager.c: 78:         print_mat(lcd);
  1530  00099C  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1531  0009A0  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1532  0009A4  EC3D  F00A         	call	_print_mat	;wreg free
  1533  0009A8                     
  1534                           ;task_manager.c: 81:         if(mat_disp[x][y] == '>' && mat_disp[x][y+1] == '*')
  1535  0009A8  5051               	movf	_x^0,w,c
  1536  0009AA  0D10               	mullw	16
  1537  0009AC  0E80               	movlw	low _mat_disp
  1538  0009AE  6E2B               	movwf	??_jogar^0,c
  1539  0009B0  0E00               	movlw	high _mat_disp
  1540  0009B2  6E2C               	movwf	(??_jogar+1)^0,c
  1541  0009B4  50F3               	movf	243,w,c
  1542  0009B6  262B               	addwf	??_jogar^0,f,c
  1543  0009B8  50F4               	movf	244,w,c
  1544  0009BA  222C               	addwfc	(??_jogar+1)^0,f,c
  1545  0009BC  503F               	movf	_y^0,w,c
  1546  0009BE  242B               	addwf	??_jogar^0,w,c
  1547  0009C0  6ED9               	movwf	fsr2l,c
  1548  0009C2  0E00               	movlw	0
  1549  0009C4  202C               	addwfc	(??_jogar+1)^0,w,c
  1550  0009C6  6EDA               	movwf	fsr2h,c
  1551  0009C8  0E3E               	movlw	62
  1552  0009CA  18DE               	xorwf	postinc2,w,c
  1553  0009CC  A4D8               	btfss	status,2,c
  1554  0009CE  EFEB  F004         	goto	u1131
  1555  0009D2  EFED  F004         	goto	u1130
  1556  0009D6                     u1131:
  1557  0009D6  EF0E  F005         	goto	l1807
  1558  0009DA                     u1130:
  1559  0009DA  5051               	movf	_x^0,w,c
  1560  0009DC  0D10               	mullw	16
  1561  0009DE  0E80               	movlw	low _mat_disp
  1562  0009E0  6E2B               	movwf	??_jogar^0,c
  1563  0009E2  0E00               	movlw	high _mat_disp
  1564  0009E4  6E2C               	movwf	(??_jogar+1)^0,c
  1565  0009E6  0E01               	movlw	1
  1566  0009E8  262B               	addwf	??_jogar^0,f,c
  1567  0009EA  0E00               	movlw	0
  1568  0009EC  222C               	addwfc	(??_jogar+1)^0,f,c
  1569  0009EE  50F3               	movf	243,w,c
  1570  0009F0  262B               	addwf	??_jogar^0,f,c
  1571  0009F2  50F4               	movf	244,w,c
  1572  0009F4  222C               	addwfc	(??_jogar+1)^0,f,c
  1573  0009F6  503F               	movf	_y^0,w,c
  1574  0009F8  242B               	addwf	??_jogar^0,w,c
  1575  0009FA  6ED9               	movwf	fsr2l,c
  1576  0009FC  0E00               	movlw	0
  1577  0009FE  202C               	addwfc	(??_jogar+1)^0,w,c
  1578  000A00  6EDA               	movwf	fsr2h,c
  1579  000A02  0E2A               	movlw	42
  1580  000A04  18DE               	xorwf	postinc2,w,c
  1581  000A06  A4D8               	btfss	status,2,c
  1582  000A08  EF08  F005         	goto	u1141
  1583  000A0C  EF0A  F005         	goto	u1140
  1584  000A10                     u1141:
  1585  000A10  EF0E  F005         	goto	l1807
  1586  000A14                     u1140:
  1587  000A14                     
  1588                           ;task_manager.c: 82:             bateu = 1;
  1589  000A14  0E00               	movlw	0
  1590  000A16  6E37               	movwf	(jogar@bateu+1)^0,c
  1591  000A18  0E01               	movlw	1
  1592  000A1A  6E36               	movwf	jogar@bateu^0,c
  1593  000A1C                     l1807:
  1594                           
  1595                           ;task_manager.c: 84:         if((botoes.U) && (x > 1)){
  1596  000A1C  A046               	btfss	_botoes^0,0,c
  1597  000A1E  EF13  F005         	goto	u1151
  1598  000A22  EF15  F005         	goto	u1150
  1599  000A26                     u1151:
  1600  000A26  EF8B  F005         	goto	l1825
  1601  000A2A                     u1150:
  1602  000A2A  0E01               	movlw	1
  1603  000A2C  6451               	cpfsgt	_x^0,c
  1604  000A2E  EF1B  F005         	goto	u1161
  1605  000A32  EF1D  F005         	goto	u1160
  1606  000A36                     u1161:
  1607  000A36  EF8B  F005         	goto	l1825
  1608  000A3A                     u1160:
  1609  000A3A                     
  1610                           ;task_manager.c: 85:             if(mat_disp[x][y] == '>' && mat_disp[x-1][y] == '*')
  1611  000A3A  5051               	movf	_x^0,w,c
  1612  000A3C  0D10               	mullw	16
  1613  000A3E  0E80               	movlw	low _mat_disp
  1614  000A40  6E2B               	movwf	??_jogar^0,c
  1615  000A42  0E00               	movlw	high _mat_disp
  1616  000A44  6E2C               	movwf	(??_jogar+1)^0,c
  1617  000A46  50F3               	movf	243,w,c
  1618  000A48  262B               	addwf	??_jogar^0,f,c
  1619  000A4A  50F4               	movf	244,w,c
  1620  000A4C  222C               	addwfc	(??_jogar+1)^0,f,c
  1621  000A4E  503F               	movf	_y^0,w,c
  1622  000A50  242B               	addwf	??_jogar^0,w,c
  1623  000A52  6ED9               	movwf	fsr2l,c
  1624  000A54  0E00               	movlw	0
  1625  000A56  202C               	addwfc	(??_jogar+1)^0,w,c
  1626  000A58  6EDA               	movwf	fsr2h,c
  1627  000A5A  0E3E               	movlw	62
  1628  000A5C  18DE               	xorwf	postinc2,w,c
  1629  000A5E  A4D8               	btfss	status,2,c
  1630  000A60  EF34  F005         	goto	u1171
  1631  000A64  EF36  F005         	goto	u1170
  1632  000A68                     u1171:
  1633  000A68  EF65  F005         	goto	l1817
  1634  000A6C                     u1170:
  1635  000A6C  5051               	movf	_x^0,w,c
  1636  000A6E  6E2B               	movwf	??_jogar^0,c
  1637  000A70  6A2C               	clrf	(??_jogar+1)^0,c
  1638  000A72  3A2B               	swapf	??_jogar^0,f,c
  1639  000A74  3A2C               	swapf	(??_jogar+1)^0,f,c
  1640  000A76  0EF0               	movlw	240
  1641  000A78  162C               	andwf	(??_jogar+1)^0,f,c
  1642  000A7A  502B               	movf	??_jogar^0,w,c
  1643  000A7C  0B0F               	andlw	15
  1644  000A7E  122C               	iorwf	(??_jogar+1)^0,f,c
  1645  000A80  0EF0               	movlw	240
  1646  000A82  162B               	andwf	??_jogar^0,f,c
  1647  000A84  0EF0               	movlw	240
  1648  000A86  6E2D               	movwf	(??_jogar+2)^0,c
  1649  000A88  0EFF               	movlw	255
  1650  000A8A  6E2E               	movwf	(??_jogar+3)^0,c
  1651  000A8C  0E80               	movlw	low _mat_disp
  1652  000A8E  6E2F               	movwf	(??_jogar+4)^0,c
  1653  000A90  0E00               	movlw	high _mat_disp
  1654  000A92  6E30               	movwf	(??_jogar+5)^0,c
  1655  000A94  502D               	movf	(??_jogar+2)^0,w,c
  1656  000A96  262F               	addwf	(??_jogar+4)^0,f,c
  1657  000A98  502E               	movf	(??_jogar+3)^0,w,c
  1658  000A9A  2230               	addwfc	(??_jogar+5)^0,f,c
  1659  000A9C  502B               	movf	??_jogar^0,w,c
  1660  000A9E  262F               	addwf	(??_jogar+4)^0,f,c
  1661  000AA0  502C               	movf	(??_jogar+1)^0,w,c
  1662  000AA2  2230               	addwfc	(??_jogar+5)^0,f,c
  1663  000AA4  503F               	movf	_y^0,w,c
  1664  000AA6  242F               	addwf	(??_jogar+4)^0,w,c
  1665  000AA8  6ED9               	movwf	fsr2l,c
  1666  000AAA  0E00               	movlw	0
  1667  000AAC  2030               	addwfc	(??_jogar+5)^0,w,c
  1668  000AAE  6EDA               	movwf	fsr2h,c
  1669  000AB0  0E2A               	movlw	42
  1670  000AB2  18DE               	xorwf	postinc2,w,c
  1671  000AB4  A4D8               	btfss	status,2,c
  1672  000AB6  EF5F  F005         	goto	u1181
  1673  000ABA  EF61  F005         	goto	u1180
  1674  000ABE                     u1181:
  1675  000ABE  EF65  F005         	goto	l1817
  1676  000AC2                     u1180:
  1677  000AC2                     
  1678                           ;task_manager.c: 86:                 bateu = 1;
  1679  000AC2  0E00               	movlw	0
  1680  000AC4  6E37               	movwf	(jogar@bateu+1)^0,c
  1681  000AC6  0E01               	movlw	1
  1682  000AC8  6E36               	movwf	jogar@bateu^0,c
  1683  000ACA                     l1817:
  1684                           
  1685                           ;task_manager.c: 87:             mat_disp[x][y] = ' ';
  1686  000ACA  5051               	movf	_x^0,w,c
  1687  000ACC  0D10               	mullw	16
  1688  000ACE  0E80               	movlw	low _mat_disp
  1689  000AD0  6E2B               	movwf	??_jogar^0,c
  1690  000AD2  0E00               	movlw	high _mat_disp
  1691  000AD4  6E2C               	movwf	(??_jogar+1)^0,c
  1692  000AD6  50F3               	movf	243,w,c
  1693  000AD8  262B               	addwf	??_jogar^0,f,c
  1694  000ADA  50F4               	movf	244,w,c
  1695  000ADC  222C               	addwfc	(??_jogar+1)^0,f,c
  1696  000ADE  503F               	movf	_y^0,w,c
  1697  000AE0  242B               	addwf	??_jogar^0,w,c
  1698  000AE2  6ED9               	movwf	fsr2l,c
  1699  000AE4  0E00               	movlw	0
  1700  000AE6  202C               	addwfc	(??_jogar+1)^0,w,c
  1701  000AE8  6EDA               	movwf	fsr2h,c
  1702  000AEA  0E20               	movlw	32
  1703  000AEC  6EDF               	movwf	indf2,c
  1704  000AEE                     
  1705                           ;task_manager.c: 88:             x--;
  1706  000AEE  0651               	decf	_x^0,f,c
  1707  000AF0                     
  1708                           ;task_manager.c: 89:             botoes.U = 0;
  1709  000AF0  9046               	bcf	_botoes^0,0,c
  1710  000AF2                     
  1711                           ;task_manager.c: 90:             mat_disp[x][y] = '>';
  1712  000AF2  5051               	movf	_x^0,w,c
  1713  000AF4  0D10               	mullw	16
  1714  000AF6  0E80               	movlw	low _mat_disp
  1715  000AF8  6E2B               	movwf	??_jogar^0,c
  1716  000AFA  0E00               	movlw	high _mat_disp
  1717  000AFC  6E2C               	movwf	(??_jogar+1)^0,c
  1718  000AFE  50F3               	movf	243,w,c
  1719  000B00  262B               	addwf	??_jogar^0,f,c
  1720  000B02  50F4               	movf	244,w,c
  1721  000B04  222C               	addwfc	(??_jogar+1)^0,f,c
  1722  000B06  503F               	movf	_y^0,w,c
  1723  000B08  242B               	addwf	??_jogar^0,w,c
  1724  000B0A  6ED9               	movwf	fsr2l,c
  1725  000B0C  0E00               	movlw	0
  1726  000B0E  202C               	addwfc	(??_jogar+1)^0,w,c
  1727  000B10  6EDA               	movwf	fsr2h,c
  1728  000B12  0E3E               	movlw	62
  1729  000B14  6EDF               	movwf	indf2,c
  1730  000B16                     l1825:
  1731                           
  1732                           ;task_manager.c: 93:         if((botoes.D) && (x < 3)){
  1733  000B16  A246               	btfss	_botoes^0,1,c
  1734  000B18  EF90  F005         	goto	u1191
  1735  000B1C  EF92  F005         	goto	u1190
  1736  000B20                     u1191:
  1737  000B20  EF04  F006         	goto	l1843
  1738  000B24                     u1190:
  1739  000B24  0E03               	movlw	3
  1740  000B26  6051               	cpfslt	_x^0,c
  1741  000B28  EF98  F005         	goto	u1201
  1742  000B2C  EF9A  F005         	goto	u1200
  1743  000B30                     u1201:
  1744  000B30  EF04  F006         	goto	l1843
  1745  000B34                     u1200:
  1746  000B34                     
  1747                           ;task_manager.c: 94:             if(mat_disp[x][y] == '>' && mat_disp[x+1][y] == '*')
  1748  000B34  5051               	movf	_x^0,w,c
  1749  000B36  0D10               	mullw	16
  1750  000B38  0E80               	movlw	low _mat_disp
  1751  000B3A  6E2B               	movwf	??_jogar^0,c
  1752  000B3C  0E00               	movlw	high _mat_disp
  1753  000B3E  6E2C               	movwf	(??_jogar+1)^0,c
  1754  000B40  50F3               	movf	243,w,c
  1755  000B42  262B               	addwf	??_jogar^0,f,c
  1756  000B44  50F4               	movf	244,w,c
  1757  000B46  222C               	addwfc	(??_jogar+1)^0,f,c
  1758  000B48  503F               	movf	_y^0,w,c
  1759  000B4A  242B               	addwf	??_jogar^0,w,c
  1760  000B4C  6ED9               	movwf	fsr2l,c
  1761  000B4E  0E00               	movlw	0
  1762  000B50  202C               	addwfc	(??_jogar+1)^0,w,c
  1763  000B52  6EDA               	movwf	fsr2h,c
  1764  000B54  0E3E               	movlw	62
  1765  000B56  18DE               	xorwf	postinc2,w,c
  1766  000B58  A4D8               	btfss	status,2,c
  1767  000B5A  EFB1  F005         	goto	u1211
  1768  000B5E  EFB3  F005         	goto	u1210
  1769  000B62                     u1211:
  1770  000B62  EFDE  F005         	goto	l1835
  1771  000B66                     u1210:
  1772  000B66  5051               	movf	_x^0,w,c
  1773  000B68  6E2B               	movwf	??_jogar^0,c
  1774  000B6A  6A2C               	clrf	(??_jogar+1)^0,c
  1775  000B6C  3A2B               	swapf	??_jogar^0,f,c
  1776  000B6E  3A2C               	swapf	(??_jogar+1)^0,f,c
  1777  000B70  0EF0               	movlw	240
  1778  000B72  162C               	andwf	(??_jogar+1)^0,f,c
  1779  000B74  502B               	movf	??_jogar^0,w,c
  1780  000B76  0B0F               	andlw	15
  1781  000B78  122C               	iorwf	(??_jogar+1)^0,f,c
  1782  000B7A  0EF0               	movlw	240
  1783  000B7C  162B               	andwf	??_jogar^0,f,c
  1784  000B7E  0E80               	movlw	low _mat_disp
  1785  000B80  6E2D               	movwf	(??_jogar+2)^0,c
  1786  000B82  0E00               	movlw	high _mat_disp
  1787  000B84  6E2E               	movwf	(??_jogar+3)^0,c
  1788  000B86  0E10               	movlw	16
  1789  000B88  262D               	addwf	(??_jogar+2)^0,f,c
  1790  000B8A  0E00               	movlw	0
  1791  000B8C  222E               	addwfc	(??_jogar+3)^0,f,c
  1792  000B8E  502B               	movf	??_jogar^0,w,c
  1793  000B90  262D               	addwf	(??_jogar+2)^0,f,c
  1794  000B92  502C               	movf	(??_jogar+1)^0,w,c
  1795  000B94  222E               	addwfc	(??_jogar+3)^0,f,c
  1796  000B96  503F               	movf	_y^0,w,c
  1797  000B98  242D               	addwf	(??_jogar+2)^0,w,c
  1798  000B9A  6ED9               	movwf	fsr2l,c
  1799  000B9C  0E00               	movlw	0
  1800  000B9E  202E               	addwfc	(??_jogar+3)^0,w,c
  1801  000BA0  6EDA               	movwf	fsr2h,c
  1802  000BA2  0E2A               	movlw	42
  1803  000BA4  18DE               	xorwf	postinc2,w,c
  1804  000BA6  A4D8               	btfss	status,2,c
  1805  000BA8  EFD8  F005         	goto	u1221
  1806  000BAC  EFDA  F005         	goto	u1220
  1807  000BB0                     u1221:
  1808  000BB0  EFDE  F005         	goto	l1835
  1809  000BB4                     u1220:
  1810  000BB4                     
  1811                           ;task_manager.c: 95:                 bateu = 1;
  1812  000BB4  0E00               	movlw	0
  1813  000BB6  6E37               	movwf	(jogar@bateu+1)^0,c
  1814  000BB8  0E01               	movlw	1
  1815  000BBA  6E36               	movwf	jogar@bateu^0,c
  1816  000BBC                     l1835:
  1817                           
  1818                           ;task_manager.c: 96:             mat_disp[x][y] = ' ';
  1819  000BBC  5051               	movf	_x^0,w,c
  1820  000BBE  0D10               	mullw	16
  1821  000BC0  0E80               	movlw	low _mat_disp
  1822  000BC2  6E2B               	movwf	??_jogar^0,c
  1823  000BC4  0E00               	movlw	high _mat_disp
  1824  000BC6  6E2C               	movwf	(??_jogar+1)^0,c
  1825  000BC8  50F3               	movf	243,w,c
  1826  000BCA  262B               	addwf	??_jogar^0,f,c
  1827  000BCC  50F4               	movf	244,w,c
  1828  000BCE  222C               	addwfc	(??_jogar+1)^0,f,c
  1829  000BD0  503F               	movf	_y^0,w,c
  1830  000BD2  242B               	addwf	??_jogar^0,w,c
  1831  000BD4  6ED9               	movwf	fsr2l,c
  1832  000BD6  0E00               	movlw	0
  1833  000BD8  202C               	addwfc	(??_jogar+1)^0,w,c
  1834  000BDA  6EDA               	movwf	fsr2h,c
  1835  000BDC  0E20               	movlw	32
  1836  000BDE  6EDF               	movwf	indf2,c
  1837  000BE0                     
  1838                           ;task_manager.c: 97:             x++;
  1839  000BE0  2A51               	incf	_x^0,f,c
  1840  000BE2                     
  1841                           ;task_manager.c: 98:             botoes.D = 0;
  1842  000BE2  9246               	bcf	_botoes^0,1,c
  1843  000BE4                     
  1844                           ;task_manager.c: 99:             mat_disp[x][y] = '>';
  1845  000BE4  5051               	movf	_x^0,w,c
  1846  000BE6  0D10               	mullw	16
  1847  000BE8  0E80               	movlw	low _mat_disp
  1848  000BEA  6E2B               	movwf	??_jogar^0,c
  1849  000BEC  0E00               	movlw	high _mat_disp
  1850  000BEE  6E2C               	movwf	(??_jogar+1)^0,c
  1851  000BF0  50F3               	movf	243,w,c
  1852  000BF2  262B               	addwf	??_jogar^0,f,c
  1853  000BF4  50F4               	movf	244,w,c
  1854  000BF6  222C               	addwfc	(??_jogar+1)^0,f,c
  1855  000BF8  503F               	movf	_y^0,w,c
  1856  000BFA  242B               	addwf	??_jogar^0,w,c
  1857  000BFC  6ED9               	movwf	fsr2l,c
  1858  000BFE  0E00               	movlw	0
  1859  000C00  202C               	addwfc	(??_jogar+1)^0,w,c
  1860  000C02  6EDA               	movwf	fsr2h,c
  1861  000C04  0E3E               	movlw	62
  1862  000C06  6EDF               	movwf	indf2,c
  1863  000C08                     l1843:
  1864                           
  1865                           ;task_manager.c: 102:         if((botoes.R) && (y < 15)){
  1866  000C08  A646               	btfss	_botoes^0,3,c
  1867  000C0A  EF09  F006         	goto	u1231
  1868  000C0E  EF0B  F006         	goto	u1230
  1869  000C12                     u1231:
  1870  000C12  EF39  F006         	goto	l1855
  1871  000C16                     u1230:
  1872  000C16  0E0F               	movlw	15
  1873  000C18  603F               	cpfslt	_y^0,c
  1874  000C1A  EF11  F006         	goto	u1241
  1875  000C1E  EF13  F006         	goto	u1240
  1876  000C22                     u1241:
  1877  000C22  EF39  F006         	goto	l1855
  1878  000C26                     u1240:
  1879  000C26                     
  1880                           ;task_manager.c: 103:             mat_disp[x][y] = ' ';
  1881  000C26  5051               	movf	_x^0,w,c
  1882  000C28  0D10               	mullw	16
  1883  000C2A  0E80               	movlw	low _mat_disp
  1884  000C2C  6E2B               	movwf	??_jogar^0,c
  1885  000C2E  0E00               	movlw	high _mat_disp
  1886  000C30  6E2C               	movwf	(??_jogar+1)^0,c
  1887  000C32  50F3               	movf	243,w,c
  1888  000C34  262B               	addwf	??_jogar^0,f,c
  1889  000C36  50F4               	movf	244,w,c
  1890  000C38  222C               	addwfc	(??_jogar+1)^0,f,c
  1891  000C3A  503F               	movf	_y^0,w,c
  1892  000C3C  242B               	addwf	??_jogar^0,w,c
  1893  000C3E  6ED9               	movwf	fsr2l,c
  1894  000C40  0E00               	movlw	0
  1895  000C42  202C               	addwfc	(??_jogar+1)^0,w,c
  1896  000C44  6EDA               	movwf	fsr2h,c
  1897  000C46  0E20               	movlw	32
  1898  000C48  6EDF               	movwf	indf2,c
  1899  000C4A                     
  1900                           ;task_manager.c: 104:             y++;
  1901  000C4A  2A3F               	incf	_y^0,f,c
  1902  000C4C                     
  1903                           ;task_manager.c: 105:             botoes.R = 0;
  1904  000C4C  9646               	bcf	_botoes^0,3,c
  1905  000C4E                     
  1906                           ;task_manager.c: 106:             mat_disp[x][y] = '>';
  1907  000C4E  5051               	movf	_x^0,w,c
  1908  000C50  0D10               	mullw	16
  1909  000C52  0E80               	movlw	low _mat_disp
  1910  000C54  6E2B               	movwf	??_jogar^0,c
  1911  000C56  0E00               	movlw	high _mat_disp
  1912  000C58  6E2C               	movwf	(??_jogar+1)^0,c
  1913  000C5A  50F3               	movf	243,w,c
  1914  000C5C  262B               	addwf	??_jogar^0,f,c
  1915  000C5E  50F4               	movf	244,w,c
  1916  000C60  222C               	addwfc	(??_jogar+1)^0,f,c
  1917  000C62  503F               	movf	_y^0,w,c
  1918  000C64  242B               	addwf	??_jogar^0,w,c
  1919  000C66  6ED9               	movwf	fsr2l,c
  1920  000C68  0E00               	movlw	0
  1921  000C6A  202C               	addwfc	(??_jogar+1)^0,w,c
  1922  000C6C  6EDA               	movwf	fsr2h,c
  1923  000C6E  0E3E               	movlw	62
  1924  000C70  6EDF               	movwf	indf2,c
  1925  000C72                     l1855:
  1926                           
  1927                           ;task_manager.c: 109:         if((botoes.L) && (y > 0)){
  1928  000C72  A446               	btfss	_botoes^0,2,c
  1929  000C74  EF3E  F006         	goto	u1251
  1930  000C78  EF40  F006         	goto	u1250
  1931  000C7C                     u1251:
  1932  000C7C  EF6E  F006         	goto	l1867
  1933  000C80                     u1250:
  1934  000C80  503F               	movf	_y^0,w,c
  1935  000C82  B4D8               	btfsc	status,2,c
  1936  000C84  EF46  F006         	goto	u1261
  1937  000C88  EF48  F006         	goto	u1260
  1938  000C8C                     u1261:
  1939  000C8C  EF6E  F006         	goto	l1867
  1940  000C90                     u1260:
  1941  000C90                     
  1942                           ;task_manager.c: 110:             mat_disp[x][y] = ' ';
  1943  000C90  5051               	movf	_x^0,w,c
  1944  000C92  0D10               	mullw	16
  1945  000C94  0E80               	movlw	low _mat_disp
  1946  000C96  6E2B               	movwf	??_jogar^0,c
  1947  000C98  0E00               	movlw	high _mat_disp
  1948  000C9A  6E2C               	movwf	(??_jogar+1)^0,c
  1949  000C9C  50F3               	movf	243,w,c
  1950  000C9E  262B               	addwf	??_jogar^0,f,c
  1951  000CA0  50F4               	movf	244,w,c
  1952  000CA2  222C               	addwfc	(??_jogar+1)^0,f,c
  1953  000CA4  503F               	movf	_y^0,w,c
  1954  000CA6  242B               	addwf	??_jogar^0,w,c
  1955  000CA8  6ED9               	movwf	fsr2l,c
  1956  000CAA  0E00               	movlw	0
  1957  000CAC  202C               	addwfc	(??_jogar+1)^0,w,c
  1958  000CAE  6EDA               	movwf	fsr2h,c
  1959  000CB0  0E20               	movlw	32
  1960  000CB2  6EDF               	movwf	indf2,c
  1961  000CB4                     
  1962                           ;task_manager.c: 111:             y--;
  1963  000CB4  063F               	decf	_y^0,f,c
  1964  000CB6                     
  1965                           ;task_manager.c: 112:             botoes.L = 0;
  1966  000CB6  9446               	bcf	_botoes^0,2,c
  1967  000CB8                     
  1968                           ;task_manager.c: 113:             mat_disp[x][y] = '>';
  1969  000CB8  5051               	movf	_x^0,w,c
  1970  000CBA  0D10               	mullw	16
  1971  000CBC  0E80               	movlw	low _mat_disp
  1972  000CBE  6E2B               	movwf	??_jogar^0,c
  1973  000CC0  0E00               	movlw	high _mat_disp
  1974  000CC2  6E2C               	movwf	(??_jogar+1)^0,c
  1975  000CC4  50F3               	movf	243,w,c
  1976  000CC6  262B               	addwf	??_jogar^0,f,c
  1977  000CC8  50F4               	movf	244,w,c
  1978  000CCA  222C               	addwfc	(??_jogar+1)^0,f,c
  1979  000CCC  503F               	movf	_y^0,w,c
  1980  000CCE  242B               	addwf	??_jogar^0,w,c
  1981  000CD0  6ED9               	movwf	fsr2l,c
  1982  000CD2  0E00               	movlw	0
  1983  000CD4  202C               	addwfc	(??_jogar+1)^0,w,c
  1984  000CD6  6EDA               	movwf	fsr2h,c
  1985  000CD8  0E3E               	movlw	62
  1986  000CDA  6EDF               	movwf	indf2,c
  1987  000CDC                     l1867:
  1988                           
  1989                           ;task_manager.c: 61:     while(!botoes.Esc && bateu == 0){
  1990  000CDC  BA46               	btfsc	_botoes^0,5,c
  1991  000CDE  EF73  F006         	goto	u1271
  1992  000CE2  EF75  F006         	goto	u1270
  1993  000CE6                     u1271:
  1994  000CE6  EF7E  F006         	goto	l1871
  1995  000CEA                     u1270:
  1996  000CEA  5036               	movf	jogar@bateu^0,w,c
  1997  000CEC  1037               	iorwf	(jogar@bateu+1)^0,w,c
  1998  000CEE  B4D8               	btfsc	status,2,c
  1999  000CF0  EF7C  F006         	goto	u1281
  2000  000CF4  EF7E  F006         	goto	u1280
  2001  000CF8                     u1281:
  2002  000CF8  EFD2  F003         	goto	l1755
  2003  000CFC                     u1280:
  2004  000CFC                     l1871:
  2005                           
  2006                           ;task_manager.c: 117:     if(bateu == 1){
  2007  000CFC  0436               	decf	jogar@bateu^0,w,c
  2008  000CFE  1037               	iorwf	(jogar@bateu+1)^0,w,c
  2009  000D00  A4D8               	btfss	status,2,c
  2010  000D02  EF85  F006         	goto	u1291
  2011  000D06  EF87  F006         	goto	u1290
  2012  000D0A                     u1291:
  2013  000D0A  EFBC  F006         	goto	l1877
  2014  000D0E                     u1290:
  2015  000D0E                     
  2016                           ;task_manager.c: 118:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  2017  000D0E  0E80               	movlw	low _mat_disp
  2018  000D10  6E01               	movwf	strcpy@dest^0,c
  2019  000D12  0E00               	movlw	high _mat_disp
  2020  000D14  6E02               	movwf	(strcpy@dest+1)^0,c
  2021  000D16  0E34               	movlw	low STR_13
  2022  000D18  6E03               	movwf	strcpy@src^0,c
  2023  000D1A  0E06               	movlw	high STR_13
  2024  000D1C  6E04               	movwf	(strcpy@src+1)^0,c
  2025  000D1E  ECD8  F00C         	call	_strcpy	;wreg free
  2026                           
  2027                           ;task_manager.c: 119:             strcpy(mat_disp[1], "APERTE ESC      ");
  2028  000D22  0E90               	movlw	low (_mat_disp+16)
  2029  000D24  6E01               	movwf	strcpy@dest^0,c
  2030  000D26  0E00               	movlw	high (_mat_disp+16)
  2031  000D28  6E02               	movwf	(strcpy@dest+1)^0,c
  2032  000D2A  0E23               	movlw	low STR_14
  2033  000D2C  6E03               	movwf	strcpy@src^0,c
  2034  000D2E  0E06               	movlw	high STR_14
  2035  000D30  6E04               	movwf	(strcpy@src+1)^0,c
  2036  000D32  ECD8  F00C         	call	_strcpy	;wreg free
  2037                           
  2038                           ;task_manager.c: 120:             strcpy(mat_disp[2], "PARA SAIR       ");
  2039  000D36  0EA0               	movlw	low (_mat_disp+32)
  2040  000D38  6E01               	movwf	strcpy@dest^0,c
  2041  000D3A  0E00               	movlw	high (_mat_disp+32)
  2042  000D3C  6E02               	movwf	(strcpy@dest+1)^0,c
  2043  000D3E  0E12               	movlw	low STR_15
  2044  000D40  6E03               	movwf	strcpy@src^0,c
  2045  000D42  0E06               	movlw	high STR_15
  2046  000D44  6E04               	movwf	(strcpy@src+1)^0,c
  2047  000D46  ECD8  F00C         	call	_strcpy	;wreg free
  2048                           
  2049                           ;task_manager.c: 121:             strcpy(mat_disp[3], "                ");
  2050  000D4A  0EB0               	movlw	low (_mat_disp+48)
  2051  000D4C  6E01               	movwf	strcpy@dest^0,c
  2052  000D4E  0E00               	movlw	high (_mat_disp+48)
  2053  000D50  6E02               	movwf	(strcpy@dest+1)^0,c
  2054  000D52  0E01               	movlw	low STR_9
  2055  000D54  6E03               	movwf	strcpy@src^0,c
  2056  000D56  0E06               	movlw	high STR_9
  2057  000D58  6E04               	movwf	(strcpy@src+1)^0,c
  2058  000D5A  ECD8  F00C         	call	_strcpy	;wreg free
  2059  000D5E                     
  2060                           ;task_manager.c: 122:             print_mat(lcd);
  2061  000D5E  C029  F010         	movff	jogar@lcd,print_mat@lcd
  2062  000D62  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  2063  000D66  EC3D  F00A         	call	_print_mat	;wreg free
  2064  000D6A                     l226:
  2065  000D6A  AA46               	btfss	_botoes^0,5,c
  2066  000D6C  EFBA  F006         	goto	u1301
  2067  000D70  EFBC  F006         	goto	u1300
  2068  000D74                     u1301:
  2069  000D74  EFB5  F006         	goto	l226
  2070  000D78                     u1300:
  2071  000D78                     l1877:
  2072                           
  2073                           ;task_manager.c: 126:     x = 1;
  2074  000D78  0E01               	movlw	1
  2075  000D7A  6E51               	movwf	_x^0,c
  2076                           
  2077                           ;task_manager.c: 127:     y = 0;
  2078  000D7C  0E00               	movlw	0
  2079  000D7E  6E3F               	movwf	_y^0,c
  2080                           
  2081                           ;task_manager.c: 128:     contador = 0;
  2082  000D80  0E00               	movlw	0
  2083  000D82  6E3E               	movwf	_contador^0,c
  2084  000D84  0012               	return		;funcret
  2085  000D86                     __end_of_jogar:
  2086                           	opt callstack 0
  2087                           
  2088 ;; *************** function _time *****************
  2089 ;; Defined at:
  2090 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  t               2    0[COMRAM] PTR long long 
  2093 ;;		 -> NULL(0), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  8    0[COMRAM] long long 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2105 ;;      Params:         8       0       0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0
  2108 ;;      Totals:         8       0       0       0       0       0       0
  2109 ;;Total ram usage:        8 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    2
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_jogar
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text4
  2120  00191C                     __ptext4:
  2121                           	opt callstack 0
  2122  00191C                     _time:
  2123                           	opt callstack 26
  2124  00191C  5001               	movf	time@t^0,w,c
  2125  00191E  1002               	iorwf	(time@t+1)^0,w,c
  2126  001920  B4D8               	btfsc	status,2,c
  2127  001922  EF95  F00C         	goto	u941
  2128  001926  EF97  F00C         	goto	u940
  2129  00192A                     u941:
  2130  00192A  EFAB  F00C         	goto	l1653
  2131  00192E                     u940:
  2132  00192E  C001  FFD9         	movff	time@t,fsr2l
  2133  001932  C002  FFDA         	movff	time@t+1,fsr2h
  2134  001936  0EFF               	movlw	255
  2135  001938  6EDE               	movwf	postinc2,c
  2136  00193A  0EFF               	movlw	255
  2137  00193C  6EDE               	movwf	postinc2,c
  2138  00193E  0EFF               	movlw	255
  2139  001940  6EDE               	movwf	postinc2,c
  2140  001942  0EFF               	movlw	255
  2141  001944  6EDE               	movwf	postinc2,c
  2142  001946  0EFF               	movlw	255
  2143  001948  6EDE               	movwf	postinc2,c
  2144  00194A  0EFF               	movlw	255
  2145  00194C  6EDE               	movwf	postinc2,c
  2146  00194E  0EFF               	movlw	255
  2147  001950  6EDE               	movwf	postinc2,c
  2148  001952  0EFF               	movlw	255
  2149  001954  6EDD               	movwf	postdec2,c
  2150  001956                     l1653:
  2151  001956  6801               	setf	?_time^0,c
  2152  001958  6802               	setf	(?_time+1)^0,c
  2153  00195A  6803               	setf	(?_time+2)^0,c
  2154  00195C  6804               	setf	(?_time+3)^0,c
  2155  00195E  6805               	setf	(?_time+4)^0,c
  2156  001960  6806               	setf	(?_time+5)^0,c
  2157  001962  6807               	setf	(?_time+6)^0,c
  2158  001964  6808               	setf	(?_time+7)^0,c
  2159  001966  0012               	return		;funcret
  2160  001968                     __end_of_time:
  2161                           	opt callstack 0
  2162                           
  2163 ;; *************** function _srand *****************
  2164 ;; Defined at:
  2165 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  s               2    8[COMRAM] unsigned int 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2179 ;;      Params:         2       0       0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0
  2181 ;;      Temps:          4       0       0       0       0       0       0
  2182 ;;      Totals:         6       0       0       0       0       0       0
  2183 ;;Total ram usage:        6 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    2
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_jogar
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text5
  2194  001A96                     __ptext5:
  2195                           	opt callstack 0
  2196  001A96                     _srand:
  2197                           	opt callstack 26
  2198  001A96  0EFF               	movlw	255
  2199  001A98  6E0B               	movwf	??_srand^0,c
  2200  001A9A  0EFF               	movlw	255
  2201  001A9C  6E0C               	movwf	(??_srand+1)^0,c
  2202  001A9E  C009  F00D         	movff	srand@s,??_srand+2
  2203  001AA2  C00A  F00E         	movff	srand@s+1,??_srand+3
  2204  001AA6  500B               	movf	??_srand^0,w,c
  2205  001AA8  260D               	addwf	(??_srand+2)^0,f,c
  2206  001AAA  500C               	movf	(??_srand+1)^0,w,c
  2207  001AAC  220E               	addwfc	(??_srand+3)^0,f,c
  2208  001AAE  C00D  F047         	movff	??_srand+2,_seed
  2209  001AB2  C00E  F048         	movff	??_srand+3,_seed+1
  2210  001AB6  6A49               	clrf	(_seed+2)^0,c
  2211  001AB8  6A4A               	clrf	(_seed+3)^0,c
  2212  001ABA  6A4B               	clrf	(_seed+4)^0,c
  2213  001ABC  6A4C               	clrf	(_seed+5)^0,c
  2214  001ABE  6A4D               	clrf	(_seed+6)^0,c
  2215  001AC0  6A4E               	clrf	(_seed+7)^0,c
  2216  001AC2  0012               	return		;funcret
  2217  001AC4                     __end_of_srand:
  2218                           	opt callstack 0
  2219                           
  2220 ;; *************** function _rand *****************
  2221 ;; Defined at:
  2222 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2   24[COMRAM] int 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2236 ;;      Params:         2       0       0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0
  2238 ;;      Temps:          8       0       0       0       0       0       0
  2239 ;;      Totals:        10       0       0       0       0       0       0
  2240 ;;Total ram usage:       10 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    3
  2243 ;; This function calls:
  2244 ;;		___omul
  2245 ;; This function is called by:
  2246 ;;		_jogar
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text6
  2251  001158                     __ptext6:
  2252                           	opt callstack 0
  2253  001158                     _rand:
  2254                           	opt callstack 25
  2255  001158  C047  F001         	movff	_seed,___omul@multiplier
  2256  00115C  C048  F002         	movff	_seed+1,___omul@multiplier+1
  2257  001160  C049  F003         	movff	_seed+2,___omul@multiplier+2
  2258  001164  C04A  F004         	movff	_seed+3,___omul@multiplier+3
  2259  001168  C04B  F005         	movff	_seed+4,___omul@multiplier+4
  2260  00116C  C04C  F006         	movff	_seed+5,___omul@multiplier+5
  2261  001170  C04D  F007         	movff	_seed+6,___omul@multiplier+6
  2262  001174  C04E  F008         	movff	_seed+7,___omul@multiplier+7
  2263  001178  0E2D               	movlw	45
  2264  00117A  6E09               	movwf	___omul@multiplicand^0,c
  2265  00117C  0E7F               	movlw	127
  2266  00117E  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2267  001180  0E95               	movlw	149
  2268  001182  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2269  001184  0E4C               	movlw	76
  2270  001186  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2271  001188  0E2D               	movlw	45
  2272  00118A  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2273  00118C  0EF4               	movlw	244
  2274  00118E  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2275  001190  0E51               	movlw	81
  2276  001192  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2277  001194  0E58               	movlw	88
  2278  001196  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2279  001198  EC93  F00A         	call	___omul	;wreg free
  2280  00119C  C001  F01B         	movff	?___omul,??_rand
  2281  0011A0  C002  F01C         	movff	?___omul+1,??_rand+1
  2282  0011A4  C003  F01D         	movff	?___omul+2,??_rand+2
  2283  0011A8  C004  F01E         	movff	?___omul+3,??_rand+3
  2284  0011AC  C005  F01F         	movff	?___omul+4,??_rand+4
  2285  0011B0  C006  F020         	movff	?___omul+5,??_rand+5
  2286  0011B4  C007  F021         	movff	?___omul+6,??_rand+6
  2287  0011B8  C008  F022         	movff	?___omul+7,??_rand+7
  2288  0011BC  0E01               	movlw	1
  2289  0011BE  241B               	addwf	??_rand^0,w,c
  2290  0011C0  6E47               	movwf	_seed^0,c
  2291  0011C2  0E00               	movlw	0
  2292  0011C4  201C               	addwfc	(??_rand+1)^0,w,c
  2293  0011C6  6E48               	movwf	(_seed+1)^0,c
  2294  0011C8  0E00               	movlw	0
  2295  0011CA  201D               	addwfc	(??_rand+2)^0,w,c
  2296  0011CC  6E49               	movwf	(_seed+2)^0,c
  2297  0011CE  0E00               	movlw	0
  2298  0011D0  201E               	addwfc	(??_rand+3)^0,w,c
  2299  0011D2  6E4A               	movwf	(_seed+3)^0,c
  2300  0011D4  0E00               	movlw	0
  2301  0011D6  201F               	addwfc	(??_rand+4)^0,w,c
  2302  0011D8  6E4B               	movwf	(_seed+4)^0,c
  2303  0011DA  0E00               	movlw	0
  2304  0011DC  2020               	addwfc	(??_rand+5)^0,w,c
  2305  0011DE  6E4C               	movwf	(_seed+5)^0,c
  2306  0011E0  0E00               	movlw	0
  2307  0011E2  2021               	addwfc	(??_rand+6)^0,w,c
  2308  0011E4  6E4D               	movwf	(_seed+6)^0,c
  2309  0011E6  0E00               	movlw	0
  2310  0011E8  2022               	addwfc	(??_rand+7)^0,w,c
  2311  0011EA  6E4E               	movwf	(_seed+7)^0,c
  2312  0011EC  C047  F01B         	movff	_seed,??_rand
  2313  0011F0  C048  F01C         	movff	_seed+1,??_rand+1
  2314  0011F4  C049  F01D         	movff	_seed+2,??_rand+2
  2315  0011F8  C04A  F01E         	movff	_seed+3,??_rand+3
  2316  0011FC  C04B  F01F         	movff	_seed+4,??_rand+4
  2317  001200  C04C  F020         	movff	_seed+5,??_rand+5
  2318  001204  C04D  F021         	movff	_seed+6,??_rand+6
  2319  001208  C04E  F022         	movff	_seed+7,??_rand+7
  2320  00120C  0E32               	movlw	50
  2321  00120E  EF12  F009         	goto	u950
  2322  001212                     u955:
  2323  001212  90D8               	bcf	status,0,c
  2324  001214  3222               	rrcf	(??_rand+7)^0,f,c
  2325  001216  3221               	rrcf	(??_rand+6)^0,f,c
  2326  001218  3220               	rrcf	(??_rand+5)^0,f,c
  2327  00121A  321F               	rrcf	(??_rand+4)^0,f,c
  2328  00121C  321E               	rrcf	(??_rand+3)^0,f,c
  2329  00121E  321D               	rrcf	(??_rand+2)^0,f,c
  2330  001220  321C               	rrcf	(??_rand+1)^0,f,c
  2331  001222  321B               	rrcf	??_rand^0,f,c
  2332  001224                     u950:
  2333  001224  2EE8               	decfsz	wreg,f,c
  2334  001226  EF09  F009         	goto	u955
  2335  00122A  C01B  F019         	movff	??_rand,?_rand
  2336  00122E  C01D  F01A         	movff	??_rand+2,?_rand+1
  2337  001232  0012               	return		;funcret
  2338  001234                     __end_of_rand:
  2339                           	opt callstack 0
  2340                           
  2341 ;; *************** function ___omul *****************
  2342 ;; Defined at:
  2343 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2346 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  product         8   16[COMRAM] unsigned long long 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  8    0[COMRAM] unsigned long long 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2358 ;;      Params:        16       0       0       0       0       0       0
  2359 ;;      Locals:         8       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0
  2361 ;;      Totals:        24       0       0       0       0       0       0
  2362 ;;Total ram usage:       24 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    2
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_rand
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text7
  2373  001526                     __ptext7:
  2374                           	opt callstack 0
  2375  001526                     ___omul:
  2376                           	opt callstack 25
  2377  001526  EE20  F011         	lfsr	2,___omul@product
  2378  00152A  0E07               	movlw	7
  2379  00152C                     u881:
  2380  00152C  6ADE               	clrf	postinc2,c
  2381  00152E  06E8               	decf	wreg,f,c
  2382  001530  E2FD               	bc	u881
  2383  001532                     l1613:
  2384  001532  A001               	btfss	___omul@multiplier^0,0,c
  2385  001534  EF9E  F00A         	goto	u891
  2386  001538  EFA0  F00A         	goto	u890
  2387  00153C                     u891:
  2388  00153C  EFB0  F00A         	goto	l1617
  2389  001540                     u890:
  2390  001540  5009               	movf	___omul@multiplicand^0,w,c
  2391  001542  2611               	addwf	___omul@product^0,f,c
  2392  001544  500A               	movf	(___omul@multiplicand+1)^0,w,c
  2393  001546  2212               	addwfc	(___omul@product+1)^0,f,c
  2394  001548  500B               	movf	(___omul@multiplicand+2)^0,w,c
  2395  00154A  2213               	addwfc	(___omul@product+2)^0,f,c
  2396  00154C  500C               	movf	(___omul@multiplicand+3)^0,w,c
  2397  00154E  2214               	addwfc	(___omul@product+3)^0,f,c
  2398  001550  500D               	movf	(___omul@multiplicand+4)^0,w,c
  2399  001552  2215               	addwfc	(___omul@product+4)^0,f,c
  2400  001554  500E               	movf	(___omul@multiplicand+5)^0,w,c
  2401  001556  2216               	addwfc	(___omul@product+5)^0,f,c
  2402  001558  500F               	movf	(___omul@multiplicand+6)^0,w,c
  2403  00155A  2217               	addwfc	(___omul@product+6)^0,f,c
  2404  00155C  5010               	movf	(___omul@multiplicand+7)^0,w,c
  2405  00155E  2218               	addwfc	(___omul@product+7)^0,f,c
  2406  001560                     l1617:
  2407  001560  90D8               	bcf	status,0,c
  2408  001562  3609               	rlcf	___omul@multiplicand^0,f,c
  2409  001564  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  2410  001566  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  2411  001568  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  2412  00156A  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  2413  00156C  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  2414  00156E  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  2415  001570  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  2416  001572  90D8               	bcf	status,0,c
  2417  001574  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  2418  001576  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  2419  001578  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  2420  00157A  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  2421  00157C  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  2422  00157E  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  2423  001580  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  2424  001582  3201               	rrcf	___omul@multiplier^0,f,c
  2425  001584  5001               	movf	___omul@multiplier^0,w,c
  2426  001586  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  2427  001588  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  2428  00158A  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  2429  00158C  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  2430  00158E  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  2431  001590  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  2432  001592  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  2433  001594  A4D8               	btfss	status,2,c
  2434  001596  EFCF  F00A         	goto	u901
  2435  00159A  EFD1  F00A         	goto	u900
  2436  00159E                     u901:
  2437  00159E  EF99  F00A         	goto	l1613
  2438  0015A2                     u900:
  2439  0015A2  C011  F001         	movff	___omul@product,?___omul
  2440  0015A6  C012  F002         	movff	___omul@product+1,?___omul+1
  2441  0015AA  C013  F003         	movff	___omul@product+2,?___omul+2
  2442  0015AE  C014  F004         	movff	___omul@product+3,?___omul+3
  2443  0015B2  C015  F005         	movff	___omul@product+4,?___omul+4
  2444  0015B6  C016  F006         	movff	___omul@product+5,?___omul+5
  2445  0015BA  C017  F007         	movff	___omul@product+6,?___omul+6
  2446  0015BE  C018  F008         	movff	___omul@product+7,?___omul+7
  2447  0015C2  0012               	return		;funcret
  2448  0015C4                     __end_of___omul:
  2449                           	opt callstack 0
  2450                           
  2451 ;; *************** function ___awmod *****************
  2452 ;; Defined at:
  2453 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  dividend        2   34[COMRAM] int 
  2456 ;;  divisor         2   36[COMRAM] int 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  sign            1   39[COMRAM] unsigned char 
  2459 ;;  counter         1   38[COMRAM] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2   34[COMRAM] int 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2469 ;;      Params:         4       0       0       0       0       0       0
  2470 ;;      Locals:         2       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0
  2472 ;;      Totals:         6       0       0       0       0       0       0
  2473 ;;Total ram usage:        6 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    2
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_jogar
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text8
  2484  0013CA                     __ptext8:
  2485                           	opt callstack 0
  2486  0013CA                     ___awmod:
  2487                           	opt callstack 26
  2488  0013CA  0E00               	movlw	0
  2489  0013CC  6E28               	movwf	___awmod@sign^0,c
  2490  0013CE  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  2491  0013D0  EFEE  F009         	goto	u960
  2492  0013D4  EFEC  F009         	goto	u961
  2493  0013D8                     u961:
  2494  0013D8  EFF4  F009         	goto	l1673
  2495  0013DC                     u960:
  2496  0013DC  6C23               	negf	___awmod@dividend^0,c
  2497  0013DE  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2498  0013E0  B0D8               	btfsc	status,0,c
  2499  0013E2  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2500  0013E4  0E01               	movlw	1
  2501  0013E6  6E28               	movwf	___awmod@sign^0,c
  2502  0013E8                     l1673:
  2503  0013E8  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  2504  0013EA  EFFB  F009         	goto	u970
  2505  0013EE  EFF9  F009         	goto	u971
  2506  0013F2                     u971:
  2507  0013F2  EFFF  F009         	goto	l1677
  2508  0013F6                     u970:
  2509  0013F6  6C25               	negf	___awmod@divisor^0,c
  2510  0013F8  1E26               	comf	(___awmod@divisor+1)^0,f,c
  2511  0013FA  B0D8               	btfsc	status,0,c
  2512  0013FC  2A26               	incf	(___awmod@divisor+1)^0,f,c
  2513  0013FE                     l1677:
  2514  0013FE  5025               	movf	___awmod@divisor^0,w,c
  2515  001400  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  2516  001402  B4D8               	btfsc	status,2,c
  2517  001404  EF06  F00A         	goto	u981
  2518  001408  EF08  F00A         	goto	u980
  2519  00140C                     u981:
  2520  00140C  EF2C  F00A         	goto	l1693
  2521  001410                     u980:
  2522  001410  0E01               	movlw	1
  2523  001412  6E27               	movwf	___awmod@counter^0,c
  2524  001414  EF10  F00A         	goto	l1683
  2525  001418                     l1681:
  2526  001418  90D8               	bcf	status,0,c
  2527  00141A  3625               	rlcf	___awmod@divisor^0,f,c
  2528  00141C  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  2529  00141E  2A27               	incf	___awmod@counter^0,f,c
  2530  001420                     l1683:
  2531  001420  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  2532  001422  EF15  F00A         	goto	u991
  2533  001426  EF17  F00A         	goto	u990
  2534  00142A                     u991:
  2535  00142A  EF0C  F00A         	goto	l1681
  2536  00142E                     u990:
  2537  00142E                     l1685:
  2538  00142E  5025               	movf	___awmod@divisor^0,w,c
  2539  001430  5C23               	subwf	___awmod@dividend^0,w,c
  2540  001432  5026               	movf	(___awmod@divisor+1)^0,w,c
  2541  001434  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  2542  001436  A0D8               	btfss	status,0,c
  2543  001438  EF20  F00A         	goto	u1001
  2544  00143C  EF22  F00A         	goto	u1000
  2545  001440                     u1001:
  2546  001440  EF26  F00A         	goto	l1689
  2547  001444                     u1000:
  2548  001444  5025               	movf	___awmod@divisor^0,w,c
  2549  001446  5E23               	subwf	___awmod@dividend^0,f,c
  2550  001448  5026               	movf	(___awmod@divisor+1)^0,w,c
  2551  00144A  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  2552  00144C                     l1689:
  2553  00144C  90D8               	bcf	status,0,c
  2554  00144E  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  2555  001450  3225               	rrcf	___awmod@divisor^0,f,c
  2556  001452  2E27               	decfsz	___awmod@counter^0,f,c
  2557  001454  EF17  F00A         	goto	l1685
  2558  001458                     l1693:
  2559  001458  5028               	movf	___awmod@sign^0,w,c
  2560  00145A  B4D8               	btfsc	status,2,c
  2561  00145C  EF32  F00A         	goto	u1011
  2562  001460  EF34  F00A         	goto	u1010
  2563  001464                     u1011:
  2564  001464  EF38  F00A         	goto	l1697
  2565  001468                     u1010:
  2566  001468  6C23               	negf	___awmod@dividend^0,c
  2567  00146A  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2568  00146C  B0D8               	btfsc	status,0,c
  2569  00146E  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2570  001470                     l1697:
  2571  001470  C023  F023         	movff	___awmod@dividend,?___awmod
  2572  001474  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  2573  001478  0012               	return		;funcret
  2574  00147A                     __end_of___awmod:
  2575                           	opt callstack 0
  2576                           
  2577 ;; *************** function _instrucoes *****************
  2578 ;; Defined at:
  2579 ;;		line 131 in file "task_manager.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  lcd             2   25[COMRAM] PTR struct .
  2582 ;;		 -> PORTD(1), 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2594 ;;      Params:         2       0       0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    6
  2601 ;; This function calls:
  2602 ;;		_print_mat
  2603 ;;		_strcpy
  2604 ;; This function is called by:
  2605 ;;		_gerenciador
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text9
  2610  0017E4                     __ptext9:
  2611                           	opt callstack 0
  2612  0017E4                     _instrucoes:
  2613                           	opt callstack 23
  2614  0017E4                     
  2615                           ;task_manager.c: 132:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  2616  0017E4  0E80               	movlw	low _mat_disp
  2617  0017E6  6E01               	movwf	strcpy@dest^0,c
  2618  0017E8  0E00               	movlw	high _mat_disp
  2619  0017EA  6E02               	movwf	(strcpy@dest+1)^0,c
  2620  0017EC  0ED9               	movlw	low STR_17
  2621  0017EE  6E03               	movwf	strcpy@src^0,c
  2622  0017F0  0E06               	movlw	high STR_17
  2623  0017F2  6E04               	movwf	(strcpy@src+1)^0,c
  2624  0017F4  ECD8  F00C         	call	_strcpy	;wreg free
  2625                           
  2626                           ;task_manager.c: 133:     strcpy(mat_disp[1], "NAVE           ");
  2627  0017F8  0E90               	movlw	low (_mat_disp+16)
  2628  0017FA  6E01               	movwf	strcpy@dest^0,c
  2629  0017FC  0E00               	movlw	high (_mat_disp+16)
  2630  0017FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2631  001800  0E89               	movlw	low STR_18
  2632  001802  6E03               	movwf	strcpy@src^0,c
  2633  001804  0E06               	movlw	high STR_18
  2634  001806  6E04               	movwf	(strcpy@src+1)^0,c
  2635  001808  ECD8  F00C         	call	_strcpy	;wreg free
  2636                           
  2637                           ;task_manager.c: 134:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  2638  00180C  0EA0               	movlw	low (_mat_disp+32)
  2639  00180E  6E01               	movwf	strcpy@dest^0,c
  2640  001810  0E00               	movlw	high (_mat_disp+32)
  2641  001812  6E02               	movwf	(strcpy@dest+1)^0,c
  2642  001814  0EA9               	movlw	low STR_19
  2643  001816  6E03               	movwf	strcpy@src^0,c
  2644  001818  0E06               	movlw	high STR_19
  2645  00181A  6E04               	movwf	(strcpy@src+1)^0,c
  2646  00181C  ECD8  F00C         	call	_strcpy	;wreg free
  2647                           
  2648                           ;task_manager.c: 135:     strcpy(mat_disp[3], "MENU           ");
  2649  001820  0EB0               	movlw	low (_mat_disp+48)
  2650  001822  6E01               	movwf	strcpy@dest^0,c
  2651  001824  0E00               	movlw	high (_mat_disp+48)
  2652  001826  6E02               	movwf	(strcpy@dest+1)^0,c
  2653  001828  0E99               	movlw	low STR_20
  2654  00182A  6E03               	movwf	strcpy@src^0,c
  2655  00182C  0E06               	movlw	high STR_20
  2656  00182E  6E04               	movwf	(strcpy@src+1)^0,c
  2657  001830  ECD8  F00C         	call	_strcpy	;wreg free
  2658  001834                     
  2659                           ;task_manager.c: 136:     print_mat(lcd);
  2660  001834  C01A  F010         	movff	instrucoes@lcd,print_mat@lcd
  2661  001838  C01B  F011         	movff	instrucoes@lcd+1,print_mat@lcd+1
  2662  00183C  EC3D  F00A         	call	_print_mat	;wreg free
  2663  001840                     l232:
  2664  001840  AA46               	btfss	_botoes^0,5,c
  2665  001842  EF25  F00C         	goto	u1311
  2666  001846  EF27  F00C         	goto	u1310
  2667  00184A                     u1311:
  2668  00184A  EF20  F00C         	goto	l232
  2669  00184E                     u1310:
  2670  00184E  0012               	return		;funcret
  2671  001850                     __end_of_instrucoes:
  2672                           	opt callstack 0
  2673                           
  2674 ;; *************** function _finaliza *****************
  2675 ;; Defined at:
  2676 ;;		line 38 in file "task_manager.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  lcd             2   25[COMRAM] PTR struct .
  2679 ;;		 -> PORTD(1), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         2       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0
  2694 ;;      Totals:         2       0       0       0       0       0       0
  2695 ;;Total ram usage:        2 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    6
  2698 ;; This function calls:
  2699 ;;		_print_mat
  2700 ;;		_strcpy
  2701 ;; This function is called by:
  2702 ;;		_gerenciador
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text10
  2707  0018BC                     __ptext10:
  2708                           	opt callstack 0
  2709  0018BC                     _finaliza:
  2710                           	opt callstack 23
  2711  0018BC                     
  2712                           ;task_manager.c: 39:     strcpy(mat_disp[0], "HIBERNANDO.....");
  2713  0018BC  0E80               	movlw	low _mat_disp
  2714  0018BE  6E01               	movwf	strcpy@dest^0,c
  2715  0018C0  0E00               	movlw	high _mat_disp
  2716  0018C2  6E02               	movwf	(strcpy@dest+1)^0,c
  2717  0018C4  0EB9               	movlw	low STR_5
  2718  0018C6  6E03               	movwf	strcpy@src^0,c
  2719  0018C8  0E06               	movlw	high STR_5
  2720  0018CA  6E04               	movwf	(strcpy@src+1)^0,c
  2721  0018CC  ECD8  F00C         	call	_strcpy	;wreg free
  2722                           
  2723                           ;task_manager.c: 40:     strcpy(mat_disp[1], "               ");
  2724  0018D0  0E90               	movlw	low (_mat_disp+16)
  2725  0018D2  6E01               	movwf	strcpy@dest^0,c
  2726  0018D4  0E00               	movlw	high (_mat_disp+16)
  2727  0018D6  6E02               	movwf	(strcpy@dest+1)^0,c
  2728  0018D8  0E02               	movlw	low (STR_9+1)
  2729  0018DA  6E03               	movwf	strcpy@src^0,c
  2730  0018DC  0E06               	movlw	high (STR_9+1)
  2731  0018DE  6E04               	movwf	(strcpy@src+1)^0,c
  2732  0018E0  ECD8  F00C         	call	_strcpy	;wreg free
  2733                           
  2734                           ;task_manager.c: 41:     strcpy(mat_disp[2], "               ");
  2735  0018E4  0EA0               	movlw	low (_mat_disp+32)
  2736  0018E6  6E01               	movwf	strcpy@dest^0,c
  2737  0018E8  0E00               	movlw	high (_mat_disp+32)
  2738  0018EA  6E02               	movwf	(strcpy@dest+1)^0,c
  2739  0018EC  0E02               	movlw	low (STR_9+1)
  2740  0018EE  6E03               	movwf	strcpy@src^0,c
  2741  0018F0  0E06               	movlw	high (STR_9+1)
  2742  0018F2  6E04               	movwf	(strcpy@src+1)^0,c
  2743  0018F4  ECD8  F00C         	call	_strcpy	;wreg free
  2744                           
  2745                           ;task_manager.c: 42:     strcpy(mat_disp[3], "               ");
  2746  0018F8  0EB0               	movlw	low (_mat_disp+48)
  2747  0018FA  6E01               	movwf	strcpy@dest^0,c
  2748  0018FC  0E00               	movlw	high (_mat_disp+48)
  2749  0018FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2750  001900  0E02               	movlw	low (STR_9+1)
  2751  001902  6E03               	movwf	strcpy@src^0,c
  2752  001904  0E06               	movlw	high (STR_9+1)
  2753  001906  6E04               	movwf	(strcpy@src+1)^0,c
  2754  001908  ECD8  F00C         	call	_strcpy	;wreg free
  2755  00190C                     
  2756                           ;task_manager.c: 43:     print_mat(lcd);
  2757  00190C  C01A  F010         	movff	finaliza@lcd,print_mat@lcd
  2758  001910  C01B  F011         	movff	finaliza@lcd+1,print_mat@lcd+1
  2759  001914  EC3D  F00A         	call	_print_mat	;wreg free
  2760  001918  0003               	sleep		;# 
  2761  00191A  0012               	return		;funcret
  2762  00191C                     __end_of_finaliza:
  2763                           	opt callstack 0
  2764                           
  2765 ;; *************** function _creditos *****************
  2766 ;; Defined at:
  2767 ;;		line 28 in file "task_manager.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  lcd             2   25[COMRAM] PTR struct .
  2770 ;;		 -> PORTD(1), 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2782 ;;      Params:         2       0       0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0
  2785 ;;      Totals:         2       0       0       0       0       0       0
  2786 ;;Total ram usage:        2 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    6
  2789 ;; This function calls:
  2790 ;;		_print_mat
  2791 ;;		_strcpy
  2792 ;; This function is called by:
  2793 ;;		_gerenciador
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text11
  2798  001850                     __ptext11:
  2799                           	opt callstack 0
  2800  001850                     _creditos:
  2801                           	opt callstack 23
  2802  001850                     
  2803                           ;task_manager.c: 30:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  2804  001850  0E80               	movlw	low _mat_disp
  2805  001852  6E01               	movwf	strcpy@dest^0,c
  2806  001854  0E00               	movlw	high _mat_disp
  2807  001856  6E02               	movwf	(strcpy@dest+1)^0,c
  2808  001858  0EC9               	movlw	low STR_1
  2809  00185A  6E03               	movwf	strcpy@src^0,c
  2810  00185C  0E06               	movlw	high STR_1
  2811  00185E  6E04               	movwf	(strcpy@src+1)^0,c
  2812  001860  ECD8  F00C         	call	_strcpy	;wreg free
  2813                           
  2814                           ;task_manager.c: 31:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  2815  001864  0E90               	movlw	low (_mat_disp+16)
  2816  001866  6E01               	movwf	strcpy@dest^0,c
  2817  001868  0E00               	movlw	high (_mat_disp+16)
  2818  00186A  6E02               	movwf	(strcpy@dest+1)^0,c
  2819  00186C  0EE9               	movlw	low STR_2
  2820  00186E  6E03               	movwf	strcpy@src^0,c
  2821  001870  0E06               	movlw	high STR_2
  2822  001872  6E04               	movwf	(strcpy@src+1)^0,c
  2823  001874  ECD8  F00C         	call	_strcpy	;wreg free
  2824                           
  2825                           ;task_manager.c: 32:     strcpy(mat_disp[2], "               ");
  2826  001878  0EA0               	movlw	low (_mat_disp+32)
  2827  00187A  6E01               	movwf	strcpy@dest^0,c
  2828  00187C  0E00               	movlw	high (_mat_disp+32)
  2829  00187E  6E02               	movwf	(strcpy@dest+1)^0,c
  2830  001880  0E02               	movlw	low (STR_9+1)
  2831  001882  6E03               	movwf	strcpy@src^0,c
  2832  001884  0E06               	movlw	high (STR_9+1)
  2833  001886  6E04               	movwf	(strcpy@src+1)^0,c
  2834  001888  ECD8  F00C         	call	_strcpy	;wreg free
  2835                           
  2836                           ;task_manager.c: 33:     strcpy(mat_disp[3], "               ");
  2837  00188C  0EB0               	movlw	low (_mat_disp+48)
  2838  00188E  6E01               	movwf	strcpy@dest^0,c
  2839  001890  0E00               	movlw	high (_mat_disp+48)
  2840  001892  6E02               	movwf	(strcpy@dest+1)^0,c
  2841  001894  0E02               	movlw	low (STR_9+1)
  2842  001896  6E03               	movwf	strcpy@src^0,c
  2843  001898  0E06               	movlw	high (STR_9+1)
  2844  00189A  6E04               	movwf	(strcpy@src+1)^0,c
  2845  00189C  ECD8  F00C         	call	_strcpy	;wreg free
  2846  0018A0                     
  2847                           ;task_manager.c: 34:     print_mat(lcd);
  2848  0018A0  C01A  F010         	movff	creditos@lcd,print_mat@lcd
  2849  0018A4  C01B  F011         	movff	creditos@lcd+1,print_mat@lcd+1
  2850  0018A8  EC3D  F00A         	call	_print_mat	;wreg free
  2851  0018AC                     l196:
  2852  0018AC  AA46               	btfss	_botoes^0,5,c
  2853  0018AE  EF5B  F00C         	goto	u1321
  2854  0018B2  EF5D  F00C         	goto	u1320
  2855  0018B6                     u1321:
  2856  0018B6  EF56  F00C         	goto	l196
  2857  0018BA                     u1320:
  2858  0018BA  0012               	return		;funcret
  2859  0018BC                     __end_of_creditos:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _strcpy *****************
  2863 ;; Defined at:
  2864 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2867 ;;		 -> mat_disp(64), 
  2868 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2869 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  2870 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  2871 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  2872 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2873 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  2874 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  d               2    6[COMRAM] PTR unsigned char 
  2877 ;;		 -> mat_disp(64), 
  2878 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2879 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  2880 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  2881 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  2882 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2883 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  2884 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  2    0[COMRAM] PTR unsigned char 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2894 ;;      Params:         4       0       0       0       0       0       0
  2895 ;;      Locals:         4       0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0
  2897 ;;      Totals:         8       0       0       0       0       0       0
  2898 ;;Total ram usage:        8 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    2
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_creditos
  2905 ;;		_finaliza
  2906 ;;		_jogar
  2907 ;;		_instrucoes
  2908 ;;		_menu
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text12
  2913  0019B0                     __ptext12:
  2914                           	opt callstack 0
  2915  0019B0                     _strcpy:
  2916                           	opt callstack 26
  2917  0019B0  C003  F005         	movff	strcpy@src,strcpy@s
  2918  0019B4  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  2919  0019B8  C001  F007         	movff	strcpy@dest,strcpy@d
  2920  0019BC  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  2921  0019C0                     l1647:
  2922  0019C0  C005  FFF6         	movff	strcpy@s,tblptrl
  2923  0019C4  C006  FFF7         	movff	strcpy@s+1,tblptrh
  2924  0019C8  4A05               	infsnz	strcpy@s^0,f,c
  2925  0019CA  2A06               	incf	(strcpy@s+1)^0,f,c
  2926  0019CC                     	if	0	;tblptru may be non-zero
  2927  0019CC                     	endif
  2928  0019CC                     	if	0	;tblptru may be non-zero
  2929  0019CC                     	endif
  2930  0019CC  C007  FFD9         	movff	strcpy@d,fsr2l
  2931  0019D0  C008  FFDA         	movff	strcpy@d+1,fsr2h
  2932  0019D4  4A07               	infsnz	strcpy@d^0,f,c
  2933  0019D6  2A08               	incf	(strcpy@d+1)^0,f,c
  2934  0019D8  0008               	tblrd		*
  2935  0019DA  CFF5 FFDF          	movff	tablat,indf2
  2936  0019DE  50DF               	movf	indf2,w,c
  2937  0019E0  A4D8               	btfss	status,2,c
  2938  0019E2  EFF5  F00C         	goto	u931
  2939  0019E6  EFF7  F00C         	goto	u930
  2940  0019EA                     u931:
  2941  0019EA  EFE0  F00C         	goto	l1647
  2942  0019EE                     u930:
  2943  0019EE  0012               	return		;funcret
  2944  0019F0                     __end_of_strcpy:
  2945                           	opt callstack 0
  2946                           
  2947 ;; *************** function _print_mat *****************
  2948 ;; Defined at:
  2949 ;;		line 199 in file "lcd.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  lcd             2   15[COMRAM] PTR struct .
  2952 ;;		 -> PORTD(1), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  j               2   21[COMRAM] int 
  2955 ;;  i               2   23[COMRAM] int 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2965 ;;      Params:         2       0       0       0       0       0       0
  2966 ;;      Locals:         4       0       0       0       0       0       0
  2967 ;;      Temps:          4       0       0       0       0       0       0
  2968 ;;      Totals:        10       0       0       0       0       0       0
  2969 ;;Total ram usage:       10 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    5
  2972 ;; This function calls:
  2973 ;;		_goto_XY
  2974 ;;		_write_char
  2975 ;; This function is called by:
  2976 ;;		_creditos
  2977 ;;		_finaliza
  2978 ;;		_jogar
  2979 ;;		_instrucoes
  2980 ;;		_menu
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text13
  2985  00147A                     __ptext13:
  2986                           	opt callstack 0
  2987  00147A                     _print_mat:
  2988                           	opt callstack 23
  2989  00147A                     
  2990                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  2991  00147A  0E00               	movlw	0
  2992  00147C  6E19               	movwf	(print_mat@i+1)^0,c
  2993  00147E  0E00               	movlw	0
  2994  001480  6E18               	movwf	print_mat@i^0,c
  2995  001482                     l1627:
  2996                           
  2997                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  2998  001482  C010  F008         	movff	print_mat@lcd,goto_XY@lcd
  2999  001486  C011  F009         	movff	print_mat@lcd+1,goto_XY@lcd+1
  3000  00148A  2818               	incf	print_mat@i^0,w,c
  3001  00148C  6E0A               	movwf	goto_XY@x^0,c
  3002  00148E  0E01               	movlw	1
  3003  001490  6E0B               	movwf	goto_XY@y^0,c
  3004  001492  EC87  F009         	call	_goto_XY	;wreg free
  3005  001496                     
  3006                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  3007  001496  0E00               	movlw	0
  3008  001498  6E17               	movwf	(print_mat@j+1)^0,c
  3009  00149A  0E00               	movlw	0
  3010  00149C  6E16               	movwf	print_mat@j^0,c
  3011  00149E                     l1635:
  3012                           
  3013                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  3014  00149E  C010  F001         	movff	print_mat@lcd,write_char@lcd
  3015  0014A2  C011  F002         	movff	print_mat@lcd+1,write_char@lcd+1
  3016  0014A6  C018  F012         	movff	print_mat@i,??_print_mat
  3017  0014AA  C019  F013         	movff	print_mat@i+1,??_print_mat+1
  3018  0014AE  3A12               	swapf	??_print_mat^0,f,c
  3019  0014B0  3A13               	swapf	(??_print_mat+1)^0,f,c
  3020  0014B2  0EF0               	movlw	240
  3021  0014B4  1613               	andwf	(??_print_mat+1)^0,f,c
  3022  0014B6  5012               	movf	??_print_mat^0,w,c
  3023  0014B8  0B0F               	andlw	15
  3024  0014BA  1213               	iorwf	(??_print_mat+1)^0,f,c
  3025  0014BC  0EF0               	movlw	240
  3026  0014BE  1612               	andwf	??_print_mat^0,f,c
  3027  0014C0  0E80               	movlw	low _mat_disp
  3028  0014C2  6E14               	movwf	(??_print_mat+2)^0,c
  3029  0014C4  0E00               	movlw	high _mat_disp
  3030  0014C6  6E15               	movwf	(??_print_mat+3)^0,c
  3031  0014C8  5012               	movf	??_print_mat^0,w,c
  3032  0014CA  2614               	addwf	(??_print_mat+2)^0,f,c
  3033  0014CC  5013               	movf	(??_print_mat+1)^0,w,c
  3034  0014CE  2215               	addwfc	(??_print_mat+3)^0,f,c
  3035  0014D0  5016               	movf	print_mat@j^0,w,c
  3036  0014D2  2414               	addwf	(??_print_mat+2)^0,w,c
  3037  0014D4  6ED9               	movwf	fsr2l,c
  3038  0014D6  5017               	movf	(print_mat@j+1)^0,w,c
  3039  0014D8  2015               	addwfc	(??_print_mat+3)^0,w,c
  3040  0014DA  6EDA               	movwf	fsr2h,c
  3041  0014DC  50DF               	movf	indf2,w,c
  3042  0014DE  6E03               	movwf	write_char@c^0,c
  3043  0014E0  EC38  F008         	call	_write_char	;wreg free
  3044  0014E4  4A16               	infsnz	print_mat@j^0,f,c
  3045  0014E6  2A17               	incf	(print_mat@j+1)^0,f,c
  3046  0014E8  BE17               	btfsc	(print_mat@j+1)^0,7,c
  3047  0014EA  EF80  F00A         	goto	u911
  3048  0014EE  5017               	movf	(print_mat@j+1)^0,w,c
  3049  0014F0  E109               	bnz	u910
  3050  0014F2  0E10               	movlw	16
  3051  0014F4  5C16               	subwf	print_mat@j^0,w,c
  3052  0014F6  A0D8               	btfss	status,0,c
  3053  0014F8  EF80  F00A         	goto	u911
  3054  0014FC  EF82  F00A         	goto	u910
  3055  001500                     u911:
  3056  001500  EF4F  F00A         	goto	l1635
  3057  001504                     u910:
  3058  001504                     
  3059                           ;lcd.c: 204:     }
  3060  001504  4A18               	infsnz	print_mat@i^0,f,c
  3061  001506  2A19               	incf	(print_mat@i+1)^0,f,c
  3062  001508  BE19               	btfsc	(print_mat@i+1)^0,7,c
  3063  00150A  EF90  F00A         	goto	u921
  3064  00150E  5019               	movf	(print_mat@i+1)^0,w,c
  3065  001510  E109               	bnz	u920
  3066  001512  0E04               	movlw	4
  3067  001514  5C18               	subwf	print_mat@i^0,w,c
  3068  001516  A0D8               	btfss	status,0,c
  3069  001518  EF90  F00A         	goto	u921
  3070  00151C  EF92  F00A         	goto	u920
  3071  001520                     u921:
  3072  001520  EF41  F00A         	goto	l1627
  3073  001524                     u920:
  3074  001524  0012               	return		;funcret
  3075  001526                     __end_of_print_mat:
  3076                           	opt callstack 0
  3077                           
  3078 ;; *************** function _write_char *****************
  3079 ;; Defined at:
  3080 ;;		line 133 in file "lcd.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  lcd             2    0[COMRAM] PTR struct .
  3083 ;;		 -> PORTD(1), 
  3084 ;;  c               1    2[COMRAM] unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3096 ;;      Params:         3       0       0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0
  3098 ;;      Temps:          1       0       0       0       0       0       0
  3099 ;;      Totals:         4       0       0       0       0       0       0
  3100 ;;Total ram usage:        4 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    2
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_print_mat
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text14
  3111  001070                     __ptext14:
  3112                           	opt callstack 0
  3113  001070                     _write_char:
  3114                           	opt callstack 25
  3115  001070                     
  3116                           ;lcd.c: 134:     lcd->E = 0;
  3117  001070  C001  FFD9         	movff	write_char@lcd,fsr2l
  3118  001074  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3119  001078  94DF               	bcf	indf2,2,c
  3120                           
  3121                           ;lcd.c: 135:     lcd->RS = 1;
  3122  00107A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3123  00107E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3124  001082  80DF               	bsf	indf2,0,c
  3125                           
  3126                           ;lcd.c: 136:     lcd->R_W = 0;
  3127  001084  C001  FFD9         	movff	write_char@lcd,fsr2l
  3128  001088  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3129  00108C  92DF               	bcf	indf2,1,c
  3130  00108E                     
  3131                           ;lcd.c: 139:     lcd->data = (c>>4);
  3132  00108E  C003  F004         	movff	write_char@c,??_write_char
  3133  001092  3A04               	swapf	??_write_char^0,f,c
  3134  001094  0E0F               	movlw	15
  3135  001096  1604               	andwf	??_write_char^0,f,c
  3136  001098  C001  FFD9         	movff	write_char@lcd,fsr2l
  3137  00109C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3138  0010A0  3A04               	swapf	??_write_char^0,f,c
  3139  0010A2  50DF               	movf	indf2,w,c
  3140  0010A4  1804               	xorwf	??_write_char^0,w,c
  3141  0010A6  0B0F               	andlw	-241
  3142  0010A8  1804               	xorwf	??_write_char^0,w,c
  3143  0010AA  6EDF               	movwf	indf2,c
  3144  0010AC                     
  3145                           ;lcd.c: 140:     lcd->E = 1;
  3146  0010AC  C001  FFD9         	movff	write_char@lcd,fsr2l
  3147  0010B0  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3148  0010B4  84DF               	bsf	indf2,2,c
  3149  0010B6                     
  3150                           ;lcd.c: 141:     lcd->E = 0;
  3151  0010B6  C001  FFD9         	movff	write_char@lcd,fsr2l
  3152  0010BA  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3153  0010BE  94DF               	bcf	indf2,2,c
  3154  0010C0                     
  3155                           ;lcd.c: 144:     lcd->data = (c);
  3156  0010C0  C003  F004         	movff	write_char@c,??_write_char
  3157  0010C4  C001  FFD9         	movff	write_char@lcd,fsr2l
  3158  0010C8  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3159  0010CC  3A04               	swapf	??_write_char^0,f,c
  3160  0010CE  50DF               	movf	indf2,w,c
  3161  0010D0  1804               	xorwf	??_write_char^0,w,c
  3162  0010D2  0B0F               	andlw	-241
  3163  0010D4  1804               	xorwf	??_write_char^0,w,c
  3164  0010D6  6EDF               	movwf	indf2,c
  3165                           
  3166                           ;lcd.c: 145:     lcd->E = 1;
  3167  0010D8  C001  FFD9         	movff	write_char@lcd,fsr2l
  3168  0010DC  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3169  0010E0  84DF               	bsf	indf2,2,c
  3170                           
  3171                           ;lcd.c: 146:     lcd->E = 0;
  3172  0010E2  C001  FFD9         	movff	write_char@lcd,fsr2l
  3173  0010E6  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3174  0010EA  94DF               	bcf	indf2,2,c
  3175  0010EC                     
  3176                           ;lcd.c: 149:     TRISD = 0xF0;
  3177  0010EC  0EF0               	movlw	240
  3178  0010EE  6E95               	movwf	149,c	;volatile
  3179  0010F0                     
  3180                           ;lcd.c: 150:     lcd->RS = 0;
  3181  0010F0  C001  FFD9         	movff	write_char@lcd,fsr2l
  3182  0010F4  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3183  0010F8  90DF               	bcf	indf2,0,c
  3184  0010FA                     
  3185                           ;lcd.c: 151:     lcd->R_W = 1;
  3186  0010FA  C001  FFD9         	movff	write_char@lcd,fsr2l
  3187  0010FE  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3188  001102  82DF               	bsf	indf2,1,c
  3189  001104                     l1597:
  3190                           
  3191                           ;lcd.c: 153:        lcd->E = 1;
  3192  001104  C001  FFD9         	movff	write_char@lcd,fsr2l
  3193  001108  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3194  00110C  84DF               	bsf	indf2,2,c
  3195  00110E                     
  3196                           ;lcd.c: 154:        lcd->E = 0;
  3197  00110E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3198  001112  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3199  001116  94DF               	bcf	indf2,2,c
  3200  001118                     
  3201                           ;lcd.c: 155:        lcd->E = 1;
  3202  001118  C001  FFD9         	movff	write_char@lcd,fsr2l
  3203  00111C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3204  001120  84DF               	bsf	indf2,2,c
  3205  001122                     
  3206                           ;lcd.c: 156:        lcd->E = 0;
  3207  001122  C001  FFD9         	movff	write_char@lcd,fsr2l
  3208  001126  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3209  00112A  94DF               	bcf	indf2,2,c
  3210  00112C                     
  3211                           ;lcd.c: 157:     } while(lcd->data&0x08);
  3212  00112C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3213  001130  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3214  001134  38DF               	swapf	indf2,w,c
  3215  001136  0B0F               	andlw	15
  3216  001138  6E04               	movwf	??_write_char^0,c
  3217  00113A  B604               	btfsc	??_write_char^0,3,c
  3218  00113C  EFA2  F008         	goto	u871
  3219  001140  EFA4  F008         	goto	u870
  3220  001144                     u871:
  3221  001144  EF82  F008         	goto	l1597
  3222  001148                     u870:
  3223  001148                     
  3224                           ;lcd.c: 158:     lcd->R_W = 0;
  3225  001148  C001  FFD9         	movff	write_char@lcd,fsr2l
  3226  00114C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3227  001150  92DF               	bcf	indf2,1,c
  3228  001152                     
  3229                           ;lcd.c: 159:     TRISD = 0x00;
  3230  001152  0E00               	movlw	0
  3231  001154  6E95               	movwf	149,c	;volatile
  3232  001156  0012               	return		;funcret
  3233  001158                     __end_of_write_char:
  3234                           	opt callstack 0
  3235                           
  3236 ;; *************** function _goto_XY *****************
  3237 ;; Defined at:
  3238 ;;		line 76 in file "lcd.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  lcd             2    7[COMRAM] PTR struct .
  3241 ;;		 -> PORTD(1), 
  3242 ;;  x               1    9[COMRAM] unsigned char 
  3243 ;;  y               1   10[COMRAM] unsigned char 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  temp            1   14[COMRAM] unsigned char 
  3246 ;;  a               1   13[COMRAM] unsigned char 
  3247 ;;  z               1   12[COMRAM] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3257 ;;      Params:         4       0       0       0       0       0       0
  3258 ;;      Locals:         3       0       0       0       0       0       0
  3259 ;;      Temps:          1       0       0       0       0       0       0
  3260 ;;      Totals:         8       0       0       0       0       0       0
  3261 ;;Total ram usage:        8 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    4
  3264 ;; This function calls:
  3265 ;;		_lcd_cmd
  3266 ;; This function is called by:
  3267 ;;		_print_mat
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text15
  3272  00130E                     __ptext15:
  3273                           	opt callstack 0
  3274  00130E                     _goto_XY:
  3275                           	opt callstack 23
  3276  00130E                     
  3277                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  3278  00130E  040A               	decf	goto_XY@x^0,w,c
  3279  001310  A4D8               	btfss	status,2,c
  3280  001312  EF8D  F009         	goto	u831
  3281  001316  EF8F  F009         	goto	u830
  3282  00131A                     u831:
  3283  00131A  EFB1  F009         	goto	l1545
  3284  00131E                     u830:
  3285  00131E                     
  3286                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  3287  00131E  500B               	movf	goto_XY@y^0,w,c
  3288  001320  0F7F               	addlw	127
  3289  001322  6E0F               	movwf	goto_XY@temp^0,c
  3290                           
  3291                           ;lcd.c: 81:        z = temp>>4;
  3292  001324  380F               	swapf	goto_XY@temp^0,w,c
  3293  001326  0B0F               	andlw	15
  3294  001328  6E0D               	movwf	goto_XY@z^0,c
  3295  00132A                     l1537:
  3296                           
  3297                           ;lcd.c: 82:        a = temp;
  3298  00132A  C00F  F00E         	movff	goto_XY@temp,goto_XY@a
  3299  00132E                     
  3300                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  3301  00132E  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3302  001332  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3303  001336  C00D  F006         	movff	goto_XY@z,lcd_cmd@a
  3304  00133A  ECF8  F00C         	call	_lcd_cmd	;wreg free
  3305  00133E                     
  3306                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  3307  00133E  0E06               	movlw	6
  3308  001340  6E0C               	movwf	??_goto_XY^0,c
  3309  001342  0E30               	movlw	48
  3310  001344                     u1377:
  3311  001344  2EE8               	decfsz	wreg,f,c
  3312  001346  D7FE               	bra	u1377
  3313  001348  2E0C               	decfsz	??_goto_XY^0,f,c
  3314  00134A  D7FC               	bra	u1377
  3315  00134C  D000               	nop2	
  3316  00134E                     
  3317                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  3318  00134E  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3319  001352  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3320  001356  C00E  F006         	movff	goto_XY@a,lcd_cmd@a
  3321  00135A  ECF8  F00C         	call	_lcd_cmd	;wreg free
  3322                           
  3323                           ;lcd.c: 86:     }
  3324  00135E  EFE4  F009         	goto	l74
  3325  001362                     l1545:
  3326  001362  0E02               	movlw	2
  3327  001364  180A               	xorwf	goto_XY@x^0,w,c
  3328  001366  A4D8               	btfss	status,2,c
  3329  001368  EFB8  F009         	goto	u841
  3330  00136C  EFBA  F009         	goto	u840
  3331  001370                     u841:
  3332  001370  EFC2  F009         	goto	l1557
  3333  001374                     u840:
  3334  001374                     
  3335                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  3336  001374  500B               	movf	goto_XY@y^0,w,c
  3337  001376  0FBF               	addlw	191
  3338  001378  6E0F               	movwf	goto_XY@temp^0,c
  3339                           
  3340                           ;lcd.c: 90:        z = temp>>4;
  3341  00137A  380F               	swapf	goto_XY@temp^0,w,c
  3342  00137C  0B0F               	andlw	15
  3343  00137E  6E0D               	movwf	goto_XY@z^0,c
  3344  001380  EF95  F009         	goto	l1537
  3345  001384                     l1557:
  3346  001384  0E03               	movlw	3
  3347  001386  180A               	xorwf	goto_XY@x^0,w,c
  3348  001388  A4D8               	btfss	status,2,c
  3349  00138A  EFC9  F009         	goto	u851
  3350  00138E  EFCB  F009         	goto	u850
  3351  001392                     u851:
  3352  001392  EFD3  F009         	goto	l1569
  3353  001396                     u850:
  3354  001396                     
  3355                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  3356  001396  500B               	movf	goto_XY@y^0,w,c
  3357  001398  0F8F               	addlw	143
  3358  00139A  6E0F               	movwf	goto_XY@temp^0,c
  3359                           
  3360                           ;lcd.c: 99:        z = temp>>4;
  3361  00139C  380F               	swapf	goto_XY@temp^0,w,c
  3362  00139E  0B0F               	andlw	15
  3363  0013A0  6E0D               	movwf	goto_XY@z^0,c
  3364  0013A2  EF95  F009         	goto	l1537
  3365  0013A6                     l1569:
  3366  0013A6  0E04               	movlw	4
  3367  0013A8  180A               	xorwf	goto_XY@x^0,w,c
  3368  0013AA  A4D8               	btfss	status,2,c
  3369  0013AC  EFDA  F009         	goto	u861
  3370  0013B0  EFDC  F009         	goto	u860
  3371  0013B4                     u861:
  3372  0013B4  EFE4  F009         	goto	l70
  3373  0013B8                     u860:
  3374  0013B8                     
  3375                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  3376  0013B8  500B               	movf	goto_XY@y^0,w,c
  3377  0013BA  0FCF               	addlw	207
  3378  0013BC  6E0F               	movwf	goto_XY@temp^0,c
  3379                           
  3380                           ;lcd.c: 108:        z = temp>>4;
  3381  0013BE  380F               	swapf	goto_XY@temp^0,w,c
  3382  0013C0  0B0F               	andlw	15
  3383  0013C2  6E0D               	movwf	goto_XY@z^0,c
  3384  0013C4  EF95  F009         	goto	l1537
  3385  0013C8                     l70:
  3386  0013C8                     l74:
  3387  0013C8  0012               	return		;funcret
  3388  0013CA                     __end_of_goto_XY:
  3389                           	opt callstack 0
  3390                           
  3391 ;; *************** function _lcd_cmd *****************
  3392 ;; Defined at:
  3393 ;;		line 67 in file "lcd.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  lcd             2    3[COMRAM] PTR struct .
  3396 ;;		 -> PORTD(1), 
  3397 ;;  a               1    5[COMRAM] unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         3       0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0       0       0
  3412 ;;      Totals:         4       0       0       0       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    3
  3416 ;; This function calls:
  3417 ;;		_pulso
  3418 ;; This function is called by:
  3419 ;;		_goto_XY
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text16
  3424  0019F0                     __ptext16:
  3425                           	opt callstack 0
  3426  0019F0                     _lcd_cmd:
  3427                           	opt callstack 23
  3428  0019F0                     
  3429                           ;lcd.c: 68:     lcd->RS = 0;
  3430  0019F0  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3431  0019F4  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3432  0019F8  90DF               	bcf	indf2,0,c
  3433  0019FA                     
  3434                           ;lcd.c: 69:     lcd->data = (a);
  3435  0019FA  C006  F007         	movff	lcd_cmd@a,??_lcd_cmd
  3436  0019FE  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3437  001A02  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3438  001A06  3A07               	swapf	??_lcd_cmd^0,f,c
  3439  001A08  50DF               	movf	indf2,w,c
  3440  001A0A  1807               	xorwf	??_lcd_cmd^0,w,c
  3441  001A0C  0B0F               	andlw	-241
  3442  001A0E  1807               	xorwf	??_lcd_cmd^0,w,c
  3443  001A10  6EDF               	movwf	indf2,c
  3444  001A12                     
  3445                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3446  001A12  0E06               	movlw	6
  3447  001A14  6E07               	movwf	??_lcd_cmd^0,c
  3448  001A16  0E30               	movlw	48
  3449  001A18                     u1387:
  3450  001A18  2EE8               	decfsz	wreg,f,c
  3451  001A1A  D7FE               	bra	u1387
  3452  001A1C  2E07               	decfsz	??_lcd_cmd^0,f,c
  3453  001A1E  D7FC               	bra	u1387
  3454  001A20  D000               	nop2	
  3455  001A22                     
  3456                           ;lcd.c: 72:     pulso(lcd);
  3457  001A22  C004  F001         	movff	lcd_cmd@lcd,pulso@lcd
  3458  001A26  C005  F002         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  3459  001A2A  EC18  F00D         	call	_pulso	;wreg free
  3460  001A2E  0012               	return		;funcret
  3461  001A30                     __end_of_lcd_cmd:
  3462                           	opt callstack 0
  3463                           
  3464 ;; *************** function _function_set *****************
  3465 ;; Defined at:
  3466 ;;		line 21 in file "lcd.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  lcd             2    3[COMRAM] PTR struct .
  3469 ;;		 -> PORTD(1), 
  3470 ;;  data_lenght     1    5[COMRAM] unsigned char 
  3471 ;;  num_lines       1    6[COMRAM] unsigned char 
  3472 ;;  char_font       1    7[COMRAM] unsigned char 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3484 ;;      Params:         5       0       0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0
  3486 ;;      Temps:          3       0       0       0       0       0       0
  3487 ;;      Totals:         8       0       0       0       0       0       0
  3488 ;;Total ram usage:        8 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    3
  3491 ;; This function calls:
  3492 ;;		_pulso
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text17
  3499  001234                     __ptext17:
  3500                           	opt callstack 0
  3501  001234                     _function_set:
  3502                           	opt callstack 27
  3503  001234                     
  3504                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  3505  001234  C004  FFD9         	movff	function_set@lcd,fsr2l
  3506  001238  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3507  00123C  94DF               	bcf	indf2,2,c
  3508                           
  3509                           ;lcd.c: 24:     lcd->RS = 0;
  3510  00123E  C004  FFD9         	movff	function_set@lcd,fsr2l
  3511  001242  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3512  001246  90DF               	bcf	indf2,0,c
  3513                           
  3514                           ;lcd.c: 25:     lcd->R_W = 0;
  3515  001248  C004  FFD9         	movff	function_set@lcd,fsr2l
  3516  00124C  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3517  001250  92DF               	bcf	indf2,1,c
  3518  001252                     
  3519                           ;lcd.c: 28:     lcd->data = 0x02;
  3520  001252  C004  FFD9         	movff	function_set@lcd,fsr2l
  3521  001256  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3522  00125A  50DF               	movf	indf2,w,c
  3523  00125C  0B0F               	andlw	-241
  3524  00125E  0920               	iorlw	32
  3525  001260  6EDF               	movwf	indf2,c
  3526  001262                     
  3527                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3528  001262  0E06               	movlw	6
  3529  001264  6E09               	movwf	??_function_set^0,c
  3530  001266  0E30               	movlw	48
  3531  001268                     u1397:
  3532  001268  2EE8               	decfsz	wreg,f,c
  3533  00126A  D7FE               	bra	u1397
  3534  00126C  2E09               	decfsz	??_function_set^0,f,c
  3535  00126E  D7FC               	bra	u1397
  3536  001270  D000               	nop2	
  3537  001272                     
  3538                           ;lcd.c: 31:     pulso(lcd);
  3539  001272  C004  F001         	movff	function_set@lcd,pulso@lcd
  3540  001276  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3541  00127A  EC18  F00D         	call	_pulso	;wreg free
  3542  00127E                     
  3543                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  3544  00127E  C006  F009         	movff	function_set@data_lenght,??_function_set
  3545  001282  0E02               	movlw	2
  3546  001284  1209               	iorwf	??_function_set^0,f,c
  3547  001286  C004  FFD9         	movff	function_set@lcd,fsr2l
  3548  00128A  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3549  00128E  3A09               	swapf	??_function_set^0,f,c
  3550  001290  50DF               	movf	indf2,w,c
  3551  001292  1809               	xorwf	??_function_set^0,w,c
  3552  001294  0B0F               	andlw	-241
  3553  001296  1809               	xorwf	??_function_set^0,w,c
  3554  001298  6EDF               	movwf	indf2,c
  3555  00129A                     
  3556                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3557  00129A  0E06               	movlw	6
  3558  00129C  6E09               	movwf	??_function_set^0,c
  3559  00129E  0E30               	movlw	48
  3560  0012A0                     u1407:
  3561  0012A0  2EE8               	decfsz	wreg,f,c
  3562  0012A2  D7FE               	bra	u1407
  3563  0012A4  2E09               	decfsz	??_function_set^0,f,c
  3564  0012A6  D7FC               	bra	u1407
  3565  0012A8  D000               	nop2	
  3566  0012AA                     
  3567                           ;lcd.c: 37:     pulso(lcd);
  3568  0012AA  C004  F001         	movff	function_set@lcd,pulso@lcd
  3569  0012AE  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3570  0012B2  EC18  F00D         	call	_pulso	;wreg free
  3571  0012B6                     
  3572                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  3573  0012B6  C004  FFD9         	movff	function_set@lcd,fsr2l
  3574  0012BA  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3575  0012BE  38DF               	swapf	indf2,w,c
  3576  0012C0  0B0F               	andlw	15
  3577  0012C2  6E09               	movwf	??_function_set^0,c
  3578  0012C4  C008  F00A         	movff	function_set@char_font,??_function_set+1
  3579  0012C8  90D8               	bcf	status,0,c
  3580  0012CA  360A               	rlcf	(??_function_set+1)^0,f,c
  3581  0012CC  90D8               	bcf	status,0,c
  3582  0012CE  360A               	rlcf	(??_function_set+1)^0,f,c
  3583  0012D0  3807               	swapf	function_set@num_lines^0,w,c
  3584  0012D2  42E8               	rrncf	wreg,f,c
  3585  0012D4  0BF8               	andlw	248
  3586  0012D6  100A               	iorwf	(??_function_set+1)^0,w,c
  3587  0012D8  1009               	iorwf	??_function_set^0,w,c
  3588  0012DA  6E0B               	movwf	(??_function_set+2)^0,c
  3589  0012DC  C004  FFD9         	movff	function_set@lcd,fsr2l
  3590  0012E0  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3591  0012E4  3A0B               	swapf	(??_function_set+2)^0,f,c
  3592  0012E6  50DF               	movf	indf2,w,c
  3593  0012E8  180B               	xorwf	(??_function_set+2)^0,w,c
  3594  0012EA  0B0F               	andlw	-241
  3595  0012EC  180B               	xorwf	(??_function_set+2)^0,w,c
  3596  0012EE  6EDF               	movwf	indf2,c
  3597  0012F0                     
  3598                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3599  0012F0  0E06               	movlw	6
  3600  0012F2  6E09               	movwf	??_function_set^0,c
  3601  0012F4  0E30               	movlw	48
  3602  0012F6                     u1417:
  3603  0012F6  2EE8               	decfsz	wreg,f,c
  3604  0012F8  D7FE               	bra	u1417
  3605  0012FA  2E09               	decfsz	??_function_set^0,f,c
  3606  0012FC  D7FC               	bra	u1417
  3607  0012FE  D000               	nop2	
  3608  001300                     
  3609                           ;lcd.c: 44:     pulso(lcd);
  3610  001300  C004  F001         	movff	function_set@lcd,pulso@lcd
  3611  001304  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3612  001308  EC18  F00D         	call	_pulso	;wreg free
  3613  00130C  0012               	return		;funcret
  3614  00130E                     __end_of_function_set:
  3615                           	opt callstack 0
  3616                           
  3617 ;; *************** function _entry_mode_set *****************
  3618 ;; Defined at:
  3619 ;;		line 116 in file "lcd.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  lcd             2    3[COMRAM] PTR struct .
  3622 ;;		 -> PORTD(1), 
  3623 ;;  move_directi    1    5[COMRAM] unsigned char 
  3624 ;;  display_shif    1    6[COMRAM] unsigned char 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3636 ;;      Params:         4       0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0
  3638 ;;      Temps:          1       0       0       0       0       0       0
  3639 ;;      Totals:         5       0       0       0       0       0       0
  3640 ;;Total ram usage:        5 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    3
  3643 ;; This function calls:
  3644 ;;		_pulso
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text18
  3651  0016E8                     __ptext18:
  3652                           	opt callstack 0
  3653  0016E8                     _entry_mode_set:
  3654                           	opt callstack 27
  3655  0016E8                     
  3656                           ;lcd.c: 117:     lcd->E = 0;
  3657  0016E8  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3658  0016EC  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3659  0016F0  94DF               	bcf	indf2,2,c
  3660                           
  3661                           ;lcd.c: 118:     lcd->RS = 0;
  3662  0016F2  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3663  0016F6  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3664  0016FA  90DF               	bcf	indf2,0,c
  3665                           
  3666                           ;lcd.c: 119:     lcd->R_W = 0;
  3667  0016FC  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3668  001700  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3669  001704  92DF               	bcf	indf2,1,c
  3670  001706                     
  3671                           ;lcd.c: 121:     lcd->data = 0x00;
  3672  001706  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3673  00170A  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3674  00170E  0E0F               	movlw	-241
  3675  001710  16DF               	andwf	indf2,f,c
  3676  001712                     
  3677                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3678  001712  0E06               	movlw	6
  3679  001714  6E08               	movwf	??_entry_mode_set^0,c
  3680  001716  0E30               	movlw	48
  3681  001718                     u1427:
  3682  001718  2EE8               	decfsz	wreg,f,c
  3683  00171A  D7FE               	bra	u1427
  3684  00171C  2E08               	decfsz	??_entry_mode_set^0,f,c
  3685  00171E  D7FC               	bra	u1427
  3686  001720  D000               	nop2	
  3687  001722                     
  3688                           ;lcd.c: 124:     pulso(lcd);
  3689  001722  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3690  001726  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3691  00172A  EC18  F00D         	call	_pulso	;wreg free
  3692  00172E                     
  3693                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  3694  00172E  5006               	movf	entry_mode_set@move_direction^0,w,c
  3695  001730  2406               	addwf	entry_mode_set@move_direction^0,w,c
  3696  001732  1007               	iorwf	entry_mode_set@display_shift^0,w,c
  3697  001734  6E08               	movwf	??_entry_mode_set^0,c
  3698  001736  0E04               	movlw	4
  3699  001738  1208               	iorwf	??_entry_mode_set^0,f,c
  3700  00173A  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3701  00173E  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3702  001742  3A08               	swapf	??_entry_mode_set^0,f,c
  3703  001744  50DF               	movf	indf2,w,c
  3704  001746  1808               	xorwf	??_entry_mode_set^0,w,c
  3705  001748  0B0F               	andlw	-241
  3706  00174A  1808               	xorwf	??_entry_mode_set^0,w,c
  3707  00174C  6EDF               	movwf	indf2,c
  3708  00174E                     
  3709                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3710  00174E  0E06               	movlw	6
  3711  001750  6E08               	movwf	??_entry_mode_set^0,c
  3712  001752  0E30               	movlw	48
  3713  001754                     u1437:
  3714  001754  2EE8               	decfsz	wreg,f,c
  3715  001756  D7FE               	bra	u1437
  3716  001758  2E08               	decfsz	??_entry_mode_set^0,f,c
  3717  00175A  D7FC               	bra	u1437
  3718  00175C  D000               	nop2	
  3719  00175E                     
  3720                           ;lcd.c: 130:     pulso(lcd);
  3721  00175E  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3722  001762  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3723  001766  EC18  F00D         	call	_pulso	;wreg free
  3724  00176A  0012               	return		;funcret
  3725  00176C                     __end_of_entry_mode_set:
  3726                           	opt callstack 0
  3727                           
  3728 ;; *************** function _display_onoff_control *****************
  3729 ;; Defined at:
  3730 ;;		line 47 in file "lcd.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  lcd             2    3[COMRAM] PTR struct .
  3733 ;;		 -> PORTD(1), 
  3734 ;;  display_on      1    5[COMRAM] unsigned char 
  3735 ;;  cursor_on       1    6[COMRAM] unsigned char 
  3736 ;;  blink           1    7[COMRAM] unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3748 ;;      Params:         5       0       0       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0
  3750 ;;      Temps:          2       0       0       0       0       0       0
  3751 ;;      Totals:         7       0       0       0       0       0       0
  3752 ;;Total ram usage:        7 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    3
  3755 ;; This function calls:
  3756 ;;		_pulso
  3757 ;; This function is called by:
  3758 ;;		_main
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text19
  3763  00165A                     __ptext19:
  3764                           	opt callstack 0
  3765  00165A                     _display_onoff_control:
  3766                           	opt callstack 27
  3767  00165A                     
  3768                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  3769  00165A  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3770  00165E  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3771  001662  94DF               	bcf	indf2,2,c
  3772                           
  3773                           ;lcd.c: 50:     lcd->RS = 0;
  3774  001664  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3775  001668  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3776  00166C  90DF               	bcf	indf2,0,c
  3777                           
  3778                           ;lcd.c: 51:     lcd->R_W = 0;
  3779  00166E  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3780  001672  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3781  001676  92DF               	bcf	indf2,1,c
  3782  001678                     
  3783                           ;lcd.c: 54:     lcd->data = 0x00;
  3784  001678  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3785  00167C  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3786  001680  0E0F               	movlw	-241
  3787  001682  16DF               	andwf	indf2,f,c
  3788  001684                     
  3789                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3790  001684  0E06               	movlw	6
  3791  001686  6E09               	movwf	??_display_onoff_control^0,c
  3792  001688  0E30               	movlw	48
  3793  00168A                     u1447:
  3794  00168A  2EE8               	decfsz	wreg,f,c
  3795  00168C  D7FE               	bra	u1447
  3796  00168E  2E09               	decfsz	??_display_onoff_control^0,f,c
  3797  001690  D7FC               	bra	u1447
  3798  001692  D000               	nop2	
  3799  001694                     
  3800                           ;lcd.c: 57:     pulso(lcd);
  3801  001694  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3802  001698  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3803  00169C  EC18  F00D         	call	_pulso	;wreg free
  3804  0016A0                     
  3805                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  3806  0016A0  90D8               	bcf	status,0,c
  3807  0016A2  3407               	rlcf	display_onoff_control@cursor_on^0,w,c
  3808  0016A4  6E09               	movwf	??_display_onoff_control^0,c
  3809  0016A6  4406               	rlncf	display_onoff_control@display_on^0,w,c
  3810  0016A8  46E8               	rlncf	wreg,f,c
  3811  0016AA  0BFC               	andlw	252
  3812  0016AC  1009               	iorwf	??_display_onoff_control^0,w,c
  3813  0016AE  1008               	iorwf	display_onoff_control@blink^0,w,c
  3814  0016B0  6E0A               	movwf	(??_display_onoff_control+1)^0,c
  3815  0016B2  0E08               	movlw	8
  3816  0016B4  120A               	iorwf	(??_display_onoff_control+1)^0,f,c
  3817  0016B6  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3818  0016BA  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3819  0016BE  3A0A               	swapf	(??_display_onoff_control+1)^0,f,c
  3820  0016C0  50DF               	movf	indf2,w,c
  3821  0016C2  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3822  0016C4  0B0F               	andlw	-241
  3823  0016C6  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3824  0016C8  6EDF               	movwf	indf2,c
  3825  0016CA                     
  3826                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3827  0016CA  0E06               	movlw	6
  3828  0016CC  6E09               	movwf	??_display_onoff_control^0,c
  3829  0016CE  0E30               	movlw	48
  3830  0016D0                     u1457:
  3831  0016D0  2EE8               	decfsz	wreg,f,c
  3832  0016D2  D7FE               	bra	u1457
  3833  0016D4  2E09               	decfsz	??_display_onoff_control^0,f,c
  3834  0016D6  D7FC               	bra	u1457
  3835  0016D8  D000               	nop2	
  3836  0016DA                     
  3837                           ;lcd.c: 64:     pulso(lcd);
  3838  0016DA  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3839  0016DE  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3840  0016E2  EC18  F00D         	call	_pulso	;wreg free
  3841  0016E6  0012               	return		;funcret
  3842  0016E8                     __end_of_display_onoff_control:
  3843                           	opt callstack 0
  3844                           
  3845 ;; *************** function _pulso *****************
  3846 ;; Defined at:
  3847 ;;		line 11 in file "lcd.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  lcd             2    0[COMRAM] PTR struct .
  3850 ;;		 -> PORTD(1), 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr2l, fsr2h
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         2       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0
  3864 ;;      Temps:          1       0       0       0       0       0       0
  3865 ;;      Totals:         3       0       0       0       0       0       0
  3866 ;;Total ram usage:        3 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    2
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_function_set
  3873 ;;		_display_onoff_control
  3874 ;;		_lcd_cmd
  3875 ;;		_entry_mode_set
  3876 ;;		_clear_display
  3877 ;;		_return_home
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text20
  3882  001A30                     __ptext20:
  3883                           	opt callstack 0
  3884  001A30                     _pulso:
  3885                           	opt callstack 23
  3886  001A30                     
  3887                           ;lcd.c: 13:     lcd->E = 1;
  3888  001A30  C001  FFD9         	movff	pulso@lcd,fsr2l
  3889  001A34  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  3890  001A38  84DF               	bsf	indf2,2,c
  3891  001A3A                     
  3892                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3893  001A3A  0E06               	movlw	6
  3894  001A3C  6E03               	movwf	??_pulso^0,c
  3895  001A3E  0E30               	movlw	48
  3896  001A40                     u1467:
  3897  001A40  2EE8               	decfsz	wreg,f,c
  3898  001A42  D7FE               	bra	u1467
  3899  001A44  2E03               	decfsz	??_pulso^0,f,c
  3900  001A46  D7FC               	bra	u1467
  3901  001A48  D000               	nop2	
  3902  001A4A                     
  3903                           ;lcd.c: 17:     lcd->E = 0;
  3904  001A4A  C001  FFD9         	movff	pulso@lcd,fsr2l
  3905  001A4E  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  3906  001A52  94DF               	bcf	indf2,2,c
  3907                           
  3908                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3909  001A54  0E06               	movlw	6
  3910  001A56  6E03               	movwf	??_pulso^0,c
  3911  001A58  0E30               	movlw	48
  3912  001A5A                     u1477:
  3913  001A5A  2EE8               	decfsz	wreg,f,c
  3914  001A5C  D7FE               	bra	u1477
  3915  001A5E  2E03               	decfsz	??_pulso^0,f,c
  3916  001A60  D7FC               	bra	u1477
  3917  001A62  D000               	nop2	
  3918  001A64  0012               	return		;funcret
  3919  001A66                     __end_of_pulso:
  3920                           	opt callstack 0
  3921                           
  3922 ;; *************** function _int_handler *****************
  3923 ;; Defined at:
  3924 ;;		line 24 in file "main.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3938 ;;      Params:         0       0       0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0
  3941 ;;      Totals:         0       0       0       0       0       0       0
  3942 ;;Total ram usage:        0 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    1
  3945 ;; This function calls:
  3946 ;;		_le_entrada
  3947 ;; This function is called by:
  3948 ;;		Interrupt level 2
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	intcode
  3953  000008                     __pintcode:
  3954                           	opt callstack 0
  3955  000008                     _int_handler:
  3956                           	opt callstack 23
  3957                           
  3958                           ;incstack = 0
  3959  000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3960  00000A  ED33  F00D         	call	int_func,f	;refresh shadow registers
  3961                           
  3962                           	psect	intcode_body
  3963  001A66                     __pintcode_body:
  3964                           	opt callstack 23
  3965  001A66                     int_func:
  3966                           	opt callstack 23
  3967  001A66  0006               	pop		; remove dummy address from shadow register refresh
  3968  001A68                     
  3969                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  3970  001A68  A4F2               	btfss	242,2,c	;volatile
  3971  001A6A  EF39  F00D         	goto	i2u81_41
  3972  001A6E  EF3B  F00D         	goto	i2u81_40
  3973  001A72                     i2u81_41:
  3974  001A72  EF40  F00D         	goto	i2l1465
  3975  001A76                     i2u81_40:
  3976  001A76                     
  3977                           ;main.c: 26:         TMR0L = 0x63;
  3978  001A76  0E63               	movlw	99
  3979  001A78  6ED6               	movwf	214,c	;volatile
  3980  001A7A                     
  3981                           ;main.c: 27:         le_entrada();
  3982  001A7A  ECC3  F006         	call	_le_entrada	;wreg free
  3983  001A7E                     
  3984                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  3985  001A7E  94F2               	bcf	242,2,c	;volatile
  3986  001A80                     i2l1465:
  3987                           
  3988                           ;main.c: 30:     if(INTCONbits.INT0IF == 1){
  3989  001A80  A2F2               	btfss	242,1,c	;volatile
  3990  001A82  EF45  F00D         	goto	i2u82_41
  3991  001A86  EF47  F00D         	goto	i2u82_40
  3992  001A8A                     i2u82_41:
  3993  001A8A  EF49  F00D         	goto	i2l41
  3994  001A8E                     i2u82_40:
  3995  001A8E                     
  3996                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  3997  001A8E  92F2               	bcf	242,1,c	;volatile
  3998  001A90  00FF               	reset		;# 
  3999  001A92                     i2l41:
  4000  001A92  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4001  001A94  0011               	retfie		f
  4002  001A96                     __end_of_int_handler:
  4003                           	opt callstack 0
  4004                           
  4005 ;; *************** function _le_entrada *****************
  4006 ;; Defined at:
  4007 ;;		line 12 in file "keyboard.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4021 ;;      Params:         0       0       0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0
  4024 ;;      Totals:         0       0       0       0       0       0       0
  4025 ;;Total ram usage:        0 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_int_handler
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text22
  4035  000D86                     __ptext22:
  4036                           	opt callstack 0
  4037  000D86                     _le_entrada:
  4038                           	opt callstack 23
  4039  000D86                     
  4040                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  4041  000D86  8E81               	bsf	129,7,c	;volatile
  4042                           
  4043                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  4044  000D88  B045               	btfsc	_botoes_ant^0,0,c
  4045  000D8A  EFC9  F006         	goto	i2u51_41
  4046  000D8E  EFCB  F006         	goto	i2u51_40
  4047  000D92                     i2u51_41:
  4048  000D92  EFD2  F006         	goto	i2l1313
  4049  000D96                     i2u51_40:
  4050  000D96  B481               	btfsc	129,2,c	;volatile
  4051  000D98  EFD0  F006         	goto	i2u52_41
  4052  000D9C  EFD2  F006         	goto	i2u52_40
  4053  000DA0                     i2u52_41:
  4054  000DA0  EFDA  F006         	goto	i2l114
  4055  000DA4                     i2u52_40:
  4056  000DA4                     i2l1313:
  4057  000DA4  0E32               	movlw	50
  4058  000DA6  6444               	cpfsgt	_cont_u^0,c
  4059  000DA8  EFD8  F006         	goto	i2u53_41
  4060  000DAC  EFDA  F006         	goto	i2u53_40
  4061  000DB0                     i2u53_41:
  4062  000DB0  EFE0  F006         	goto	i2l112
  4063  000DB4                     i2u53_40:
  4064  000DB4                     i2l114:
  4065                           
  4066                           ;keyboard.c: 15:         botoes.U = 1;
  4067  000DB4  8046               	bsf	_botoes^0,0,c
  4068                           
  4069                           ;keyboard.c: 16:         botoes_ant.U = 1;
  4070  000DB6  8045               	bsf	_botoes_ant^0,0,c
  4071  000DB8                     i2l1315:
  4072                           
  4073                           ;keyboard.c: 17:         cont_u = 0;
  4074  000DB8  0E00               	movlw	0
  4075  000DBA  6E44               	movwf	_cont_u^0,c
  4076                           
  4077                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  4078  000DBC  EFFA  F006         	goto	i2l1325
  4079  000DC0                     i2l112:
  4080  000DC0  A045               	btfss	_botoes_ant^0,0,c
  4081  000DC2  EFE5  F006         	goto	i2u54_41
  4082  000DC6  EFE7  F006         	goto	i2u54_40
  4083  000DCA                     i2u54_41:
  4084  000DCA  EFF2  F006         	goto	i2l118
  4085  000DCE                     i2u54_40:
  4086  000DCE  B481               	btfsc	129,2,c	;volatile
  4087  000DD0  EFEC  F006         	goto	i2u55_41
  4088  000DD4  EFEE  F006         	goto	i2u55_40
  4089  000DD8                     i2u55_41:
  4090  000DD8  EFF2  F006         	goto	i2l118
  4091  000DDC                     i2u55_40:
  4092  000DDC                     
  4093                           ;keyboard.c: 19:         botoes.U = 0;
  4094  000DDC  9046               	bcf	_botoes^0,0,c
  4095                           
  4096                           ;keyboard.c: 20:         botoes_ant.U = 0;
  4097  000DDE  9045               	bcf	_botoes_ant^0,0,c
  4098  000DE0  EFDC  F006         	goto	i2l1315
  4099  000DE4                     i2l118:
  4100  000DE4  A481               	btfss	129,2,c	;volatile
  4101  000DE6  EFF7  F006         	goto	i2u56_41
  4102  000DEA  EFF9  F006         	goto	i2u56_40
  4103  000DEE                     i2u56_41:
  4104  000DEE  EFFA  F006         	goto	i2l1325
  4105  000DF2                     i2u56_40:
  4106  000DF2  2A44               	incf	_cont_u^0,f,c
  4107  000DF4                     i2l1325:
  4108                           
  4109                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  4110  000DF4  9E81               	bcf	129,7,c	;volatile
  4111  000DF6                     
  4112                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  4113  000DF6  8C81               	bsf	129,6,c	;volatile
  4114  000DF8                     
  4115                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  4116  000DF8  B445               	btfsc	_botoes_ant^0,2,c
  4117  000DFA  EF01  F007         	goto	i2u57_41
  4118  000DFE  EF03  F007         	goto	i2u57_40
  4119  000E02                     i2u57_41:
  4120  000E02  EF0A  F007         	goto	i2l1333
  4121  000E06                     i2u57_40:
  4122  000E06  B281               	btfsc	129,1,c	;volatile
  4123  000E08  EF08  F007         	goto	i2u58_41
  4124  000E0C  EF0A  F007         	goto	i2u58_40
  4125  000E10                     i2u58_41:
  4126  000E10  EF12  F007         	goto	i2l123
  4127  000E14                     i2u58_40:
  4128  000E14                     i2l1333:
  4129  000E14  0E32               	movlw	50
  4130  000E16  6442               	cpfsgt	_cont_l^0,c
  4131  000E18  EF10  F007         	goto	i2u59_41
  4132  000E1C  EF12  F007         	goto	i2u59_40
  4133  000E20                     i2u59_41:
  4134  000E20  EF18  F007         	goto	i2l121
  4135  000E24                     i2u59_40:
  4136  000E24                     i2l123:
  4137                           
  4138                           ;keyboard.c: 27:         botoes.L = 1;
  4139  000E24  8446               	bsf	_botoes^0,2,c
  4140                           
  4141                           ;keyboard.c: 28:         botoes_ant.L = 1;
  4142  000E26  8445               	bsf	_botoes_ant^0,2,c
  4143  000E28                     i2l1335:
  4144                           
  4145                           ;keyboard.c: 29:         cont_l = 0;
  4146  000E28  0E00               	movlw	0
  4147  000E2A  6E42               	movwf	_cont_l^0,c
  4148                           
  4149                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  4150  000E2C  EF32  F007         	goto	i2l1345
  4151  000E30                     i2l121:
  4152  000E30  A445               	btfss	_botoes_ant^0,2,c
  4153  000E32  EF1D  F007         	goto	i2u60_41
  4154  000E36  EF1F  F007         	goto	i2u60_40
  4155  000E3A                     i2u60_41:
  4156  000E3A  EF2A  F007         	goto	i2l127
  4157  000E3E                     i2u60_40:
  4158  000E3E  B281               	btfsc	129,1,c	;volatile
  4159  000E40  EF24  F007         	goto	i2u61_41
  4160  000E44  EF26  F007         	goto	i2u61_40
  4161  000E48                     i2u61_41:
  4162  000E48  EF2A  F007         	goto	i2l127
  4163  000E4C                     i2u61_40:
  4164  000E4C                     
  4165                           ;keyboard.c: 31:         botoes.L = 0;
  4166  000E4C  9446               	bcf	_botoes^0,2,c
  4167                           
  4168                           ;keyboard.c: 32:         botoes_ant.L = 0;
  4169  000E4E  9445               	bcf	_botoes_ant^0,2,c
  4170  000E50  EF14  F007         	goto	i2l1335
  4171  000E54                     i2l127:
  4172  000E54  A281               	btfss	129,1,c	;volatile
  4173  000E56  EF2F  F007         	goto	i2u62_41
  4174  000E5A  EF31  F007         	goto	i2u62_40
  4175  000E5E                     i2u62_41:
  4176  000E5E  EF32  F007         	goto	i2l1345
  4177  000E62                     i2u62_40:
  4178  000E62  2A42               	incf	_cont_l^0,f,c
  4179  000E64                     i2l1345:
  4180                           
  4181                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  4182  000E64  B645               	btfsc	_botoes_ant^0,3,c
  4183  000E66  EF37  F007         	goto	i2u63_41
  4184  000E6A  EF39  F007         	goto	i2u63_40
  4185  000E6E                     i2u63_41:
  4186  000E6E  EF40  F007         	goto	i2l1349
  4187  000E72                     i2u63_40:
  4188  000E72  B681               	btfsc	129,3,c	;volatile
  4189  000E74  EF3E  F007         	goto	i2u64_41
  4190  000E78  EF40  F007         	goto	i2u64_40
  4191  000E7C                     i2u64_41:
  4192  000E7C  EF48  F007         	goto	i2l132
  4193  000E80                     i2u64_40:
  4194  000E80                     i2l1349:
  4195  000E80  0E32               	movlw	50
  4196  000E82  6441               	cpfsgt	_cont_r^0,c
  4197  000E84  EF46  F007         	goto	i2u65_41
  4198  000E88  EF48  F007         	goto	i2u65_40
  4199  000E8C                     i2u65_41:
  4200  000E8C  EF4E  F007         	goto	i2l130
  4201  000E90                     i2u65_40:
  4202  000E90                     i2l132:
  4203                           
  4204                           ;keyboard.c: 37:         botoes.R = 1;
  4205  000E90  8646               	bsf	_botoes^0,3,c
  4206                           
  4207                           ;keyboard.c: 38:         botoes_ant.R = 1;
  4208  000E92  8645               	bsf	_botoes_ant^0,3,c
  4209  000E94                     i2l1351:
  4210                           
  4211                           ;keyboard.c: 39:         cont_r = 0;
  4212  000E94  0E00               	movlw	0
  4213  000E96  6E41               	movwf	_cont_r^0,c
  4214                           
  4215                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  4216  000E98  EF68  F007         	goto	i2l1361
  4217  000E9C                     i2l130:
  4218  000E9C  A645               	btfss	_botoes_ant^0,3,c
  4219  000E9E  EF53  F007         	goto	i2u66_41
  4220  000EA2  EF55  F007         	goto	i2u66_40
  4221  000EA6                     i2u66_41:
  4222  000EA6  EF60  F007         	goto	i2l136
  4223  000EAA                     i2u66_40:
  4224  000EAA  B681               	btfsc	129,3,c	;volatile
  4225  000EAC  EF5A  F007         	goto	i2u67_41
  4226  000EB0  EF5C  F007         	goto	i2u67_40
  4227  000EB4                     i2u67_41:
  4228  000EB4  EF60  F007         	goto	i2l136
  4229  000EB8                     i2u67_40:
  4230  000EB8                     
  4231                           ;keyboard.c: 41:         botoes.R = 0;
  4232  000EB8  9646               	bcf	_botoes^0,3,c
  4233                           
  4234                           ;keyboard.c: 42:         botoes_ant.R = 0;
  4235  000EBA  9645               	bcf	_botoes_ant^0,3,c
  4236  000EBC  EF4A  F007         	goto	i2l1351
  4237  000EC0                     i2l136:
  4238  000EC0  A681               	btfss	129,3,c	;volatile
  4239  000EC2  EF65  F007         	goto	i2u68_41
  4240  000EC6  EF67  F007         	goto	i2u68_40
  4241  000ECA                     i2u68_41:
  4242  000ECA  EF68  F007         	goto	i2l1361
  4243  000ECE                     i2u68_40:
  4244  000ECE  2A41               	incf	_cont_r^0,f,c
  4245  000ED0                     i2l1361:
  4246                           
  4247                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  4248  000ED0  9C81               	bcf	129,6,c	;volatile
  4249  000ED2                     
  4250                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  4251  000ED2  8A81               	bsf	129,5,c	;volatile
  4252  000ED4                     
  4253                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  4254  000ED4  B245               	btfsc	_botoes_ant^0,1,c
  4255  000ED6  EF6F  F007         	goto	i2u69_41
  4256  000EDA  EF71  F007         	goto	i2u69_40
  4257  000EDE                     i2u69_41:
  4258  000EDE  EF78  F007         	goto	i2l1369
  4259  000EE2                     i2u69_40:
  4260  000EE2  B481               	btfsc	129,2,c	;volatile
  4261  000EE4  EF76  F007         	goto	i2u70_41
  4262  000EE8  EF78  F007         	goto	i2u70_40
  4263  000EEC                     i2u70_41:
  4264  000EEC  EF80  F007         	goto	i2l141
  4265  000EF0                     i2u70_40:
  4266  000EF0                     i2l1369:
  4267  000EF0  0E32               	movlw	50
  4268  000EF2  6443               	cpfsgt	_cont_d^0,c
  4269  000EF4  EF7E  F007         	goto	i2u71_41
  4270  000EF8  EF80  F007         	goto	i2u71_40
  4271  000EFC                     i2u71_41:
  4272  000EFC  EF86  F007         	goto	i2l139
  4273  000F00                     i2u71_40:
  4274  000F00                     i2l141:
  4275                           
  4276                           ;keyboard.c: 49:         botoes.D = 1;
  4277  000F00  8246               	bsf	_botoes^0,1,c
  4278                           
  4279                           ;keyboard.c: 50:         botoes_ant.D = 1;
  4280  000F02  8245               	bsf	_botoes_ant^0,1,c
  4281  000F04                     i2l1371:
  4282                           
  4283                           ;keyboard.c: 51:         cont_d = 0;
  4284  000F04  0E00               	movlw	0
  4285  000F06  6E43               	movwf	_cont_d^0,c
  4286                           
  4287                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  4288  000F08  EFA0  F007         	goto	i2l1381
  4289  000F0C                     i2l139:
  4290  000F0C  A245               	btfss	_botoes_ant^0,1,c
  4291  000F0E  EF8B  F007         	goto	i2u72_41
  4292  000F12  EF8D  F007         	goto	i2u72_40
  4293  000F16                     i2u72_41:
  4294  000F16  EF98  F007         	goto	i2l145
  4295  000F1A                     i2u72_40:
  4296  000F1A  B481               	btfsc	129,2,c	;volatile
  4297  000F1C  EF92  F007         	goto	i2u73_41
  4298  000F20  EF94  F007         	goto	i2u73_40
  4299  000F24                     i2u73_41:
  4300  000F24  EF98  F007         	goto	i2l145
  4301  000F28                     i2u73_40:
  4302  000F28                     
  4303                           ;keyboard.c: 53:         botoes.D = 0;
  4304  000F28  9246               	bcf	_botoes^0,1,c
  4305                           
  4306                           ;keyboard.c: 54:         botoes_ant.D = 0;
  4307  000F2A  9245               	bcf	_botoes_ant^0,1,c
  4308  000F2C  EF82  F007         	goto	i2l1371
  4309  000F30                     i2l145:
  4310  000F30  A481               	btfss	129,2,c	;volatile
  4311  000F32  EF9D  F007         	goto	i2u74_41
  4312  000F36  EF9F  F007         	goto	i2u74_40
  4313  000F3A                     i2u74_41:
  4314  000F3A  EFA0  F007         	goto	i2l1381
  4315  000F3E                     i2u74_40:
  4316  000F3E  2A43               	incf	_cont_d^0,f,c
  4317  000F40                     i2l1381:
  4318                           
  4319                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  4320  000F40  9A81               	bcf	129,5,c	;volatile
  4321  000F42                     
  4322                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  4323  000F42  8881               	bsf	129,4,c	;volatile
  4324  000F44                     
  4325                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  4326  000F44  A281               	btfss	129,1,c	;volatile
  4327  000F46  D002               	bra	i2u75_45
  4328  000F48  8846               	bsf	_botoes^0,4,c
  4329  000F4A  D001               	bra	i2u75_47
  4330  000F4C                     i2u75_45:
  4331  000F4C  9846               	bcf	_botoes^0,4,c
  4332  000F4E                     i2u75_47:
  4333  000F4E                     
  4334                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  4335  000F4E  A681               	btfss	129,3,c	;volatile
  4336  000F50  D002               	bra	i2u76_45
  4337  000F52  8A46               	bsf	_botoes^0,5,c
  4338  000F54  D001               	bra	i2u76_47
  4339  000F56                     i2u76_45:
  4340  000F56  9A46               	bcf	_botoes^0,5,c
  4341  000F58                     i2u76_47:
  4342  000F58                     
  4343                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  4344  000F58  9881               	bcf	129,4,c	;volatile
  4345  000F5A  0012               	return		;funcret
  4346  000F5C                     __end_of_le_entrada:
  4347                           	opt callstack 0
  4348                           
  4349                           	psect	rparam
  4350  0000                     
  4351                           	psect	temp
  4352  000052                     btemp:
  4353                           	opt callstack 0
  4354  000052                     	ds	1
  4355  0000                     int$flags	set	btemp
  4356  0000                     wtemp8	set	btemp+1
  4357  0000                     ttemp5	set	btemp+1
  4358  0000                     ttemp6	set	btemp+4
  4359  0000                     ttemp7	set	btemp+8
  4360                           tosu	equ	0xFFF
  4361                           tosh	equ	0xFFE
  4362                           tosl	equ	0xFFD
  4363                           stkptr	equ	0xFFC
  4364                           pclatu	equ	0xFFB
  4365                           pclath	equ	0xFFA
  4366                           pcl	equ	0xFF9
  4367                           tblptru	equ	0xFF8
  4368                           tblptrh	equ	0xFF7
  4369                           tblptrl	equ	0xFF6
  4370                           tablat	equ	0xFF5
  4371                           prodh	equ	0xFF4
  4372                           prodl	equ	0xFF3
  4373                           indf0	equ	0xFEF
  4374                           postinc0	equ	0xFEE
  4375                           postdec0	equ	0xFED
  4376                           preinc0	equ	0xFEC
  4377                           plusw0	equ	0xFEB
  4378                           fsr0h	equ	0xFEA
  4379                           fsr0l	equ	0xFE9
  4380                           wreg	equ	0xFE8
  4381                           indf1	equ	0xFE7
  4382                           postinc1	equ	0xFE6
  4383                           postdec1	equ	0xFE5
  4384                           preinc1	equ	0xFE4
  4385                           plusw1	equ	0xFE3
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           bsr	equ	0xFE0
  4389                           indf2	equ	0xFDF
  4390                           postinc2	equ	0xFDE
  4391                           postdec2	equ	0xFDD
  4392                           preinc2	equ	0xFDC
  4393                           plusw2	equ	0xFDB
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8


Data Sizes:
    Strings     248
    Constant    0
    Data        3
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     61      81
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48700
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   44292
                                             59 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8546
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                               19    17      2   10054
                                             40 COMRAM    19    17      2
                            ___awmod
                          _print_mat
                               _rand
                              _srand
                             _strcpy
                               _time
 ---------------------------------------------------------------------------------
 (3) _time                                                 8     0      8     120
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _srand                                                6     4      2      98
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    3744
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4660
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       ___awmod
         _rand (ARG)
           ___omul
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _rand
         ___omul
       _srand
         _time (ARG)
       _strcpy
       _time
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3D      51       1       64.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      91      15        0.0%
DATA                 0      0      91       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 20:58:58 2020

                              _x 0051                                _y 003F  
         ?_display_onoff_control 0004                               l61 16E6  
                             l70 13C8                               l46 17E0  
                             l55 1A64                               l64 1A2E  
                             l58 130C                               l74 13C8  
                             l82 1156                               l77 176A  
                             l95 1524                               _op 0040  
                    creditos@lcd 001A                      __CFG_OSC$HS 000000  
                            l202 191A                              l232 1840  
                            l226 0D6A                              l235 184E  
                            l243 106E                              l229 0D84  
                            l263 15A2                              l239 0FD0  
                            l183 15C4                              l264 15C2  
                            l185 1654                              l196 18AC  
                            l199 18BA                              l490 1478  
                            l922 1AC2                              l931 19EE  
                            l925 1232                              l935 1966  
                            u900 15A2                              u901 159E  
                            u830 131E                              u910 1504  
                            u831 131A                              u911 1500  
                            u840 1374                              u920 1524  
                            u841 1370                              u921 1520  
                            u850 1396                              u930 19EE  
                            u851 1392                              u931 19EA  
                            u860 13B8                              u940 192E  
                            u861 13B4                              u941 192A  
                            u870 1148                              u950 1224  
                            u871 1144                              u960 13DC  
                            u961 13D8                              u881 152C  
                            u970 13F6                              u890 1540  
                            u971 13F2                              u891 153C  
                            u955 1212                              u980 1410  
                            u981 140C                              u990 142E  
                            u991 142A                      finaliza@lcd 001A  
                            _lcd 004F                     ___awmod@sign 0028  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0001                     __CFG_WDT$OFF 000000  
                           l1521 1A3A                             l1601 1118  
                           l1523 1A4A                             l1531 1A22  
                           l1603 1122                             l1611 1526  
                           l1525 19F0                             l1541 133E  
                           l1533 130E                             l1605 112C  
                           l1621 147A                             l1613 1532  
                           l1701 0F5C                             l1519 1A30  
                           l1527 19FA                             l1543 134E  
                           l1535 131E                             l1607 1148  
                           l1615 1540                             l1711 1002  
                           l1703 0FAC                             l1529 1A12  
                           l1537 132A                             l1545 1362  
                           l1609 1152                             l1641 1504  
                           l1617 1560                             l1801 09A8  
                           l1721 1034                             l1713 1004  
                           l1705 0FC0                             l1571 13B8  
                           l1547 1374                             l1539 132E  
                           l1643 1508                             l1635 149E  
                           l1627 1482                             l1619 1572  
                           l1651 192E                             l1811 0A3A  
                           l1803 09DA                             l1723 1044  
                           l1715 1006                             l1707 0FDE  
                           l1901 129A                             l1557 1384  
                           l1581 1070                             l1637 14E4  
                           l1629 1496                             l1645 19B0  
                           l1661 11EC                             l1653 1956  
                           l1821 0AF0                             l1813 0A6C  
                           l1805 0A14                             l1741 073E  
                           l1725 1058                             l1717 101A  
                           l1709 0FEE                             l1733 1060  
                           l1911 165A                             l1903 12AA  
                           l1559 1396                             l1591 10EC  
                           l1583 108E                             l1639 14E8  
                           l1647 19C0                             l1671 13E4  
                           l1831 0B66                             l1823 0AF2  
                           l1815 0AC2                             l1807 0A1C  
                           l1751 078E                             l1743 073E  
                           l1735 06FA                             l1727 105A  
                           l1719 1026                             l1921 16CA  
                           l1913 1678                             l1905 12B6  
                           l1569 13A6                             l1593 10F0  
                           l1585 10AC                             l1681 1418  
                           l1673 13E8                             l1665 13CA  
                           l1657 1A96                             l1649 191C  
                           l1841 0BE4                             l1833 0BB4  
                           l1817 0ACA                             l1809 0A2A  
                           l1825 0B16                             l1761 07EA  
                           l1753 0794                             l1745 0752  
                           l1737 0732                             l1923 16DA  
                           l1915 1684                             l1931 1722  
                           l1907 12F0                             l1595 10FA  
                           l1587 10B6                             l1691 1452  
                           l1683 1420                             l1675 13F6  
                           l1667 13CE                             l1659 1158  
                           l1851 0C4C                             l1835 0BBC  
                           l1827 0B24                             l1843 0C08  
                           l1819 0AEE                             l1763 0814  
                           l1755 07A4                             l1747 0766  
                           l1739 0736                             l1917 1694  
                           l1933 172E                             l1925 16E8  
                           l1909 1300                             l1597 1104  
                           l1589 10C0                             l1685 142E  
                           l1693 1458                             l1677 13FE  
                           l1669 13DC                             l1861 0CB4  
                           l1853 0C4E                             l1845 0C16  
                           l1837 0BE0                             l1829 0B34  
                           l1781 08BC                             l1757 07A6  
                           l1749 077A                             l1941 15D0  
                           l1919 16A0                             l1935 174E  
                           l1927 1706                             l1599 110E  
                           l1695 1468                             l1687 1444  
                           l1679 1410                             l1871 0CFC  
                           l1863 0CB6                             l1847 0C26  
                           l1855 0C72                             l1839 0BE2  
                           l1791 0972                             l1783 08E6  
                           l1775 0824                             l1759 07CA  
                           l1951 1622                             l1943 15E0  
                           l1937 175E                             l1929 1712  
                           l1881 1834                             l1697 1470  
                           l1689 144C                             l1873 0D0E  
                           l1865 0CB8                             l1857 0C80  
                           l1849 0C4A                             l1793 0984  
                           l1785 08EA                             l1777 089C  
                           l1769 081C                             l1953 1632  
                           l1945 15F0                             l1961 1786  
                           l1891 1234                             l1883 1850  
                           l1875 0D5E                             l1859 0C90  
                           l1795 0996                             l1787 0906  
                           l1779 08A0                             l1867 0CDC  
                           l1955 1644                             l1947 1600  
                           l1939 15C4                             l1971 17A6  
                           l1963 1788                             l1893 1252  
                           l1885 18A0                             l1877 0D78  
                           l1869 0CEA                             l1797 0998  
                           l1789 095E                             l1949 1610  
                           l1973 17BE                             l1965 178A  
                           l1957 176C                             l1895 1262  
                           l1887 18BC                             l1879 17E4  
                           l1799 099C                             l1975 17D2  
                           l1967 178C                             l1959 1784  
                           l1897 1272                             l1889 190C  
                           l1977 17D4                             l1969 178E  
                           l1899 127E                             STR_1 06C9  
                           STR_2 06E9                             STR_3 0602  
                           STR_4 0602                             STR_5 06B9  
                           STR_6 0602                             STR_7 0602  
                           STR_8 0602                             STR_9 0601  
                           u1000 1444                             u1001 1440  
                           u1010 1468                             u1011 1464  
                           u1100 0972                             u1020 0FDE  
                           u1101 096E                             u1021 0FDA  
                           u1110 0984                             u1030 0FEE  
                           u1111 0980                             u1031 0FEA  
                           u1200 0B34                             u1120 0996  
                           u1040 1034                             u1201 0B30  
                           u1121 0992                             u1041 1030  
                           u1210 0B66                             u1130 09DA  
                           u1050 1044                             u1211 0B62  
                           u1131 09D6                             u1051 1040  
                           u1300 0D78                             u1220 0BB4  
                           u1140 0A14                             u1060 106E  
                           u1301 0D74                             u1221 0BB0  
                           u1141 0A10                             u1061 106A  
                           u1310 184E                             u1230 0C16  
                           u1150 0A2A                             u1070 07CA  
                           u1311 184A                             u1231 0C12  
                           u1151 0A26                             u1071 07C6  
                           u1320 18BA                             u1240 0C26  
                           u1160 0A3A                             u1080 08BC  
                           u1321 18B6                             u1241 0C22  
                           u1161 0A36                             u1081 08B8  
                           u1250 0C80                             u1170 0A6C  
                           u1090 0906                             u1330 15E0  
                           u1251 0C7C                             u1171 0A68  
                           u1091 0902                             u1331 15DC  
                           u1260 0C90                             u1180 0AC2  
                           u1340 1600                             u1261 0C8C  
                           u1181 0ABE                             u1341 15FC  
                           u1270 0CEA                             u1190 0B24  
                           u1350 1622                             u1407 12A0  
                           u1271 0CE6                             u1191 0B20  
                           u1351 161E                             u1280 0CFC  
                           u1360 1644                             u1417 12F6  
                           u1281 0CF8                             u1361 1640  
                           u1290 0D0E                             u1427 1718  
                           u1291 0D0A                             u1437 1754  
                           u1447 168A                             u1457 16D0  
                           u1377 1344                             u1467 1A40  
                           u1387 1A18                             u1477 1A5A  
                           u1397 1268                             i2l41 1A92  
                           _main 176C                             _menu 0F5C  
                           _rand 1158                             _seed 0047  
                           _time 191C                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0052                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
          function_set@num_lines 0007                     print_mat@lcd 0010  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                function_set@lcd 0004                            ?_main 0001  
                          ?_menu 001A                            ?_rand 0019  
                          STR_10 0601                            STR_11 0601  
                          STR_12 0601                            STR_20 0699  
                          STR_21 0645                            STR_13 0634  
                          STR_22 0678                            STR_14 0623  
                          STR_23 0656                            STR_15 0612  
                          STR_16 0601                            STR_24 0667  
                          STR_17 06D9                            STR_18 0689  
                          STR_19 06A9                  __end_of___awmod 147A  
                          ?_time 0001                            _T0CON 000FD5  
                          i2l112 0DC0                            i2l121 0E30  
                          i2l130 0E9C                            i2l114 0DB4  
                          i2l123 0E24                            i2l132 0E90  
                          i2l141 0F00                            i2l118 0DE4  
                          i2l127 0E54                            i2l136 0EC0  
                          i2l145 0F30                            i2l139 0F0C  
                          i2l148 0F5A                            _TMR0L 000FD6  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0001                  __end_of_lcd_cmd 1A30  
                __end_of_goto_XY 13CA                            _jogar 06FA  
                          _srand 1A96                            _pulso 1A30  
                          tablat 000FF5                            time@t 0001  
                          ttemp5 0053                            ttemp6 0056  
                          ttemp7 005A                            status 000FD8  
                          wtemp8 0053                  __initialization 1968  
                   __end_of_main 17E4                     __end_of_menu 1070  
                   __end_of_rand 1234                     __end_of_time 1968  
                         ??_main 003E                           ??_menu 001C  
                         ??_rand 001B                           ??_time 0009  
                  __activetblptr 000001                           _ADCON1 000FC1  
                         ?_jogar 0029                           ?_srand 0009  
                         ?_pulso 0001                           i2l1311 0D96  
                         i2l1313 0DA4                           i2l1331 0E06  
                         i2l1323 0DF2                           i2l1315 0DB8  
                         i2l1333 0E14                           i2l1317 0DCE  
                         i2l1325 0DF4                           i2l1309 0D86  
                         i2l1351 0E94                           i2l1343 0E62  
                         i2l1335 0E28                           i2l1327 0DF6  
                         i2l1319 0DDC                           i2l1353 0EAA  
                         i2l1361 0ED0                           i2l1337 0E3E  
                         i2l1345 0E64                           i2l1329 0DF8  
                         i2l1371 0F04                           i2l1363 0ED2  
                         i2l1355 0EB8                           i2l1347 0E72  
                         i2l1339 0E4C                           i2l1373 0F1A  
                         i2l1381 0F40                           i2l1365 0ED4  
                         i2l1349 0E80                           i2l1461 1A7A  
                         i2l1383 0F42                           i2l1375 0F28  
                         i2l1367 0EE2                           i2l1359 0ECE  
                         i2l1463 1A7E                           i2l1385 0F44  
                         i2l1369 0EF0                           i2l1465 1A80  
                         i2l1457 1A68                           i2l1387 0F4E  
                         i2l1379 0F3E                           i2l1467 1A8E  
                         i2l1459 1A76                           i2l1389 0F58  
               __end_of_creditos 18BC                 __end_of_finaliza 191C  
                    goto_XY@temp 000F                           ___omul 1526  
                      ??___awmod 0027             __size_of_gerenciador 0096  
                         _cont_d 0043                           _cont_l 0042  
                         _cont_r 0041                           _cont_u 0044  
                         _botoes 0046                           clear_0 198C  
                         clear_1 1998                  ___awmod@divisor 0025  
                ___awmod@counter 0027                    ?_function_set 0004  
                      ??_lcd_cmd 0007                           _strcpy 19B0  
                         jogar@i 0033                           jogar@j 0038  
                      ??_goto_XY 000C                     __pdataCOMRAM 004F  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         srand@s 0009         display_onoff_control@lcd 0004  
                     __accesstop 0080          __end_of__initialization 199E  
                  ___rparam_used 000001          ??_display_onoff_control 0009  
                 __pcstackCOMRAM 0001                    __end_of_jogar 0D86  
                 gerenciador@lcd 003C                    __end_of_srand 1AC4  
                  __end_of_pulso 1A66                   ??_function_set 0009  
                        ??_jogar 002B                          ??_srand 000B  
           __size_of_int_handler 1A8E                          ??_pulso 0003  
                     __pbssBANK0 0080                          ?___omul 0001  
            ___omul@multiplicand 0009                          ?_strcpy 0001  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 0007  
                        i2u51_40 0D96                          i2u51_41 0D92  
                        i2u60_40 0E3E                          i2u52_40 0DA4  
                        i2u60_41 0E3A                          i2u52_41 0DA0  
                        i2u61_40 0E4C                          i2u53_40 0DB4  
                        i2u61_41 0E48                          i2u53_41 0DB0  
                        i2u70_40 0EF0                          i2u62_40 0E62  
                        i2u54_40 0DCE                          i2u70_41 0EEC  
                        i2u62_41 0E5E                          i2u54_41 0DCA  
                        i2u71_40 0F00                          i2u63_40 0E72  
                        i2u55_40 0DDC                          i2u71_41 0EFC  
                        i2u63_41 0E6E                          i2u55_41 0DD8  
                        i2u72_40 0F1A                          i2u64_40 0E80  
                        i2u56_40 0DF2                          i2u72_41 0F16  
                        i2u64_41 0E7C                          i2u56_41 0DEE  
                        i2u73_40 0F28                          i2u65_40 0E90  
                        i2u57_40 0E06                          i2u81_40 1A76  
                        i2u73_41 0F24                          i2u65_41 0E8C  
                        i2u57_41 0E02                          i2u81_41 1A72  
                        i2u74_40 0F3E                          i2u66_40 0EAA  
                        i2u58_40 0E14                          i2u82_40 1A8E  
                        i2u74_41 0F3A                          i2u66_41 0EA6  
                        i2u58_41 0E10                          i2u82_41 1A8A  
                        i2u67_40 0EB8                          i2u59_40 0E24  
                        i2u67_41 0EB4                          i2u59_41 0E20  
                        i2u75_45 0F4C                          i2u75_47 0F4E  
                        i2u68_40 0ECE                          i2u68_41 0ECA  
                        i2u76_45 0F56                          i2u76_47 0F58  
                        i2u69_40 0EE2                          i2u69_41 0EDE  
                      ?_creditos 001A                       _le_entrada 0D86  
                      ?_finaliza 001A                       _botoes_ant 0045  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 0007                          __Lparam 0000  
                        ___awmod 13CA                  __size_of___omul 009E  
                   __psmallconst 0600                          __pcinit 1968  
                        __ramtop 0600                    instrucoes@lcd 001A  
                        __ptext0 176C                          __ptext1 15C4  
                        __ptext2 0F5C                          __ptext3 06FA  
                        __ptext4 191C                          __ptext5 1A96  
                        __ptext6 1158                          __ptext7 1526  
                        __ptext8 13CA                          __ptext9 17E4  
                        _lcd_cmd 19F0                        _T0CONbits 000FD5  
                __size_of_strcpy 0040                          _goto_XY 130E  
               ___awmod@dividend 0023                       ??_creditos 001C  
                     ??_finaliza 001C                   __pintcode_body 1A66  
           end_of_initialization 199E                       _instrucoes 17E4  
                        menu@lcd 001A                   ___omul@product 0011  
           __end_of_function_set 130E                          int_func 1A66  
              __end_of_print_mat 1526                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
                        strcpy@d 0007                          strcpy@s 0005  
                      _PORTBbits 000F81                       lcd_cmd@lcd 0004  
                    ?_le_entrada 0001                    ??_gerenciador 003E  
 __size_of_display_onoff_control 008E    __end_of_display_onoff_control 16E8  
                 __end_of___omul 15C4                       _write_char 1070  
                  __pidataCOMRAM 1AC4                   __end_of_strcpy 19F0  
            start_initialization 1968                       jogar@i_485 003A  
                    ?_instrucoes 001A                       jogar@bateu 0036  
              ___omul@multiplier 0001                       jogar@score 0035  
                 _entry_mode_set 16E8                       goto_XY@lcd 0008  
                       ??___omul 0011              __size_of_le_entrada 01D6  
            __end_of_gerenciador 165A                         ??_strcpy 0005  
                    __pbssCOMRAM 003E                    ??_int_handler 0001  
          __size_of_function_set 00DA                __size_of_creditos 006C  
              __size_of_finaliza 0060           __end_of_entry_mode_set 176C  
                      __pintcode 0008                         ?___awmod 0023  
                    ?_write_char 0001              __size_of_instrucoes 006C  
                       ?_lcd_cmd 0004                     _function_set 1234  
                    __smallconst 0600                         ?_goto_XY 0008  
                 __size_of_jogar 068C                   __size_of_srand 002E  
                 __size_of_pulso 0036              __end_of_int_handler 1A96  
                ?_entry_mode_set 0004                      _gerenciador 15C4  
   entry_mode_set@move_direction 0006                        _print_mat 147A  
display_onoff_control@display_on 0006       display_onoff_control@blink 0008  
                    write_char@c 0003                       print_mat@i 0018  
                     print_mat@j 0016                     ??_le_entrada 0001  
            __size_of_write_char 00E8                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0600  
              entry_mode_set@lcd 0004                 __size_of___awmod 00B0  
                     ?_print_mat 0010               __end_of_le_entrada 0F5C  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 18BC  
                       __ptext11 1850                         __ptext20 1A30  
                       __ptext12 19B0                         __ptext13 147A  
                       __ptext22 0D86                         __ptext14 1070  
                       __ptext15 130E                         __ptext16 19F0  
                       __ptext17 1234                         __ptext18 16E8  
                       __ptext19 165A                         _creditos 1850  
                       _finaliza 18BC                         _contador 003E  
                   ??_instrucoes 001C                       strcpy@dest 0001  
                       _mat_disp 0080                    __size_of_main 0078  
                  __size_of_menu 0114                    __size_of_rand 00DC  
                  __size_of_time 004C                         int$flags 0052  
                       lcd_cmd@a 0006            _display_onoff_control 165A  
             __end_of_instrucoes 1850                       _INTCONbits 000FF2  
                       jogar@lcd 0029                         goto_XY@a 000E  
                       goto_XY@x 000A                         goto_XY@y 000B  
                       goto_XY@z 000D                         intlevel2 0000  
                      strcpy@src 0003          function_set@data_lenght 0006  
                    ??_print_mat 0012                     ??_write_char 0004  
                       pulso@lcd 0001                 ??_entry_mode_set 0008  
          function_set@char_font 0008               __end_of_write_char 1158  
                   ?_gerenciador 003C  
