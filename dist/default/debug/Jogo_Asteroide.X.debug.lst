

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 10 23:43:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4520 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  0005AC                     __pidataCOMRAM:
    66                           	opt callstack 0
    67                           
    68                           ;initializer for instrucoes@F3092
    69  0005AC  50                 	db	80
    70  0005AD  52                 	db	82
    71  0005AE  4F                 	db	79
    72  0005AF  20                 	db	32
    73  0005B0  4D                 	db	77
    74  0005B1  45                 	db	69
    75  0005B2  4E                 	db	78
    76  0005B3  55                 	db	85
    77  0005B4  00                 	db	0
    78  0005B5  00                 	db	0
    79  0005B6  00                 	db	0
    80  0005B7  00                 	db	0
    81  0005B8  00                 	db	0
    82  0005B9  00                 	db	0
    83  0005BA  00                 	db	0
    84  0005BB  00                 	db	0
    85                           
    86                           ;initializer for instrucoes@F3089
    87  0005BC  32                 	db	50
    88  0005BD  2E                 	db	46
    89  0005BE  45                 	db	69
    90  0005BF  53                 	db	83
    91  0005C0  43                 	db	67
    92  0005C1  41                 	db	65
    93  0005C2  50                 	db	80
    94  0005C3  45                 	db	69
    95  0005C4  20                 	db	32
    96  0005C5  56                 	db	86
    97  0005C6  4F                 	db	79
    98  0005C7  4C                 	db	76
    99  0005C8  54                 	db	84
   100  0005C9  41                 	db	65
   101  0005CA  00                 	db	0
   102  0005CB  00                 	db	0
   103                           
   104                           ;initializer for instrucoes@F3086
   105  0005CC  4E                 	db	78
   106  0005CD  41                 	db	65
   107  0005CE  56                 	db	86
   108  0005CF  45                 	db	69
   109  0005D0  00                 	db	0
   110  0005D1  00                 	db	0
   111  0005D2  00                 	db	0
   112  0005D3  00                 	db	0
   113  0005D4  00                 	db	0
   114  0005D5  00                 	db	0
   115  0005D6  00                 	db	0
   116  0005D7  00                 	db	0
   117  0005D8  00                 	db	0
   118  0005D9  00                 	db	0
   119  0005DA  00                 	db	0
   120  0005DB  00                 	db	0
   121                           
   122                           ;initializer for instrucoes@F3083
   123  0005DC  31                 	db	49
   124  0005DD  2E                 	db	46
   125  0005DE  53                 	db	83
   126  0005DF  45                 	db	69
   127  0005E0  54                 	db	84
   128  0005E1  41                 	db	65
   129  0005E2  53                 	db	83
   130  0005E3  20                 	db	32
   131  0005E4  4D                 	db	77
   132  0005E5  4F                 	db	79
   133  0005E6  56                 	db	86
   134  0005E7  45                 	db	69
   135  0005E8  4D                 	db	77
   136  0005E9  20                 	db	32
   137  0005EA  41                 	db	65
   138  0005EB  00                 	db	0
   139                           
   140                           ;initializer for creditos@F3059
   141  0005EC  32                 	db	50
   142  0005ED  2E                 	db	46
   143  0005EE  47                 	db	71
   144  0005EF  45                 	db	69
   145  0005F0  4F                 	db	79
   146  0005F1  52                 	db	82
   147  0005F2  47                 	db	71
   148  0005F3  45                 	db	69
   149  0005F4  20                 	db	32
   150  0005F5  4E                 	db	78
   151  0005F6  41                 	db	65
   152  0005F7  52                 	db	82
   153  0005F8  44                 	db	68
   154  0005F9  45                 	db	69
   155  0005FA  53                 	db	83
   156  0005FB  00                 	db	0
   157                           
   158                           ;initializer for creditos@F3056
   159  0005FC  31                 	db	49
   160  0005FD  2E                 	db	46
   161  0005FE  44                 	db	68
   162  0005FF  49                 	db	73
   163  000600  4F                 	db	79
   164  000601  47                 	db	71
   165  000602  4F                 	db	79
   166  000603  20                 	db	32
   167  000604  4D                 	db	77
   168  000605  41                 	db	65
   169  000606  52                 	db	82
   170  000607  43                 	db	67
   171  000608  48                 	db	72
   172  000609  49                 	db	73
   173  00060A  00                 	db	0
   174  00060B  00                 	db	0
   175                           
   176                           	psect	idataBANK0
   177  0006A0                     __pidataBANK0:
   178                           	opt callstack 0
   179                           
   180                           ;initializer for menu@F3110
   181  0006A0  34                 	db	52
   182  0006A1  2E                 	db	46
   183  0006A2  46                 	db	70
   184  0006A3  49                 	db	73
   185  0006A4  4E                 	db	78
   186  0006A5  41                 	db	65
   187  0006A6  4C                 	db	76
   188  0006A7  49                 	db	73
   189  0006A8  5A                 	db	90
   190  0006A9  41                 	db	65
   191  0006AA  52                 	db	82
   192  0006AB  00                 	db	0
   193  0006AC  00                 	db	0
   194  0006AD  00                 	db	0
   195  0006AE  00                 	db	0
   196  0006AF  00                 	db	0
   197                           
   198                           ;initializer for menu@F3107
   199  0006B0  33                 	db	51
   200  0006B1  2E                 	db	46
   201  0006B2  43                 	db	67
   202  0006B3  52                 	db	82
   203  0006B4  45                 	db	69
   204  0006B5  44                 	db	68
   205  0006B6  49                 	db	73
   206  0006B7  54                 	db	84
   207  0006B8  4F                 	db	79
   208  0006B9  53                 	db	83
   209  0006BA  00                 	db	0
   210  0006BB  00                 	db	0
   211  0006BC  00                 	db	0
   212  0006BD  00                 	db	0
   213  0006BE  00                 	db	0
   214  0006BF  00                 	db	0
   215                           
   216                           ;initializer for menu@F3104
   217  0006C0  32                 	db	50
   218  0006C1  2E                 	db	46
   219  0006C2  49                 	db	73
   220  0006C3  4E                 	db	78
   221  0006C4  53                 	db	83
   222  0006C5  54                 	db	84
   223  0006C6  52                 	db	82
   224  0006C7  55                 	db	85
   225  0006C8  43                 	db	67
   226  0006C9  4F                 	db	79
   227  0006CA  45                 	db	69
   228  0006CB  53                 	db	83
   229  0006CC  00                 	db	0
   230  0006CD  00                 	db	0
   231  0006CE  00                 	db	0
   232  0006CF  00                 	db	0
   233                           
   234                           ;initializer for menu@F3101
   235  0006D0  31                 	db	49
   236  0006D1  2E                 	db	46
   237  0006D2  4A                 	db	74
   238  0006D3  4F                 	db	79
   239  0006D4  47                 	db	71
   240  0006D5  41                 	db	65
   241  0006D6  52                 	db	82
   242  0006D7  00                 	db	0
   243  0006D8  00                 	db	0
   244  0006D9  00                 	db	0
   245  0006DA  00                 	db	0
   246  0006DB  00                 	db	0
   247  0006DC  00                 	db	0
   248  0006DD  00                 	db	0
   249  0006DE  00                 	db	0
   250  0006DF  00                 	db	0
   251                           
   252                           	psect	nvCOMRAM
   253  000076                     __pnvCOMRAM:
   254                           	opt callstack 0
   255  000076                     _lcd:
   256                           	opt callstack 0
   257  000076                     	ds	2
   258  0000                     _PORTBbits	set	3969
   259  0000                     _T0CONbits	set	4053
   260  0000                     _T0CON	set	4053
   261  0000                     _TRISD	set	3989
   262  0000                     _PORTB	set	3969
   263  0000                     _TRISB	set	3987
   264  0000                     _ADCON1	set	4033
   265  0000                     _TMR0L	set	4054
   266  0000                     _INTCONbits	set	4082
   267  0000                     _PORTD	set	3971
   268                           
   269                           ; #config settings
   270  0000                     
   271                           	psect	cinit
   272  00060C                     __pcinit:
   273                           	opt callstack 0
   274  00060C                     start_initialization:
   275                           	opt callstack 0
   276  00060C                     __initialization:
   277                           	opt callstack 0
   278                           
   279                           ; Initialize objects allocated to BANK0 (64 bytes)
   280                           ; load TBLPTR registers with __pidataBANK0
   281  00060C  0EA0               	movlw	low __pidataBANK0
   282  00060E  6EF6               	movwf	tblptrl,c
   283  000610  0E06               	movlw	high __pidataBANK0
   284  000612  6EF7               	movwf	tblptrh,c
   285  000614  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   286  000616  6EF8               	movwf	tblptru,c
   287  000618  EE00  F080         	lfsr	0,__pdataBANK0
   288  00061C  EE10 F040          	lfsr	1,64
   289  000620                     copy_data0:
   290  000620  0009               	tblrd		*+
   291  000622  CFF5 FFEE          	movff	tablat,postinc0
   292  000626  50E5               	movf	postdec1,w,c
   293  000628  50E1               	movf	fsr1l,w,c
   294  00062A  E1FA               	bnz	copy_data0
   295                           
   296                           ; Initialize objects allocated to COMRAM (96 bytes)
   297                           ; load TBLPTR registers with __pidataCOMRAM
   298  00062C  0EAC               	movlw	low __pidataCOMRAM
   299  00062E  6EF6               	movwf	tblptrl,c
   300  000630  0E05               	movlw	high __pidataCOMRAM
   301  000632  6EF7               	movwf	tblptrh,c
   302  000634  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   303  000636  6EF8               	movwf	tblptru,c
   304  000638  EE00  F001         	lfsr	0,__pdataCOMRAM
   305  00063C  EE10 F060          	lfsr	1,96
   306  000640                     copy_data1:
   307  000640  0009               	tblrd		*+
   308  000642  CFF5 FFEE          	movff	tablat,postinc0
   309  000646  50E5               	movf	postdec1,w,c
   310  000648  50E1               	movf	fsr1l,w,c
   311  00064A  E1FA               	bnz	copy_data1
   312                           
   313                           ; Clear objects allocated to COMRAM (2 bytes)
   314  00064C  6A79               	clrf	(__pbssCOMRAM+1)& (0+255),c
   315  00064E  6A78               	clrf	__pbssCOMRAM& (0+255),c
   316  000650                     end_of_initialization:
   317                           	opt callstack 0
   318  000650                     __end_of__initialization:
   319                           	opt callstack 0
   320  000650  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321  000652  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322  000654  0E00               	movlw	low (__Lmediumconst shr (0+16))
   323  000656  6EF8               	movwf	tblptru,c
   324  000658  0100               	movlb	0
   325  00065A  EF09  F000         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMRAM
   328  000078                     __pbssCOMRAM:
   329                           	opt callstack 0
   330  000078                     _botoes:
   331                           	opt callstack 0
   332  000078                     	ds	2
   333                           
   334                           	psect	dataCOMRAM
   335  000001                     __pdataCOMRAM:
   336                           	opt callstack 0
   337  000001                     instrucoes@F3092:
   338                           	opt callstack 0
   339  000001                     	ds	16
   340  000011                     instrucoes@F3089:
   341                           	opt callstack 0
   342  000011                     	ds	16
   343  000021                     instrucoes@F3086:
   344                           	opt callstack 0
   345  000021                     	ds	16
   346  000031                     instrucoes@F3083:
   347                           	opt callstack 0
   348  000031                     	ds	16
   349  000041                     creditos@F3059:
   350                           	opt callstack 0
   351  000041                     	ds	16
   352  000051                     creditos@F3056:
   353                           	opt callstack 0
   354  000051                     	ds	16
   355                           
   356                           	psect	dataBANK0
   357  000080                     __pdataBANK0:
   358                           	opt callstack 0
   359  000080                     menu@F3110:
   360                           	opt callstack 0
   361  000080                     	ds	16
   362  000090                     menu@F3107:
   363                           	opt callstack 0
   364  000090                     	ds	16
   365  0000A0                     menu@F3104:
   366                           	opt callstack 0
   367  0000A0                     	ds	16
   368  0000B0                     menu@F3101:
   369                           	opt callstack 0
   370  0000B0                     	ds	16
   371                           
   372                           	psect	cstackCOMRAM
   373  000061                     __pcstackCOMRAM:
   374                           	opt callstack 0
   375  000061                     le_entrada@botoes:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x0
   379  000061                     	ds	2
   380  000063                     ??_int_handler:
   381                           
   382                           ; 1 bytes @ 0x2
   383  000063                     	ds	2
   384  000065                     pulso@lcd:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x4
   388  000065                     	ds	2
   389  000067                     ??_pulso:
   390                           
   391                           ; 1 bytes @ 0x6
   392  000067                     	ds	1
   393  000068                     function_set@lcd:
   394                           	opt callstack 0
   395  000068                     display_onoff_control@lcd:
   396                           	opt callstack 0
   397  000068                     lcd_cmd@lcd:
   398                           	opt callstack 0
   399  000068                     entry_mode_set@lcd:
   400                           	opt callstack 0
   401  000068                     write_char@lcd:
   402                           	opt callstack 0
   403  000068                     clear_display@lcd:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x7
   407  000068                     	ds	2
   408  00006A                     ??_clear_display:
   409  00006A                     function_set@data_lenght:
   410                           	opt callstack 0
   411  00006A                     display_onoff_control@display_on:
   412                           	opt callstack 0
   413  00006A                     lcd_cmd@a:
   414                           	opt callstack 0
   415  00006A                     entry_mode_set@move_direction:
   416                           	opt callstack 0
   417  00006A                     write_char@c:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x9
   421  00006A                     	ds	1
   422  00006B                     ??_write_char:
   423  00006B                     ??_lcd_cmd:
   424  00006B                     function_set@num_lines:
   425                           	opt callstack 0
   426  00006B                     display_onoff_control@cursor_on:
   427                           	opt callstack 0
   428  00006B                     entry_mode_set@display_shift:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0xA
   432  00006B                     	ds	1
   433  00006C                     ??_entry_mode_set:
   434  00006C                     function_set@char_font:
   435                           	opt callstack 0
   436  00006C                     display_onoff_control@blink:
   437                           	opt callstack 0
   438  00006C                     goto_XY@lcd:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0xB
   442  00006C                     	ds	1
   443  00006D                     ??_function_set:
   444  00006D                     ??_display_onoff_control:
   445                           
   446                           ; 1 bytes @ 0xC
   447  00006D                     	ds	1
   448  00006E                     goto_XY@x:
   449                           	opt callstack 0
   450                           
   451                           ; 1 bytes @ 0xD
   452  00006E                     	ds	1
   453  00006F                     goto_XY@y:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0xE
   457  00006F                     	ds	1
   458  000070                     ??_goto_XY:
   459                           
   460                           ; 1 bytes @ 0xF
   461  000070                     	ds	1
   462  000071                     goto_XY@z:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x10
   466  000071                     	ds	1
   467  000072                     goto_XY@a:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x11
   471  000072                     	ds	1
   472  000073                     goto_XY@temp:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0x12
   476  000073                     	ds	1
   477  000074                     ??_main:
   478                           
   479                           ; 1 bytes @ 0x13
   480  000074                     	ds	2
   481                           
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 31 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   501 ;;      Params:         0       0       0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0
   503 ;;      Temps:          2       0       0       0       0       0       0
   504 ;;      Totals:         2       0       0       0       0       0       0
   505 ;;Total ram usage:        2 bytes
   506 ;; Hardware stack levels required when called:    5
   507 ;; This function calls:
   508 ;;		_clear_display
   509 ;;		_display_onoff_control
   510 ;;		_entry_mode_set
   511 ;;		_function_set
   512 ;;		_goto_XY
   513 ;;		_write_char
   514 ;; This function is called by:
   515 ;;		Startup code after reset
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text0
   520  000012                     __ptext0:
   521                           	opt callstack 0
   522  000012                     _main:
   523                           	opt callstack 26
   524  000012                     
   525                           ;main.c: 33:     ADCON1 = 0x0F;
   526  000012  0E0F               	movlw	15
   527  000014  6EC1               	movwf	193,c	;volatile
   528                           
   529                           ;main.c: 38:     TRISB = 0x0F;
   530  000016  0E0F               	movlw	15
   531  000018  6E93               	movwf	147,c	;volatile
   532                           
   533                           ;main.c: 41:     PORTB = 0x00;
   534  00001A  0E00               	movlw	0
   535  00001C  6E81               	movwf	129,c	;volatile
   536                           
   537                           ;main.c: 44:     TRISD = 0x00;
   538  00001E  0E00               	movlw	0
   539  000020  6E95               	movwf	149,c	;volatile
   540                           
   541                           ;main.c: 47:     T0CON = 0x47;
   542  000022  0E47               	movlw	71
   543  000024  6ED5               	movwf	213,c	;volatile
   544                           
   545                           ;main.c: 50:     TMR0L = 0x63;
   546  000026  0E63               	movlw	99
   547  000028  6ED6               	movwf	214,c	;volatile
   548  00002A                     
   549                           ;main.c: 53:     INTCONbits.TMR0IF = 0;
   550  00002A  94F2               	bcf	242,2,c	;volatile
   551  00002C                     
   552                           ;main.c: 54:     INTCONbits.TMR0IE = 1;
   553  00002C  8AF2               	bsf	242,5,c	;volatile
   554  00002E                     
   555                           ;main.c: 55:     INTCONbits.GIE = 1;
   556  00002E  8EF2               	bsf	242,7,c	;volatile
   557  000030                     
   558                           ;main.c: 57:     lcd = &PORTD;
   559  000030  0E83               	movlw	131
   560  000032  6E76               	movwf	_lcd^0,c
   561  000034  0E0F               	movlw	15
   562  000036  6E77               	movwf	(_lcd+1)^0,c
   563  000038                     
   564                           ;main.c: 59:     function_set(lcd, 0, 1, 0);
   565  000038  C076  F068         	movff	_lcd,function_set@lcd
   566  00003C  C077  F069         	movff	_lcd+1,function_set@lcd+1
   567  000040  0E00               	movlw	0
   568  000042  6E6A               	movwf	function_set@data_lenght^0,c
   569  000044  0E01               	movlw	1
   570  000046  6E6B               	movwf	function_set@num_lines^0,c
   571  000048  0E00               	movlw	0
   572  00004A  6E6C               	movwf	function_set@char_font^0,c
   573  00004C  ECC9  F000         	call	_function_set	;wreg free
   574  000050                     
   575                           ;main.c: 60:     display_onoff_control(lcd, 1, 1, 0);
   576  000050  C076  F068         	movff	_lcd,display_onoff_control@lcd
   577  000054  C077  F069         	movff	_lcd+1,display_onoff_control@lcd+1
   578  000058  0E01               	movlw	1
   579  00005A  6E6A               	movwf	display_onoff_control@display_on^0,c
   580  00005C  0E01               	movlw	1
   581  00005E  6E6B               	movwf	display_onoff_control@cursor_on^0,c
   582  000060  0E00               	movlw	0
   583  000062  6E6C               	movwf	display_onoff_control@blink^0,c
   584  000064  ECE0  F001         	call	_display_onoff_control	;wreg free
   585  000068                     
   586                           ;main.c: 61:     entry_mode_set(lcd, 1,0);
   587  000068  C076  F068         	movff	_lcd,entry_mode_set@lcd
   588  00006C  C077  F069         	movff	_lcd+1,entry_mode_set@lcd+1
   589  000070  0E01               	movlw	1
   590  000072  6E6A               	movwf	entry_mode_set@move_direction^0,c
   591  000074  0E00               	movlw	0
   592  000076  6E6B               	movwf	entry_mode_set@display_shift^0,c
   593  000078  EC27  F002         	call	_entry_mode_set	;wreg free
   594  00007C                     
   595                           ;main.c: 63:     T0CONbits.TMR0ON = 1;
   596  00007C  8ED5               	bsf	213,7,c	;volatile
   597  00007E                     l1495:
   598                           
   599                           ;main.c: 66:         if(botoes->U){
   600  00007E  C078  FFD9         	movff	_botoes,fsr2l
   601  000082  C079  FFDA         	movff	_botoes+1,fsr2h
   602  000086  A0DF               	btfss	indf2,0,c
   603  000088  EF48  F000         	goto	u431
   604  00008C  EF4A  F000         	goto	u430
   605  000090                     u431:
   606  000090  EF5C  F000         	goto	l1499
   607  000094                     u430:
   608  000094                     
   609                           ;main.c: 67:             goto_XY(lcd, 3, 2);
   610  000094  C076  F06C         	movff	_lcd,goto_XY@lcd
   611  000098  C077  F06D         	movff	_lcd+1,goto_XY@lcd+1
   612  00009C  0E03               	movlw	3
   613  00009E  6E6E               	movwf	goto_XY@x^0,c
   614  0000A0  0E02               	movlw	2
   615  0000A2  6E6F               	movwf	goto_XY@y^0,c
   616  0000A4  EC36  F001         	call	_goto_XY	;wreg free
   617                           
   618                           ;main.c: 68:             write_char(lcd,'*');
   619  0000A8  C076  F068         	movff	_lcd,write_char@lcd
   620  0000AC  C077  F069         	movff	_lcd+1,write_char@lcd+1
   621  0000B0  0E2A               	movlw	42
   622  0000B2  6E6A               	movwf	write_char@c^0,c
   623  0000B4  EC94  F001         	call	_write_char	;wreg free
   624  0000B8                     l1499:
   625                           
   626                           ;main.c: 70:         if(botoes->D){
   627  0000B8  C078  FFD9         	movff	_botoes,fsr2l
   628  0000BC  C079  FFDA         	movff	_botoes+1,fsr2h
   629  0000C0  A2DF               	btfss	indf2,1,c
   630  0000C2  EF65  F000         	goto	u441
   631  0000C6  EF67  F000         	goto	u440
   632  0000CA                     u441:
   633  0000CA  EF79  F000         	goto	l1503
   634  0000CE                     u440:
   635  0000CE                     
   636                           ;main.c: 71:             goto_XY(lcd, 2, 2);
   637  0000CE  C076  F06C         	movff	_lcd,goto_XY@lcd
   638  0000D2  C077  F06D         	movff	_lcd+1,goto_XY@lcd+1
   639  0000D6  0E02               	movlw	2
   640  0000D8  6E6E               	movwf	goto_XY@x^0,c
   641  0000DA  0E02               	movlw	2
   642  0000DC  6E6F               	movwf	goto_XY@y^0,c
   643  0000DE  EC36  F001         	call	_goto_XY	;wreg free
   644                           
   645                           ;main.c: 72:             write_char(lcd,'*');
   646  0000E2  C076  F068         	movff	_lcd,write_char@lcd
   647  0000E6  C077  F069         	movff	_lcd+1,write_char@lcd+1
   648  0000EA  0E2A               	movlw	42
   649  0000EC  6E6A               	movwf	write_char@c^0,c
   650  0000EE  EC94  F001         	call	_write_char	;wreg free
   651  0000F2                     l1503:
   652                           
   653                           ;main.c: 74:         if(botoes->L){
   654  0000F2  C078  FFD9         	movff	_botoes,fsr2l
   655  0000F6  C079  FFDA         	movff	_botoes+1,fsr2h
   656  0000FA  A4DF               	btfss	indf2,2,c
   657  0000FC  EF82  F000         	goto	u451
   658  000100  EF84  F000         	goto	u450
   659  000104                     u451:
   660  000104  EF96  F000         	goto	l1507
   661  000108                     u450:
   662  000108                     
   663                           ;main.c: 75:             goto_XY(lcd, 1, 2);
   664  000108  C076  F06C         	movff	_lcd,goto_XY@lcd
   665  00010C  C077  F06D         	movff	_lcd+1,goto_XY@lcd+1
   666  000110  0E01               	movlw	1
   667  000112  6E6E               	movwf	goto_XY@x^0,c
   668  000114  0E02               	movlw	2
   669  000116  6E6F               	movwf	goto_XY@y^0,c
   670  000118  EC36  F001         	call	_goto_XY	;wreg free
   671                           
   672                           ;main.c: 76:             write_char(lcd,'*');
   673  00011C  C076  F068         	movff	_lcd,write_char@lcd
   674  000120  C077  F069         	movff	_lcd+1,write_char@lcd+1
   675  000124  0E2A               	movlw	42
   676  000126  6E6A               	movwf	write_char@c^0,c
   677  000128  EC94  F001         	call	_write_char	;wreg free
   678  00012C                     l1507:
   679                           
   680                           ;main.c: 78:         if(botoes->R){
   681  00012C  C078  FFD9         	movff	_botoes,fsr2l
   682  000130  C079  FFDA         	movff	_botoes+1,fsr2h
   683  000134  A6DF               	btfss	indf2,3,c
   684  000136  EF9F  F000         	goto	u461
   685  00013A  EFA1  F000         	goto	u460
   686  00013E                     u461:
   687  00013E  EFB3  F000         	goto	l1511
   688  000142                     u460:
   689  000142                     
   690                           ;main.c: 79:             goto_XY(lcd, 1, 3);
   691  000142  C076  F06C         	movff	_lcd,goto_XY@lcd
   692  000146  C077  F06D         	movff	_lcd+1,goto_XY@lcd+1
   693  00014A  0E01               	movlw	1
   694  00014C  6E6E               	movwf	goto_XY@x^0,c
   695  00014E  0E03               	movlw	3
   696  000150  6E6F               	movwf	goto_XY@y^0,c
   697  000152  EC36  F001         	call	_goto_XY	;wreg free
   698                           
   699                           ;main.c: 80:             write_char(lcd,'*');
   700  000156  C076  F068         	movff	_lcd,write_char@lcd
   701  00015A  C077  F069         	movff	_lcd+1,write_char@lcd+1
   702  00015E  0E2A               	movlw	42
   703  000160  6E6A               	movwf	write_char@c^0,c
   704  000162  EC94  F001         	call	_write_char	;wreg free
   705  000166                     l1511:
   706                           
   707                           ;main.c: 82:         _delay((unsigned long)((80)*(16000000/4000.0)));
   708  000166  0E02               	movlw	2
   709  000168  6E75               	movwf	(??_main+1)^0,c
   710  00016A  0EA0               	movlw	160
   711  00016C  6E74               	movwf	??_main^0,c
   712  00016E  0E92               	movlw	146
   713  000170                     u767:
   714  000170  2EE8               	decfsz	wreg,f,c
   715  000172  D7FE               	bra	u767
   716  000174  2E74               	decfsz	??_main^0,f,c
   717  000176  D7FC               	bra	u767
   718  000178  2E75               	decfsz	(??_main+1)^0,f,c
   719  00017A  D7FA               	bra	u767
   720  00017C  D000               	nop2	
   721  00017E                     
   722                           ;main.c: 83:         clear_display(lcd);
   723  00017E  C076  F068         	movff	_lcd,clear_display@lcd
   724  000182  C077  F069         	movff	_lcd+1,clear_display@lcd+1
   725  000186  EC69  F002         	call	_clear_display	;wreg free
   726  00018A  EF3F  F000         	goto	l1495
   727  00018E  EF07  F000         	goto	start
   728  000192                     __end_of_main:
   729                           	opt callstack 0
   730                           
   731 ;; *************** function _write_char *****************
   732 ;; Defined at:
   733 ;;		line 137 in file "lcd.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  lcd             2    7[COMRAM] PTR struct .
   736 ;;		 -> NULL(0), PORTD(1), 
   737 ;;  c               1    9[COMRAM] unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   749 ;;      Params:         3       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0
   751 ;;      Temps:          1       0       0       0       0       0       0
   752 ;;      Totals:         4       0       0       0       0       0       0
   753 ;;Total ram usage:        4 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    3
   756 ;; This function calls:
   757 ;;		_pulso
   758 ;; This function is called by:
   759 ;;		_main
   760 ;;		_creditos
   761 ;;		_jogar
   762 ;;		_instrucoes
   763 ;;		_menu
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text1
   768  000328                     __ptext1:
   769                           	opt callstack 0
   770  000328                     _write_char:
   771                           	opt callstack 27
   772  000328                     
   773                           ;lcd.c: 138:     lcd->E = 0;
   774  000328  C068  FFD9         	movff	write_char@lcd,fsr2l
   775  00032C  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   776  000330  94DF               	bcf	indf2,2,c
   777                           
   778                           ;lcd.c: 139:     lcd->RS = 1;
   779  000332  C068  FFD9         	movff	write_char@lcd,fsr2l
   780  000336  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   781  00033A  80DF               	bsf	indf2,0,c
   782                           
   783                           ;lcd.c: 140:     lcd->R_W = 0;
   784  00033C  C068  FFD9         	movff	write_char@lcd,fsr2l
   785  000340  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   786  000344  92DF               	bcf	indf2,1,c
   787  000346                     
   788                           ;lcd.c: 143:     lcd->data = (c>>4);
   789  000346  C06A  F06B         	movff	write_char@c,??_write_char
   790  00034A  3A6B               	swapf	??_write_char^0,f,c
   791  00034C  0E0F               	movlw	15
   792  00034E  166B               	andwf	??_write_char^0,f,c
   793  000350  C068  FFD9         	movff	write_char@lcd,fsr2l
   794  000354  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   795  000358  3A6B               	swapf	??_write_char^0,f,c
   796  00035A  50DF               	movf	indf2,w,c
   797  00035C  186B               	xorwf	??_write_char^0,w,c
   798  00035E  0B0F               	andlw	-241
   799  000360  186B               	xorwf	??_write_char^0,w,c
   800  000362  6EDF               	movwf	indf2,c
   801  000364                     
   802                           ;lcd.c: 144:     _delay((unsigned long)((1)*(16000000/4000.0)));
   803  000364  0E06               	movlw	6
   804  000366  6E6B               	movwf	??_write_char^0,c
   805  000368  0E30               	movlw	48
   806  00036A                     u777:
   807  00036A  2EE8               	decfsz	wreg,f,c
   808  00036C  D7FE               	bra	u777
   809  00036E  2E6B               	decfsz	??_write_char^0,f,c
   810  000370  D7FC               	bra	u777
   811  000372  D000               	nop2	
   812  000374                     
   813                           ;lcd.c: 146:     pulso(lcd);
   814  000374  C068  F065         	movff	write_char@lcd,pulso@lcd
   815  000378  C069  F066         	movff	write_char@lcd+1,pulso@lcd+1
   816  00037C  EC2F  F003         	call	_pulso	;wreg free
   817  000380                     
   818                           ;lcd.c: 149:     lcd->data = (c);
   819  000380  C06A  F06B         	movff	write_char@c,??_write_char
   820  000384  C068  FFD9         	movff	write_char@lcd,fsr2l
   821  000388  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   822  00038C  3A6B               	swapf	??_write_char^0,f,c
   823  00038E  50DF               	movf	indf2,w,c
   824  000390  186B               	xorwf	??_write_char^0,w,c
   825  000392  0B0F               	andlw	-241
   826  000394  186B               	xorwf	??_write_char^0,w,c
   827  000396  6EDF               	movwf	indf2,c
   828  000398                     
   829                           ;lcd.c: 150:     _delay((unsigned long)((1)*(16000000/4000.0)));
   830  000398  0E06               	movlw	6
   831  00039A  6E6B               	movwf	??_write_char^0,c
   832  00039C  0E30               	movlw	48
   833  00039E                     u787:
   834  00039E  2EE8               	decfsz	wreg,f,c
   835  0003A0  D7FE               	bra	u787
   836  0003A2  2E6B               	decfsz	??_write_char^0,f,c
   837  0003A4  D7FC               	bra	u787
   838  0003A6  D000               	nop2	
   839  0003A8                     
   840                           ;lcd.c: 152:     pulso(lcd);
   841  0003A8  C068  F065         	movff	write_char@lcd,pulso@lcd
   842  0003AC  C069  F066         	movff	write_char@lcd+1,pulso@lcd+1
   843  0003B0  EC2F  F003         	call	_pulso	;wreg free
   844                           
   845                           ;lcd.c: 153:     lcd->RS = 0;
   846  0003B4  C068  FFD9         	movff	write_char@lcd,fsr2l
   847  0003B8  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   848  0003BC  90DF               	bcf	indf2,0,c
   849  0003BE  0012               	return		;funcret
   850  0003C0                     __end_of_write_char:
   851                           	opt callstack 0
   852                           
   853 ;; *************** function _goto_XY *****************
   854 ;; Defined at:
   855 ;;		line 79 in file "lcd.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  lcd             2   11[COMRAM] PTR struct .
   858 ;;		 -> NULL(0), PORTD(1), 
   859 ;;  x               1   13[COMRAM] unsigned char 
   860 ;;  y               1   14[COMRAM] unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  temp            1   18[COMRAM] unsigned char 
   863 ;;  a               1   17[COMRAM] unsigned char 
   864 ;;  z               1   16[COMRAM] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   874 ;;      Params:         4       0       0       0       0       0       0
   875 ;;      Locals:         3       0       0       0       0       0       0
   876 ;;      Temps:          1       0       0       0       0       0       0
   877 ;;      Totals:         8       0       0       0       0       0       0
   878 ;;Total ram usage:        8 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    4
   881 ;; This function calls:
   882 ;;		_lcd_cmd
   883 ;; This function is called by:
   884 ;;		_main
   885 ;;		_creditos
   886 ;;		_jogar
   887 ;;		_instrucoes
   888 ;;		_menu
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text2
   893  00026C                     __ptext2:
   894                           	opt callstack 0
   895  00026C                     _goto_XY:
   896                           	opt callstack 26
   897  00026C                     
   898                           ;lcd.c: 80:     unsigned char temp,z,a;;lcd.c: 81:     if(x == 1)
   899  00026C  046E               	decf	goto_XY@x^0,w,c
   900  00026E  A4D8               	btfss	status,2,c
   901  000270  EF3C  F001         	goto	u381
   902  000274  EF3E  F001         	goto	u380
   903  000278                     u381:
   904  000278  EF60  F001         	goto	l1405
   905  00027C                     u380:
   906  00027C                     
   907                           ;lcd.c: 82:     {;lcd.c: 83:        temp = 0x80 + y - 1;
   908  00027C  506F               	movf	goto_XY@y^0,w,c
   909  00027E  0F7F               	addlw	127
   910  000280  6E73               	movwf	goto_XY@temp^0,c
   911                           
   912                           ;lcd.c: 84:        z = temp>>4;
   913  000282  3873               	swapf	goto_XY@temp^0,w,c
   914  000284  0B0F               	andlw	15
   915  000286  6E71               	movwf	goto_XY@z^0,c
   916  000288                     l1397:
   917                           
   918                           ;lcd.c: 85:        a = temp;
   919  000288  C073  F072         	movff	goto_XY@temp,goto_XY@a
   920  00028C                     
   921                           ;lcd.c: 86:        lcd_cmd(lcd, z);
   922  00028C  C06C  F068         	movff	goto_XY@lcd,lcd_cmd@lcd
   923  000290  C06D  F069         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
   924  000294  C071  F06A         	movff	goto_XY@z,lcd_cmd@a
   925  000298  EC70  F003         	call	_lcd_cmd	;wreg free
   926  00029C                     
   927                           ;lcd.c: 87:        _delay((unsigned long)((1)*(16000000/4000.0)));
   928  00029C  0E06               	movlw	6
   929  00029E  6E70               	movwf	??_goto_XY^0,c
   930  0002A0  0E30               	movlw	48
   931  0002A2                     u797:
   932  0002A2  2EE8               	decfsz	wreg,f,c
   933  0002A4  D7FE               	bra	u797
   934  0002A6  2E70               	decfsz	??_goto_XY^0,f,c
   935  0002A8  D7FC               	bra	u797
   936  0002AA  D000               	nop2	
   937  0002AC                     
   938                           ;lcd.c: 88:        lcd_cmd(lcd, a);
   939  0002AC  C06C  F068         	movff	goto_XY@lcd,lcd_cmd@lcd
   940  0002B0  C06D  F069         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
   941  0002B4  C072  F06A         	movff	goto_XY@a,lcd_cmd@a
   942  0002B8  EC70  F003         	call	_lcd_cmd	;wreg free
   943                           
   944                           ;lcd.c: 89:     }
   945  0002BC  EF93  F001         	goto	l176
   946  0002C0                     l1405:
   947  0002C0  0E02               	movlw	2
   948  0002C2  186E               	xorwf	goto_XY@x^0,w,c
   949  0002C4  A4D8               	btfss	status,2,c
   950  0002C6  EF67  F001         	goto	u391
   951  0002CA  EF69  F001         	goto	u390
   952  0002CE                     u391:
   953  0002CE  EF71  F001         	goto	l1417
   954  0002D2                     u390:
   955  0002D2                     
   956                           ;lcd.c: 91:     {;lcd.c: 92:        temp = 0xC0 + y - 1;
   957  0002D2  506F               	movf	goto_XY@y^0,w,c
   958  0002D4  0FBF               	addlw	191
   959  0002D6  6E73               	movwf	goto_XY@temp^0,c
   960                           
   961                           ;lcd.c: 93:        z = temp>>4;
   962  0002D8  3873               	swapf	goto_XY@temp^0,w,c
   963  0002DA  0B0F               	andlw	15
   964  0002DC  6E71               	movwf	goto_XY@z^0,c
   965  0002DE  EF44  F001         	goto	l1397
   966  0002E2                     l1417:
   967  0002E2  0E03               	movlw	3
   968  0002E4  186E               	xorwf	goto_XY@x^0,w,c
   969  0002E6  A4D8               	btfss	status,2,c
   970  0002E8  EF78  F001         	goto	u401
   971  0002EC  EF7A  F001         	goto	u400
   972  0002F0                     u401:
   973  0002F0  EF82  F001         	goto	l1429
   974  0002F4                     u400:
   975  0002F4                     
   976                           ;lcd.c: 100:     {;lcd.c: 101:        temp = 0x90 + y - 1;
   977  0002F4  506F               	movf	goto_XY@y^0,w,c
   978  0002F6  0F8F               	addlw	143
   979  0002F8  6E73               	movwf	goto_XY@temp^0,c
   980                           
   981                           ;lcd.c: 102:        z = temp>>4;
   982  0002FA  3873               	swapf	goto_XY@temp^0,w,c
   983  0002FC  0B0F               	andlw	15
   984  0002FE  6E71               	movwf	goto_XY@z^0,c
   985  000300  EF44  F001         	goto	l1397
   986  000304                     l1429:
   987  000304  0E04               	movlw	4
   988  000306  186E               	xorwf	goto_XY@x^0,w,c
   989  000308  A4D8               	btfss	status,2,c
   990  00030A  EF89  F001         	goto	u411
   991  00030E  EF8B  F001         	goto	u410
   992  000312                     u411:
   993  000312  EF93  F001         	goto	l172
   994  000316                     u410:
   995  000316                     
   996                           ;lcd.c: 109:     {;lcd.c: 110:        temp = 0xD0 + y - 1;
   997  000316  506F               	movf	goto_XY@y^0,w,c
   998  000318  0FCF               	addlw	207
   999  00031A  6E73               	movwf	goto_XY@temp^0,c
  1000                           
  1001                           ;lcd.c: 111:        z = temp>>4;
  1002  00031C  3873               	swapf	goto_XY@temp^0,w,c
  1003  00031E  0B0F               	andlw	15
  1004  000320  6E71               	movwf	goto_XY@z^0,c
  1005  000322  EF44  F001         	goto	l1397
  1006  000326                     l172:
  1007  000326                     l176:
  1008  000326  0012               	return		;funcret
  1009  000328                     __end_of_goto_XY:
  1010                           	opt callstack 0
  1011                           
  1012 ;; *************** function _lcd_cmd *****************
  1013 ;; Defined at:
  1014 ;;		line 68 in file "lcd.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  lcd             2    7[COMRAM] PTR struct .
  1017 ;;		 -> NULL(0), PORTD(1), 
  1018 ;;  a               1    9[COMRAM] unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1030 ;;      Params:         3       0       0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0
  1032 ;;      Temps:          1       0       0       0       0       0       0
  1033 ;;      Totals:         4       0       0       0       0       0       0
  1034 ;;Total ram usage:        4 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    3
  1037 ;; This function calls:
  1038 ;;		_pulso
  1039 ;; This function is called by:
  1040 ;;		_goto_XY
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text3
  1045  0006E0                     __ptext3:
  1046                           	opt callstack 0
  1047  0006E0                     _lcd_cmd:
  1048                           	opt callstack 26
  1049  0006E0                     
  1050                           ;lcd.c: 69:     lcd->RS = 0;
  1051  0006E0  C068  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1052  0006E4  C069  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1053  0006E8  90DF               	bcf	indf2,0,c
  1054  0006EA                     
  1055                           ;lcd.c: 70:     lcd->data = (a);
  1056  0006EA  C06A  F06B         	movff	lcd_cmd@a,??_lcd_cmd
  1057  0006EE  C068  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1058  0006F2  C069  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1059  0006F6  3A6B               	swapf	??_lcd_cmd^0,f,c
  1060  0006F8  50DF               	movf	indf2,w,c
  1061  0006FA  186B               	xorwf	??_lcd_cmd^0,w,c
  1062  0006FC  0B0F               	andlw	-241
  1063  0006FE  186B               	xorwf	??_lcd_cmd^0,w,c
  1064  000700  6EDF               	movwf	indf2,c
  1065  000702                     
  1066                           ;lcd.c: 71:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1067  000702  0E06               	movlw	6
  1068  000704  6E6B               	movwf	??_lcd_cmd^0,c
  1069  000706  0E30               	movlw	48
  1070  000708                     u807:
  1071  000708  2EE8               	decfsz	wreg,f,c
  1072  00070A  D7FE               	bra	u807
  1073  00070C  2E6B               	decfsz	??_lcd_cmd^0,f,c
  1074  00070E  D7FC               	bra	u807
  1075  000710  D000               	nop2	
  1076  000712                     
  1077                           ;lcd.c: 73:     pulso(lcd);
  1078  000712  C068  F065         	movff	lcd_cmd@lcd,pulso@lcd
  1079  000716  C069  F066         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  1080  00071A  EC2F  F003         	call	_pulso	;wreg free
  1081  00071E  0012               	return		;funcret
  1082  000720                     __end_of_lcd_cmd:
  1083                           	opt callstack 0
  1084                           
  1085 ;; *************** function _function_set *****************
  1086 ;; Defined at:
  1087 ;;		line 22 in file "lcd.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  lcd             2    7[COMRAM] PTR struct .
  1090 ;;		 -> NULL(0), PORTD(1), 
  1091 ;;  data_lenght     1    9[COMRAM] unsigned char 
  1092 ;;  num_lines       1   10[COMRAM] unsigned char 
  1093 ;;  char_font       1   11[COMRAM] unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1105 ;;      Params:         5       0       0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0
  1107 ;;      Temps:          3       0       0       0       0       0       0
  1108 ;;      Totals:         8       0       0       0       0       0       0
  1109 ;;Total ram usage:        8 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    3
  1112 ;; This function calls:
  1113 ;;		_pulso
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text4
  1120  000192                     __ptext4:
  1121                           	opt callstack 0
  1122  000192                     _function_set:
  1123                           	opt callstack 27
  1124  000192                     
  1125                           ;lcd.c: 22: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 23:         
      +                          char num_lines, char char_font){;lcd.c: 24:     lcd->E = 0;
  1126  000192  C068  FFD9         	movff	function_set@lcd,fsr2l
  1127  000196  C069  FFDA         	movff	function_set@lcd+1,fsr2h
  1128  00019A  94DF               	bcf	indf2,2,c
  1129                           
  1130                           ;lcd.c: 25:     lcd->RS = 0;
  1131  00019C  C068  FFD9         	movff	function_set@lcd,fsr2l
  1132  0001A0  C069  FFDA         	movff	function_set@lcd+1,fsr2h
  1133  0001A4  90DF               	bcf	indf2,0,c
  1134                           
  1135                           ;lcd.c: 26:     lcd->R_W = 0;
  1136  0001A6  C068  FFD9         	movff	function_set@lcd,fsr2l
  1137  0001AA  C069  FFDA         	movff	function_set@lcd+1,fsr2h
  1138  0001AE  92DF               	bcf	indf2,1,c
  1139  0001B0                     
  1140                           ;lcd.c: 29:     lcd->data = 0x02;
  1141  0001B0  C068  FFD9         	movff	function_set@lcd,fsr2l
  1142  0001B4  C069  FFDA         	movff	function_set@lcd+1,fsr2h
  1143  0001B8  50DF               	movf	indf2,w,c
  1144  0001BA  0B0F               	andlw	-241
  1145  0001BC  0920               	iorlw	32
  1146  0001BE  6EDF               	movwf	indf2,c
  1147  0001C0                     
  1148                           ;lcd.c: 30:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1149  0001C0  0E06               	movlw	6
  1150  0001C2  6E6D               	movwf	??_function_set^0,c
  1151  0001C4  0E30               	movlw	48
  1152  0001C6                     u817:
  1153  0001C6  2EE8               	decfsz	wreg,f,c
  1154  0001C8  D7FE               	bra	u817
  1155  0001CA  2E6D               	decfsz	??_function_set^0,f,c
  1156  0001CC  D7FC               	bra	u817
  1157  0001CE  D000               	nop2	
  1158  0001D0                     
  1159                           ;lcd.c: 32:     pulso(lcd);
  1160  0001D0  C068  F065         	movff	function_set@lcd,pulso@lcd
  1161  0001D4  C069  F066         	movff	function_set@lcd+1,pulso@lcd+1
  1162  0001D8  EC2F  F003         	call	_pulso	;wreg free
  1163  0001DC                     
  1164                           ;lcd.c: 35:     lcd->data = 0x02|data_lenght;
  1165  0001DC  C06A  F06D         	movff	function_set@data_lenght,??_function_set
  1166  0001E0  0E02               	movlw	2
  1167  0001E2  126D               	iorwf	??_function_set^0,f,c
  1168  0001E4  C068  FFD9         	movff	function_set@lcd,fsr2l
  1169  0001E8  C069  FFDA         	movff	function_set@lcd+1,fsr2h
  1170  0001EC  3A6D               	swapf	??_function_set^0,f,c
  1171  0001EE  50DF               	movf	indf2,w,c
  1172  0001F0  186D               	xorwf	??_function_set^0,w,c
  1173  0001F2  0B0F               	andlw	-241
  1174  0001F4  186D               	xorwf	??_function_set^0,w,c
  1175  0001F6  6EDF               	movwf	indf2,c
  1176  0001F8                     
  1177                           ;lcd.c: 36:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1178  0001F8  0E06               	movlw	6
  1179  0001FA  6E6D               	movwf	??_function_set^0,c
  1180  0001FC  0E30               	movlw	48
  1181  0001FE                     u827:
  1182  0001FE  2EE8               	decfsz	wreg,f,c
  1183  000200  D7FE               	bra	u827
  1184  000202  2E6D               	decfsz	??_function_set^0,f,c
  1185  000204  D7FC               	bra	u827
  1186  000206  D000               	nop2	
  1187  000208                     
  1188                           ;lcd.c: 38:     pulso(lcd);
  1189  000208  C068  F065         	movff	function_set@lcd,pulso@lcd
  1190  00020C  C069  F066         	movff	function_set@lcd+1,pulso@lcd+1
  1191  000210  EC2F  F003         	call	_pulso	;wreg free
  1192  000214                     
  1193                           ;lcd.c: 42:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  1194  000214  C068  FFD9         	movff	function_set@lcd,fsr2l
  1195  000218  C069  FFDA         	movff	function_set@lcd+1,fsr2h
  1196  00021C  38DF               	swapf	indf2,w,c
  1197  00021E  0B0F               	andlw	15
  1198  000220  6E6D               	movwf	??_function_set^0,c
  1199  000222  C06C  F06E         	movff	function_set@char_font,??_function_set+1
  1200  000226  90D8               	bcf	status,0,c
  1201  000228  366E               	rlcf	(??_function_set+1)^0,f,c
  1202  00022A  90D8               	bcf	status,0,c
  1203  00022C  366E               	rlcf	(??_function_set+1)^0,f,c
  1204  00022E  386B               	swapf	function_set@num_lines^0,w,c
  1205  000230  42E8               	rrncf	wreg,f,c
  1206  000232  0BF8               	andlw	248
  1207  000234  106E               	iorwf	(??_function_set+1)^0,w,c
  1208  000236  106D               	iorwf	??_function_set^0,w,c
  1209  000238  6E6F               	movwf	(??_function_set+2)^0,c
  1210  00023A  C068  FFD9         	movff	function_set@lcd,fsr2l
  1211  00023E  C069  FFDA         	movff	function_set@lcd+1,fsr2h
  1212  000242  3A6F               	swapf	(??_function_set+2)^0,f,c
  1213  000244  50DF               	movf	indf2,w,c
  1214  000246  186F               	xorwf	(??_function_set+2)^0,w,c
  1215  000248  0B0F               	andlw	-241
  1216  00024A  186F               	xorwf	(??_function_set+2)^0,w,c
  1217  00024C  6EDF               	movwf	indf2,c
  1218  00024E                     
  1219                           ;lcd.c: 43:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1220  00024E  0E06               	movlw	6
  1221  000250  6E6D               	movwf	??_function_set^0,c
  1222  000252  0E30               	movlw	48
  1223  000254                     u837:
  1224  000254  2EE8               	decfsz	wreg,f,c
  1225  000256  D7FE               	bra	u837
  1226  000258  2E6D               	decfsz	??_function_set^0,f,c
  1227  00025A  D7FC               	bra	u837
  1228  00025C  D000               	nop2	
  1229  00025E                     
  1230                           ;lcd.c: 45:     pulso(lcd);
  1231  00025E  C068  F065         	movff	function_set@lcd,pulso@lcd
  1232  000262  C069  F066         	movff	function_set@lcd+1,pulso@lcd+1
  1233  000266  EC2F  F003         	call	_pulso	;wreg free
  1234  00026A  0012               	return		;funcret
  1235  00026C                     __end_of_function_set:
  1236                           	opt callstack 0
  1237                           
  1238 ;; *************** function _entry_mode_set *****************
  1239 ;; Defined at:
  1240 ;;		line 120 in file "lcd.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  lcd             2    7[COMRAM] PTR struct .
  1243 ;;		 -> NULL(0), PORTD(1), 
  1244 ;;  move_directi    1    9[COMRAM] unsigned char 
  1245 ;;  display_shif    1   10[COMRAM] unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1257 ;;      Params:         4       0       0       0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0
  1259 ;;      Temps:          1       0       0       0       0       0       0
  1260 ;;      Totals:         5       0       0       0       0       0       0
  1261 ;;Total ram usage:        5 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    3
  1264 ;; This function calls:
  1265 ;;		_pulso
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text5
  1272  00044E                     __ptext5:
  1273                           	opt callstack 0
  1274  00044E                     _entry_mode_set:
  1275                           	opt callstack 27
  1276  00044E                     
  1277                           ;lcd.c: 121:     lcd->E = 0;
  1278  00044E  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1279  000452  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1280  000456  94DF               	bcf	indf2,2,c
  1281                           
  1282                           ;lcd.c: 122:     lcd->RS = 0;
  1283  000458  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1284  00045C  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1285  000460  90DF               	bcf	indf2,0,c
  1286                           
  1287                           ;lcd.c: 123:     lcd->R_W = 0;
  1288  000462  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1289  000466  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1290  00046A  92DF               	bcf	indf2,1,c
  1291  00046C                     
  1292                           ;lcd.c: 125:     lcd->data = 0x00;
  1293  00046C  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1294  000470  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1295  000474  0E0F               	movlw	-241
  1296  000476  16DF               	andwf	indf2,f,c
  1297  000478                     
  1298                           ;lcd.c: 126:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1299  000478  0E06               	movlw	6
  1300  00047A  6E6C               	movwf	??_entry_mode_set^0,c
  1301  00047C  0E30               	movlw	48
  1302  00047E                     u847:
  1303  00047E  2EE8               	decfsz	wreg,f,c
  1304  000480  D7FE               	bra	u847
  1305  000482  2E6C               	decfsz	??_entry_mode_set^0,f,c
  1306  000484  D7FC               	bra	u847
  1307  000486  D000               	nop2	
  1308  000488                     
  1309                           ;lcd.c: 128:     pulso(lcd);
  1310  000488  C068  F065         	movff	entry_mode_set@lcd,pulso@lcd
  1311  00048C  C069  F066         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1312  000490  EC2F  F003         	call	_pulso	;wreg free
  1313  000494                     
  1314                           ;lcd.c: 131:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  1315  000494  506A               	movf	entry_mode_set@move_direction^0,w,c
  1316  000496  246A               	addwf	entry_mode_set@move_direction^0,w,c
  1317  000498  106B               	iorwf	entry_mode_set@display_shift^0,w,c
  1318  00049A  6E6C               	movwf	??_entry_mode_set^0,c
  1319  00049C  0E04               	movlw	4
  1320  00049E  126C               	iorwf	??_entry_mode_set^0,f,c
  1321  0004A0  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1322  0004A4  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1323  0004A8  3A6C               	swapf	??_entry_mode_set^0,f,c
  1324  0004AA  50DF               	movf	indf2,w,c
  1325  0004AC  186C               	xorwf	??_entry_mode_set^0,w,c
  1326  0004AE  0B0F               	andlw	-241
  1327  0004B0  186C               	xorwf	??_entry_mode_set^0,w,c
  1328  0004B2  6EDF               	movwf	indf2,c
  1329  0004B4                     
  1330                           ;lcd.c: 132:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1331  0004B4  0E06               	movlw	6
  1332  0004B6  6E6C               	movwf	??_entry_mode_set^0,c
  1333  0004B8  0E30               	movlw	48
  1334  0004BA                     u857:
  1335  0004BA  2EE8               	decfsz	wreg,f,c
  1336  0004BC  D7FE               	bra	u857
  1337  0004BE  2E6C               	decfsz	??_entry_mode_set^0,f,c
  1338  0004C0  D7FC               	bra	u857
  1339  0004C2  D000               	nop2	
  1340  0004C4                     
  1341                           ;lcd.c: 134:     pulso(lcd);
  1342  0004C4  C068  F065         	movff	entry_mode_set@lcd,pulso@lcd
  1343  0004C8  C069  F066         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1344  0004CC  EC2F  F003         	call	_pulso	;wreg free
  1345  0004D0  0012               	return		;funcret
  1346  0004D2                     __end_of_entry_mode_set:
  1347                           	opt callstack 0
  1348                           
  1349 ;; *************** function _display_onoff_control *****************
  1350 ;; Defined at:
  1351 ;;		line 48 in file "lcd.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  lcd             2    7[COMRAM] PTR struct .
  1354 ;;		 -> NULL(0), PORTD(1), 
  1355 ;;  display_on      1    9[COMRAM] unsigned char 
  1356 ;;  cursor_on       1   10[COMRAM] unsigned char 
  1357 ;;  blink           1   11[COMRAM] unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1369 ;;      Params:         5       0       0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0       0       0
  1371 ;;      Temps:          2       0       0       0       0       0       0
  1372 ;;      Totals:         7       0       0       0       0       0       0
  1373 ;;Total ram usage:        7 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    3
  1376 ;; This function calls:
  1377 ;;		_pulso
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text6
  1384  0003C0                     __ptext6:
  1385                           	opt callstack 0
  1386  0003C0                     _display_onoff_control:
  1387                           	opt callstack 27
  1388  0003C0                     
  1389                           ;lcd.c: 48: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 49: 
      +                                  char cursor_on, char blink){;lcd.c: 50:     lcd->E = 0;
  1390  0003C0  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1391  0003C4  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1392  0003C8  94DF               	bcf	indf2,2,c
  1393                           
  1394                           ;lcd.c: 51:     lcd->RS = 0;
  1395  0003CA  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1396  0003CE  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1397  0003D2  90DF               	bcf	indf2,0,c
  1398                           
  1399                           ;lcd.c: 52:     lcd->R_W = 0;
  1400  0003D4  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1401  0003D8  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1402  0003DC  92DF               	bcf	indf2,1,c
  1403  0003DE                     
  1404                           ;lcd.c: 55:     lcd->data = 0x00;
  1405  0003DE  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1406  0003E2  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1407  0003E6  0E0F               	movlw	-241
  1408  0003E8  16DF               	andwf	indf2,f,c
  1409  0003EA                     
  1410                           ;lcd.c: 56:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1411  0003EA  0E06               	movlw	6
  1412  0003EC  6E6D               	movwf	??_display_onoff_control^0,c
  1413  0003EE  0E30               	movlw	48
  1414  0003F0                     u867:
  1415  0003F0  2EE8               	decfsz	wreg,f,c
  1416  0003F2  D7FE               	bra	u867
  1417  0003F4  2E6D               	decfsz	??_display_onoff_control^0,f,c
  1418  0003F6  D7FC               	bra	u867
  1419  0003F8  D000               	nop2	
  1420  0003FA                     
  1421                           ;lcd.c: 58:     pulso(lcd);
  1422  0003FA  C068  F065         	movff	display_onoff_control@lcd,pulso@lcd
  1423  0003FE  C069  F066         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1424  000402  EC2F  F003         	call	_pulso	;wreg free
  1425  000406                     
  1426                           ;lcd.c: 62:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  1427  000406  90D8               	bcf	status,0,c
  1428  000408  346B               	rlcf	display_onoff_control@cursor_on^0,w,c
  1429  00040A  6E6D               	movwf	??_display_onoff_control^0,c
  1430  00040C  446A               	rlncf	display_onoff_control@display_on^0,w,c
  1431  00040E  46E8               	rlncf	wreg,f,c
  1432  000410  0BFC               	andlw	252
  1433  000412  106D               	iorwf	??_display_onoff_control^0,w,c
  1434  000414  106C               	iorwf	display_onoff_control@blink^0,w,c
  1435  000416  6E6E               	movwf	(??_display_onoff_control+1)^0,c
  1436  000418  0E08               	movlw	8
  1437  00041A  126E               	iorwf	(??_display_onoff_control+1)^0,f,c
  1438  00041C  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1439  000420  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1440  000424  3A6E               	swapf	(??_display_onoff_control+1)^0,f,c
  1441  000426  50DF               	movf	indf2,w,c
  1442  000428  186E               	xorwf	(??_display_onoff_control+1)^0,w,c
  1443  00042A  0B0F               	andlw	-241
  1444  00042C  186E               	xorwf	(??_display_onoff_control+1)^0,w,c
  1445  00042E  6EDF               	movwf	indf2,c
  1446  000430                     
  1447                           ;lcd.c: 63:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1448  000430  0E06               	movlw	6
  1449  000432  6E6D               	movwf	??_display_onoff_control^0,c
  1450  000434  0E30               	movlw	48
  1451  000436                     u877:
  1452  000436  2EE8               	decfsz	wreg,f,c
  1453  000438  D7FE               	bra	u877
  1454  00043A  2E6D               	decfsz	??_display_onoff_control^0,f,c
  1455  00043C  D7FC               	bra	u877
  1456  00043E  D000               	nop2	
  1457  000440                     
  1458                           ;lcd.c: 65:     pulso(lcd);
  1459  000440  C068  F065         	movff	display_onoff_control@lcd,pulso@lcd
  1460  000444  C069  F066         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1461  000448  EC2F  F003         	call	_pulso	;wreg free
  1462  00044C  0012               	return		;funcret
  1463  00044E                     __end_of_display_onoff_control:
  1464                           	opt callstack 0
  1465                           
  1466 ;; *************** function _clear_display *****************
  1467 ;; Defined at:
  1468 ;;		line 156 in file "lcd.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  lcd             2    7[COMRAM] PTR struct .
  1471 ;;		 -> NULL(0), PORTD(1), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1483 ;;      Params:         2       0       0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0
  1485 ;;      Temps:          1       0       0       0       0       0       0
  1486 ;;      Totals:         3       0       0       0       0       0       0
  1487 ;;Total ram usage:        3 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    3
  1490 ;; This function calls:
  1491 ;;		_pulso
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;;		_creditos
  1495 ;;		_instrucoes
  1496 ;;		_menu
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text7
  1501  0004D2                     __ptext7:
  1502                           	opt callstack 0
  1503  0004D2                     _clear_display:
  1504                           	opt callstack 27
  1505  0004D2                     
  1506                           ;lcd.c: 157:     lcd->E = 0;
  1507  0004D2  C068  FFD9         	movff	clear_display@lcd,fsr2l
  1508  0004D6  C069  FFDA         	movff	clear_display@lcd+1,fsr2h
  1509  0004DA  94DF               	bcf	indf2,2,c
  1510                           
  1511                           ;lcd.c: 158:     lcd->RS = 0;
  1512  0004DC  C068  FFD9         	movff	clear_display@lcd,fsr2l
  1513  0004E0  C069  FFDA         	movff	clear_display@lcd+1,fsr2h
  1514  0004E4  90DF               	bcf	indf2,0,c
  1515                           
  1516                           ;lcd.c: 159:     lcd->R_W = 0;
  1517  0004E6  C068  FFD9         	movff	clear_display@lcd,fsr2l
  1518  0004EA  C069  FFDA         	movff	clear_display@lcd+1,fsr2h
  1519  0004EE  92DF               	bcf	indf2,1,c
  1520  0004F0                     
  1521                           ;lcd.c: 162:     lcd->data = 0x0;
  1522  0004F0  C068  FFD9         	movff	clear_display@lcd,fsr2l
  1523  0004F4  C069  FFDA         	movff	clear_display@lcd+1,fsr2h
  1524  0004F8  0E0F               	movlw	-241
  1525  0004FA  16DF               	andwf	indf2,f,c
  1526  0004FC                     
  1527                           ;lcd.c: 163:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1528  0004FC  0E06               	movlw	6
  1529  0004FE  6E6A               	movwf	??_clear_display^0,c
  1530  000500  0E30               	movlw	48
  1531  000502                     u887:
  1532  000502  2EE8               	decfsz	wreg,f,c
  1533  000504  D7FE               	bra	u887
  1534  000506  2E6A               	decfsz	??_clear_display^0,f,c
  1535  000508  D7FC               	bra	u887
  1536  00050A  D000               	nop2	
  1537  00050C                     
  1538                           ;lcd.c: 165:     pulso(lcd);
  1539  00050C  C068  F065         	movff	clear_display@lcd,pulso@lcd
  1540  000510  C069  F066         	movff	clear_display@lcd+1,pulso@lcd+1
  1541  000514  EC2F  F003         	call	_pulso	;wreg free
  1542  000518                     
  1543                           ;lcd.c: 168:     lcd->data = 0x1;
  1544  000518  C068  FFD9         	movff	clear_display@lcd,fsr2l
  1545  00051C  C069  FFDA         	movff	clear_display@lcd+1,fsr2h
  1546  000520  50DF               	movf	indf2,w,c
  1547  000522  0B0F               	andlw	-241
  1548  000524  0910               	iorlw	16
  1549  000526  6EDF               	movwf	indf2,c
  1550  000528                     
  1551                           ;lcd.c: 169:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1552  000528  0E06               	movlw	6
  1553  00052A  6E6A               	movwf	??_clear_display^0,c
  1554  00052C  0E30               	movlw	48
  1555  00052E                     u897:
  1556  00052E  2EE8               	decfsz	wreg,f,c
  1557  000530  D7FE               	bra	u897
  1558  000532  2E6A               	decfsz	??_clear_display^0,f,c
  1559  000534  D7FC               	bra	u897
  1560  000536  D000               	nop2	
  1561  000538                     
  1562                           ;lcd.c: 171:     pulso(lcd);
  1563  000538  C068  F065         	movff	clear_display@lcd,pulso@lcd
  1564  00053C  C069  F066         	movff	clear_display@lcd+1,pulso@lcd+1
  1565  000540  EC2F  F003         	call	_pulso	;wreg free
  1566  000544  0012               	return		;funcret
  1567  000546                     __end_of_clear_display:
  1568                           	opt callstack 0
  1569                           
  1570 ;; *************** function _pulso *****************
  1571 ;; Defined at:
  1572 ;;		line 11 in file "lcd.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  lcd             2    4[COMRAM] PTR struct .
  1575 ;;		 -> NULL(0), PORTD(1), 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1587 ;;      Params:         2       0       0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0
  1589 ;;      Temps:          1       0       0       0       0       0       0
  1590 ;;      Totals:         3       0       0       0       0       0       0
  1591 ;;Total ram usage:        3 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    2
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_function_set
  1598 ;;		_display_onoff_control
  1599 ;;		_lcd_cmd
  1600 ;;		_entry_mode_set
  1601 ;;		_write_char
  1602 ;;		_clear_display
  1603 ;;		_return_home
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text8
  1608  00065E                     __ptext8:
  1609                           	opt callstack 0
  1610  00065E                     _pulso:
  1611                           	opt callstack 27
  1612  00065E                     
  1613                           ;lcd.c: 13:     lcd->E = 1;
  1614  00065E  C065  FFD9         	movff	pulso@lcd,fsr2l
  1615  000662  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1616  000666  84DF               	bsf	indf2,2,c
  1617  000668                     
  1618                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1619  000668  0E06               	movlw	6
  1620  00066A  6E67               	movwf	??_pulso^0,c
  1621  00066C  0E30               	movlw	48
  1622  00066E                     u907:
  1623  00066E  2EE8               	decfsz	wreg,f,c
  1624  000670  D7FE               	bra	u907
  1625  000672  2E67               	decfsz	??_pulso^0,f,c
  1626  000674  D7FC               	bra	u907
  1627  000676  D000               	nop2	
  1628  000678                     
  1629                           ;lcd.c: 17:     lcd->E = 0;
  1630  000678  C065  FFD9         	movff	pulso@lcd,fsr2l
  1631  00067C  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1632  000680  94DF               	bcf	indf2,2,c
  1633                           
  1634                           ;lcd.c: 18:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1635  000682  0E1A               	movlw	26
  1636  000684  6E67               	movwf	??_pulso^0,c
  1637  000686  0EF8               	movlw	248
  1638  000688                     u917:
  1639  000688  2EE8               	decfsz	wreg,f,c
  1640  00068A  D7FE               	bra	u917
  1641  00068C  2E67               	decfsz	??_pulso^0,f,c
  1642  00068E  D7FC               	bra	u917
  1643  000690  D000               	nop2	
  1644  000692                     
  1645                           ;lcd.c: 19:     lcd->data = 0x00;
  1646  000692  C065  FFD9         	movff	pulso@lcd,fsr2l
  1647  000696  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1648  00069A  0E0F               	movlw	-241
  1649  00069C  16DF               	andwf	indf2,f,c
  1650  00069E  0012               	return		;funcret
  1651  0006A0                     __end_of_pulso:
  1652                           	opt callstack 0
  1653                           
  1654 ;; *************** function _int_handler *****************
  1655 ;; Defined at:
  1656 ;;		line 22 in file "main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         0       0       0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0
  1673 ;;      Totals:         2       0       0       0       0       0       0
  1674 ;;Total ram usage:        2 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		_le_entrada
  1679 ;; This function is called by:
  1680 ;;		Interrupt level 2
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	intcode
  1685  000008                     __pintcode:
  1686                           	opt callstack 0
  1687  000008                     _int_handler:
  1688                           	opt callstack 26
  1689                           
  1690                           ;incstack = 0
  1691  000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1692  00000A  ED90  F003         	call	int_func,f	;refresh shadow registers
  1693                           
  1694                           	psect	intcode_body
  1695  000720                     __pintcode_body:
  1696                           	opt callstack 26
  1697  000720                     int_func:
  1698                           	opt callstack 26
  1699  000720  0006               	pop		; remove dummy address from shadow register refresh
  1700  000722  CFD9 F063          	movff	fsr2l,??_int_handler
  1701  000726  CFDA F064          	movff	fsr2h,??_int_handler+1
  1702  00072A                     
  1703                           ;main.c: 24:      if(INTCONbits.TMR0IF == 1){
  1704  00072A  A4F2               	btfss	242,2,c	;volatile
  1705  00072C  EF9A  F003         	goto	i2u42_41
  1706  000730  EF9C  F003         	goto	i2u42_40
  1707  000734                     i2u42_41:
  1708  000734  EFA5  F003         	goto	i2l44
  1709  000738                     i2u42_40:
  1710  000738                     
  1711                           ;main.c: 25:         TMR0L = 0x63;
  1712  000738  0E63               	movlw	99
  1713  00073A  6ED6               	movwf	214,c	;volatile
  1714  00073C                     
  1715                           ;main.c: 26:         le_entrada(botoes);
  1716  00073C  C078  F061         	movff	_botoes,le_entrada@botoes
  1717  000740  C079  F062         	movff	_botoes+1,le_entrada@botoes+1
  1718  000744  ECA3  F002         	call	_le_entrada	;wreg free
  1719  000748                     
  1720                           ;main.c: 27:         INTCONbits.TMR0IF = 0;
  1721  000748  94F2               	bcf	242,2,c	;volatile
  1722  00074A                     i2l44:
  1723  00074A  C064  FFDA         	movff	??_int_handler+1,fsr2h
  1724  00074E  C063  FFD9         	movff	??_int_handler,fsr2l
  1725  000752  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1726  000754  0011               	retfie		f
  1727  000756                     __end_of_int_handler:
  1728                           	opt callstack 0
  1729                           
  1730 ;; *************** function _le_entrada *****************
  1731 ;; Defined at:
  1732 ;;		line 4 in file "keyboard.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  botoes          2    0[COMRAM] PTR struct .
  1735 ;;		 -> NULL(0), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		fsr2l, fsr2h
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1747 ;;      Params:         2       0       0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0
  1750 ;;      Totals:         2       0       0       0       0       0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_int_handler
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text10
  1761  000546                     __ptext10:
  1762                           	opt callstack 0
  1763  000546                     _le_entrada:
  1764                           	opt callstack 26
  1765  000546                     
  1766                           ;keyboard.c: 5:     PORTBbits.RB7 = 1;
  1767  000546  8E81               	bsf	129,7,c	;volatile
  1768  000548                     
  1769                           ;keyboard.c: 6:     botoes->U = PORTBbits.RB1;
  1770  000548  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1771  00054C  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1772  000550  80DF               	bsf	indf2,0,c
  1773  000552  A281               	btfss	129,1,c	;volatile
  1774  000554  90DF               	bcf	indf2,0,c
  1775  000556                     
  1776                           ;keyboard.c: 7:     PORTBbits.RB7 = 0;
  1777  000556  9E81               	bcf	129,7,c	;volatile
  1778  000558                     
  1779                           ;keyboard.c: 9:     PORTBbits.RB6 = 1;
  1780  000558  8C81               	bsf	129,6,c	;volatile
  1781                           
  1782                           ;keyboard.c: 10:     botoes->L = PORTBbits.RB0;
  1783  00055A  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1784  00055E  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1785  000562  84DF               	bsf	indf2,2,c
  1786  000564  A081               	btfss	129,0,c	;volatile
  1787  000566  94DF               	bcf	indf2,2,c
  1788                           
  1789                           ;keyboard.c: 11:     botoes->R = PORTBbits.RB2;
  1790  000568  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1791  00056C  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1792  000570  86DF               	bsf	indf2,3,c
  1793  000572  A481               	btfss	129,2,c	;volatile
  1794  000574  96DF               	bcf	indf2,3,c
  1795  000576                     
  1796                           ;keyboard.c: 12:     PORTBbits.RB6 = 0;
  1797  000576  9C81               	bcf	129,6,c	;volatile
  1798  000578                     
  1799                           ;keyboard.c: 14:     PORTBbits.RB5 = 1;
  1800  000578  8A81               	bsf	129,5,c	;volatile
  1801                           
  1802                           ;keyboard.c: 15:     botoes->D = PORTBbits.RB1;
  1803  00057A  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1804  00057E  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1805  000582  82DF               	bsf	indf2,1,c
  1806  000584  A281               	btfss	129,1,c	;volatile
  1807  000586  92DF               	bcf	indf2,1,c
  1808  000588                     
  1809                           ;keyboard.c: 16:     PORTBbits.RB5 = 0;
  1810  000588  9A81               	bcf	129,5,c	;volatile
  1811  00058A                     
  1812                           ;keyboard.c: 18:     PORTBbits.RB4 = 1;
  1813  00058A  8881               	bsf	129,4,c	;volatile
  1814                           
  1815                           ;keyboard.c: 19:     botoes->Enter = PORTBbits.RB0;
  1816  00058C  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1817  000590  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1818  000594  88DF               	bsf	indf2,4,c
  1819  000596  A081               	btfss	129,0,c	;volatile
  1820  000598  98DF               	bcf	indf2,4,c
  1821                           
  1822                           ;keyboard.c: 20:     botoes->Esc = PORTBbits.RB2;
  1823  00059A  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1824  00059E  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1825  0005A2  8ADF               	bsf	indf2,5,c
  1826  0005A4  A481               	btfss	129,2,c	;volatile
  1827  0005A6  9ADF               	bcf	indf2,5,c
  1828  0005A8                     
  1829                           ;keyboard.c: 21:     PORTBbits.RB4 = 0;
  1830  0005A8  9881               	bcf	129,4,c	;volatile
  1831  0005AA  0012               	return		;funcret
  1832  0005AC                     __end_of_le_entrada:
  1833                           	opt callstack 0
  1834  0000                     
  1835                           	psect	rparam
  1836  0000                     
  1837                           	psect	temp
  1838  00007A                     btemp:
  1839                           	opt callstack 0
  1840  00007A                     	ds	1
  1841  0000                     int$flags	set	btemp
  1842  0000                     wtemp8	set	btemp+1
  1843  0000                     ttemp5	set	btemp+1
  1844  0000                     ttemp6	set	btemp+4
  1845  0000                     ttemp7	set	btemp+8
  1846                           tosu	equ	0xFFF
  1847                           tosh	equ	0xFFE
  1848                           tosl	equ	0xFFD
  1849                           stkptr	equ	0xFFC
  1850                           pclatu	equ	0xFFB
  1851                           pclath	equ	0xFFA
  1852                           pcl	equ	0xFF9
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodh	equ	0xFF4
  1858                           prodl	equ	0xFF3
  1859                           indf0	equ	0xFEF
  1860                           postinc0	equ	0xFEE
  1861                           postdec0	equ	0xFED
  1862                           preinc0	equ	0xFEC
  1863                           plusw0	equ	0xFEB
  1864                           fsr0h	equ	0xFEA
  1865                           fsr0l	equ	0xFE9
  1866                           wreg	equ	0xFE8
  1867                           indf1	equ	0xFE7
  1868                           postinc1	equ	0xFE6
  1869                           postdec1	equ	0xFE5
  1870                           preinc1	equ	0xFE4
  1871                           plusw1	equ	0xFE3
  1872                           fsr1h	equ	0xFE2
  1873                           fsr1l	equ	0xFE1
  1874                           bsr	equ	0xFE0
  1875                           indf2	equ	0xFDF
  1876                           postinc2	equ	0xFDE
  1877                           postdec2	equ	0xFDD
  1878                           preinc2	equ	0xFDC
  1879                           plusw2	equ	0xFDB
  1880                           fsr2h	equ	0xFDA
  1881                           fsr2l	equ	0xFD9
  1882                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        160
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21     121
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    le_entrada@botoes	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    clear_display@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    botoes	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_goto_XY
    _write_char->_pulso
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso
    _clear_display->_pulso

Critical Paths under _int_handler in COMRAM

    _int_handler->_le_entrada

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17706
                                             19 COMRAM     2     2      0
                      _clear_display
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _write_char                                           4     1      3    3934
                                              7 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _goto_XY                                              8     4      4    7026
                                             11 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              4     1      3    2434
                                              7 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1720
                                              7 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1556
                                              7 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1654
                                              7 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _clear_display                                        3     1      2    1816
                                              7 COMRAM     3     1      2
                              _pulso
 ---------------------------------------------------------------------------------
 (2) _pulso                                                3     1      2    1130
                                              4 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _int_handler                                          2     2      0     208
                                              2 COMRAM     2     2      0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (5) _le_entrada                                           2     0      2     208
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear_display
     _pulso
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _goto_XY
     _lcd_cmd
       _pulso
   _write_char
     _pulso

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     15      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9      15        0.0%
DATA                 0      0      B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 10 23:43:50 2020

         ?_display_onoff_control 0068                      __CFG_OSC$HS 000000  
                            l160 026A                              l163 044C  
                            l172 0326                              l157 069E  
                            l166 071E                              l182 03BE  
                            l176 0326                              l185 0544  
                            l179 04D0                              u400 02F4  
                            u401 02F0                              u410 0316  
                            u411 0312                              u430 0094  
                            u431 0090                              u440 00CE  
                            u441 00CA                              u450 0108  
                            u451 0104                              u380 027C  
                            u460 0142                              u381 0278  
                            u461 013E                              u390 02D2  
                            u391 02CE                              u807 0708  
                            u817 01C6                              u907 066E  
                            u827 01FE                              u917 0688  
                            u837 0254                              u847 047E  
                            u767 0170                              u857 04BA  
                            u777 036A                              u867 03F0  
                            u787 039E                              u877 0436  
                            u797 02A2                              u887 0502  
                            u897 052E                              _lcd 0076  
                            wreg 000FE8                    write_char@lcd 0068  
                  creditos@F3056 0051                    creditos@F3059 0041  
                   __CFG_WDT$OFF 000000                             l1311 065E  
                           l1313 0668                             l1321 06EA  
                           l1401 029C                             l1315 0678  
                           l1323 0702                             l1403 02AC  
                           l1317 0692                             l1325 0712  
                           l1405 02C0                             l1501 00CE  
                           l1351 01D0                             l1319 06E0  
                           l1431 0316                             l1407 02D2  
                           l1511 0166                             l1503 00F2  
                           l1361 024E                             l1353 01DC  
                           l1345 0192                             l1417 02E2  
                           l1441 0328                             l1513 017E  
                           l1505 0108                             l1371 03FA  
                           l1363 025E                             l1355 01F8  
                           l1347 01B0                             l1419 02F4  
                           l1451 0398                             l1443 0346  
                           l1507 012C                             l1461 050C  
                           l1373 0406                             l1365 03C0  
                           l1381 046C                             l1357 0208  
                           l1349 01C0                             l1429 0304  
                           l1453 03A8                             l1445 0364  
                           l1509 0142                             l1463 0518  
                           l1455 04D2                             l1375 0430  
                           l1367 03DE                             l1391 04C4  
                           l1383 0478                             l1359 0214  
                           l1447 0374                             l1465 0528  
                           l1457 04F0                             l1377 0440  
                           l1369 03EA                             l1385 0488  
                           l1393 026C                             l1449 0380  
                           l1481 002C                             l1467 0538  
                           l1459 04FC                             l1387 0494  
                           l1379 044E                             l1395 027C  
                           l1491 0068                             l1483 002E  
                           l1389 04B4                             l1397 0288  
                           l1493 007C                             l1485 0030  
                           l1477 0012                             l1399 028C  
                           l1495 007E                             l1487 0038  
                           l1479 002A                             l1497 0094  
                           l1489 0050                             l1499 00B8  
                           i2l44 074A                             _main 0012  
               le_entrada@botoes 0061                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 007A  
                           start 000E            function_set@num_lines 006B  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                function_set@lcd 0068                            ?_main 0061  
                          _T0CON 000FD5                            i2l193 05AA  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0061  
                __end_of_lcd_cmd 0720                  __end_of_goto_XY 0328  
                          _pulso 065E                            tablat 000FF5  
                          ttemp5 007B                            ttemp6 007E  
                          ttemp7 0082                            status 000FD8  
                          wtemp8 007B                  __initialization 060C  
                   __end_of_main 0192                           ??_main 0074  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         ?_pulso 0065                           i2l1331 0556  
                         i2l1341 058A                           i2l1333 0558  
                         i2l1343 05A8                           i2l1335 0576  
                         i2l1327 0546                           i2l1337 0578  
                         i2l1329 0548                           i2l1339 0588  
                         i2l1471 0738                           i2l1473 073C  
                         i2l1475 0748                           i2l1469 072A  
          __end_of_clear_display 0546                      goto_XY@temp 0073  
                         _botoes 0078                    ?_function_set 0068  
                      ??_lcd_cmd 006B                        ??_goto_XY 0070  
                   __pdataCOMRAM 0001                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
       display_onoff_control@lcd 0068                       __accesstop 0080  
        __end_of__initialization 0650                    ___rparam_used 000001  
        ??_display_onoff_control 006D                   __pcstackCOMRAM 0061  
                   __pidataBANK0 06A0                    __end_of_pulso 06A0  
                 ??_function_set 006D             __size_of_int_handler 074E  
                        ??_pulso 0067                       __pnvCOMRAM 0076  
    entry_mode_set@display_shift 006B                          i2u42_40 0738  
                        i2u42_41 0734                       _le_entrada 0546  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 006B                          __Lparam 0000  
                        __pcinit 060C                          __ramtop 0600  
                        __ptext0 0012                          __ptext1 0328  
                        __ptext2 026C                          __ptext3 06E0  
                        __ptext4 0192                          __ptext5 044E  
                        __ptext6 03C0                          __ptext7 04D2  
                        __ptext8 065E                          _lcd_cmd 06E0  
                      _T0CONbits 000FD5                          _goto_XY 026C  
                 __pintcode_body 0720             end_of_initialization 0650  
           __end_of_function_set 026C                    __Lmediumconst 0000  
                        int_func 0720                          postdec1 000FE5  
                        postinc0 000FEE                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0068                      ?_le_entrada 0061  
 __size_of_display_onoff_control 008E    __end_of_display_onoff_control 044E  
                     _write_char 0328                    __pidataCOMRAM 05AC  
         __size_of_clear_display 0074              start_initialization 060C  
                 _entry_mode_set 044E                       goto_XY@lcd 006C  
                    __pdataBANK0 0080              __size_of_le_entrada 0066  
                    __pbssCOMRAM 0078                    ??_int_handler 0063  
          __size_of_function_set 00DA                  instrucoes@F3083 0031  
                instrucoes@F3092 0001                  instrucoes@F3086 0021  
                instrucoes@F3089 0011           __end_of_entry_mode_set 04D2  
                  _clear_display 04D2                        __pintcode 0008  
                    ?_write_char 0068                         ?_lcd_cmd 0068  
                   _function_set 0192                         ?_goto_XY 006C  
               clear_display@lcd 0068                   __size_of_pulso 0042  
            __end_of_int_handler 0756                  ?_entry_mode_set 0068  
                 ?_clear_display 0068     entry_mode_set@move_direction 006A  
display_onoff_control@display_on 006A       display_onoff_control@blink 006C  
                    write_char@c 006A                        menu@F3101 00B0  
                      menu@F3110 0080                        menu@F3104 00A0  
                      menu@F3107 0090                     ??_le_entrada 0063  
                      copy_data0 0620                        copy_data1 0640  
            __size_of_write_char 0098                         __Hrparam 0000  
                       __Lrparam 0000                entry_mode_set@lcd 0068  
             __end_of_le_entrada 05AC                 __size_of_lcd_cmd 0040  
               __size_of_goto_XY 00BC                      _int_handler 0008  
                       __ptext10 0546                  ??_clear_display 006A  
                  __size_of_main 0180                         int$flags 007A  
                       lcd_cmd@a 006A            _display_onoff_control 03C0  
                     _INTCONbits 000FF2                         goto_XY@a 0072  
                       goto_XY@x 006E                         goto_XY@y 006F  
                       goto_XY@z 0071                         intlevel2 0000  
        function_set@data_lenght 006A                     ??_write_char 006B  
                       pulso@lcd 0065                 ??_entry_mode_set 006C  
          function_set@char_font 006C               __end_of_write_char 03C0  
