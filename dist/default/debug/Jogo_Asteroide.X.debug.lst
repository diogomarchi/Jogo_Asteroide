

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 11:16:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.10
    35                           ; Generated 31/07/2019 GMT
    36                           ; 
    37                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  000DFA                     __pidataCOMRAM:
    71                           	opt callstack 0
    72                           
    73                           ;initializer for _lcd
    74  000DFA  83                 	db	131
    75  000DFB  0F                 	db	15
    76                           
    77                           ;initializer for _x
    78  000DFC  01                 	db	1
    79  0000                     _PORTBbits	set	3969
    80  0000                     _T0CONbits	set	4053
    81  0000                     _T0CON	set	4053
    82  0000                     _TRISD	set	3989
    83  0000                     _PORTB	set	3969
    84  0000                     _TRISB	set	3987
    85  0000                     _ADCON1	set	4033
    86  0000                     _TMR0L	set	4054
    87  0000                     _INTCONbits	set	4082
    88  0000                     _PORTD	set	3971
    89                           
    90                           	psect	mediumconst
    91  007EF4                     __pmediumconst:
    92                           	opt callstack 0
    93  007EF4  00                 	db	0
    94  007EF5                     STR_10:
    95  007EF5  20                 	db	32
    96  007EF6  20                 	db	32
    97  007EF7  20                 	db	32
    98  007EF8  20                 	db	32
    99  007EF9  20                 	db	32
   100  007EFA  20                 	db	32
   101  007EFB  20                 	db	32
   102  007EFC  20                 	db	32
   103  007EFD  20                 	db	32
   104  007EFE  20                 	db	32
   105  007EFF  20                 	db	32
   106  007F00  20                 	db	32
   107  007F01  20                 	db	32
   108  007F02  20                 	db	32
   109  007F03  20                 	db	32
   110  007F04  20                 	db	32
   111  007F05  00                 	db	0
   112  007F06                     STR_15:
   113  007F06  50                 	db	80	;'P'
   114  007F07  41                 	db	65	;'A'
   115  007F08  52                 	db	82	;'R'
   116  007F09  41                 	db	65	;'A'
   117  007F0A  20                 	db	32
   118  007F0B  53                 	db	83	;'S'
   119  007F0C  41                 	db	65	;'A'
   120  007F0D  49                 	db	73	;'I'
   121  007F0E  52                 	db	82	;'R'
   122  007F0F  20                 	db	32
   123  007F10  20                 	db	32
   124  007F11  20                 	db	32
   125  007F12  20                 	db	32
   126  007F13  20                 	db	32
   127  007F14  20                 	db	32
   128  007F15  20                 	db	32
   129  007F16  00                 	db	0
   130  007F17                     STR_14:
   131  007F17  41                 	db	65	;'A'
   132  007F18  50                 	db	80	;'P'
   133  007F19  45                 	db	69	;'E'
   134  007F1A  52                 	db	82	;'R'
   135  007F1B  54                 	db	84	;'T'
   136  007F1C  45                 	db	69	;'E'
   137  007F1D  20                 	db	32
   138  007F1E  45                 	db	69	;'E'
   139  007F1F  53                 	db	83	;'S'
   140  007F20  43                 	db	67	;'C'
   141  007F21  20                 	db	32
   142  007F22  20                 	db	32
   143  007F23  20                 	db	32
   144  007F24  20                 	db	32
   145  007F25  20                 	db	32
   146  007F26  20                 	db	32
   147  007F27  00                 	db	0
   148  007F28                     STR_9:
   149  007F28  20                 	db	32
   150  007F29  20                 	db	32
   151  007F2A  20                 	db	32
   152  007F2B  20                 	db	32
   153  007F2C  20                 	db	32
   154  007F2D  20                 	db	32
   155  007F2E  20                 	db	32
   156  007F2F  53                 	db	83	;'S'
   157  007F30  43                 	db	67	;'C'
   158  007F31  4F                 	db	79	;'O'
   159  007F32  52                 	db	82	;'R'
   160  007F33  45                 	db	69	;'E'
   161  007F34  3A                 	db	58	;':'
   162  007F35  20                 	db	32
   163  007F36  20                 	db	32
   164  007F37  20                 	db	32
   165  007F38  00                 	db	0
   166  007F39                     STR_13:
   167  007F39  21                 	db	33
   168  007F3A  21                 	db	33
   169  007F3B  21                 	db	33
   170  007F3C  56                 	db	86	;'V'
   171  007F3D  4F                 	db	79	;'O'
   172  007F3E  43                 	db	67	;'C'
   173  007F3F  45                 	db	69	;'E'
   174  007F40  20                 	db	32
   175  007F41  42                 	db	66	;'B'
   176  007F42  41                 	db	65	;'A'
   177  007F43  54                 	db	84	;'T'
   178  007F44  45                 	db	69	;'E'
   179  007F45  55                 	db	85	;'U'
   180  007F46  21                 	db	33
   181  007F47  21                 	db	33
   182  007F48  21                 	db	33
   183  007F49  00                 	db	0
   184  007F4A                     STR_21:
   185  007F4A  31                 	db	49	;'1'
   186  007F4B  2E                 	db	46
   187  007F4C  4A                 	db	74	;'J'
   188  007F4D  4F                 	db	79	;'O'
   189  007F4E  47                 	db	71	;'G'
   190  007F4F  41                 	db	65	;'A'
   191  007F50  52                 	db	82	;'R'
   192  007F51  2E                 	db	46
   193  007F52  2E                 	db	46
   194  007F53  2E                 	db	46
   195  007F54  2E                 	db	46
   196  007F55  2E                 	db	46
   197  007F56  2E                 	db	46
   198  007F57  2E                 	db	46
   199  007F58  2E                 	db	46
   200  007F59  2E                 	db	46
   201  007F5A  00                 	db	0
   202  007F5B                     STR_23:
   203  007F5B  33                 	db	51	;'3'
   204  007F5C  2E                 	db	46
   205  007F5D  43                 	db	67	;'C'
   206  007F5E  52                 	db	82	;'R'
   207  007F5F  45                 	db	69	;'E'
   208  007F60  44                 	db	68	;'D'
   209  007F61  49                 	db	73	;'I'
   210  007F62  54                 	db	84	;'T'
   211  007F63  4F                 	db	79	;'O'
   212  007F64  53                 	db	83	;'S'
   213  007F65  2E                 	db	46
   214  007F66  2E                 	db	46
   215  007F67  2E                 	db	46
   216  007F68  2E                 	db	46
   217  007F69  2E                 	db	46
   218  007F6A  2E                 	db	46
   219  007F6B  00                 	db	0
   220  007F6C                     STR_24:
   221  007F6C  34                 	db	52	;'4'
   222  007F6D  2E                 	db	46
   223  007F6E  46                 	db	70	;'F'
   224  007F6F  49                 	db	73	;'I'
   225  007F70  4E                 	db	78	;'N'
   226  007F71  41                 	db	65	;'A'
   227  007F72  4C                 	db	76	;'L'
   228  007F73  49                 	db	73	;'I'
   229  007F74  5A                 	db	90	;'Z'
   230  007F75  41                 	db	65	;'A'
   231  007F76  52                 	db	82	;'R'
   232  007F77  2E                 	db	46
   233  007F78  2E                 	db	46
   234  007F79  2E                 	db	46
   235  007F7A  2E                 	db	46
   236  007F7B  2E                 	db	46
   237  007F7C  00                 	db	0
   238  007F7D                     STR_22:
   239  007F7D  32                 	db	50	;'2'
   240  007F7E  2E                 	db	46
   241  007F7F  49                 	db	73	;'I'
   242  007F80  4E                 	db	78	;'N'
   243  007F81  53                 	db	83	;'S'
   244  007F82  54                 	db	84	;'T'
   245  007F83  52                 	db	82	;'R'
   246  007F84  55                 	db	85	;'U'
   247  007F85  43                 	db	67	;'C'
   248  007F86  4F                 	db	79	;'O'
   249  007F87  45                 	db	69	;'E'
   250  007F88  53                 	db	83	;'S'
   251  007F89  2E                 	db	46
   252  007F8A  2E                 	db	46
   253  007F8B  2E                 	db	46
   254  007F8C  2E                 	db	46
   255  007F8D  00                 	db	0
   256  007F8E                     STR_18:
   257  007F8E  4E                 	db	78	;'N'
   258  007F8F  41                 	db	65	;'A'
   259  007F90  56                 	db	86	;'V'
   260  007F91  45                 	db	69	;'E'
   261  007F92  20                 	db	32
   262  007F93  20                 	db	32
   263  007F94  20                 	db	32
   264  007F95  20                 	db	32
   265  007F96  20                 	db	32
   266  007F97  20                 	db	32
   267  007F98  20                 	db	32
   268  007F99  20                 	db	32
   269  007F9A  20                 	db	32
   270  007F9B  20                 	db	32
   271  007F9C  20                 	db	32
   272  007F9D  00                 	db	0
   273  007F9E                     STR_20:
   274  007F9E  4D                 	db	77	;'M'
   275  007F9F  45                 	db	69	;'E'
   276  007FA0  4E                 	db	78	;'N'
   277  007FA1  55                 	db	85	;'U'
   278  007FA2  20                 	db	32
   279  007FA3  20                 	db	32
   280  007FA4  20                 	db	32
   281  007FA5  20                 	db	32
   282  007FA6  20                 	db	32
   283  007FA7  20                 	db	32
   284  007FA8  20                 	db	32
   285  007FA9  20                 	db	32
   286  007FAA  20                 	db	32
   287  007FAB  20                 	db	32
   288  007FAC  20                 	db	32
   289  007FAD  00                 	db	0
   290  007FAE                     STR_19:
   291  007FAE  32                 	db	50	;'2'
   292  007FAF  2E                 	db	46
   293  007FB0  45                 	db	69	;'E'
   294  007FB1  53                 	db	83	;'S'
   295  007FB2  43                 	db	67	;'C'
   296  007FB3  41                 	db	65	;'A'
   297  007FB4  50                 	db	80	;'P'
   298  007FB5  45                 	db	69	;'E'
   299  007FB6  20                 	db	32
   300  007FB7  56                 	db	86	;'V'
   301  007FB8  4F                 	db	79	;'O'
   302  007FB9  4C                 	db	76	;'L'
   303  007FBA  54                 	db	84	;'T'
   304  007FBB  41                 	db	65	;'A'
   305  007FBC  20                 	db	32
   306  007FBD  00                 	db	0
   307  007FBE                     STR_5:
   308  007FBE  48                 	db	72	;'H'
   309  007FBF  49                 	db	73	;'I'
   310  007FC0  42                 	db	66	;'B'
   311  007FC1  45                 	db	69	;'E'
   312  007FC2  52                 	db	82	;'R'
   313  007FC3  4E                 	db	78	;'N'
   314  007FC4  41                 	db	65	;'A'
   315  007FC5  4E                 	db	78	;'N'
   316  007FC6  44                 	db	68	;'D'
   317  007FC7  4F                 	db	79	;'O'
   318  007FC8  2E                 	db	46
   319  007FC9  2E                 	db	46
   320  007FCA  2E                 	db	46
   321  007FCB  2E                 	db	46
   322  007FCC  2E                 	db	46
   323  007FCD  00                 	db	0
   324  007FCE                     STR_1:
   325  007FCE  31                 	db	49	;'1'
   326  007FCF  2E                 	db	46
   327  007FD0  44                 	db	68	;'D'
   328  007FD1  49                 	db	73	;'I'
   329  007FD2  4F                 	db	79	;'O'
   330  007FD3  47                 	db	71	;'G'
   331  007FD4  4F                 	db	79	;'O'
   332  007FD5  20                 	db	32
   333  007FD6  4D                 	db	77	;'M'
   334  007FD7  41                 	db	65	;'A'
   335  007FD8  52                 	db	82	;'R'
   336  007FD9  43                 	db	67	;'C'
   337  007FDA  48                 	db	72	;'H'
   338  007FDB  49                 	db	73	;'I'
   339  007FDC  2E                 	db	46
   340  007FDD  00                 	db	0
   341  007FDE                     STR_17:
   342  007FDE  31                 	db	49	;'1'
   343  007FDF  2E                 	db	46
   344  007FE0  53                 	db	83	;'S'
   345  007FE1  45                 	db	69	;'E'
   346  007FE2  54                 	db	84	;'T'
   347  007FE3  41                 	db	65	;'A'
   348  007FE4  53                 	db	83	;'S'
   349  007FE5  20                 	db	32
   350  007FE6  4D                 	db	77	;'M'
   351  007FE7  4F                 	db	79	;'O'
   352  007FE8  56                 	db	86	;'V'
   353  007FE9  45                 	db	69	;'E'
   354  007FEA  4D                 	db	77	;'M'
   355  007FEB  20                 	db	32
   356  007FEC  41                 	db	65	;'A'
   357  007FED  00                 	db	0
   358  007FEE                     STR_2:
   359  007FEE  32                 	db	50	;'2'
   360  007FEF  2E                 	db	46
   361  007FF0  47                 	db	71	;'G'
   362  007FF1  45                 	db	69	;'E'
   363  007FF2  4F                 	db	79	;'O'
   364  007FF3  52                 	db	82	;'R'
   365  007FF4  47                 	db	71	;'G'
   366  007FF5  45                 	db	69	;'E'
   367  007FF6  20                 	db	32
   368  007FF7  4E                 	db	78	;'N'
   369  007FF8  41                 	db	65	;'A'
   370  007FF9  52                 	db	82	;'R'
   371  007FFA  44                 	db	68	;'D'
   372  007FFB  45                 	db	69	;'E'
   373  007FFC  53                 	db	83	;'S'
   374  007FFD  00                 	db	0
   375  0000                     
   376                           ; #config settings
   377  007FFE  00                 	db	0	; dummy byte at the end
   378  0000                     
   379                           	psect	cinit
   380  000D5C                     __pcinit:
   381                           	opt callstack 0
   382  000D5C                     start_initialization:
   383                           	opt callstack 0
   384  000D5C                     __initialization:
   385                           	opt callstack 0
   386                           
   387                           ; Initialize objects allocated to COMRAM (3 bytes)
   388                           ; load TBLPTR registers with __pidataCOMRAM
   389  000D5C  0EFA               	movlw	low __pidataCOMRAM
   390  000D5E  6EF6               	movwf	tblptrl,c
   391  000D60  0E0D               	movlw	high __pidataCOMRAM
   392  000D62  6EF7               	movwf	tblptrh,c
   393  000D64  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   394  000D66  6EF8               	movwf	tblptru,c
   395  000D68  0009               	tblrd		*+	;fetch initializer
   396  000D6A  CFF5 F06D          	movff	tablat,__pdataCOMRAM
   397  000D6E  0009               	tblrd		*+	;fetch initializer
   398  000D70  CFF5 F06E          	movff	tablat,__pdataCOMRAM+1
   399  000D74  0009               	tblrd		*+	;fetch initializer
   400  000D76  CFF5 F06F          	movff	tablat,__pdataCOMRAM+2
   401                           
   402                           ; Clear objects allocated to COMRAM (72 bytes)
   403  000D7A  EE00  F001         	lfsr	0,__pbssCOMRAM
   404  000D7E  0E48               	movlw	72
   405  000D80                     clear_0:
   406  000D80  6AEE               	clrf	postinc0,c
   407  000D82  06E8               	decf	wreg,f,c
   408  000D84  E1FD               	bnz	clear_0
   409  000D86                     end_of_initialization:
   410                           	opt callstack 0
   411  000D86                     __end_of__initialization:
   412                           	opt callstack 0
   413  000D86  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   414  000D88  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   415  000D8A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   416  000D8C  6EF8               	movwf	tblptru,c
   417  000D8E  0100               	movlb	0
   418  000D90  EF96  F005         	goto	_main	;jump to C main() function
   419                           
   420                           	psect	bssCOMRAM
   421  000001                     __pbssCOMRAM:
   422                           	opt callstack 0
   423  000001                     _y:
   424                           	opt callstack 0
   425  000001                     	ds	1
   426  000002                     _op:
   427                           	opt callstack 0
   428  000002                     	ds	1
   429  000003                     _cont_r:
   430                           	opt callstack 0
   431  000003                     	ds	1
   432  000004                     _cont_l:
   433                           	opt callstack 0
   434  000004                     	ds	1
   435  000005                     _cont_d:
   436                           	opt callstack 0
   437  000005                     	ds	1
   438  000006                     _cont_u:
   439                           	opt callstack 0
   440  000006                     	ds	1
   441  000007                     _botoes_ant:
   442                           	opt callstack 0
   443  000007                     	ds	1
   444  000008                     _botoes:
   445                           	opt callstack 0
   446  000008                     	ds	1
   447  000009                     _mat_disp:
   448                           	opt callstack 0
   449  000009                     	ds	64
   450                           
   451                           	psect	dataCOMRAM
   452  00006D                     __pdataCOMRAM:
   453                           	opt callstack 0
   454  00006D                     _lcd:
   455                           	opt callstack 0
   456  00006D                     	ds	2
   457  00006F                     _x:
   458                           	opt callstack 0
   459  00006F                     	ds	1
   460                           
   461                           	psect	cstackCOMRAM
   462  000049                     __pcstackCOMRAM:
   463                           	opt callstack 0
   464  000049                     pulso@lcd:
   465                           	opt callstack 0
   466  000049                     write_char@lcd:
   467                           	opt callstack 0
   468  000049                     strcpy@dest:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x0
   472  000049                     	ds	2
   473  00004B                     ??_pulso:
   474  00004B                     write_char@c:
   475                           	opt callstack 0
   476  00004B                     strcpy@src:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x2
   480  00004B                     	ds	1
   481  00004C                     ??_write_char:
   482  00004C                     function_set@lcd:
   483                           	opt callstack 0
   484  00004C                     display_onoff_control@lcd:
   485                           	opt callstack 0
   486  00004C                     lcd_cmd@lcd:
   487                           	opt callstack 0
   488  00004C                     entry_mode_set@lcd:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x3
   492  00004C                     	ds	1
   493  00004D                     strcpy@s:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x4
   497  00004D                     	ds	1
   498  00004E                     function_set@data_lenght:
   499                           	opt callstack 0
   500  00004E                     display_onoff_control@display_on:
   501                           	opt callstack 0
   502  00004E                     lcd_cmd@a:
   503                           	opt callstack 0
   504  00004E                     entry_mode_set@move_direction:
   505                           	opt callstack 0
   506                           
   507                           ; 1 bytes @ 0x5
   508  00004E                     	ds	1
   509  00004F                     ??_lcd_cmd:
   510  00004F                     function_set@num_lines:
   511                           	opt callstack 0
   512  00004F                     display_onoff_control@cursor_on:
   513                           	opt callstack 0
   514  00004F                     entry_mode_set@display_shift:
   515                           	opt callstack 0
   516  00004F                     strcpy@d:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x6
   520  00004F                     	ds	1
   521  000050                     ??_entry_mode_set:
   522  000050                     function_set@char_font:
   523                           	opt callstack 0
   524  000050                     display_onoff_control@blink:
   525                           	opt callstack 0
   526  000050                     goto_XY@lcd:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x7
   530  000050                     	ds	1
   531  000051                     ??_function_set:
   532  000051                     ??_display_onoff_control:
   533                           
   534                           ; 1 bytes @ 0x8
   535  000051                     	ds	1
   536  000052                     goto_XY@x:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x9
   540  000052                     	ds	1
   541  000053                     goto_XY@y:
   542                           	opt callstack 0
   543                           
   544                           ; 1 bytes @ 0xA
   545  000053                     	ds	1
   546  000054                     ??_goto_XY:
   547                           
   548                           ; 1 bytes @ 0xB
   549  000054                     	ds	1
   550  000055                     goto_XY@z:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0xC
   554  000055                     	ds	1
   555  000056                     goto_XY@a:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0xD
   559  000056                     	ds	1
   560  000057                     goto_XY@temp:
   561                           	opt callstack 0
   562                           
   563                           ; 1 bytes @ 0xE
   564  000057                     	ds	1
   565  000058                     print_mat@lcd:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0xF
   569  000058                     	ds	2
   570  00005A                     ??_print_mat:
   571                           
   572                           ; 1 bytes @ 0x11
   573  00005A                     	ds	4
   574  00005E                     print_mat@j:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x15
   578  00005E                     	ds	2
   579  000060                     print_mat@i:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x17
   583  000060                     	ds	2
   584  000062                     creditos@lcd:
   585                           	opt callstack 0
   586  000062                     finaliza@lcd:
   587                           	opt callstack 0
   588  000062                     jogar@lcd:
   589                           	opt callstack 0
   590  000062                     instrucoes@lcd:
   591                           	opt callstack 0
   592  000062                     menu@lcd:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x19
   596  000062                     	ds	2
   597  000064                     ??_jogar:
   598  000064                     
   599                           ; 1 bytes @ 0x1B
   600  000064                     	ds	5
   601  000069                     jogar@bateu:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x20
   605  000069                     	ds	2
   606  00006B                     gerenciador@lcd:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0x22
   610  00006B                     	ds	2
   611  00006D                     
   612                           ; 1 bytes @ 0x24
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 36 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   632 ;;      Params:         0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels required when called:    8
   638 ;; This function calls:
   639 ;;		_display_onoff_control
   640 ;;		_entry_mode_set
   641 ;;		_function_set
   642 ;;		_gerenciador
   643 ;; This function is called by:
   644 ;;		Startup code after reset
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text0
   649  000B2C                     __ptext0:
   650                           	opt callstack 0
   651  000B2C                     _main:
   652                           	opt callstack 23
   653  000B2C                     
   654                           ;main.c: 38:     ADCON1 = 0x0F;
   655  000B2C  0E0F               	movlw	15
   656  000B2E  6EC1               	movwf	193,c	;volatile
   657                           
   658                           ;main.c: 43:     TRISB = 0x0F;
   659  000B30  0E0F               	movlw	15
   660  000B32  6E93               	movwf	147,c	;volatile
   661                           
   662                           ;main.c: 46:     PORTB = 0x00;
   663  000B34  0E00               	movlw	0
   664  000B36  6E81               	movwf	129,c	;volatile
   665                           
   666                           ;main.c: 49:     TRISD = 0x00;
   667  000B38  0E00               	movlw	0
   668  000B3A  6E95               	movwf	149,c	;volatile
   669                           
   670                           ;main.c: 52:     T0CON = 0x47;
   671  000B3C  0E47               	movlw	71
   672  000B3E  6ED5               	movwf	213,c	;volatile
   673                           
   674                           ;main.c: 55:     TMR0L = 0x63;
   675  000B40  0E63               	movlw	99
   676  000B42  6ED6               	movwf	214,c	;volatile
   677  000B44                     
   678                           ;main.c: 58:     INTCONbits.TMR0IF = 0;
   679  000B44  94F2               	bcf	242,2,c	;volatile
   680  000B46                     
   681                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   682  000B46  8AF2               	bsf	242,5,c	;volatile
   683  000B48                     
   684                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   685  000B48  88F2               	bsf	242,4,c	;volatile
   686  000B4A                     
   687                           ;main.c: 61:     INTCONbits.INT0IF = 0;
   688  000B4A  92F2               	bcf	242,1,c	;volatile
   689  000B4C                     
   690                           ;main.c: 62:     INTCONbits.GIE = 1;
   691  000B4C  8EF2               	bsf	242,7,c	;volatile
   692  000B4E                     
   693                           ;main.c: 64:     function_set(lcd, 0, 1, 0);
   694  000B4E  0E83               	movlw	131
   695  000B50  6E4C               	movwf	function_set@lcd^0,c
   696  000B52  0E0F               	movlw	15
   697  000B54  6E4D               	movwf	(function_set@lcd+1)^0,c
   698  000B56  0E00               	movlw	0
   699  000B58  6E4E               	movwf	function_set@data_lenght^0,c
   700  000B5A  0E01               	movlw	1
   701  000B5C  6E4F               	movwf	function_set@num_lines^0,c
   702  000B5E  0E00               	movlw	0
   703  000B60  6E50               	movwf	function_set@char_font^0,c
   704  000B62  ECA1  F003         	call	_function_set	;wreg free
   705  000B66                     
   706                           ;main.c: 65:     display_onoff_control(lcd, 1, 1, 0);
   707  000B66  0E83               	movlw	131
   708  000B68  6E4C               	movwf	display_onoff_control@lcd^0,c
   709  000B6A  0E0F               	movlw	15
   710  000B6C  6E4D               	movwf	(display_onoff_control@lcd+1)^0,c
   711  000B6E  0E01               	movlw	1
   712  000B70  6E4E               	movwf	display_onoff_control@display_on^0,c
   713  000B72  0E01               	movlw	1
   714  000B74  6E4F               	movwf	display_onoff_control@cursor_on^0,c
   715  000B76  0E00               	movlw	0
   716  000B78  6E50               	movwf	display_onoff_control@blink^0,c
   717  000B7A  EC0D  F005         	call	_display_onoff_control	;wreg free
   718  000B7E                     
   719                           ;main.c: 66:     entry_mode_set(lcd, 1,0);
   720  000B7E  0E83               	movlw	131
   721  000B80  6E4C               	movwf	entry_mode_set@lcd^0,c
   722  000B82  0E0F               	movlw	15
   723  000B84  6E4D               	movwf	(entry_mode_set@lcd+1)^0,c
   724  000B86  0E01               	movlw	1
   725  000B88  6E4E               	movwf	entry_mode_set@move_direction^0,c
   726  000B8A  0E00               	movlw	0
   727  000B8C  6E4F               	movwf	entry_mode_set@display_shift^0,c
   728  000B8E  EC54  F005         	call	_entry_mode_set	;wreg free
   729  000B92                     
   730                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   731  000B92  8ED5               	bsf	213,7,c	;volatile
   732  000B94                     
   733                           ;main.c: 70:     gerenciador(lcd);
   734  000B94  0E83               	movlw	131
   735  000B96  6E6B               	movwf	gerenciador@lcd^0,c
   736  000B98  0E0F               	movlw	15
   737  000B9A  6E6C               	movwf	(gerenciador@lcd+1)^0,c
   738  000B9C  ECC2  F004         	call	_gerenciador	;wreg free
   739  000BA0  EF07  F000         	goto	start
   740  000BA4                     __end_of_main:
   741                           	opt callstack 0
   742                           
   743 ;; *************** function _gerenciador *****************
   744 ;; Defined at:
   745 ;;		line 15 in file "task_manager.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  lcd             2   34[COMRAM] PTR struct .
   748 ;;		 -> PORTD(1), 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   760 ;;      Params:         2       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0
   763 ;;      Totals:         2       0       0       0       0       0       0
   764 ;;Total ram usage:        2 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    7
   767 ;; This function calls:
   768 ;;		_creditos
   769 ;;		_finaliza
   770 ;;		_instrucoes
   771 ;;		_jogar
   772 ;;		_menu
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text1
   779  000984                     __ptext1:
   780                           	opt callstack 0
   781  000984                     _gerenciador:
   782                           	opt callstack 23
   783  000984                     l175:
   784  000984                     
   785                           ;task_manager.c: 17:         menu(lcd);
   786  000984  C06B  F062         	movff	gerenciador@lcd,menu@lcd
   787  000988  C06C  F063         	movff	gerenciador@lcd+1,menu@lcd+1
   788  00098C  ECA3  F002         	call	_menu	;wreg free
   789  000990                     
   790                           ;task_manager.c: 18:         if(op == 0) jogar(lcd);
   791  000990  5002               	movf	_op^0,w,c
   792  000992  A4D8               	btfss	status,2,c
   793  000994  EFCE  F004         	goto	u911
   794  000998  EFD0  F004         	goto	u910
   795  00099C                     u911:
   796  00099C  EFD8  F004         	goto	l1675
   797  0009A0                     u910:
   798  0009A0  C06B  F062         	movff	gerenciador@lcd,jogar@lcd
   799  0009A4  C06C  F063         	movff	gerenciador@lcd+1,jogar@lcd+1
   800  0009A8  EC09  F000         	call	_jogar	;wreg free
   801  0009AC  EFC2  F004         	goto	l175
   802  0009B0                     l1675:
   803  0009B0  0402               	decf	_op^0,w,c
   804  0009B2  A4D8               	btfss	status,2,c
   805  0009B4  EFDE  F004         	goto	u921
   806  0009B8  EFE0  F004         	goto	u920
   807  0009BC                     u921:
   808  0009BC  EFE8  F004         	goto	l1679
   809  0009C0                     u920:
   810  0009C0  C06B  F062         	movff	gerenciador@lcd,instrucoes@lcd
   811  0009C4  C06C  F063         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   812  0009C8  ECD2  F005         	call	_instrucoes	;wreg free
   813  0009CC  EFC2  F004         	goto	l175
   814  0009D0                     l1679:
   815  0009D0  0E02               	movlw	2
   816  0009D2  1802               	xorwf	_op^0,w,c
   817  0009D4  A4D8               	btfss	status,2,c
   818  0009D6  EFEF  F004         	goto	u931
   819  0009DA  EFF1  F004         	goto	u930
   820  0009DE                     u931:
   821  0009DE  EFF9  F004         	goto	l1683
   822  0009E2                     u930:
   823  0009E2  C06B  F062         	movff	gerenciador@lcd,creditos@lcd
   824  0009E6  C06C  F063         	movff	gerenciador@lcd+1,creditos@lcd+1
   825  0009EA  EC08  F006         	call	_creditos	;wreg free
   826  0009EE  EFC2  F004         	goto	l175
   827  0009F2                     l1683:
   828  0009F2  0E03               	movlw	3
   829  0009F4  1802               	xorwf	_op^0,w,c
   830  0009F6  A4D8               	btfss	status,2,c
   831  0009F8  EF00  F005         	goto	u941
   832  0009FC  EF02  F005         	goto	u940
   833  000A00                     u941:
   834  000A00  EF0A  F005         	goto	l177
   835  000A04                     u940:
   836  000A04  C06B  F062         	movff	gerenciador@lcd,finaliza@lcd
   837  000A08  C06C  F063         	movff	gerenciador@lcd+1,finaliza@lcd+1
   838  000A0C  EC3E  F006         	call	_finaliza	;wreg free
   839  000A10  EFC2  F004         	goto	l175
   840  000A14                     l177:
   841  000A14  EFC2  F004         	goto	l175
   842  000A18  0012               	return		;funcret
   843  000A1A                     __end_of_gerenciador:
   844                           	opt callstack 0
   845                           
   846 ;; *************** function _menu *****************
   847 ;; Defined at:
   848 ;;		line 114 in file "task_manager.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  lcd             2   25[COMRAM] PTR struct .
   851 ;;		 -> PORTD(1), 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      unsigned char 
   856 ;; Registers used:
   857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   863 ;;      Params:         2       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0
   866 ;;      Totals:         2       0       0       0       0       0       0
   867 ;;Total ram usage:        2 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    6
   870 ;; This function calls:
   871 ;;		_print_mat
   872 ;;		_strcpy
   873 ;; This function is called by:
   874 ;;		_gerenciador
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text2
   879  000546                     __ptext2:
   880                           	opt callstack 0
   881  000546                     _menu:
   882                           	opt callstack 23
   883  000546                     
   884                           ;task_manager.c: 115:     strcpy(mat_disp[0], "1.JOGAR.........");
   885  000546  0E09               	movlw	low _mat_disp
   886  000548  6E49               	movwf	strcpy@dest^0,c
   887  00054A  0E00               	movlw	high _mat_disp
   888  00054C  6E4A               	movwf	(strcpy@dest+1)^0,c
   889  00054E  0E4A               	movlw	low STR_21
   890  000550  6E4B               	movwf	strcpy@src^0,c
   891  000552  0E7F               	movlw	high STR_21
   892  000554  6E4C               	movwf	(strcpy@src+1)^0,c
   893  000556  EC6E  F006         	call	_strcpy	;wreg free
   894                           
   895                           ;task_manager.c: 116:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   896  00055A  0E19               	movlw	low (_mat_disp+16)
   897  00055C  6E49               	movwf	strcpy@dest^0,c
   898  00055E  0E00               	movlw	high (_mat_disp+16)
   899  000560  6E4A               	movwf	(strcpy@dest+1)^0,c
   900  000562  0E7D               	movlw	low STR_22
   901  000564  6E4B               	movwf	strcpy@src^0,c
   902  000566  0E7F               	movlw	high STR_22
   903  000568  6E4C               	movwf	(strcpy@src+1)^0,c
   904  00056A  EC6E  F006         	call	_strcpy	;wreg free
   905                           
   906                           ;task_manager.c: 117:     strcpy(mat_disp[2], "3.CREDITOS......");
   907  00056E  0E29               	movlw	low (_mat_disp+32)
   908  000570  6E49               	movwf	strcpy@dest^0,c
   909  000572  0E00               	movlw	high (_mat_disp+32)
   910  000574  6E4A               	movwf	(strcpy@dest+1)^0,c
   911  000576  0E5B               	movlw	low STR_23
   912  000578  6E4B               	movwf	strcpy@src^0,c
   913  00057A  0E7F               	movlw	high STR_23
   914  00057C  6E4C               	movwf	(strcpy@src+1)^0,c
   915  00057E  EC6E  F006         	call	_strcpy	;wreg free
   916                           
   917                           ;task_manager.c: 118:     strcpy(mat_disp[3], "4.FINALIZAR.....");
   918  000582  0E39               	movlw	low (_mat_disp+48)
   919  000584  6E49               	movwf	strcpy@dest^0,c
   920  000586  0E00               	movlw	high (_mat_disp+48)
   921  000588  6E4A               	movwf	(strcpy@dest+1)^0,c
   922  00058A  0E6C               	movlw	low STR_24
   923  00058C  6E4B               	movwf	strcpy@src^0,c
   924  00058E  0E7F               	movlw	high STR_24
   925  000590  6E4C               	movwf	(strcpy@src+1)^0,c
   926  000592  EC6E  F006         	call	_strcpy	;wreg free
   927  000596                     l1491:
   928                           
   929                           ;task_manager.c: 121:     mat_disp[op][15] = '<';
   930  000596  5002               	movf	_op^0,w,c
   931  000598  0D10               	mullw	16
   932  00059A  0E18               	movlw	low (_mat_disp+15)
   933  00059C  24F3               	addwf	243,w,c
   934  00059E  6ED9               	movwf	fsr2l,c
   935  0005A0  0E00               	movlw	high (_mat_disp+15)
   936  0005A2  20F4               	addwfc	prodh,w,c
   937  0005A4  6EDA               	movwf	fsr2h,c
   938  0005A6  0E3C               	movlw	60
   939  0005A8  6EDF               	movwf	indf2,c
   940  0005AA                     
   941                           ;task_manager.c: 122:     print_mat(lcd);
   942  0005AA  C062  F058         	movff	menu@lcd,print_mat@lcd
   943  0005AE  C063  F059         	movff	menu@lcd+1,print_mat@lcd+1
   944  0005B2  EC6C  F004         	call	_print_mat	;wreg free
   945                           
   946                           ;task_manager.c: 124:     while(!botoes.Enter){
   947  0005B6  EF25  F003         	goto	l1521
   948  0005BA                     l221:
   949                           
   950                           ;task_manager.c: 125:         if((botoes.U) && (op > 0)){
   951  0005BA  A008               	btfss	_botoes^0,0,c
   952  0005BC  EFE2  F002         	goto	u701
   953  0005C0  EFE4  F002         	goto	u700
   954  0005C4                     u701:
   955  0005C4  EF08  F003         	goto	l1507
   956  0005C8                     u700:
   957  0005C8  5002               	movf	_op^0,w,c
   958  0005CA  B4D8               	btfsc	status,2,c
   959  0005CC  EFEA  F002         	goto	u711
   960  0005D0  EFEC  F002         	goto	u710
   961  0005D4                     u711:
   962  0005D4  EF08  F003         	goto	l1507
   963  0005D8                     u710:
   964  0005D8                     
   965                           ;task_manager.c: 126:             mat_disp[op][15] = '.';
   966  0005D8  5002               	movf	_op^0,w,c
   967  0005DA  0D10               	mullw	16
   968  0005DC  0E18               	movlw	low (_mat_disp+15)
   969  0005DE  24F3               	addwf	243,w,c
   970  0005E0  6ED9               	movwf	fsr2l,c
   971  0005E2  0E00               	movlw	high (_mat_disp+15)
   972  0005E4  20F4               	addwfc	prodh,w,c
   973  0005E6  6EDA               	movwf	fsr2h,c
   974  0005E8  0E2E               	movlw	46
   975  0005EA  6EDF               	movwf	indf2,c
   976  0005EC                     
   977                           ;task_manager.c: 127:             op--;
   978  0005EC  0602               	decf	_op^0,f,c
   979  0005EE                     
   980                           ;task_manager.c: 128:             botoes.U = 0;
   981  0005EE  9008               	bcf	_botoes^0,0,c
   982  0005F0                     
   983                           ;task_manager.c: 129:             mat_disp[op][15] = '<';
   984  0005F0  5002               	movf	_op^0,w,c
   985  0005F2  0D10               	mullw	16
   986  0005F4  0E18               	movlw	low (_mat_disp+15)
   987  0005F6  24F3               	addwf	243,w,c
   988  0005F8  6ED9               	movwf	fsr2l,c
   989  0005FA  0E00               	movlw	high (_mat_disp+15)
   990  0005FC  20F4               	addwfc	prodh,w,c
   991  0005FE  6EDA               	movwf	fsr2h,c
   992  000600  0E3C               	movlw	60
   993  000602  6EDF               	movwf	indf2,c
   994  000604                     
   995                           ;task_manager.c: 130:             print_mat(lcd);
   996  000604  C062  F058         	movff	menu@lcd,print_mat@lcd
   997  000608  C063  F059         	movff	menu@lcd+1,print_mat@lcd+1
   998  00060C  EC6C  F004         	call	_print_mat	;wreg free
   999  000610                     l1507:
  1000                           
  1001                           ;task_manager.c: 132:         if((botoes.D) && (op < 3)){
  1002  000610  A208               	btfss	_botoes^0,1,c
  1003  000612  EF0D  F003         	goto	u721
  1004  000616  EF0F  F003         	goto	u720
  1005  00061A                     u721:
  1006  00061A  EF25  F003         	goto	l1521
  1007  00061E                     u720:
  1008  00061E  0E03               	movlw	3
  1009  000620  6002               	cpfslt	_op^0,c
  1010  000622  EF15  F003         	goto	u731
  1011  000626  EF17  F003         	goto	u730
  1012  00062A                     u731:
  1013  00062A  EF25  F003         	goto	l1521
  1014  00062E                     u730:
  1015  00062E                     
  1016                           ;task_manager.c: 133:             mat_disp[op][15] = '.';
  1017  00062E  5002               	movf	_op^0,w,c
  1018  000630  0D10               	mullw	16
  1019  000632  0E18               	movlw	low (_mat_disp+15)
  1020  000634  24F3               	addwf	243,w,c
  1021  000636  6ED9               	movwf	fsr2l,c
  1022  000638  0E00               	movlw	high (_mat_disp+15)
  1023  00063A  20F4               	addwfc	prodh,w,c
  1024  00063C  6EDA               	movwf	fsr2h,c
  1025  00063E  0E2E               	movlw	46
  1026  000640  6EDF               	movwf	indf2,c
  1027  000642                     
  1028                           ;task_manager.c: 134:             op++;
  1029  000642  2A02               	incf	_op^0,f,c
  1030  000644                     
  1031                           ;task_manager.c: 135:             botoes.D = 0;
  1032  000644  9208               	bcf	_botoes^0,1,c
  1033  000646  EFCB  F002         	goto	l1491
  1034  00064A                     l1521:
  1035                           
  1036                           ;task_manager.c: 124:     while(!botoes.Enter){
  1037  00064A  A808               	btfss	_botoes^0,4,c
  1038  00064C  EF2A  F003         	goto	u741
  1039  000650  EF2C  F003         	goto	u740
  1040  000654                     u741:
  1041  000654  EFDD  F002         	goto	l221
  1042  000658                     u740:
  1043  000658  0012               	return		;funcret
  1044  00065A                     __end_of_menu:
  1045                           	opt callstack 0
  1046                           
  1047 ;; *************** function _jogar *****************
  1048 ;; Defined at:
  1049 ;;		line 46 in file "task_manager.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  lcd             2   25[COMRAM] PTR struct .
  1052 ;;		 -> PORTD(1), 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  bateu           2   32[COMRAM] int 
  1055 ;;  score           2    0        int 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1065 ;;      Params:         2       0       0       0       0       0       0
  1066 ;;      Locals:         4       0       0       0       0       0       0
  1067 ;;      Temps:          3       0       0       0       0       0       0
  1068 ;;      Totals:         9       0       0       0       0       0       0
  1069 ;;Total ram usage:        9 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    6
  1072 ;; This function calls:
  1073 ;;		_print_mat
  1074 ;;		_strcpy
  1075 ;; This function is called by:
  1076 ;;		_gerenciador
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text3
  1081  000012                     __ptext3:
  1082                           	opt callstack 0
  1083  000012                     _jogar:
  1084                           	opt callstack 23
  1085  000012                     
  1086                           ;task_manager.c: 48:     int bateu = 0;
  1087  000012  0E00               	movlw	0
  1088  000014  6E6A               	movwf	(jogar@bateu+1)^0,c
  1089  000016  0E00               	movlw	0
  1090  000018  6E69               	movwf	jogar@bateu^0,c
  1091  00001A                     
  1092                           ;task_manager.c: 51:     strcpy(mat_disp[0], "       SCORE:   ");
  1093  00001A  0E09               	movlw	low _mat_disp
  1094  00001C  6E49               	movwf	strcpy@dest^0,c
  1095  00001E  0E00               	movlw	high _mat_disp
  1096  000020  6E4A               	movwf	(strcpy@dest+1)^0,c
  1097  000022  0E28               	movlw	low STR_9
  1098  000024  6E4B               	movwf	strcpy@src^0,c
  1099  000026  0E7F               	movlw	high STR_9
  1100  000028  6E4C               	movwf	(strcpy@src+1)^0,c
  1101  00002A  EC6E  F006         	call	_strcpy	;wreg free
  1102  00002E                     
  1103                           ;task_manager.c: 52:     strcpy(mat_disp[1], "                ");
  1104  00002E  0E19               	movlw	low (_mat_disp+16)
  1105  000030  6E49               	movwf	strcpy@dest^0,c
  1106  000032  0E00               	movlw	high (_mat_disp+16)
  1107  000034  6E4A               	movwf	(strcpy@dest+1)^0,c
  1108  000036  0EF5               	movlw	low STR_10
  1109  000038  6E4B               	movwf	strcpy@src^0,c
  1110  00003A  0E7E               	movlw	high STR_10
  1111  00003C  6E4C               	movwf	(strcpy@src+1)^0,c
  1112  00003E  EC6E  F006         	call	_strcpy	;wreg free
  1113  000042                     
  1114                           ;task_manager.c: 53:     strcpy(mat_disp[2], "                ");
  1115  000042  0E29               	movlw	low (_mat_disp+32)
  1116  000044  6E49               	movwf	strcpy@dest^0,c
  1117  000046  0E00               	movlw	high (_mat_disp+32)
  1118  000048  6E4A               	movwf	(strcpy@dest+1)^0,c
  1119  00004A  0EF5               	movlw	low STR_10
  1120  00004C  6E4B               	movwf	strcpy@src^0,c
  1121  00004E  0E7E               	movlw	high STR_10
  1122  000050  6E4C               	movwf	(strcpy@src+1)^0,c
  1123  000052  EC6E  F006         	call	_strcpy	;wreg free
  1124  000056                     
  1125                           ;task_manager.c: 54:     strcpy(mat_disp[3], "                ");
  1126  000056  0E39               	movlw	low (_mat_disp+48)
  1127  000058  6E49               	movwf	strcpy@dest^0,c
  1128  00005A  0E00               	movlw	high (_mat_disp+48)
  1129  00005C  6E4A               	movwf	(strcpy@dest+1)^0,c
  1130  00005E  0EF5               	movlw	low STR_10
  1131  000060  6E4B               	movwf	strcpy@src^0,c
  1132  000062  0E7E               	movlw	high STR_10
  1133  000064  6E4C               	movwf	(strcpy@src+1)^0,c
  1134  000066  EC6E  F006         	call	_strcpy	;wreg free
  1135                           
  1136                           ;task_manager.c: 55:     mat_disp[1][0] = '>';
  1137  00006A  0E3E               	movlw	62
  1138  00006C  6E19               	movwf	(_mat_disp+16)^0,c
  1139                           
  1140                           ;task_manager.c: 56:     mat_disp[1][10] = '*';
  1141  00006E  0E2A               	movlw	42
  1142  000070  6E23               	movwf	(_mat_disp+26)^0,c
  1143                           
  1144                           ;task_manager.c: 57:     mat_disp[2][5] = '*';
  1145  000072  0E2A               	movlw	42
  1146  000074  6E2E               	movwf	(_mat_disp+37)^0,c
  1147  000076                     l1533:
  1148                           
  1149                           ;task_manager.c: 58:     print_mat(lcd);
  1150  000076  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1151  00007A  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1152  00007E  EC6C  F004         	call	_print_mat	;wreg free
  1153                           
  1154                           ;task_manager.c: 60:     while(!botoes.Esc && bateu == 0){
  1155  000082  EF65  F001         	goto	l1597
  1156  000086                     l1535:
  1157                           
  1158                           ;task_manager.c: 61:         if(mat_disp[x][y] == '>' && mat_disp[x][y+1] == '*')
  1159  000086  506F               	movf	_x^0,w,c
  1160  000088  0D10               	mullw	16
  1161  00008A  0E09               	movlw	low _mat_disp
  1162  00008C  6E64               	movwf	??_jogar^0,c
  1163  00008E  0E00               	movlw	high _mat_disp
  1164  000090  6E65               	movwf	(??_jogar+1)^0,c
  1165  000092  50F3               	movf	243,w,c
  1166  000094  2664               	addwf	??_jogar^0,f,c
  1167  000096  50F4               	movf	244,w,c
  1168  000098  2265               	addwfc	(??_jogar+1)^0,f,c
  1169  00009A  5001               	movf	_y^0,w,c
  1170  00009C  2464               	addwf	??_jogar^0,w,c
  1171  00009E  6ED9               	movwf	fsr2l,c
  1172  0000A0  0E00               	movlw	0
  1173  0000A2  2065               	addwfc	(??_jogar+1)^0,w,c
  1174  0000A4  6EDA               	movwf	fsr2h,c
  1175  0000A6  0E3E               	movlw	62
  1176  0000A8  18DE               	xorwf	postinc2,w,c
  1177  0000AA  A4D8               	btfss	status,2,c
  1178  0000AC  EF5A  F000         	goto	u751
  1179  0000B0  EF5C  F000         	goto	u750
  1180  0000B4                     u751:
  1181  0000B4  EF7D  F000         	goto	l1541
  1182  0000B8                     u750:
  1183  0000B8  506F               	movf	_x^0,w,c
  1184  0000BA  0D10               	mullw	16
  1185  0000BC  0E09               	movlw	low _mat_disp
  1186  0000BE  6E64               	movwf	??_jogar^0,c
  1187  0000C0  0E00               	movlw	high _mat_disp
  1188  0000C2  6E65               	movwf	(??_jogar+1)^0,c
  1189  0000C4  0E01               	movlw	1
  1190  0000C6  2664               	addwf	??_jogar^0,f,c
  1191  0000C8  0E00               	movlw	0
  1192  0000CA  2265               	addwfc	(??_jogar+1)^0,f,c
  1193  0000CC  50F3               	movf	243,w,c
  1194  0000CE  2664               	addwf	??_jogar^0,f,c
  1195  0000D0  50F4               	movf	244,w,c
  1196  0000D2  2265               	addwfc	(??_jogar+1)^0,f,c
  1197  0000D4  5001               	movf	_y^0,w,c
  1198  0000D6  2464               	addwf	??_jogar^0,w,c
  1199  0000D8  6ED9               	movwf	fsr2l,c
  1200  0000DA  0E00               	movlw	0
  1201  0000DC  2065               	addwfc	(??_jogar+1)^0,w,c
  1202  0000DE  6EDA               	movwf	fsr2h,c
  1203  0000E0  0E2A               	movlw	42
  1204  0000E2  18DE               	xorwf	postinc2,w,c
  1205  0000E4  A4D8               	btfss	status,2,c
  1206  0000E6  EF77  F000         	goto	u761
  1207  0000EA  EF79  F000         	goto	u760
  1208  0000EE                     u761:
  1209  0000EE  EF7D  F000         	goto	l1541
  1210  0000F2                     u760:
  1211  0000F2                     
  1212                           ;task_manager.c: 62:             bateu = 1;
  1213  0000F2  0E00               	movlw	0
  1214  0000F4  6E6A               	movwf	(jogar@bateu+1)^0,c
  1215  0000F6  0E01               	movlw	1
  1216  0000F8  6E69               	movwf	jogar@bateu^0,c
  1217  0000FA                     l1541:
  1218                           
  1219                           ;task_manager.c: 63:         if((botoes.U) && (x > 1)){
  1220  0000FA  A008               	btfss	_botoes^0,0,c
  1221  0000FC  EF82  F000         	goto	u771
  1222  000100  EF84  F000         	goto	u770
  1223  000104                     u771:
  1224  000104  EFB8  F000         	goto	l1555
  1225  000108                     u770:
  1226  000108  0E01               	movlw	1
  1227  00010A  646F               	cpfsgt	_x^0,c
  1228  00010C  EF8A  F000         	goto	u781
  1229  000110  EF8C  F000         	goto	u780
  1230  000114                     u781:
  1231  000114  EFB8  F000         	goto	l1555
  1232  000118                     u780:
  1233  000118                     
  1234                           ;task_manager.c: 64:             mat_disp[x][y] = ' ';
  1235  000118  506F               	movf	_x^0,w,c
  1236  00011A  0D10               	mullw	16
  1237  00011C  0E09               	movlw	low _mat_disp
  1238  00011E  6E64               	movwf	??_jogar^0,c
  1239  000120  0E00               	movlw	high _mat_disp
  1240  000122  6E65               	movwf	(??_jogar+1)^0,c
  1241  000124  50F3               	movf	243,w,c
  1242  000126  2664               	addwf	??_jogar^0,f,c
  1243  000128  50F4               	movf	244,w,c
  1244  00012A  2265               	addwfc	(??_jogar+1)^0,f,c
  1245  00012C  5001               	movf	_y^0,w,c
  1246  00012E  2464               	addwf	??_jogar^0,w,c
  1247  000130  6ED9               	movwf	fsr2l,c
  1248  000132  0E00               	movlw	0
  1249  000134  2065               	addwfc	(??_jogar+1)^0,w,c
  1250  000136  6EDA               	movwf	fsr2h,c
  1251  000138  0E20               	movlw	32
  1252  00013A  6EDF               	movwf	indf2,c
  1253  00013C                     
  1254                           ;task_manager.c: 65:             x--;
  1255  00013C  066F               	decf	_x^0,f,c
  1256  00013E                     
  1257                           ;task_manager.c: 66:             botoes.U = 0;
  1258  00013E  9008               	bcf	_botoes^0,0,c
  1259  000140                     
  1260                           ;task_manager.c: 67:             mat_disp[x][y] = '>';
  1261  000140  506F               	movf	_x^0,w,c
  1262  000142  0D10               	mullw	16
  1263  000144  0E09               	movlw	low _mat_disp
  1264  000146  6E64               	movwf	??_jogar^0,c
  1265  000148  0E00               	movlw	high _mat_disp
  1266  00014A  6E65               	movwf	(??_jogar+1)^0,c
  1267  00014C  50F3               	movf	243,w,c
  1268  00014E  2664               	addwf	??_jogar^0,f,c
  1269  000150  50F4               	movf	244,w,c
  1270  000152  2265               	addwfc	(??_jogar+1)^0,f,c
  1271  000154  5001               	movf	_y^0,w,c
  1272  000156  2464               	addwf	??_jogar^0,w,c
  1273  000158  6ED9               	movwf	fsr2l,c
  1274  00015A  0E00               	movlw	0
  1275  00015C  2065               	addwfc	(??_jogar+1)^0,w,c
  1276  00015E  6EDA               	movwf	fsr2h,c
  1277  000160  0E3E               	movlw	62
  1278  000162  6EDF               	movwf	indf2,c
  1279  000164                     
  1280                           ;task_manager.c: 68:             print_mat(lcd);
  1281  000164  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1282  000168  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1283  00016C  EC6C  F004         	call	_print_mat	;wreg free
  1284  000170                     l1555:
  1285                           
  1286                           ;task_manager.c: 70:         if((botoes.D) && (x < 3)){
  1287  000170  A208               	btfss	_botoes^0,1,c
  1288  000172  EFBD  F000         	goto	u791
  1289  000176  EFBF  F000         	goto	u790
  1290  00017A                     u791:
  1291  00017A  EFF3  F000         	goto	l1569
  1292  00017E                     u790:
  1293  00017E  0E03               	movlw	3
  1294  000180  606F               	cpfslt	_x^0,c
  1295  000182  EFC5  F000         	goto	u801
  1296  000186  EFC7  F000         	goto	u800
  1297  00018A                     u801:
  1298  00018A  EFF3  F000         	goto	l1569
  1299  00018E                     u800:
  1300  00018E                     
  1301                           ;task_manager.c: 71:             mat_disp[x][y] = ' ';
  1302  00018E  506F               	movf	_x^0,w,c
  1303  000190  0D10               	mullw	16
  1304  000192  0E09               	movlw	low _mat_disp
  1305  000194  6E64               	movwf	??_jogar^0,c
  1306  000196  0E00               	movlw	high _mat_disp
  1307  000198  6E65               	movwf	(??_jogar+1)^0,c
  1308  00019A  50F3               	movf	243,w,c
  1309  00019C  2664               	addwf	??_jogar^0,f,c
  1310  00019E  50F4               	movf	244,w,c
  1311  0001A0  2265               	addwfc	(??_jogar+1)^0,f,c
  1312  0001A2  5001               	movf	_y^0,w,c
  1313  0001A4  2464               	addwf	??_jogar^0,w,c
  1314  0001A6  6ED9               	movwf	fsr2l,c
  1315  0001A8  0E00               	movlw	0
  1316  0001AA  2065               	addwfc	(??_jogar+1)^0,w,c
  1317  0001AC  6EDA               	movwf	fsr2h,c
  1318  0001AE  0E20               	movlw	32
  1319  0001B0  6EDF               	movwf	indf2,c
  1320  0001B2                     
  1321                           ;task_manager.c: 72:             x++;
  1322  0001B2  2A6F               	incf	_x^0,f,c
  1323  0001B4                     
  1324                           ;task_manager.c: 73:             botoes.D = 0;
  1325  0001B4  9208               	bcf	_botoes^0,1,c
  1326  0001B6                     
  1327                           ;task_manager.c: 74:             mat_disp[x][y] = '>';
  1328  0001B6  506F               	movf	_x^0,w,c
  1329  0001B8  0D10               	mullw	16
  1330  0001BA  0E09               	movlw	low _mat_disp
  1331  0001BC  6E64               	movwf	??_jogar^0,c
  1332  0001BE  0E00               	movlw	high _mat_disp
  1333  0001C0  6E65               	movwf	(??_jogar+1)^0,c
  1334  0001C2  50F3               	movf	243,w,c
  1335  0001C4  2664               	addwf	??_jogar^0,f,c
  1336  0001C6  50F4               	movf	244,w,c
  1337  0001C8  2265               	addwfc	(??_jogar+1)^0,f,c
  1338  0001CA  5001               	movf	_y^0,w,c
  1339  0001CC  2464               	addwf	??_jogar^0,w,c
  1340  0001CE  6ED9               	movwf	fsr2l,c
  1341  0001D0  0E00               	movlw	0
  1342  0001D2  2065               	addwfc	(??_jogar+1)^0,w,c
  1343  0001D4  6EDA               	movwf	fsr2h,c
  1344  0001D6  0E3E               	movlw	62
  1345  0001D8  6EDF               	movwf	indf2,c
  1346  0001DA                     
  1347                           ;task_manager.c: 75:             print_mat(lcd);
  1348  0001DA  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1349  0001DE  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1350  0001E2  EC6C  F004         	call	_print_mat	;wreg free
  1351  0001E6                     l1569:
  1352                           
  1353                           ;task_manager.c: 77:         if((botoes.R) && (y < 15)){
  1354  0001E6  A608               	btfss	_botoes^0,3,c
  1355  0001E8  EFF8  F000         	goto	u811
  1356  0001EC  EFFA  F000         	goto	u810
  1357  0001F0                     u811:
  1358  0001F0  EF2E  F001         	goto	l1583
  1359  0001F4                     u810:
  1360  0001F4  0E0F               	movlw	15
  1361  0001F6  6001               	cpfslt	_y^0,c
  1362  0001F8  EF00  F001         	goto	u821
  1363  0001FC  EF02  F001         	goto	u820
  1364  000200                     u821:
  1365  000200  EF2E  F001         	goto	l1583
  1366  000204                     u820:
  1367  000204                     
  1368                           ;task_manager.c: 78:             mat_disp[x][y] = ' ';
  1369  000204  506F               	movf	_x^0,w,c
  1370  000206  0D10               	mullw	16
  1371  000208  0E09               	movlw	low _mat_disp
  1372  00020A  6E64               	movwf	??_jogar^0,c
  1373  00020C  0E00               	movlw	high _mat_disp
  1374  00020E  6E65               	movwf	(??_jogar+1)^0,c
  1375  000210  50F3               	movf	243,w,c
  1376  000212  2664               	addwf	??_jogar^0,f,c
  1377  000214  50F4               	movf	244,w,c
  1378  000216  2265               	addwfc	(??_jogar+1)^0,f,c
  1379  000218  5001               	movf	_y^0,w,c
  1380  00021A  2464               	addwf	??_jogar^0,w,c
  1381  00021C  6ED9               	movwf	fsr2l,c
  1382  00021E  0E00               	movlw	0
  1383  000220  2065               	addwfc	(??_jogar+1)^0,w,c
  1384  000222  6EDA               	movwf	fsr2h,c
  1385  000224  0E20               	movlw	32
  1386  000226  6EDF               	movwf	indf2,c
  1387  000228                     
  1388                           ;task_manager.c: 79:             y++;
  1389  000228  2A01               	incf	_y^0,f,c
  1390  00022A                     
  1391                           ;task_manager.c: 80:             botoes.R = 0;
  1392  00022A  9608               	bcf	_botoes^0,3,c
  1393  00022C                     
  1394                           ;task_manager.c: 81:             mat_disp[x][y] = '>';
  1395  00022C  506F               	movf	_x^0,w,c
  1396  00022E  0D10               	mullw	16
  1397  000230  0E09               	movlw	low _mat_disp
  1398  000232  6E64               	movwf	??_jogar^0,c
  1399  000234  0E00               	movlw	high _mat_disp
  1400  000236  6E65               	movwf	(??_jogar+1)^0,c
  1401  000238  50F3               	movf	243,w,c
  1402  00023A  2664               	addwf	??_jogar^0,f,c
  1403  00023C  50F4               	movf	244,w,c
  1404  00023E  2265               	addwfc	(??_jogar+1)^0,f,c
  1405  000240  5001               	movf	_y^0,w,c
  1406  000242  2464               	addwf	??_jogar^0,w,c
  1407  000244  6ED9               	movwf	fsr2l,c
  1408  000246  0E00               	movlw	0
  1409  000248  2065               	addwfc	(??_jogar+1)^0,w,c
  1410  00024A  6EDA               	movwf	fsr2h,c
  1411  00024C  0E3E               	movlw	62
  1412  00024E  6EDF               	movwf	indf2,c
  1413  000250                     
  1414                           ;task_manager.c: 82:             print_mat(lcd);
  1415  000250  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1416  000254  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1417  000258  EC6C  F004         	call	_print_mat	;wreg free
  1418  00025C                     l1583:
  1419                           
  1420                           ;task_manager.c: 84:         if((botoes.L) && (y > 0)){
  1421  00025C  A408               	btfss	_botoes^0,2,c
  1422  00025E  EF33  F001         	goto	u831
  1423  000262  EF35  F001         	goto	u830
  1424  000266                     u831:
  1425  000266  EF65  F001         	goto	l1597
  1426  00026A                     u830:
  1427  00026A  5001               	movf	_y^0,w,c
  1428  00026C  B4D8               	btfsc	status,2,c
  1429  00026E  EF3B  F001         	goto	u841
  1430  000272  EF3D  F001         	goto	u840
  1431  000276                     u841:
  1432  000276  EF65  F001         	goto	l1597
  1433  00027A                     u840:
  1434  00027A                     
  1435                           ;task_manager.c: 85:             mat_disp[x][y] = ' ';
  1436  00027A  506F               	movf	_x^0,w,c
  1437  00027C  0D10               	mullw	16
  1438  00027E  0E09               	movlw	low _mat_disp
  1439  000280  6E64               	movwf	??_jogar^0,c
  1440  000282  0E00               	movlw	high _mat_disp
  1441  000284  6E65               	movwf	(??_jogar+1)^0,c
  1442  000286  50F3               	movf	243,w,c
  1443  000288  2664               	addwf	??_jogar^0,f,c
  1444  00028A  50F4               	movf	244,w,c
  1445  00028C  2265               	addwfc	(??_jogar+1)^0,f,c
  1446  00028E  5001               	movf	_y^0,w,c
  1447  000290  2464               	addwf	??_jogar^0,w,c
  1448  000292  6ED9               	movwf	fsr2l,c
  1449  000294  0E00               	movlw	0
  1450  000296  2065               	addwfc	(??_jogar+1)^0,w,c
  1451  000298  6EDA               	movwf	fsr2h,c
  1452  00029A  0E20               	movlw	32
  1453  00029C  6EDF               	movwf	indf2,c
  1454  00029E                     
  1455                           ;task_manager.c: 86:             y--;
  1456  00029E  0601               	decf	_y^0,f,c
  1457  0002A0                     
  1458                           ;task_manager.c: 87:             botoes.L = 0;
  1459  0002A0  9408               	bcf	_botoes^0,2,c
  1460  0002A2                     
  1461                           ;task_manager.c: 88:             mat_disp[x][y] = '>';
  1462  0002A2  506F               	movf	_x^0,w,c
  1463  0002A4  0D10               	mullw	16
  1464  0002A6  0E09               	movlw	low _mat_disp
  1465  0002A8  6E64               	movwf	??_jogar^0,c
  1466  0002AA  0E00               	movlw	high _mat_disp
  1467  0002AC  6E65               	movwf	(??_jogar+1)^0,c
  1468  0002AE  50F3               	movf	243,w,c
  1469  0002B0  2664               	addwf	??_jogar^0,f,c
  1470  0002B2  50F4               	movf	244,w,c
  1471  0002B4  2265               	addwfc	(??_jogar+1)^0,f,c
  1472  0002B6  5001               	movf	_y^0,w,c
  1473  0002B8  2464               	addwf	??_jogar^0,w,c
  1474  0002BA  6ED9               	movwf	fsr2l,c
  1475  0002BC  0E00               	movlw	0
  1476  0002BE  2065               	addwfc	(??_jogar+1)^0,w,c
  1477  0002C0  6EDA               	movwf	fsr2h,c
  1478  0002C2  0E3E               	movlw	62
  1479  0002C4  6EDF               	movwf	indf2,c
  1480  0002C6  EF3B  F000         	goto	l1533
  1481  0002CA                     l1597:
  1482                           
  1483                           ;task_manager.c: 60:     while(!botoes.Esc && bateu == 0){
  1484  0002CA  BA08               	btfsc	_botoes^0,5,c
  1485  0002CC  EF6A  F001         	goto	u851
  1486  0002D0  EF6C  F001         	goto	u850
  1487  0002D4                     u851:
  1488  0002D4  EF75  F001         	goto	l1601
  1489  0002D8                     u850:
  1490  0002D8  5069               	movf	jogar@bateu^0,w,c
  1491  0002DA  106A               	iorwf	(jogar@bateu+1)^0,w,c
  1492  0002DC  B4D8               	btfsc	status,2,c
  1493  0002DE  EF73  F001         	goto	u861
  1494  0002E2  EF75  F001         	goto	u860
  1495  0002E6                     u861:
  1496  0002E6  EF43  F000         	goto	l1535
  1497  0002EA                     u860:
  1498  0002EA                     l1601:
  1499                           
  1500                           ;task_manager.c: 92:     if(bateu == 1){
  1501  0002EA  0469               	decf	jogar@bateu^0,w,c
  1502  0002EC  106A               	iorwf	(jogar@bateu+1)^0,w,c
  1503  0002EE  A4D8               	btfss	status,2,c
  1504  0002F0  EF7C  F001         	goto	u871
  1505  0002F4  EF7E  F001         	goto	u870
  1506  0002F8                     u871:
  1507  0002F8  EFB3  F001         	goto	l1607
  1508  0002FC                     u870:
  1509  0002FC                     
  1510                           ;task_manager.c: 93:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  1511  0002FC  0E09               	movlw	low _mat_disp
  1512  0002FE  6E49               	movwf	strcpy@dest^0,c
  1513  000300  0E00               	movlw	high _mat_disp
  1514  000302  6E4A               	movwf	(strcpy@dest+1)^0,c
  1515  000304  0E39               	movlw	low STR_13
  1516  000306  6E4B               	movwf	strcpy@src^0,c
  1517  000308  0E7F               	movlw	high STR_13
  1518  00030A  6E4C               	movwf	(strcpy@src+1)^0,c
  1519  00030C  EC6E  F006         	call	_strcpy	;wreg free
  1520                           
  1521                           ;task_manager.c: 94:             strcpy(mat_disp[1], "APERTE ESC      ");
  1522  000310  0E19               	movlw	low (_mat_disp+16)
  1523  000312  6E49               	movwf	strcpy@dest^0,c
  1524  000314  0E00               	movlw	high (_mat_disp+16)
  1525  000316  6E4A               	movwf	(strcpy@dest+1)^0,c
  1526  000318  0E17               	movlw	low STR_14
  1527  00031A  6E4B               	movwf	strcpy@src^0,c
  1528  00031C  0E7F               	movlw	high STR_14
  1529  00031E  6E4C               	movwf	(strcpy@src+1)^0,c
  1530  000320  EC6E  F006         	call	_strcpy	;wreg free
  1531                           
  1532                           ;task_manager.c: 95:             strcpy(mat_disp[2], "PARA SAIR       ");
  1533  000324  0E29               	movlw	low (_mat_disp+32)
  1534  000326  6E49               	movwf	strcpy@dest^0,c
  1535  000328  0E00               	movlw	high (_mat_disp+32)
  1536  00032A  6E4A               	movwf	(strcpy@dest+1)^0,c
  1537  00032C  0E06               	movlw	low STR_15
  1538  00032E  6E4B               	movwf	strcpy@src^0,c
  1539  000330  0E7F               	movlw	high STR_15
  1540  000332  6E4C               	movwf	(strcpy@src+1)^0,c
  1541  000334  EC6E  F006         	call	_strcpy	;wreg free
  1542                           
  1543                           ;task_manager.c: 96:             strcpy(mat_disp[3], "                ");
  1544  000338  0E39               	movlw	low (_mat_disp+48)
  1545  00033A  6E49               	movwf	strcpy@dest^0,c
  1546  00033C  0E00               	movlw	high (_mat_disp+48)
  1547  00033E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1548  000340  0EF5               	movlw	low STR_10
  1549  000342  6E4B               	movwf	strcpy@src^0,c
  1550  000344  0E7E               	movlw	high STR_10
  1551  000346  6E4C               	movwf	(strcpy@src+1)^0,c
  1552  000348  EC6E  F006         	call	_strcpy	;wreg free
  1553  00034C                     
  1554                           ;task_manager.c: 97:             print_mat(lcd);
  1555  00034C  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1556  000350  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1557  000354  EC6C  F004         	call	_print_mat	;wreg free
  1558  000358                     l208:
  1559  000358  AA08               	btfss	_botoes^0,5,c
  1560  00035A  EFB1  F001         	goto	u881
  1561  00035E  EFB3  F001         	goto	u880
  1562  000362                     u881:
  1563  000362  EFAC  F001         	goto	l208
  1564  000366                     u880:
  1565  000366                     l1607:
  1566                           
  1567                           ;task_manager.c: 101:     x = 1;
  1568  000366  0E01               	movlw	1
  1569  000368  6E6F               	movwf	_x^0,c
  1570                           
  1571                           ;task_manager.c: 102:     y = 0;
  1572  00036A  0E00               	movlw	0
  1573  00036C  6E01               	movwf	_y^0,c
  1574  00036E  0012               	return		;funcret
  1575  000370                     __end_of_jogar:
  1576                           	opt callstack 0
  1577                           
  1578 ;; *************** function _instrucoes *****************
  1579 ;; Defined at:
  1580 ;;		line 105 in file "task_manager.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  lcd             2   25[COMRAM] PTR struct .
  1583 ;;		 -> PORTD(1), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1595 ;;      Params:         2       0       0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0
  1598 ;;      Totals:         2       0       0       0       0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    6
  1602 ;; This function calls:
  1603 ;;		_print_mat
  1604 ;;		_strcpy
  1605 ;; This function is called by:
  1606 ;;		_gerenciador
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text4
  1611  000BA4                     __ptext4:
  1612                           	opt callstack 0
  1613  000BA4                     _instrucoes:
  1614                           	opt callstack 23
  1615  000BA4                     
  1616                           ;task_manager.c: 106:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  1617  000BA4  0E09               	movlw	low _mat_disp
  1618  000BA6  6E49               	movwf	strcpy@dest^0,c
  1619  000BA8  0E00               	movlw	high _mat_disp
  1620  000BAA  6E4A               	movwf	(strcpy@dest+1)^0,c
  1621  000BAC  0EDE               	movlw	low STR_17
  1622  000BAE  6E4B               	movwf	strcpy@src^0,c
  1623  000BB0  0E7F               	movlw	high STR_17
  1624  000BB2  6E4C               	movwf	(strcpy@src+1)^0,c
  1625  000BB4  EC6E  F006         	call	_strcpy	;wreg free
  1626                           
  1627                           ;task_manager.c: 107:     strcpy(mat_disp[1], "NAVE           ");
  1628  000BB8  0E19               	movlw	low (_mat_disp+16)
  1629  000BBA  6E49               	movwf	strcpy@dest^0,c
  1630  000BBC  0E00               	movlw	high (_mat_disp+16)
  1631  000BBE  6E4A               	movwf	(strcpy@dest+1)^0,c
  1632  000BC0  0E8E               	movlw	low STR_18
  1633  000BC2  6E4B               	movwf	strcpy@src^0,c
  1634  000BC4  0E7F               	movlw	high STR_18
  1635  000BC6  6E4C               	movwf	(strcpy@src+1)^0,c
  1636  000BC8  EC6E  F006         	call	_strcpy	;wreg free
  1637                           
  1638                           ;task_manager.c: 108:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  1639  000BCC  0E29               	movlw	low (_mat_disp+32)
  1640  000BCE  6E49               	movwf	strcpy@dest^0,c
  1641  000BD0  0E00               	movlw	high (_mat_disp+32)
  1642  000BD2  6E4A               	movwf	(strcpy@dest+1)^0,c
  1643  000BD4  0EAE               	movlw	low STR_19
  1644  000BD6  6E4B               	movwf	strcpy@src^0,c
  1645  000BD8  0E7F               	movlw	high STR_19
  1646  000BDA  6E4C               	movwf	(strcpy@src+1)^0,c
  1647  000BDC  EC6E  F006         	call	_strcpy	;wreg free
  1648                           
  1649                           ;task_manager.c: 109:     strcpy(mat_disp[3], "MENU           ");
  1650  000BE0  0E39               	movlw	low (_mat_disp+48)
  1651  000BE2  6E49               	movwf	strcpy@dest^0,c
  1652  000BE4  0E00               	movlw	high (_mat_disp+48)
  1653  000BE6  6E4A               	movwf	(strcpy@dest+1)^0,c
  1654  000BE8  0E9E               	movlw	low STR_20
  1655  000BEA  6E4B               	movwf	strcpy@src^0,c
  1656  000BEC  0E7F               	movlw	high STR_20
  1657  000BEE  6E4C               	movwf	(strcpy@src+1)^0,c
  1658  000BF0  EC6E  F006         	call	_strcpy	;wreg free
  1659  000BF4                     
  1660                           ;task_manager.c: 110:     print_mat(lcd);
  1661  000BF4  C062  F058         	movff	instrucoes@lcd,print_mat@lcd
  1662  000BF8  C063  F059         	movff	instrucoes@lcd+1,print_mat@lcd+1
  1663  000BFC  EC6C  F004         	call	_print_mat	;wreg free
  1664  000C00                     l214:
  1665  000C00  AA08               	btfss	_botoes^0,5,c
  1666  000C02  EF05  F006         	goto	u891
  1667  000C06  EF07  F006         	goto	u890
  1668  000C0A                     u891:
  1669  000C0A  EF00  F006         	goto	l214
  1670  000C0E                     u890:
  1671  000C0E  0012               	return		;funcret
  1672  000C10                     __end_of_instrucoes:
  1673                           	opt callstack 0
  1674                           
  1675 ;; *************** function _finaliza *****************
  1676 ;; Defined at:
  1677 ;;		line 37 in file "task_manager.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  lcd             2   25[COMRAM] PTR struct .
  1680 ;;		 -> PORTD(1), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1692 ;;      Params:         2       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0
  1695 ;;      Totals:         2       0       0       0       0       0       0
  1696 ;;Total ram usage:        2 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    6
  1699 ;; This function calls:
  1700 ;;		_print_mat
  1701 ;;		_strcpy
  1702 ;; This function is called by:
  1703 ;;		_gerenciador
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text5
  1708  000C7C                     __ptext5:
  1709                           	opt callstack 0
  1710  000C7C                     _finaliza:
  1711                           	opt callstack 23
  1712  000C7C                     
  1713                           ;task_manager.c: 38:     strcpy(mat_disp[0], "HIBERNANDO.....");
  1714  000C7C  0E09               	movlw	low _mat_disp
  1715  000C7E  6E49               	movwf	strcpy@dest^0,c
  1716  000C80  0E00               	movlw	high _mat_disp
  1717  000C82  6E4A               	movwf	(strcpy@dest+1)^0,c
  1718  000C84  0EBE               	movlw	low STR_5
  1719  000C86  6E4B               	movwf	strcpy@src^0,c
  1720  000C88  0E7F               	movlw	high STR_5
  1721  000C8A  6E4C               	movwf	(strcpy@src+1)^0,c
  1722  000C8C  EC6E  F006         	call	_strcpy	;wreg free
  1723                           
  1724                           ;task_manager.c: 39:     strcpy(mat_disp[1], "               ");
  1725  000C90  0E19               	movlw	low (_mat_disp+16)
  1726  000C92  6E49               	movwf	strcpy@dest^0,c
  1727  000C94  0E00               	movlw	high (_mat_disp+16)
  1728  000C96  6E4A               	movwf	(strcpy@dest+1)^0,c
  1729  000C98  0EF6               	movlw	low (STR_10+1)
  1730  000C9A  6E4B               	movwf	strcpy@src^0,c
  1731  000C9C  0E7E               	movlw	high (STR_10+1)
  1732  000C9E  6E4C               	movwf	(strcpy@src+1)^0,c
  1733  000CA0  EC6E  F006         	call	_strcpy	;wreg free
  1734                           
  1735                           ;task_manager.c: 40:     strcpy(mat_disp[2], "               ");
  1736  000CA4  0E29               	movlw	low (_mat_disp+32)
  1737  000CA6  6E49               	movwf	strcpy@dest^0,c
  1738  000CA8  0E00               	movlw	high (_mat_disp+32)
  1739  000CAA  6E4A               	movwf	(strcpy@dest+1)^0,c
  1740  000CAC  0EF6               	movlw	low (STR_10+1)
  1741  000CAE  6E4B               	movwf	strcpy@src^0,c
  1742  000CB0  0E7E               	movlw	high (STR_10+1)
  1743  000CB2  6E4C               	movwf	(strcpy@src+1)^0,c
  1744  000CB4  EC6E  F006         	call	_strcpy	;wreg free
  1745                           
  1746                           ;task_manager.c: 41:     strcpy(mat_disp[3], "               ");
  1747  000CB8  0E39               	movlw	low (_mat_disp+48)
  1748  000CBA  6E49               	movwf	strcpy@dest^0,c
  1749  000CBC  0E00               	movlw	high (_mat_disp+48)
  1750  000CBE  6E4A               	movwf	(strcpy@dest+1)^0,c
  1751  000CC0  0EF6               	movlw	low (STR_10+1)
  1752  000CC2  6E4B               	movwf	strcpy@src^0,c
  1753  000CC4  0E7E               	movlw	high (STR_10+1)
  1754  000CC6  6E4C               	movwf	(strcpy@src+1)^0,c
  1755  000CC8  EC6E  F006         	call	_strcpy	;wreg free
  1756  000CCC                     
  1757                           ;task_manager.c: 42:     print_mat(lcd);
  1758  000CCC  C062  F058         	movff	finaliza@lcd,print_mat@lcd
  1759  000CD0  C063  F059         	movff	finaliza@lcd+1,print_mat@lcd+1
  1760  000CD4  EC6C  F004         	call	_print_mat	;wreg free
  1761  000CD8  0003               	sleep		;# 
  1762  000CDA  0012               	return		;funcret
  1763  000CDC                     __end_of_finaliza:
  1764                           	opt callstack 0
  1765                           
  1766 ;; *************** function _creditos *****************
  1767 ;; Defined at:
  1768 ;;		line 27 in file "task_manager.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  lcd             2   25[COMRAM] PTR struct .
  1771 ;;		 -> PORTD(1), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1783 ;;      Params:         2       0       0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0
  1786 ;;      Totals:         2       0       0       0       0       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    6
  1790 ;; This function calls:
  1791 ;;		_print_mat
  1792 ;;		_strcpy
  1793 ;; This function is called by:
  1794 ;;		_gerenciador
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text6
  1799  000C10                     __ptext6:
  1800                           	opt callstack 0
  1801  000C10                     _creditos:
  1802                           	opt callstack 23
  1803  000C10                     
  1804                           ;task_manager.c: 29:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  1805  000C10  0E09               	movlw	low _mat_disp
  1806  000C12  6E49               	movwf	strcpy@dest^0,c
  1807  000C14  0E00               	movlw	high _mat_disp
  1808  000C16  6E4A               	movwf	(strcpy@dest+1)^0,c
  1809  000C18  0ECE               	movlw	low STR_1
  1810  000C1A  6E4B               	movwf	strcpy@src^0,c
  1811  000C1C  0E7F               	movlw	high STR_1
  1812  000C1E  6E4C               	movwf	(strcpy@src+1)^0,c
  1813  000C20  EC6E  F006         	call	_strcpy	;wreg free
  1814                           
  1815                           ;task_manager.c: 30:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  1816  000C24  0E19               	movlw	low (_mat_disp+16)
  1817  000C26  6E49               	movwf	strcpy@dest^0,c
  1818  000C28  0E00               	movlw	high (_mat_disp+16)
  1819  000C2A  6E4A               	movwf	(strcpy@dest+1)^0,c
  1820  000C2C  0EEE               	movlw	low STR_2
  1821  000C2E  6E4B               	movwf	strcpy@src^0,c
  1822  000C30  0E7F               	movlw	high STR_2
  1823  000C32  6E4C               	movwf	(strcpy@src+1)^0,c
  1824  000C34  EC6E  F006         	call	_strcpy	;wreg free
  1825                           
  1826                           ;task_manager.c: 31:     strcpy(mat_disp[2], "               ");
  1827  000C38  0E29               	movlw	low (_mat_disp+32)
  1828  000C3A  6E49               	movwf	strcpy@dest^0,c
  1829  000C3C  0E00               	movlw	high (_mat_disp+32)
  1830  000C3E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1831  000C40  0EF6               	movlw	low (STR_10+1)
  1832  000C42  6E4B               	movwf	strcpy@src^0,c
  1833  000C44  0E7E               	movlw	high (STR_10+1)
  1834  000C46  6E4C               	movwf	(strcpy@src+1)^0,c
  1835  000C48  EC6E  F006         	call	_strcpy	;wreg free
  1836                           
  1837                           ;task_manager.c: 32:     strcpy(mat_disp[3], "               ");
  1838  000C4C  0E39               	movlw	low (_mat_disp+48)
  1839  000C4E  6E49               	movwf	strcpy@dest^0,c
  1840  000C50  0E00               	movlw	high (_mat_disp+48)
  1841  000C52  6E4A               	movwf	(strcpy@dest+1)^0,c
  1842  000C54  0EF6               	movlw	low (STR_10+1)
  1843  000C56  6E4B               	movwf	strcpy@src^0,c
  1844  000C58  0E7E               	movlw	high (STR_10+1)
  1845  000C5A  6E4C               	movwf	(strcpy@src+1)^0,c
  1846  000C5C  EC6E  F006         	call	_strcpy	;wreg free
  1847  000C60                     
  1848                           ;task_manager.c: 33:     print_mat(lcd);
  1849  000C60  C062  F058         	movff	creditos@lcd,print_mat@lcd
  1850  000C64  C063  F059         	movff	creditos@lcd+1,print_mat@lcd+1
  1851  000C68  EC6C  F004         	call	_print_mat	;wreg free
  1852  000C6C                     l188:
  1853  000C6C  AA08               	btfss	_botoes^0,5,c
  1854  000C6E  EF3B  F006         	goto	u901
  1855  000C72  EF3D  F006         	goto	u900
  1856  000C76                     u901:
  1857  000C76  EF36  F006         	goto	l188
  1858  000C7A                     u900:
  1859  000C7A  0012               	return		;funcret
  1860  000C7C                     __end_of_creditos:
  1861                           	opt callstack 0
  1862                           
  1863 ;; *************** function _strcpy *****************
  1864 ;; Defined at:
  1865 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  dest            2    0[COMRAM] PTR unsigned char 
  1868 ;;		 -> mat_disp(64), 
  1869 ;;  src             2    2[COMRAM] PTR const unsigned char 
  1870 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  1871 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  1872 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1873 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1874 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  1875 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  d               2    6[COMRAM] PTR unsigned char 
  1878 ;;		 -> mat_disp(64), 
  1879 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1880 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  1881 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  1882 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1883 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1884 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  1885 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2    0[COMRAM] PTR unsigned char 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1895 ;;      Params:         4       0       0       0       0       0       0
  1896 ;;      Locals:         4       0       0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0
  1898 ;;      Totals:         8       0       0       0       0       0       0
  1899 ;;Total ram usage:        8 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    2
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_creditos
  1906 ;;		_finaliza
  1907 ;;		_jogar
  1908 ;;		_instrucoes
  1909 ;;		_menu
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text7
  1914  000CDC                     __ptext7:
  1915                           	opt callstack 0
  1916  000CDC                     _strcpy:
  1917                           	opt callstack 26
  1918  000CDC  C04B  F04D         	movff	strcpy@src,strcpy@s
  1919  000CE0  C04C  F04E         	movff	strcpy@src+1,strcpy@s+1
  1920  000CE4  C049  F04F         	movff	strcpy@dest,strcpy@d
  1921  000CE8  C04A  F050         	movff	strcpy@dest+1,strcpy@d+1
  1922  000CEC                     l1487:
  1923  000CEC  C04D  FFF6         	movff	strcpy@s,tblptrl
  1924  000CF0  C04E  FFF7         	movff	strcpy@s+1,tblptrh
  1925  000CF4  4A4D               	infsnz	strcpy@s^0,f,c
  1926  000CF6  2A4E               	incf	(strcpy@s+1)^0,f,c
  1927  000CF8                     	if	0	;tblptru may be non-zero
  1928  000CF8                     	endif
  1929  000CF8                     	if	0	;tblptru may be non-zero
  1930  000CF8                     	endif
  1931  000CF8  C04F  FFD9         	movff	strcpy@d,fsr2l
  1932  000CFC  C050  FFDA         	movff	strcpy@d+1,fsr2h
  1933  000D00  4A4F               	infsnz	strcpy@d^0,f,c
  1934  000D02  2A50               	incf	(strcpy@d+1)^0,f,c
  1935  000D04  0008               	tblrd		*
  1936  000D06  CFF5 FFDF          	movff	tablat,indf2
  1937  000D0A  50DF               	movf	indf2,w,c
  1938  000D0C  A4D8               	btfss	status,2,c
  1939  000D0E  EF8B  F006         	goto	u691
  1940  000D12  EF8D  F006         	goto	u690
  1941  000D16                     u691:
  1942  000D16  EF76  F006         	goto	l1487
  1943  000D1A                     u690:
  1944  000D1A  0012               	return		;funcret
  1945  000D1C                     __end_of_strcpy:
  1946                           	opt callstack 0
  1947                           
  1948 ;; *************** function _print_mat *****************
  1949 ;; Defined at:
  1950 ;;		line 199 in file "lcd.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  lcd             2   15[COMRAM] PTR struct .
  1953 ;;		 -> PORTD(1), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  j               2   21[COMRAM] int 
  1956 ;;  i               2   23[COMRAM] int 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1966 ;;      Params:         2       0       0       0       0       0       0
  1967 ;;      Locals:         4       0       0       0       0       0       0
  1968 ;;      Temps:          4       0       0       0       0       0       0
  1969 ;;      Totals:        10       0       0       0       0       0       0
  1970 ;;Total ram usage:       10 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    5
  1973 ;; This function calls:
  1974 ;;		_goto_XY
  1975 ;;		_write_char
  1976 ;; This function is called by:
  1977 ;;		_creditos
  1978 ;;		_finaliza
  1979 ;;		_jogar
  1980 ;;		_instrucoes
  1981 ;;		_menu
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text8
  1986  0008D8                     __ptext8:
  1987                           	opt callstack 0
  1988  0008D8                     _print_mat:
  1989                           	opt callstack 23
  1990  0008D8                     
  1991                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  1992  0008D8  0E00               	movlw	0
  1993  0008DA  6E61               	movwf	(print_mat@i+1)^0,c
  1994  0008DC  0E00               	movlw	0
  1995  0008DE  6E60               	movwf	print_mat@i^0,c
  1996  0008E0                     l1467:
  1997                           
  1998                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  1999  0008E0  C058  F050         	movff	print_mat@lcd,goto_XY@lcd
  2000  0008E4  C059  F051         	movff	print_mat@lcd+1,goto_XY@lcd+1
  2001  0008E8  2860               	incf	print_mat@i^0,w,c
  2002  0008EA  6E52               	movwf	goto_XY@x^0,c
  2003  0008EC  0E01               	movlw	1
  2004  0008EE  6E53               	movwf	goto_XY@y^0,c
  2005  0008F0  EC0E  F004         	call	_goto_XY	;wreg free
  2006  0008F4                     
  2007                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  2008  0008F4  0E00               	movlw	0
  2009  0008F6  6E5F               	movwf	(print_mat@j+1)^0,c
  2010  0008F8  0E00               	movlw	0
  2011  0008FA  6E5E               	movwf	print_mat@j^0,c
  2012  0008FC                     l1475:
  2013                           
  2014                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  2015  0008FC  C058  F049         	movff	print_mat@lcd,write_char@lcd
  2016  000900  C059  F04A         	movff	print_mat@lcd+1,write_char@lcd+1
  2017  000904  C060  F05A         	movff	print_mat@i,??_print_mat
  2018  000908  C061  F05B         	movff	print_mat@i+1,??_print_mat+1
  2019  00090C  3A5A               	swapf	??_print_mat^0,f,c
  2020  00090E  3A5B               	swapf	(??_print_mat+1)^0,f,c
  2021  000910  0EF0               	movlw	240
  2022  000912  165B               	andwf	(??_print_mat+1)^0,f,c
  2023  000914  505A               	movf	??_print_mat^0,w,c
  2024  000916  0B0F               	andlw	15
  2025  000918  125B               	iorwf	(??_print_mat+1)^0,f,c
  2026  00091A  0EF0               	movlw	240
  2027  00091C  165A               	andwf	??_print_mat^0,f,c
  2028  00091E  0E09               	movlw	low _mat_disp
  2029  000920  6E5C               	movwf	(??_print_mat+2)^0,c
  2030  000922  0E00               	movlw	high _mat_disp
  2031  000924  6E5D               	movwf	(??_print_mat+3)^0,c
  2032  000926  505A               	movf	??_print_mat^0,w,c
  2033  000928  265C               	addwf	(??_print_mat+2)^0,f,c
  2034  00092A  505B               	movf	(??_print_mat+1)^0,w,c
  2035  00092C  225D               	addwfc	(??_print_mat+3)^0,f,c
  2036  00092E  505E               	movf	print_mat@j^0,w,c
  2037  000930  245C               	addwf	(??_print_mat+2)^0,w,c
  2038  000932  6ED9               	movwf	fsr2l,c
  2039  000934  505F               	movf	(print_mat@j+1)^0,w,c
  2040  000936  205D               	addwfc	(??_print_mat+3)^0,w,c
  2041  000938  6EDA               	movwf	fsr2h,c
  2042  00093A  50DF               	movf	indf2,w,c
  2043  00093C  6E4B               	movwf	write_char@c^0,c
  2044  00093E  EC2D  F003         	call	_write_char	;wreg free
  2045  000942  4A5E               	infsnz	print_mat@j^0,f,c
  2046  000944  2A5F               	incf	(print_mat@j+1)^0,f,c
  2047  000946  BE5F               	btfsc	(print_mat@j+1)^0,7,c
  2048  000948  EFAF  F004         	goto	u671
  2049  00094C  505F               	movf	(print_mat@j+1)^0,w,c
  2050  00094E  E109               	bnz	u670
  2051  000950  0E10               	movlw	16
  2052  000952  5C5E               	subwf	print_mat@j^0,w,c
  2053  000954  A0D8               	btfss	status,0,c
  2054  000956  EFAF  F004         	goto	u671
  2055  00095A  EFB1  F004         	goto	u670
  2056  00095E                     u671:
  2057  00095E  EF7E  F004         	goto	l1475
  2058  000962                     u670:
  2059  000962                     
  2060                           ;lcd.c: 204:     }
  2061  000962  4A60               	infsnz	print_mat@i^0,f,c
  2062  000964  2A61               	incf	(print_mat@i+1)^0,f,c
  2063  000966  BE61               	btfsc	(print_mat@i+1)^0,7,c
  2064  000968  EFBF  F004         	goto	u681
  2065  00096C  5061               	movf	(print_mat@i+1)^0,w,c
  2066  00096E  E109               	bnz	u680
  2067  000970  0E04               	movlw	4
  2068  000972  5C60               	subwf	print_mat@i^0,w,c
  2069  000974  A0D8               	btfss	status,0,c
  2070  000976  EFBF  F004         	goto	u681
  2071  00097A  EFC1  F004         	goto	u680
  2072  00097E                     u681:
  2073  00097E  EF70  F004         	goto	l1467
  2074  000982                     u680:
  2075  000982  0012               	return		;funcret
  2076  000984                     __end_of_print_mat:
  2077                           	opt callstack 0
  2078                           
  2079 ;; *************** function _write_char *****************
  2080 ;; Defined at:
  2081 ;;		line 133 in file "lcd.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  lcd             2    0[COMRAM] PTR struct .
  2084 ;;		 -> PORTD(1), 
  2085 ;;  c               1    2[COMRAM] unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2097 ;;      Params:         3       0       0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0       0
  2099 ;;      Temps:          1       0       0       0       0       0       0
  2100 ;;      Totals:         4       0       0       0       0       0       0
  2101 ;;Total ram usage:        4 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    2
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_print_mat
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text9
  2112  00065A                     __ptext9:
  2113                           	opt callstack 0
  2114  00065A                     _write_char:
  2115                           	opt callstack 25
  2116  00065A                     
  2117                           ;lcd.c: 134:     lcd->E = 0;
  2118  00065A  C049  FFD9         	movff	write_char@lcd,fsr2l
  2119  00065E  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2120  000662  94DF               	bcf	indf2,2,c
  2121                           
  2122                           ;lcd.c: 135:     lcd->RS = 1;
  2123  000664  C049  FFD9         	movff	write_char@lcd,fsr2l
  2124  000668  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2125  00066C  80DF               	bsf	indf2,0,c
  2126                           
  2127                           ;lcd.c: 136:     lcd->R_W = 0;
  2128  00066E  C049  FFD9         	movff	write_char@lcd,fsr2l
  2129  000672  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2130  000676  92DF               	bcf	indf2,1,c
  2131  000678                     
  2132                           ;lcd.c: 139:     lcd->data = (c>>4);
  2133  000678  C04B  F04C         	movff	write_char@c,??_write_char
  2134  00067C  3A4C               	swapf	??_write_char^0,f,c
  2135  00067E  0E0F               	movlw	15
  2136  000680  164C               	andwf	??_write_char^0,f,c
  2137  000682  C049  FFD9         	movff	write_char@lcd,fsr2l
  2138  000686  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2139  00068A  3A4C               	swapf	??_write_char^0,f,c
  2140  00068C  50DF               	movf	indf2,w,c
  2141  00068E  184C               	xorwf	??_write_char^0,w,c
  2142  000690  0B0F               	andlw	-241
  2143  000692  184C               	xorwf	??_write_char^0,w,c
  2144  000694  6EDF               	movwf	indf2,c
  2145  000696                     
  2146                           ;lcd.c: 140:     lcd->E = 1;
  2147  000696  C049  FFD9         	movff	write_char@lcd,fsr2l
  2148  00069A  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2149  00069E  84DF               	bsf	indf2,2,c
  2150  0006A0                     
  2151                           ;lcd.c: 141:     lcd->E = 0;
  2152  0006A0  C049  FFD9         	movff	write_char@lcd,fsr2l
  2153  0006A4  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2154  0006A8  94DF               	bcf	indf2,2,c
  2155  0006AA                     
  2156                           ;lcd.c: 144:     lcd->data = (c);
  2157  0006AA  C04B  F04C         	movff	write_char@c,??_write_char
  2158  0006AE  C049  FFD9         	movff	write_char@lcd,fsr2l
  2159  0006B2  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2160  0006B6  3A4C               	swapf	??_write_char^0,f,c
  2161  0006B8  50DF               	movf	indf2,w,c
  2162  0006BA  184C               	xorwf	??_write_char^0,w,c
  2163  0006BC  0B0F               	andlw	-241
  2164  0006BE  184C               	xorwf	??_write_char^0,w,c
  2165  0006C0  6EDF               	movwf	indf2,c
  2166                           
  2167                           ;lcd.c: 145:     lcd->E = 1;
  2168  0006C2  C049  FFD9         	movff	write_char@lcd,fsr2l
  2169  0006C6  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2170  0006CA  84DF               	bsf	indf2,2,c
  2171                           
  2172                           ;lcd.c: 146:     lcd->E = 0;
  2173  0006CC  C049  FFD9         	movff	write_char@lcd,fsr2l
  2174  0006D0  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2175  0006D4  94DF               	bcf	indf2,2,c
  2176  0006D6                     
  2177                           ;lcd.c: 149:     TRISD = 0xF0;
  2178  0006D6  0EF0               	movlw	240
  2179  0006D8  6E95               	movwf	149,c	;volatile
  2180  0006DA                     
  2181                           ;lcd.c: 150:     lcd->RS = 0;
  2182  0006DA  C049  FFD9         	movff	write_char@lcd,fsr2l
  2183  0006DE  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2184  0006E2  90DF               	bcf	indf2,0,c
  2185  0006E4                     
  2186                           ;lcd.c: 151:     lcd->R_W = 1;
  2187  0006E4  C049  FFD9         	movff	write_char@lcd,fsr2l
  2188  0006E8  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2189  0006EC  82DF               	bsf	indf2,1,c
  2190  0006EE                     l1447:
  2191                           
  2192                           ;lcd.c: 153:        lcd->E = 1;
  2193  0006EE  C049  FFD9         	movff	write_char@lcd,fsr2l
  2194  0006F2  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2195  0006F6  84DF               	bsf	indf2,2,c
  2196  0006F8                     
  2197                           ;lcd.c: 154:        lcd->E = 0;
  2198  0006F8  C049  FFD9         	movff	write_char@lcd,fsr2l
  2199  0006FC  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2200  000700  94DF               	bcf	indf2,2,c
  2201  000702                     
  2202                           ;lcd.c: 155:        lcd->E = 1;
  2203  000702  C049  FFD9         	movff	write_char@lcd,fsr2l
  2204  000706  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2205  00070A  84DF               	bsf	indf2,2,c
  2206  00070C                     
  2207                           ;lcd.c: 156:        lcd->E = 0;
  2208  00070C  C049  FFD9         	movff	write_char@lcd,fsr2l
  2209  000710  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2210  000714  94DF               	bcf	indf2,2,c
  2211  000716                     
  2212                           ;lcd.c: 157:     } while(lcd->data&0x08);
  2213  000716  C049  FFD9         	movff	write_char@lcd,fsr2l
  2214  00071A  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2215  00071E  38DF               	swapf	indf2,w,c
  2216  000720  0B0F               	andlw	15
  2217  000722  6E4C               	movwf	??_write_char^0,c
  2218  000724  B64C               	btfsc	??_write_char^0,3,c
  2219  000726  EF97  F003         	goto	u661
  2220  00072A  EF99  F003         	goto	u660
  2221  00072E                     u661:
  2222  00072E  EF77  F003         	goto	l1447
  2223  000732                     u660:
  2224  000732                     
  2225                           ;lcd.c: 158:     lcd->R_W = 0;
  2226  000732  C049  FFD9         	movff	write_char@lcd,fsr2l
  2227  000736  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2228  00073A  92DF               	bcf	indf2,1,c
  2229  00073C                     
  2230                           ;lcd.c: 159:     TRISD = 0x00;
  2231  00073C  0E00               	movlw	0
  2232  00073E  6E95               	movwf	149,c	;volatile
  2233  000740  0012               	return		;funcret
  2234  000742                     __end_of_write_char:
  2235                           	opt callstack 0
  2236                           
  2237 ;; *************** function _goto_XY *****************
  2238 ;; Defined at:
  2239 ;;		line 76 in file "lcd.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  lcd             2    7[COMRAM] PTR struct .
  2242 ;;		 -> PORTD(1), 
  2243 ;;  x               1    9[COMRAM] unsigned char 
  2244 ;;  y               1   10[COMRAM] unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  temp            1   14[COMRAM] unsigned char 
  2247 ;;  a               1   13[COMRAM] unsigned char 
  2248 ;;  z               1   12[COMRAM] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2258 ;;      Params:         4       0       0       0       0       0       0
  2259 ;;      Locals:         3       0       0       0       0       0       0
  2260 ;;      Temps:          1       0       0       0       0       0       0
  2261 ;;      Totals:         8       0       0       0       0       0       0
  2262 ;;Total ram usage:        8 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    4
  2265 ;; This function calls:
  2266 ;;		_lcd_cmd
  2267 ;; This function is called by:
  2268 ;;		_print_mat
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text10
  2273  00081C                     __ptext10:
  2274                           	opt callstack 0
  2275  00081C                     _goto_XY:
  2276                           	opt callstack 23
  2277  00081C                     
  2278                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  2279  00081C  0452               	decf	goto_XY@x^0,w,c
  2280  00081E  A4D8               	btfss	status,2,c
  2281  000820  EF14  F004         	goto	u621
  2282  000824  EF16  F004         	goto	u620
  2283  000828                     u621:
  2284  000828  EF38  F004         	goto	l1395
  2285  00082C                     u620:
  2286  00082C                     
  2287                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  2288  00082C  5053               	movf	goto_XY@y^0,w,c
  2289  00082E  0F7F               	addlw	127
  2290  000830  6E57               	movwf	goto_XY@temp^0,c
  2291                           
  2292                           ;lcd.c: 81:        z = temp>>4;
  2293  000832  3857               	swapf	goto_XY@temp^0,w,c
  2294  000834  0B0F               	andlw	15
  2295  000836  6E55               	movwf	goto_XY@z^0,c
  2296  000838                     l1387:
  2297                           
  2298                           ;lcd.c: 82:        a = temp;
  2299  000838  C057  F056         	movff	goto_XY@temp,goto_XY@a
  2300  00083C                     
  2301                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  2302  00083C  C050  F04C         	movff	goto_XY@lcd,lcd_cmd@lcd
  2303  000840  C051  F04D         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  2304  000844  C055  F04E         	movff	goto_XY@z,lcd_cmd@a
  2305  000848  EC8E  F006         	call	_lcd_cmd	;wreg free
  2306  00084C                     
  2307                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  2308  00084C  0E06               	movlw	6
  2309  00084E  6E54               	movwf	??_goto_XY^0,c
  2310  000850  0E30               	movlw	48
  2311  000852                     u957:
  2312  000852  2EE8               	decfsz	wreg,f,c
  2313  000854  D7FE               	bra	u957
  2314  000856  2E54               	decfsz	??_goto_XY^0,f,c
  2315  000858  D7FC               	bra	u957
  2316  00085A  D000               	nop2	
  2317  00085C                     
  2318                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  2319  00085C  C050  F04C         	movff	goto_XY@lcd,lcd_cmd@lcd
  2320  000860  C051  F04D         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  2321  000864  C056  F04E         	movff	goto_XY@a,lcd_cmd@a
  2322  000868  EC8E  F006         	call	_lcd_cmd	;wreg free
  2323                           
  2324                           ;lcd.c: 86:     }
  2325  00086C  EF6B  F004         	goto	l74
  2326  000870                     l1395:
  2327  000870  0E02               	movlw	2
  2328  000872  1852               	xorwf	goto_XY@x^0,w,c
  2329  000874  A4D8               	btfss	status,2,c
  2330  000876  EF3F  F004         	goto	u631
  2331  00087A  EF41  F004         	goto	u630
  2332  00087E                     u631:
  2333  00087E  EF49  F004         	goto	l1407
  2334  000882                     u630:
  2335  000882                     
  2336                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  2337  000882  5053               	movf	goto_XY@y^0,w,c
  2338  000884  0FBF               	addlw	191
  2339  000886  6E57               	movwf	goto_XY@temp^0,c
  2340                           
  2341                           ;lcd.c: 90:        z = temp>>4;
  2342  000888  3857               	swapf	goto_XY@temp^0,w,c
  2343  00088A  0B0F               	andlw	15
  2344  00088C  6E55               	movwf	goto_XY@z^0,c
  2345  00088E  EF1C  F004         	goto	l1387
  2346  000892                     l1407:
  2347  000892  0E03               	movlw	3
  2348  000894  1852               	xorwf	goto_XY@x^0,w,c
  2349  000896  A4D8               	btfss	status,2,c
  2350  000898  EF50  F004         	goto	u641
  2351  00089C  EF52  F004         	goto	u640
  2352  0008A0                     u641:
  2353  0008A0  EF5A  F004         	goto	l1419
  2354  0008A4                     u640:
  2355  0008A4                     
  2356                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  2357  0008A4  5053               	movf	goto_XY@y^0,w,c
  2358  0008A6  0F8F               	addlw	143
  2359  0008A8  6E57               	movwf	goto_XY@temp^0,c
  2360                           
  2361                           ;lcd.c: 99:        z = temp>>4;
  2362  0008AA  3857               	swapf	goto_XY@temp^0,w,c
  2363  0008AC  0B0F               	andlw	15
  2364  0008AE  6E55               	movwf	goto_XY@z^0,c
  2365  0008B0  EF1C  F004         	goto	l1387
  2366  0008B4                     l1419:
  2367  0008B4  0E04               	movlw	4
  2368  0008B6  1852               	xorwf	goto_XY@x^0,w,c
  2369  0008B8  A4D8               	btfss	status,2,c
  2370  0008BA  EF61  F004         	goto	u651
  2371  0008BE  EF63  F004         	goto	u650
  2372  0008C2                     u651:
  2373  0008C2  EF6B  F004         	goto	l70
  2374  0008C6                     u650:
  2375  0008C6                     
  2376                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  2377  0008C6  5053               	movf	goto_XY@y^0,w,c
  2378  0008C8  0FCF               	addlw	207
  2379  0008CA  6E57               	movwf	goto_XY@temp^0,c
  2380                           
  2381                           ;lcd.c: 108:        z = temp>>4;
  2382  0008CC  3857               	swapf	goto_XY@temp^0,w,c
  2383  0008CE  0B0F               	andlw	15
  2384  0008D0  6E55               	movwf	goto_XY@z^0,c
  2385  0008D2  EF1C  F004         	goto	l1387
  2386  0008D6                     l70:
  2387  0008D6                     l74:
  2388  0008D6  0012               	return		;funcret
  2389  0008D8                     __end_of_goto_XY:
  2390                           	opt callstack 0
  2391                           
  2392 ;; *************** function _lcd_cmd *****************
  2393 ;; Defined at:
  2394 ;;		line 67 in file "lcd.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  lcd             2    3[COMRAM] PTR struct .
  2397 ;;		 -> PORTD(1), 
  2398 ;;  a               1    5[COMRAM] unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2410 ;;      Params:         3       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0
  2412 ;;      Temps:          1       0       0       0       0       0       0
  2413 ;;      Totals:         4       0       0       0       0       0       0
  2414 ;;Total ram usage:        4 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    3
  2417 ;; This function calls:
  2418 ;;		_pulso
  2419 ;; This function is called by:
  2420 ;;		_goto_XY
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text11
  2425  000D1C                     __ptext11:
  2426                           	opt callstack 0
  2427  000D1C                     _lcd_cmd:
  2428                           	opt callstack 23
  2429  000D1C                     
  2430                           ;lcd.c: 68:     lcd->RS = 0;
  2431  000D1C  C04C  FFD9         	movff	lcd_cmd@lcd,fsr2l
  2432  000D20  C04D  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  2433  000D24  90DF               	bcf	indf2,0,c
  2434  000D26                     
  2435                           ;lcd.c: 69:     lcd->data = (a);
  2436  000D26  C04E  F04F         	movff	lcd_cmd@a,??_lcd_cmd
  2437  000D2A  C04C  FFD9         	movff	lcd_cmd@lcd,fsr2l
  2438  000D2E  C04D  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  2439  000D32  3A4F               	swapf	??_lcd_cmd^0,f,c
  2440  000D34  50DF               	movf	indf2,w,c
  2441  000D36  184F               	xorwf	??_lcd_cmd^0,w,c
  2442  000D38  0B0F               	andlw	-241
  2443  000D3A  184F               	xorwf	??_lcd_cmd^0,w,c
  2444  000D3C  6EDF               	movwf	indf2,c
  2445  000D3E                     
  2446                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2447  000D3E  0E06               	movlw	6
  2448  000D40  6E4F               	movwf	??_lcd_cmd^0,c
  2449  000D42  0E30               	movlw	48
  2450  000D44                     u967:
  2451  000D44  2EE8               	decfsz	wreg,f,c
  2452  000D46  D7FE               	bra	u967
  2453  000D48  2E4F               	decfsz	??_lcd_cmd^0,f,c
  2454  000D4A  D7FC               	bra	u967
  2455  000D4C  D000               	nop2	
  2456  000D4E                     
  2457                           ;lcd.c: 72:     pulso(lcd);
  2458  000D4E  C04C  F049         	movff	lcd_cmd@lcd,pulso@lcd
  2459  000D52  C04D  F04A         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  2460  000D56  ECCA  F006         	call	_pulso	;wreg free
  2461  000D5A  0012               	return		;funcret
  2462  000D5C                     __end_of_lcd_cmd:
  2463                           	opt callstack 0
  2464                           
  2465 ;; *************** function _function_set *****************
  2466 ;; Defined at:
  2467 ;;		line 21 in file "lcd.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  lcd             2    3[COMRAM] PTR struct .
  2470 ;;		 -> PORTD(1), 
  2471 ;;  data_lenght     1    5[COMRAM] unsigned char 
  2472 ;;  num_lines       1    6[COMRAM] unsigned char 
  2473 ;;  char_font       1    7[COMRAM] unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2485 ;;      Params:         5       0       0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0
  2487 ;;      Temps:          3       0       0       0       0       0       0
  2488 ;;      Totals:         8       0       0       0       0       0       0
  2489 ;;Total ram usage:        8 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    3
  2492 ;; This function calls:
  2493 ;;		_pulso
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text12
  2500  000742                     __ptext12:
  2501                           	opt callstack 0
  2502  000742                     _function_set:
  2503                           	opt callstack 27
  2504  000742                     
  2505                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  2506  000742  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2507  000746  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2508  00074A  94DF               	bcf	indf2,2,c
  2509                           
  2510                           ;lcd.c: 24:     lcd->RS = 0;
  2511  00074C  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2512  000750  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2513  000754  90DF               	bcf	indf2,0,c
  2514                           
  2515                           ;lcd.c: 25:     lcd->R_W = 0;
  2516  000756  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2517  00075A  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2518  00075E  92DF               	bcf	indf2,1,c
  2519  000760                     
  2520                           ;lcd.c: 28:     lcd->data = 0x02;
  2521  000760  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2522  000764  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2523  000768  50DF               	movf	indf2,w,c
  2524  00076A  0B0F               	andlw	-241
  2525  00076C  0920               	iorlw	32
  2526  00076E  6EDF               	movwf	indf2,c
  2527  000770                     
  2528                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2529  000770  0E06               	movlw	6
  2530  000772  6E51               	movwf	??_function_set^0,c
  2531  000774  0E30               	movlw	48
  2532  000776                     u977:
  2533  000776  2EE8               	decfsz	wreg,f,c
  2534  000778  D7FE               	bra	u977
  2535  00077A  2E51               	decfsz	??_function_set^0,f,c
  2536  00077C  D7FC               	bra	u977
  2537  00077E  D000               	nop2	
  2538  000780                     
  2539                           ;lcd.c: 31:     pulso(lcd);
  2540  000780  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2541  000784  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2542  000788  ECCA  F006         	call	_pulso	;wreg free
  2543  00078C                     
  2544                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  2545  00078C  C04E  F051         	movff	function_set@data_lenght,??_function_set
  2546  000790  0E02               	movlw	2
  2547  000792  1251               	iorwf	??_function_set^0,f,c
  2548  000794  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2549  000798  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2550  00079C  3A51               	swapf	??_function_set^0,f,c
  2551  00079E  50DF               	movf	indf2,w,c
  2552  0007A0  1851               	xorwf	??_function_set^0,w,c
  2553  0007A2  0B0F               	andlw	-241
  2554  0007A4  1851               	xorwf	??_function_set^0,w,c
  2555  0007A6  6EDF               	movwf	indf2,c
  2556  0007A8                     
  2557                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2558  0007A8  0E06               	movlw	6
  2559  0007AA  6E51               	movwf	??_function_set^0,c
  2560  0007AC  0E30               	movlw	48
  2561  0007AE                     u987:
  2562  0007AE  2EE8               	decfsz	wreg,f,c
  2563  0007B0  D7FE               	bra	u987
  2564  0007B2  2E51               	decfsz	??_function_set^0,f,c
  2565  0007B4  D7FC               	bra	u987
  2566  0007B6  D000               	nop2	
  2567  0007B8                     
  2568                           ;lcd.c: 37:     pulso(lcd);
  2569  0007B8  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2570  0007BC  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2571  0007C0  ECCA  F006         	call	_pulso	;wreg free
  2572  0007C4                     
  2573                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  2574  0007C4  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2575  0007C8  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2576  0007CC  38DF               	swapf	indf2,w,c
  2577  0007CE  0B0F               	andlw	15
  2578  0007D0  6E51               	movwf	??_function_set^0,c
  2579  0007D2  C050  F052         	movff	function_set@char_font,??_function_set+1
  2580  0007D6  90D8               	bcf	status,0,c
  2581  0007D8  3652               	rlcf	(??_function_set+1)^0,f,c
  2582  0007DA  90D8               	bcf	status,0,c
  2583  0007DC  3652               	rlcf	(??_function_set+1)^0,f,c
  2584  0007DE  384F               	swapf	function_set@num_lines^0,w,c
  2585  0007E0  42E8               	rrncf	wreg,f,c
  2586  0007E2  0BF8               	andlw	248
  2587  0007E4  1052               	iorwf	(??_function_set+1)^0,w,c
  2588  0007E6  1051               	iorwf	??_function_set^0,w,c
  2589  0007E8  6E53               	movwf	(??_function_set+2)^0,c
  2590  0007EA  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2591  0007EE  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2592  0007F2  3A53               	swapf	(??_function_set+2)^0,f,c
  2593  0007F4  50DF               	movf	indf2,w,c
  2594  0007F6  1853               	xorwf	(??_function_set+2)^0,w,c
  2595  0007F8  0B0F               	andlw	-241
  2596  0007FA  1853               	xorwf	(??_function_set+2)^0,w,c
  2597  0007FC  6EDF               	movwf	indf2,c
  2598  0007FE                     
  2599                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2600  0007FE  0E06               	movlw	6
  2601  000800  6E51               	movwf	??_function_set^0,c
  2602  000802  0E30               	movlw	48
  2603  000804                     u997:
  2604  000804  2EE8               	decfsz	wreg,f,c
  2605  000806  D7FE               	bra	u997
  2606  000808  2E51               	decfsz	??_function_set^0,f,c
  2607  00080A  D7FC               	bra	u997
  2608  00080C  D000               	nop2	
  2609  00080E                     
  2610                           ;lcd.c: 44:     pulso(lcd);
  2611  00080E  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2612  000812  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2613  000816  ECCA  F006         	call	_pulso	;wreg free
  2614  00081A  0012               	return		;funcret
  2615  00081C                     __end_of_function_set:
  2616                           	opt callstack 0
  2617                           
  2618 ;; *************** function _entry_mode_set *****************
  2619 ;; Defined at:
  2620 ;;		line 116 in file "lcd.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  lcd             2    3[COMRAM] PTR struct .
  2623 ;;		 -> PORTD(1), 
  2624 ;;  move_directi    1    5[COMRAM] unsigned char 
  2625 ;;  display_shif    1    6[COMRAM] unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2637 ;;      Params:         4       0       0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0
  2639 ;;      Temps:          1       0       0       0       0       0       0
  2640 ;;      Totals:         5       0       0       0       0       0       0
  2641 ;;Total ram usage:        5 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    3
  2644 ;; This function calls:
  2645 ;;		_pulso
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text13
  2652  000AA8                     __ptext13:
  2653                           	opt callstack 0
  2654  000AA8                     _entry_mode_set:
  2655                           	opt callstack 27
  2656  000AA8                     
  2657                           ;lcd.c: 117:     lcd->E = 0;
  2658  000AA8  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2659  000AAC  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2660  000AB0  94DF               	bcf	indf2,2,c
  2661                           
  2662                           ;lcd.c: 118:     lcd->RS = 0;
  2663  000AB2  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2664  000AB6  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2665  000ABA  90DF               	bcf	indf2,0,c
  2666                           
  2667                           ;lcd.c: 119:     lcd->R_W = 0;
  2668  000ABC  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2669  000AC0  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2670  000AC4  92DF               	bcf	indf2,1,c
  2671  000AC6                     
  2672                           ;lcd.c: 121:     lcd->data = 0x00;
  2673  000AC6  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2674  000ACA  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2675  000ACE  0E0F               	movlw	-241
  2676  000AD0  16DF               	andwf	indf2,f,c
  2677  000AD2                     
  2678                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2679  000AD2  0E06               	movlw	6
  2680  000AD4  6E50               	movwf	??_entry_mode_set^0,c
  2681  000AD6  0E30               	movlw	48
  2682  000AD8                     u1007:
  2683  000AD8  2EE8               	decfsz	wreg,f,c
  2684  000ADA  D7FE               	bra	u1007
  2685  000ADC  2E50               	decfsz	??_entry_mode_set^0,f,c
  2686  000ADE  D7FC               	bra	u1007
  2687  000AE0  D000               	nop2	
  2688  000AE2                     
  2689                           ;lcd.c: 124:     pulso(lcd);
  2690  000AE2  C04C  F049         	movff	entry_mode_set@lcd,pulso@lcd
  2691  000AE6  C04D  F04A         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  2692  000AEA  ECCA  F006         	call	_pulso	;wreg free
  2693  000AEE                     
  2694                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  2695  000AEE  504E               	movf	entry_mode_set@move_direction^0,w,c
  2696  000AF0  244E               	addwf	entry_mode_set@move_direction^0,w,c
  2697  000AF2  104F               	iorwf	entry_mode_set@display_shift^0,w,c
  2698  000AF4  6E50               	movwf	??_entry_mode_set^0,c
  2699  000AF6  0E04               	movlw	4
  2700  000AF8  1250               	iorwf	??_entry_mode_set^0,f,c
  2701  000AFA  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2702  000AFE  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2703  000B02  3A50               	swapf	??_entry_mode_set^0,f,c
  2704  000B04  50DF               	movf	indf2,w,c
  2705  000B06  1850               	xorwf	??_entry_mode_set^0,w,c
  2706  000B08  0B0F               	andlw	-241
  2707  000B0A  1850               	xorwf	??_entry_mode_set^0,w,c
  2708  000B0C  6EDF               	movwf	indf2,c
  2709  000B0E                     
  2710                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2711  000B0E  0E06               	movlw	6
  2712  000B10  6E50               	movwf	??_entry_mode_set^0,c
  2713  000B12  0E30               	movlw	48
  2714  000B14                     u1017:
  2715  000B14  2EE8               	decfsz	wreg,f,c
  2716  000B16  D7FE               	bra	u1017
  2717  000B18  2E50               	decfsz	??_entry_mode_set^0,f,c
  2718  000B1A  D7FC               	bra	u1017
  2719  000B1C  D000               	nop2	
  2720  000B1E                     
  2721                           ;lcd.c: 130:     pulso(lcd);
  2722  000B1E  C04C  F049         	movff	entry_mode_set@lcd,pulso@lcd
  2723  000B22  C04D  F04A         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  2724  000B26  ECCA  F006         	call	_pulso	;wreg free
  2725  000B2A  0012               	return		;funcret
  2726  000B2C                     __end_of_entry_mode_set:
  2727                           	opt callstack 0
  2728                           
  2729 ;; *************** function _display_onoff_control *****************
  2730 ;; Defined at:
  2731 ;;		line 47 in file "lcd.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  lcd             2    3[COMRAM] PTR struct .
  2734 ;;		 -> PORTD(1), 
  2735 ;;  display_on      1    5[COMRAM] unsigned char 
  2736 ;;  cursor_on       1    6[COMRAM] unsigned char 
  2737 ;;  blink           1    7[COMRAM] unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2749 ;;      Params:         5       0       0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0
  2751 ;;      Temps:          2       0       0       0       0       0       0
  2752 ;;      Totals:         7       0       0       0       0       0       0
  2753 ;;Total ram usage:        7 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    3
  2756 ;; This function calls:
  2757 ;;		_pulso
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text14
  2764  000A1A                     __ptext14:
  2765                           	opt callstack 0
  2766  000A1A                     _display_onoff_control:
  2767                           	opt callstack 27
  2768  000A1A                     
  2769                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  2770  000A1A  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2771  000A1E  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2772  000A22  94DF               	bcf	indf2,2,c
  2773                           
  2774                           ;lcd.c: 50:     lcd->RS = 0;
  2775  000A24  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2776  000A28  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2777  000A2C  90DF               	bcf	indf2,0,c
  2778                           
  2779                           ;lcd.c: 51:     lcd->R_W = 0;
  2780  000A2E  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2781  000A32  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2782  000A36  92DF               	bcf	indf2,1,c
  2783  000A38                     
  2784                           ;lcd.c: 54:     lcd->data = 0x00;
  2785  000A38  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2786  000A3C  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2787  000A40  0E0F               	movlw	-241
  2788  000A42  16DF               	andwf	indf2,f,c
  2789  000A44                     
  2790                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2791  000A44  0E06               	movlw	6
  2792  000A46  6E51               	movwf	??_display_onoff_control^0,c
  2793  000A48  0E30               	movlw	48
  2794  000A4A                     u1027:
  2795  000A4A  2EE8               	decfsz	wreg,f,c
  2796  000A4C  D7FE               	bra	u1027
  2797  000A4E  2E51               	decfsz	??_display_onoff_control^0,f,c
  2798  000A50  D7FC               	bra	u1027
  2799  000A52  D000               	nop2	
  2800  000A54                     
  2801                           ;lcd.c: 57:     pulso(lcd);
  2802  000A54  C04C  F049         	movff	display_onoff_control@lcd,pulso@lcd
  2803  000A58  C04D  F04A         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2804  000A5C  ECCA  F006         	call	_pulso	;wreg free
  2805  000A60                     
  2806                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  2807  000A60  90D8               	bcf	status,0,c
  2808  000A62  344F               	rlcf	display_onoff_control@cursor_on^0,w,c
  2809  000A64  6E51               	movwf	??_display_onoff_control^0,c
  2810  000A66  444E               	rlncf	display_onoff_control@display_on^0,w,c
  2811  000A68  46E8               	rlncf	wreg,f,c
  2812  000A6A  0BFC               	andlw	252
  2813  000A6C  1051               	iorwf	??_display_onoff_control^0,w,c
  2814  000A6E  1050               	iorwf	display_onoff_control@blink^0,w,c
  2815  000A70  6E52               	movwf	(??_display_onoff_control+1)^0,c
  2816  000A72  0E08               	movlw	8
  2817  000A74  1252               	iorwf	(??_display_onoff_control+1)^0,f,c
  2818  000A76  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2819  000A7A  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2820  000A7E  3A52               	swapf	(??_display_onoff_control+1)^0,f,c
  2821  000A80  50DF               	movf	indf2,w,c
  2822  000A82  1852               	xorwf	(??_display_onoff_control+1)^0,w,c
  2823  000A84  0B0F               	andlw	-241
  2824  000A86  1852               	xorwf	(??_display_onoff_control+1)^0,w,c
  2825  000A88  6EDF               	movwf	indf2,c
  2826  000A8A                     
  2827                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2828  000A8A  0E06               	movlw	6
  2829  000A8C  6E51               	movwf	??_display_onoff_control^0,c
  2830  000A8E  0E30               	movlw	48
  2831  000A90                     u1037:
  2832  000A90  2EE8               	decfsz	wreg,f,c
  2833  000A92  D7FE               	bra	u1037
  2834  000A94  2E51               	decfsz	??_display_onoff_control^0,f,c
  2835  000A96  D7FC               	bra	u1037
  2836  000A98  D000               	nop2	
  2837  000A9A                     
  2838                           ;lcd.c: 64:     pulso(lcd);
  2839  000A9A  C04C  F049         	movff	display_onoff_control@lcd,pulso@lcd
  2840  000A9E  C04D  F04A         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2841  000AA2  ECCA  F006         	call	_pulso	;wreg free
  2842  000AA6  0012               	return		;funcret
  2843  000AA8                     __end_of_display_onoff_control:
  2844                           	opt callstack 0
  2845                           
  2846 ;; *************** function _pulso *****************
  2847 ;; Defined at:
  2848 ;;		line 11 in file "lcd.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  lcd             2    0[COMRAM] PTR struct .
  2851 ;;		 -> PORTD(1), 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2863 ;;      Params:         2       0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0
  2865 ;;      Temps:          1       0       0       0       0       0       0
  2866 ;;      Totals:         3       0       0       0       0       0       0
  2867 ;;Total ram usage:        3 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    2
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_function_set
  2874 ;;		_display_onoff_control
  2875 ;;		_lcd_cmd
  2876 ;;		_entry_mode_set
  2877 ;;		_clear_display
  2878 ;;		_return_home
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text15
  2883  000D94                     __ptext15:
  2884                           	opt callstack 0
  2885  000D94                     _pulso:
  2886                           	opt callstack 23
  2887  000D94                     
  2888                           ;lcd.c: 13:     lcd->E = 1;
  2889  000D94  C049  FFD9         	movff	pulso@lcd,fsr2l
  2890  000D98  C04A  FFDA         	movff	pulso@lcd+1,fsr2h
  2891  000D9C  84DF               	bsf	indf2,2,c
  2892  000D9E                     
  2893                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2894  000D9E  0E06               	movlw	6
  2895  000DA0  6E4B               	movwf	??_pulso^0,c
  2896  000DA2  0E30               	movlw	48
  2897  000DA4                     u1047:
  2898  000DA4  2EE8               	decfsz	wreg,f,c
  2899  000DA6  D7FE               	bra	u1047
  2900  000DA8  2E4B               	decfsz	??_pulso^0,f,c
  2901  000DAA  D7FC               	bra	u1047
  2902  000DAC  D000               	nop2	
  2903  000DAE                     
  2904                           ;lcd.c: 17:     lcd->E = 0;
  2905  000DAE  C049  FFD9         	movff	pulso@lcd,fsr2l
  2906  000DB2  C04A  FFDA         	movff	pulso@lcd+1,fsr2h
  2907  000DB6  94DF               	bcf	indf2,2,c
  2908                           
  2909                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2910  000DB8  0E06               	movlw	6
  2911  000DBA  6E4B               	movwf	??_pulso^0,c
  2912  000DBC  0E30               	movlw	48
  2913  000DBE                     u1057:
  2914  000DBE  2EE8               	decfsz	wreg,f,c
  2915  000DC0  D7FE               	bra	u1057
  2916  000DC2  2E4B               	decfsz	??_pulso^0,f,c
  2917  000DC4  D7FC               	bra	u1057
  2918  000DC6  D000               	nop2	
  2919  000DC8  0012               	return		;funcret
  2920  000DCA                     __end_of_pulso:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _int_handler *****************
  2924 ;; Defined at:
  2925 ;;		line 24 in file "main.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2939 ;;      Params:         0       0       0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    1
  2946 ;; This function calls:
  2947 ;;		_le_entrada
  2948 ;; This function is called by:
  2949 ;;		Interrupt level 2
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	intcode
  2954  000008                     __pintcode:
  2955                           	opt callstack 0
  2956  000008                     _int_handler:
  2957                           	opt callstack 23
  2958                           
  2959                           ;incstack = 0
  2960  000008  8270               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2961  00000A  EDE5  F006         	call	int_func,f	;refresh shadow registers
  2962                           
  2963                           	psect	intcode_body
  2964  000DCA                     __pintcode_body:
  2965                           	opt callstack 23
  2966  000DCA                     int_func:
  2967                           	opt callstack 23
  2968  000DCA  0006               	pop		; remove dummy address from shadow register refresh
  2969  000DCC                     
  2970                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  2971  000DCC  A4F2               	btfss	242,2,c	;volatile
  2972  000DCE  EFEB  F006         	goto	i2u60_41
  2973  000DD2  EFED  F006         	goto	i2u60_40
  2974  000DD6                     i2u60_41:
  2975  000DD6  EFF2  F006         	goto	i2l1315
  2976  000DDA                     i2u60_40:
  2977  000DDA                     
  2978                           ;main.c: 26:         TMR0L = 0x63;
  2979  000DDA  0E63               	movlw	99
  2980  000DDC  6ED6               	movwf	214,c	;volatile
  2981  000DDE                     
  2982                           ;main.c: 27:         le_entrada();
  2983  000DDE  ECB8  F001         	call	_le_entrada	;wreg free
  2984  000DE2                     
  2985                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  2986  000DE2  94F2               	bcf	242,2,c	;volatile
  2987  000DE4                     i2l1315:
  2988                           
  2989                           ;main.c: 30:     if(INTCONbits.INT0IF == 1){
  2990  000DE4  A2F2               	btfss	242,1,c	;volatile
  2991  000DE6  EFF7  F006         	goto	i2u61_41
  2992  000DEA  EFF9  F006         	goto	i2u61_40
  2993  000DEE                     i2u61_41:
  2994  000DEE  EFFB  F006         	goto	i2l41
  2995  000DF2                     i2u61_40:
  2996  000DF2                     
  2997                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  2998  000DF2  92F2               	bcf	242,1,c	;volatile
  2999  000DF4  00FF               	reset		;# 
  3000  000DF6                     i2l41:
  3001  000DF6  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3002  000DF8  0011               	retfie		f
  3003  000DFA                     __end_of_int_handler:
  3004                           	opt callstack 0
  3005                           
  3006 ;; *************** function _le_entrada *****************
  3007 ;; Defined at:
  3008 ;;		line 12 in file "keyboard.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3022 ;;      Params:         0       0       0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0
  3025 ;;      Totals:         0       0       0       0       0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_int_handler
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text17
  3036  000370                     __ptext17:
  3037                           	opt callstack 0
  3038  000370                     _le_entrada:
  3039                           	opt callstack 23
  3040  000370                     
  3041                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  3042  000370  8E81               	bsf	129,7,c	;volatile
  3043                           
  3044                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  3045  000372  B007               	btfsc	_botoes_ant^0,0,c
  3046  000374  EFBE  F001         	goto	i2u30_41
  3047  000378  EFC0  F001         	goto	i2u30_40
  3048  00037C                     i2u30_41:
  3049  00037C  EFC7  F001         	goto	i2l1163
  3050  000380                     i2u30_40:
  3051  000380  B481               	btfsc	129,2,c	;volatile
  3052  000382  EFC5  F001         	goto	i2u31_41
  3053  000386  EFC7  F001         	goto	i2u31_40
  3054  00038A                     i2u31_41:
  3055  00038A  EFCF  F001         	goto	i2l114
  3056  00038E                     i2u31_40:
  3057  00038E                     i2l1163:
  3058  00038E  0E32               	movlw	50
  3059  000390  6406               	cpfsgt	_cont_u^0,c
  3060  000392  EFCD  F001         	goto	i2u32_41
  3061  000396  EFCF  F001         	goto	i2u32_40
  3062  00039A                     i2u32_41:
  3063  00039A  EFD5  F001         	goto	i2l112
  3064  00039E                     i2u32_40:
  3065  00039E                     i2l114:
  3066                           
  3067                           ;keyboard.c: 15:         botoes.U = 1;
  3068  00039E  8008               	bsf	_botoes^0,0,c
  3069                           
  3070                           ;keyboard.c: 16:         botoes_ant.U = 1;
  3071  0003A0  8007               	bsf	_botoes_ant^0,0,c
  3072  0003A2                     i2l1165:
  3073                           
  3074                           ;keyboard.c: 17:         cont_u = 0;
  3075  0003A2  0E00               	movlw	0
  3076  0003A4  6E06               	movwf	_cont_u^0,c
  3077                           
  3078                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  3079  0003A6  EFEF  F001         	goto	i2l1175
  3080  0003AA                     i2l112:
  3081  0003AA  A007               	btfss	_botoes_ant^0,0,c
  3082  0003AC  EFDA  F001         	goto	i2u33_41
  3083  0003B0  EFDC  F001         	goto	i2u33_40
  3084  0003B4                     i2u33_41:
  3085  0003B4  EFE7  F001         	goto	i2l118
  3086  0003B8                     i2u33_40:
  3087  0003B8  B481               	btfsc	129,2,c	;volatile
  3088  0003BA  EFE1  F001         	goto	i2u34_41
  3089  0003BE  EFE3  F001         	goto	i2u34_40
  3090  0003C2                     i2u34_41:
  3091  0003C2  EFE7  F001         	goto	i2l118
  3092  0003C6                     i2u34_40:
  3093  0003C6                     
  3094                           ;keyboard.c: 19:         botoes.U = 0;
  3095  0003C6  9008               	bcf	_botoes^0,0,c
  3096                           
  3097                           ;keyboard.c: 20:         botoes_ant.U = 0;
  3098  0003C8  9007               	bcf	_botoes_ant^0,0,c
  3099  0003CA  EFD1  F001         	goto	i2l1165
  3100  0003CE                     i2l118:
  3101  0003CE  A481               	btfss	129,2,c	;volatile
  3102  0003D0  EFEC  F001         	goto	i2u35_41
  3103  0003D4  EFEE  F001         	goto	i2u35_40
  3104  0003D8                     i2u35_41:
  3105  0003D8  EFEF  F001         	goto	i2l1175
  3106  0003DC                     i2u35_40:
  3107  0003DC  2A06               	incf	_cont_u^0,f,c
  3108  0003DE                     i2l1175:
  3109                           
  3110                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  3111  0003DE  9E81               	bcf	129,7,c	;volatile
  3112  0003E0                     
  3113                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  3114  0003E0  8C81               	bsf	129,6,c	;volatile
  3115  0003E2                     
  3116                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  3117  0003E2  B407               	btfsc	_botoes_ant^0,2,c
  3118  0003E4  EFF6  F001         	goto	i2u36_41
  3119  0003E8  EFF8  F001         	goto	i2u36_40
  3120  0003EC                     i2u36_41:
  3121  0003EC  EFFF  F001         	goto	i2l1183
  3122  0003F0                     i2u36_40:
  3123  0003F0  B281               	btfsc	129,1,c	;volatile
  3124  0003F2  EFFD  F001         	goto	i2u37_41
  3125  0003F6  EFFF  F001         	goto	i2u37_40
  3126  0003FA                     i2u37_41:
  3127  0003FA  EF07  F002         	goto	i2l123
  3128  0003FE                     i2u37_40:
  3129  0003FE                     i2l1183:
  3130  0003FE  0E32               	movlw	50
  3131  000400  6404               	cpfsgt	_cont_l^0,c
  3132  000402  EF05  F002         	goto	i2u38_41
  3133  000406  EF07  F002         	goto	i2u38_40
  3134  00040A                     i2u38_41:
  3135  00040A  EF0D  F002         	goto	i2l121
  3136  00040E                     i2u38_40:
  3137  00040E                     i2l123:
  3138                           
  3139                           ;keyboard.c: 27:         botoes.L = 1;
  3140  00040E  8408               	bsf	_botoes^0,2,c
  3141                           
  3142                           ;keyboard.c: 28:         botoes_ant.L = 1;
  3143  000410  8407               	bsf	_botoes_ant^0,2,c
  3144  000412                     i2l1185:
  3145                           
  3146                           ;keyboard.c: 29:         cont_l = 0;
  3147  000412  0E00               	movlw	0
  3148  000414  6E04               	movwf	_cont_l^0,c
  3149                           
  3150                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  3151  000416  EF27  F002         	goto	i2l1195
  3152  00041A                     i2l121:
  3153  00041A  A407               	btfss	_botoes_ant^0,2,c
  3154  00041C  EF12  F002         	goto	i2u39_41
  3155  000420  EF14  F002         	goto	i2u39_40
  3156  000424                     i2u39_41:
  3157  000424  EF1F  F002         	goto	i2l127
  3158  000428                     i2u39_40:
  3159  000428  B281               	btfsc	129,1,c	;volatile
  3160  00042A  EF19  F002         	goto	i2u40_41
  3161  00042E  EF1B  F002         	goto	i2u40_40
  3162  000432                     i2u40_41:
  3163  000432  EF1F  F002         	goto	i2l127
  3164  000436                     i2u40_40:
  3165  000436                     
  3166                           ;keyboard.c: 31:         botoes.L = 0;
  3167  000436  9408               	bcf	_botoes^0,2,c
  3168                           
  3169                           ;keyboard.c: 32:         botoes_ant.L = 0;
  3170  000438  9407               	bcf	_botoes_ant^0,2,c
  3171  00043A  EF09  F002         	goto	i2l1185
  3172  00043E                     i2l127:
  3173  00043E  A281               	btfss	129,1,c	;volatile
  3174  000440  EF24  F002         	goto	i2u41_41
  3175  000444  EF26  F002         	goto	i2u41_40
  3176  000448                     i2u41_41:
  3177  000448  EF27  F002         	goto	i2l1195
  3178  00044C                     i2u41_40:
  3179  00044C  2A04               	incf	_cont_l^0,f,c
  3180  00044E                     i2l1195:
  3181                           
  3182                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  3183  00044E  B607               	btfsc	_botoes_ant^0,3,c
  3184  000450  EF2C  F002         	goto	i2u42_41
  3185  000454  EF2E  F002         	goto	i2u42_40
  3186  000458                     i2u42_41:
  3187  000458  EF35  F002         	goto	i2l1199
  3188  00045C                     i2u42_40:
  3189  00045C  B681               	btfsc	129,3,c	;volatile
  3190  00045E  EF33  F002         	goto	i2u43_41
  3191  000462  EF35  F002         	goto	i2u43_40
  3192  000466                     i2u43_41:
  3193  000466  EF3D  F002         	goto	i2l132
  3194  00046A                     i2u43_40:
  3195  00046A                     i2l1199:
  3196  00046A  0E32               	movlw	50
  3197  00046C  6403               	cpfsgt	_cont_r^0,c
  3198  00046E  EF3B  F002         	goto	i2u44_41
  3199  000472  EF3D  F002         	goto	i2u44_40
  3200  000476                     i2u44_41:
  3201  000476  EF43  F002         	goto	i2l130
  3202  00047A                     i2u44_40:
  3203  00047A                     i2l132:
  3204                           
  3205                           ;keyboard.c: 37:         botoes.R = 1;
  3206  00047A  8608               	bsf	_botoes^0,3,c
  3207                           
  3208                           ;keyboard.c: 38:         botoes_ant.R = 1;
  3209  00047C  8607               	bsf	_botoes_ant^0,3,c
  3210  00047E                     i2l1201:
  3211                           
  3212                           ;keyboard.c: 39:         cont_r = 0;
  3213  00047E  0E00               	movlw	0
  3214  000480  6E03               	movwf	_cont_r^0,c
  3215                           
  3216                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  3217  000482  EF5D  F002         	goto	i2l1211
  3218  000486                     i2l130:
  3219  000486  A607               	btfss	_botoes_ant^0,3,c
  3220  000488  EF48  F002         	goto	i2u45_41
  3221  00048C  EF4A  F002         	goto	i2u45_40
  3222  000490                     i2u45_41:
  3223  000490  EF55  F002         	goto	i2l136
  3224  000494                     i2u45_40:
  3225  000494  B681               	btfsc	129,3,c	;volatile
  3226  000496  EF4F  F002         	goto	i2u46_41
  3227  00049A  EF51  F002         	goto	i2u46_40
  3228  00049E                     i2u46_41:
  3229  00049E  EF55  F002         	goto	i2l136
  3230  0004A2                     i2u46_40:
  3231  0004A2                     
  3232                           ;keyboard.c: 41:         botoes.R = 0;
  3233  0004A2  9608               	bcf	_botoes^0,3,c
  3234                           
  3235                           ;keyboard.c: 42:         botoes_ant.R = 0;
  3236  0004A4  9607               	bcf	_botoes_ant^0,3,c
  3237  0004A6  EF3F  F002         	goto	i2l1201
  3238  0004AA                     i2l136:
  3239  0004AA  A681               	btfss	129,3,c	;volatile
  3240  0004AC  EF5A  F002         	goto	i2u47_41
  3241  0004B0  EF5C  F002         	goto	i2u47_40
  3242  0004B4                     i2u47_41:
  3243  0004B4  EF5D  F002         	goto	i2l1211
  3244  0004B8                     i2u47_40:
  3245  0004B8  2A03               	incf	_cont_r^0,f,c
  3246  0004BA                     i2l1211:
  3247                           
  3248                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  3249  0004BA  9C81               	bcf	129,6,c	;volatile
  3250  0004BC                     
  3251                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  3252  0004BC  8A81               	bsf	129,5,c	;volatile
  3253  0004BE                     
  3254                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  3255  0004BE  B207               	btfsc	_botoes_ant^0,1,c
  3256  0004C0  EF64  F002         	goto	i2u48_41
  3257  0004C4  EF66  F002         	goto	i2u48_40
  3258  0004C8                     i2u48_41:
  3259  0004C8  EF6D  F002         	goto	i2l1219
  3260  0004CC                     i2u48_40:
  3261  0004CC  B481               	btfsc	129,2,c	;volatile
  3262  0004CE  EF6B  F002         	goto	i2u49_41
  3263  0004D2  EF6D  F002         	goto	i2u49_40
  3264  0004D6                     i2u49_41:
  3265  0004D6  EF75  F002         	goto	i2l141
  3266  0004DA                     i2u49_40:
  3267  0004DA                     i2l1219:
  3268  0004DA  0E32               	movlw	50
  3269  0004DC  6405               	cpfsgt	_cont_d^0,c
  3270  0004DE  EF73  F002         	goto	i2u50_41
  3271  0004E2  EF75  F002         	goto	i2u50_40
  3272  0004E6                     i2u50_41:
  3273  0004E6  EF7B  F002         	goto	i2l139
  3274  0004EA                     i2u50_40:
  3275  0004EA                     i2l141:
  3276                           
  3277                           ;keyboard.c: 49:         botoes.D = 1;
  3278  0004EA  8208               	bsf	_botoes^0,1,c
  3279                           
  3280                           ;keyboard.c: 50:         botoes_ant.D = 1;
  3281  0004EC  8207               	bsf	_botoes_ant^0,1,c
  3282  0004EE                     i2l1221:
  3283                           
  3284                           ;keyboard.c: 51:         cont_d = 0;
  3285  0004EE  0E00               	movlw	0
  3286  0004F0  6E05               	movwf	_cont_d^0,c
  3287                           
  3288                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  3289  0004F2  EF95  F002         	goto	i2l1231
  3290  0004F6                     i2l139:
  3291  0004F6  A207               	btfss	_botoes_ant^0,1,c
  3292  0004F8  EF80  F002         	goto	i2u51_41
  3293  0004FC  EF82  F002         	goto	i2u51_40
  3294  000500                     i2u51_41:
  3295  000500  EF8D  F002         	goto	i2l145
  3296  000504                     i2u51_40:
  3297  000504  B481               	btfsc	129,2,c	;volatile
  3298  000506  EF87  F002         	goto	i2u52_41
  3299  00050A  EF89  F002         	goto	i2u52_40
  3300  00050E                     i2u52_41:
  3301  00050E  EF8D  F002         	goto	i2l145
  3302  000512                     i2u52_40:
  3303  000512                     
  3304                           ;keyboard.c: 53:         botoes.D = 0;
  3305  000512  9208               	bcf	_botoes^0,1,c
  3306                           
  3307                           ;keyboard.c: 54:         botoes_ant.D = 0;
  3308  000514  9207               	bcf	_botoes_ant^0,1,c
  3309  000516  EF77  F002         	goto	i2l1221
  3310  00051A                     i2l145:
  3311  00051A  A481               	btfss	129,2,c	;volatile
  3312  00051C  EF92  F002         	goto	i2u53_41
  3313  000520  EF94  F002         	goto	i2u53_40
  3314  000524                     i2u53_41:
  3315  000524  EF95  F002         	goto	i2l1231
  3316  000528                     i2u53_40:
  3317  000528  2A05               	incf	_cont_d^0,f,c
  3318  00052A                     i2l1231:
  3319                           
  3320                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  3321  00052A  9A81               	bcf	129,5,c	;volatile
  3322  00052C                     
  3323                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  3324  00052C  8881               	bsf	129,4,c	;volatile
  3325  00052E                     
  3326                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  3327  00052E  A281               	btfss	129,1,c	;volatile
  3328  000530  D002               	bra	i2u54_45
  3329  000532  8808               	bsf	_botoes^0,4,c
  3330  000534  D001               	bra	i2u54_47
  3331  000536                     i2u54_45:
  3332  000536  9808               	bcf	_botoes^0,4,c
  3333  000538                     i2u54_47:
  3334  000538                     
  3335                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  3336  000538  A681               	btfss	129,3,c	;volatile
  3337  00053A  D002               	bra	i2u55_45
  3338  00053C  8A08               	bsf	_botoes^0,5,c
  3339  00053E  D001               	bra	i2u55_47
  3340  000540                     i2u55_45:
  3341  000540  9A08               	bcf	_botoes^0,5,c
  3342  000542                     i2u55_47:
  3343  000542                     
  3344                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  3345  000542  9881               	bcf	129,4,c	;volatile
  3346  000544  0012               	return		;funcret
  3347  000546                     __end_of_le_entrada:
  3348                           	opt callstack 0
  3349                           
  3350                           	psect	rparam
  3351  0000                     
  3352                           	psect	temp
  3353  000070                     btemp:
  3354                           	opt callstack 0
  3355  000070                     	ds	1
  3356  0000                     int$flags	set	btemp
  3357  0000                     wtemp8	set	btemp+1
  3358  0000                     ttemp5	set	btemp+1
  3359  0000                     ttemp6	set	btemp+4
  3360  0000                     ttemp7	set	btemp+8
  3361                           tosu	equ	0xFFF
  3362                           tosh	equ	0xFFE
  3363                           tosl	equ	0xFFD
  3364                           stkptr	equ	0xFFC
  3365                           pclatu	equ	0xFFB
  3366                           pclath	equ	0xFFA
  3367                           pcl	equ	0xFF9
  3368                           tblptru	equ	0xFF8
  3369                           tblptrh	equ	0xFF7
  3370                           tblptrl	equ	0xFF6
  3371                           tablat	equ	0xFF5
  3372                           prodh	equ	0xFF4
  3373                           prodl	equ	0xFF3
  3374                           indf0	equ	0xFEF
  3375                           postinc0	equ	0xFEE
  3376                           postdec0	equ	0xFED
  3377                           preinc0	equ	0xFEC
  3378                           plusw0	equ	0xFEB
  3379                           fsr0h	equ	0xFEA
  3380                           fsr0l	equ	0xFE9
  3381                           wreg	equ	0xFE8
  3382                           indf1	equ	0xFE7
  3383                           postinc1	equ	0xFE6
  3384                           postdec1	equ	0xFE5
  3385                           preinc1	equ	0xFE4
  3386                           plusw1	equ	0xFE3
  3387                           fsr1h	equ	0xFE2
  3388                           fsr1l	equ	0xFE1
  3389                           bsr	equ	0xFE0
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           preinc2	equ	0xFDC
  3394                           plusw2	equ	0xFDB
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8


Data Sizes:
    Strings     265
    Constant    0
    Data        3
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     36     111
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->_print_mat
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48445
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   44037
                                             34 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8774
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                                9     7      2    8887
                                             25 COMRAM     9     7      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    8730
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    8730
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8730
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    3744
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4888
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     24      6F       1       88.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      15        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 11:16:30 2020

                              _x 006F                                _y 0001  
         ?_display_onoff_control 004C                               l61 0AA6  
                             l70 08D6                               l46 0BA0  
                             l55 0DC8                               l64 0D5A  
                             l58 081A                               l74 08D6  
                             l82 0740                               l77 0B2A  
                             l95 0982                               _op 0002  
                    creditos@lcd 0062                      __CFG_OSC$HS 000000  
                            l211 036E                              l221 05BA  
                            l214 0C00                              l208 0358  
                            l217 0C0E                              l225 0658  
                            l191 0C7A                              l175 0984  
                            l177 0A14                              l194 0CDA  
                            l188 0C6C                              l905 0D1A  
                            u620 082C                              u700 05C8  
                            u621 0828                              u701 05C4  
                            u630 0882                              u710 05D8  
                            u631 087E                              u711 05D4  
                            u640 08A4                              u800 018E  
                            u720 061E                              u641 08A0  
                            u801 018A                              u721 061A  
                            u650 08C6                              u810 01F4  
                            u730 062E                              u651 08C2  
                            u811 01F0                              u731 062A  
                            u660 0732                              u900 0C7A  
                            u820 0204                              u740 0658  
                            u661 072E                              u901 0C76  
                            u821 0200                              u741 0654  
                            u670 0962                              u830 026A  
                            u750 00B8                              u910 09A0  
                            u671 095E                              u831 0266  
                            u751 00B4                              u911 099C  
                            u680 0982                              u840 027A  
                            u760 00F2                              u920 09C0  
                            u681 097E                              u841 0276  
                            u761 00EE                              u921 09BC  
                            u690 0D1A                              u850 02D8  
                            u770 0108                              u930 09E2  
                            u691 0D16                              u851 02D4  
                            u771 0104                              u931 09DE  
                            u860 02EA                              u780 0118  
                            u940 0A04                              u861 02E6  
                            u781 0114                              u941 0A00  
                            u870 02FC                              u790 017E  
                            u871 02F8                              u791 017A  
                            u880 0366                              u881 0362  
                            u890 0C0E                              u891 0C0A  
                            u957 0852                              u967 0D44  
                            u977 0776                              u987 07AE  
                            u997 0804                      finaliza@lcd 0062  
                            _lcd 006D                              prod 000FF3  
                            wreg 000FE8                    write_char@lcd 0049  
                   __CFG_WDT$OFF 000000                             l1421 08C6  
                           l1501 05EE                             l1407 0892  
                           l1431 065A                             l1511 062E  
                           l1503 05F0                             l1409 08A4  
                           l1441 06D6                             l1433 0678  
                           l1601 02EA                             l1513 0642  
                           l1505 0604                             l1521 064A  
                           l1371 0D9E                             l1419 08B4  
                           l1451 0702                             l1443 06DA  
                           l1435 0696                             l1611 0BF4  
                           l1603 02FC                             l1531 0056  
                           l1523 0012                             l1515 0644  
                           l1507 0610                             l1373 0DAE  
                           l1621 0742                             l1381 0D4E  
                           l1453 070C                             l1445 06E4  
                           l1437 06A0                             l1461 08D8  
                           l1613 0C10                             l1605 034C  
                           l1541 00FA                             l1533 0076  
                           l1525 001A                             l1509 061E  
                           l1701 0B66                             l1631 07A8  
                           l1623 0760                             l1375 0D1C  
                           l1391 084C                             l1383 081C  
                           l1455 0716                             l1447 06EE  
                           l1439 06AA                             l1615 0C60  
                           l1607 0366                             l1551 0140  
                           l1543 0108                             l1535 0086  
                           l1527 002E                             l1703 0B7E  
                           l1369 0D94                             l1641 0A1A  
                           l1633 07B8                             l1625 0770  
                           l1377 0D26                             l1393 085C  
                           l1385 082C                             l1457 0732  
                           l1449 06F8                             l1481 0962  
                           l1617 0C7C                             l1609 0BA4  
                           l1561 01B2                             l1553 0164  
                           l1545 0118                             l1537 00B8  
                           l1529 0042                             l1705 0B92  
                           l1651 0A8A                             l1643 0A38  
                           l1635 07C4                             l1627 0780  
                           l1379 0D3E                             l1387 0838  
                           l1395 0870                             l1459 073C  
                           l1483 0966                             l1475 08FC  
                           l1467 08E0                             l1619 0CCC  
                           l1571 01F4                             l1563 01B4  
                           l1547 013C                             l1555 0170  
                           l1539 00F2                             l1491 0596  
                           l1707 0B94                             l1653 0A9A  
                           l1645 0A44                             l1661 0AE2  
                           l1637 07FE                             l1629 078C  
                           l1397 0882                             l1389 083C  
                           l1477 0942                             l1469 08F4  
                           l1485 0CDC                             l1581 0250  
                           l1573 0204                             l1565 01B6  
                           l1557 017E                             l1549 013E  
                           l1493 05AA                             l1647 0A54  
                           l1663 0AEE                             l1655 0AA8  
                           l1639 080E                             l1479 0946  
                           l1487 0CEC                             l1591 02A0  
                           l1575 0228                             l1583 025C  
                           l1567 01DA                             l1559 018E  
                           l1495 05C8                             l1671 0990  
                           l1649 0A60                             l1665 0B0E  
                           l1657 0AC6                             l1593 02A2  
                           l1585 026A                             l1577 022A  
                           l1569 01E6                             l1497 05D8  
                           l1489 0546                             l1681 09E2  
                           l1673 09A0                             l1667 0B1E  
                           l1659 0AD2                             l1587 027A  
                           l1579 022C                             l1499 05EC  
                           l1683 09F2                             l1675 09B0  
                           l1691 0B46                             l1589 029E  
                           l1597 02CA                             l1685 0A04  
                           l1677 09C0                             l1669 0984  
                           l1693 0B48                             l1599 02D8  
                           l1679 09D0                             l1695 0B4A  
                           l1687 0B2C                             l1697 0B4C  
                           l1689 0B44                             l1699 0B4E  
                           STR_1 7FCE                             STR_2 7FEE  
                           STR_3 7EF6                             STR_4 7EF6  
                           STR_5 7FBE                             STR_6 7EF6  
                           STR_7 7EF6                             STR_8 7EF6  
                           STR_9 7F28                             u1007 0AD8  
                           u1017 0B14                             u1027 0A4A  
                           u1037 0A90                             u1047 0DA4  
                           u1057 0DBE                             i2l41 0DF6  
                           _main 0B2C                             _menu 0546  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 0070  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E            function_set@num_lines 004F  
                   print_mat@lcd 0058                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 004C  
                          ?_main 0049                            ?_menu 0062  
                          STR_10 7EF5                            STR_11 7EF5  
                          STR_12 7EF5                            STR_20 7F9E  
                          STR_21 7F4A                            STR_13 7F39  
                          STR_22 7F7D                            STR_14 7F17  
                          STR_23 7F5B                            STR_15 7F06  
                          STR_16 7EF5                            STR_24 7F6C  
                          STR_17 7FDE                            STR_18 7F8E  
                          STR_19 7FAE                            _T0CON 000FD5  
                          i2l112 03AA                            i2l121 041A  
                          i2l130 0486                            i2l114 039E  
                          i2l123 040E                            i2l132 047A  
                          i2l141 04EA                            i2l118 03CE  
                          i2l127 043E                            i2l136 04AA  
                          i2l145 051A                            i2l139 04F6  
                          i2l148 0544                            _TMR0L 000FD6  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0049                  __end_of_lcd_cmd 0D5C  
                __end_of_goto_XY 08D8                            _jogar 0012  
                          _pulso 0D94                            tablat 000FF5  
                          ttemp5 0071                            ttemp6 0074  
                          ttemp7 0078                            status 000FD8  
                          wtemp8 0071                  __initialization 0D5C  
                   __end_of_main 0BA4                     __end_of_menu 065A  
                         ??_main 006D                           ??_menu 0064  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         ?_jogar 0062                           ?_pulso 0049  
                         i2l1201 047E                           i2l1203 0494  
                         i2l1211 04BA                           i2l1221 04EE  
                         i2l1213 04BC                           i2l1205 04A2  
                         i2l1223 0504                           i2l1231 052A  
                         i2l1215 04BE                           i2l1311 0DDE  
                         i2l1233 052C                           i2l1225 0512  
                         i2l1217 04CC                           i2l1209 04B8  
                         i2l1161 0380                           i2l1313 0DE2  
                         i2l1235 052E                           i2l1219 04DA  
                         i2l1163 038E                           i2l1315 0DE4  
                         i2l1307 0DCC                           i2l1237 0538  
                         i2l1229 0528                           i2l1181 03F0  
                         i2l1173 03DC                           i2l1165 03A2  
                         i2l1317 0DF2                           i2l1309 0DDA  
                         i2l1239 0542                           i2l1183 03FE  
                         i2l1167 03B8                           i2l1175 03DE  
                         i2l1159 0370                           i2l1193 044C  
                         i2l1185 0412                           i2l1177 03E0  
                         i2l1169 03C6                           i2l1187 0428  
                         i2l1195 044E                           i2l1179 03E2  
                         i2l1197 045C                           i2l1189 0436  
                         i2l1199 046A                 __end_of_creditos 0C7C  
               __end_of_finaliza 0CDC                      goto_XY@temp 0057  
           __size_of_gerenciador 0096                           _cont_d 0005  
                         _cont_l 0004                           _cont_r 0003  
                         _cont_u 0006                           _botoes 0008  
                         clear_0 0D80                    ?_function_set 004C  
                      ??_lcd_cmd 004F                           _strcpy 0CDC  
                      ??_goto_XY 0054                     __pdataCOMRAM 006D  
                   __mediumconst 7EF4                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
       display_onoff_control@lcd 004C                       __accesstop 0080  
        __end_of__initialization 0D86                    ___rparam_used 000001  
        ??_display_onoff_control 0051                   __pcstackCOMRAM 0049  
                  __end_of_jogar 0370                   gerenciador@lcd 006B  
                  __end_of_pulso 0DCA                   ??_function_set 0051  
                        ??_jogar 0064             __size_of_int_handler 0DF2  
                        ??_pulso 004B                          ?_strcpy 0049  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 004F  
                        i2u30_40 0380                          i2u30_41 037C  
                        i2u31_40 038E                          i2u31_41 038A  
                        i2u40_40 0436                          i2u32_40 039E  
                        i2u40_41 0432                          i2u32_41 039A  
                        i2u41_40 044C                          i2u33_40 03B8  
                        i2u41_41 0448                          i2u33_41 03B4  
                        i2u50_40 04EA                          i2u42_40 045C  
                        i2u34_40 03C6                          i2u50_41 04E6  
                        i2u42_41 0458                          i2u34_41 03C2  
                        i2u51_40 0504                          i2u43_40 046A  
                        i2u35_40 03DC                          i2u51_41 0500  
                        i2u43_41 0466                          i2u35_41 03D8  
                        i2u52_40 0512                          i2u44_40 047A  
                        i2u36_40 03F0                          i2u60_40 0DDA  
                        i2u52_41 050E                          i2u44_41 0476  
                        i2u36_41 03EC                          i2u60_41 0DD6  
                        i2u53_40 0528                          i2u45_40 0494  
                        i2u37_40 03FE                          i2u61_40 0DF2  
                        i2u53_41 0524                          i2u45_41 0490  
                        i2u37_41 03FA                          i2u61_41 0DEE  
                        i2u46_40 04A2                          i2u38_40 040E  
                        i2u46_41 049E                          i2u38_41 040A  
                        i2u54_45 0536                          i2u54_47 0538  
                        i2u47_40 04B8                          i2u39_40 0428  
                        i2u47_41 04B4                          i2u39_41 0424  
                        i2u55_45 0540                          i2u55_47 0542  
                        i2u48_40 04CC                          i2u48_41 04C8  
                        i2u49_40 04DA                          i2u49_41 04D6  
                      ?_creditos 0062                       _le_entrada 0370  
                      ?_finaliza 0062                       _botoes_ant 0007  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 004F                          __Lparam 0000  
                        __pcinit 0D5C                          __ramtop 0600  
                  instrucoes@lcd 0062                          __ptext0 0B2C  
                        __ptext1 0984                          __ptext2 0546  
                        __ptext3 0012                          __ptext4 0BA4  
                        __ptext5 0C7C                          __ptext6 0C10  
                        __ptext7 0CDC                          __ptext8 08D8  
                        __ptext9 065A                          _lcd_cmd 0D1C  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 081C                       ??_creditos 0064  
                     ??_finaliza 0064                   __pintcode_body 0DCA  
           end_of_initialization 0D86                       _instrucoes 0BA4  
                        menu@lcd 0062             __end_of_function_set 081C  
                  __Lmediumconst 7EF4                          int_func 0DCA  
              __end_of_print_mat 0984                          postinc0 000FEE  
                        postinc2 000FDE                          strcpy@d 004F  
                        strcpy@s 004D                        _PORTBbits 000F81  
                     lcd_cmd@lcd 004C                      ?_le_entrada 0049  
                  ??_gerenciador 006D   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 0AA8                       _write_char 065A  
                  __pidataCOMRAM 0DFA                   __end_of_strcpy 0D1C  
            start_initialization 0D5C                      ?_instrucoes 0062  
                     jogar@bateu 0069                   _entry_mode_set 0AA8  
                     goto_XY@lcd 0050              __size_of_le_entrada 01D6  
            __end_of_gerenciador 0A1A                         ??_strcpy 004D  
                    __pbssCOMRAM 0001                    ??_int_handler 0049  
          __size_of_function_set 00DA                __size_of_creditos 006C  
              __size_of_finaliza 0060           __end_of_entry_mode_set 0B2C  
                      __pintcode 0008                    __pmediumconst 7EF4  
                    ?_write_char 0049              __size_of_instrucoes 006C  
                       ?_lcd_cmd 004C                     _function_set 0742  
                       ?_goto_XY 0050                   __size_of_jogar 035E  
                 __size_of_pulso 0036              __end_of_int_handler 0DFA  
                ?_entry_mode_set 004C                      _gerenciador 0984  
   entry_mode_set@move_direction 004E                        _print_mat 08D8  
display_onoff_control@display_on 004E       display_onoff_control@blink 0050  
                    write_char@c 004B                       print_mat@i 0060  
                     print_mat@j 005E                     ??_le_entrada 0049  
            __size_of_write_char 00E8                         __Hrparam 0000  
                       __Lrparam 0000                entry_mode_set@lcd 004C  
                     ?_print_mat 0058               __end_of_le_entrada 0546  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 081C  
                       __ptext11 0D1C                         __ptext12 0742  
                       __ptext13 0AA8                         __ptext14 0A1A  
                       __ptext15 0D94                         __ptext17 0370  
                       _creditos 0C10                         _finaliza 0C7C  
                   ??_instrucoes 0064                       strcpy@dest 0049  
                       _mat_disp 0009                    __size_of_main 0078  
                  __size_of_menu 0114                         int$flags 0070  
                       lcd_cmd@a 004E            _display_onoff_control 0A1A  
             __end_of_instrucoes 0C10                       _INTCONbits 000FF2  
                       jogar@lcd 0062                         goto_XY@a 0056  
                       goto_XY@x 0052                         goto_XY@y 0053  
                       goto_XY@z 0055                         intlevel2 0000  
                      strcpy@src 004B          function_set@data_lenght 004E  
                    ??_print_mat 005A                     ??_write_char 004C  
                       pulso@lcd 0049                 ??_entry_mode_set 0050  
          function_set@char_font 0050               __end_of_write_char 0742  
                   ?_gerenciador 006B  
