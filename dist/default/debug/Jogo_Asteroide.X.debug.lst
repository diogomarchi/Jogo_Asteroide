

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 23 12:36:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  00163E                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for _lcd
    80  00163E  83                 	db	131
    81  00163F  0F                 	db	15
    82                           
    83                           ;initializer for _x
    84  001640  01                 	db	1
    85  0000                     _PORTBbits	set	3969
    86  0000                     _T0CONbits	set	4053
    87  0000                     _T0CON	set	4053
    88  0000                     _TRISD	set	3989
    89  0000                     _PORTB	set	3969
    90  0000                     _TRISB	set	3987
    91  0000                     _ADCON1	set	4033
    92  0000                     _TMR0L	set	4054
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTD	set	3971
    95                           
    96                           	psect	mediumconst
    97  007EC2                     __pmediumconst:
    98                           	opt callstack 0
    99  007EC2  00                 	db	0
   100  007EC3                     STR_18:
   101  007EC3  20                 	db	32
   102  007EC4  20                 	db	32
   103  007EC5  20                 	db	32
   104  007EC6  20                 	db	32
   105  007EC7  20                 	db	32
   106  007EC8  20                 	db	32
   107  007EC9  20                 	db	32
   108  007ECA  20                 	db	32
   109  007ECB  20                 	db	32
   110  007ECC  20                 	db	32
   111  007ECD  20                 	db	32
   112  007ECE  20                 	db	32
   113  007ECF  20                 	db	32
   114  007ED0  20                 	db	32
   115  007ED1  20                 	db	32
   116  007ED2  20                 	db	32
   117  007ED3  00                 	db	0
   118  007ED4                     STR_30:
   119  007ED4  53                 	db	83	;'S'
   120  007ED5  43                 	db	67	;'C'
   121  007ED6  4F                 	db	79	;'O'
   122  007ED7  52                 	db	82	;'R'
   123  007ED8  45                 	db	69	;'E'
   124  007ED9  3A                 	db	58	;':'
   125  007EDA  20                 	db	32
   126  007EDB  20                 	db	32
   127  007EDC  20                 	db	32
   128  007EDD  20                 	db	32
   129  007EDE  20                 	db	32
   130  007EDF  20                 	db	32
   131  007EE0  20                 	db	32
   132  007EE1  20                 	db	32
   133  007EE2  20                 	db	32
   134  007EE3  20                 	db	32
   135  007EE4  00                 	db	0
   136  007EE5                     STR_32:
   137  007EE5  50                 	db	80	;'P'
   138  007EE6  41                 	db	65	;'A'
   139  007EE7  52                 	db	82	;'R'
   140  007EE8  41                 	db	65	;'A'
   141  007EE9  20                 	db	32
   142  007EEA  53                 	db	83	;'S'
   143  007EEB  41                 	db	65	;'A'
   144  007EEC  49                 	db	73	;'I'
   145  007EED  52                 	db	82	;'R'
   146  007EEE  20                 	db	32
   147  007EEF  20                 	db	32
   148  007EF0  20                 	db	32
   149  007EF1  20                 	db	32
   150  007EF2  20                 	db	32
   151  007EF3  20                 	db	32
   152  007EF4  20                 	db	32
   153  007EF5  00                 	db	0
   154  007EF6                     STR_21:
   155  007EF6  20                 	db	32
   156  007EF7  20                 	db	32
   157  007EF8  20                 	db	32
   158  007EF9  4E                 	db	78	;'N'
   159  007EFA  49                 	db	73	;'I'
   160  007EFB  56                 	db	86	;'V'
   161  007EFC  45                 	db	69	;'E'
   162  007EFD  4C                 	db	76	;'L'
   163  007EFE  20                 	db	32
   164  007EFF  32                 	db	50	;'2'
   165  007F00  20                 	db	32
   166  007F01  20                 	db	32
   167  007F02  20                 	db	32
   168  007F03  20                 	db	32
   169  007F04  20                 	db	32
   170  007F05  20                 	db	32
   171  007F06  00                 	db	0
   172  007F07                     STR_25:
   173  007F07  20                 	db	32
   174  007F08  20                 	db	32
   175  007F09  20                 	db	32
   176  007F0A  4E                 	db	78	;'N'
   177  007F0B  49                 	db	73	;'I'
   178  007F0C  56                 	db	86	;'V'
   179  007F0D  45                 	db	69	;'E'
   180  007F0E  4C                 	db	76	;'L'
   181  007F0F  20                 	db	32
   182  007F10  33                 	db	51	;'3'
   183  007F11  20                 	db	32
   184  007F12  20                 	db	32
   185  007F13  20                 	db	32
   186  007F14  20                 	db	32
   187  007F15  20                 	db	32
   188  007F16  20                 	db	32
   189  007F17  00                 	db	0
   190  007F18                     STR_31:
   191  007F18  41                 	db	65	;'A'
   192  007F19  50                 	db	80	;'P'
   193  007F1A  45                 	db	69	;'E'
   194  007F1B  52                 	db	82	;'R'
   195  007F1C  54                 	db	84	;'T'
   196  007F1D  45                 	db	69	;'E'
   197  007F1E  20                 	db	32
   198  007F1F  45                 	db	69	;'E'
   199  007F20  53                 	db	83	;'S'
   200  007F21  43                 	db	67	;'C'
   201  007F22  20                 	db	32
   202  007F23  20                 	db	32
   203  007F24  20                 	db	32
   204  007F25  20                 	db	32
   205  007F26  20                 	db	32
   206  007F27  20                 	db	32
   207  007F28  00                 	db	0
   208  007F29                     STR_17:
   209  007F29  20                 	db	32
   210  007F2A  20                 	db	32
   211  007F2B  20                 	db	32
   212  007F2C  20                 	db	32
   213  007F2D  20                 	db	32
   214  007F2E  53                 	db	83	;'S'
   215  007F2F  43                 	db	67	;'C'
   216  007F30  4F                 	db	79	;'O'
   217  007F31  52                 	db	82	;'R'
   218  007F32  45                 	db	69	;'E'
   219  007F33  3A                 	db	58	;':'
   220  007F34  20                 	db	32
   221  007F35  20                 	db	32
   222  007F36  20                 	db	32
   223  007F37  20                 	db	32
   224  007F38  20                 	db	32
   225  007F39  00                 	db	0
   226  007F3A                     STR_29:
   227  007F3A  21                 	db	33
   228  007F3B  21                 	db	33
   229  007F3C  21                 	db	33
   230  007F3D  56                 	db	86	;'V'
   231  007F3E  4F                 	db	79	;'O'
   232  007F3F  43                 	db	67	;'C'
   233  007F40  45                 	db	69	;'E'
   234  007F41  20                 	db	32
   235  007F42  42                 	db	66	;'B'
   236  007F43  41                 	db	65	;'A'
   237  007F44  54                 	db	84	;'T'
   238  007F45  45                 	db	69	;'E'
   239  007F46  55                 	db	85	;'U'
   240  007F47  21                 	db	33
   241  007F48  21                 	db	33
   242  007F49  21                 	db	33
   243  007F4A  00                 	db	0
   244  007F4B                     STR_13:
   245  007F4B  31                 	db	49	;'1'
   246  007F4C  2E                 	db	46
   247  007F4D  4A                 	db	74	;'J'
   248  007F4E  4F                 	db	79	;'O'
   249  007F4F  47                 	db	71	;'G'
   250  007F50  41                 	db	65	;'A'
   251  007F51  52                 	db	82	;'R'
   252  007F52  2E                 	db	46
   253  007F53  2E                 	db	46
   254  007F54  2E                 	db	46
   255  007F55  2E                 	db	46
   256  007F56  2E                 	db	46
   257  007F57  2E                 	db	46
   258  007F58  2E                 	db	46
   259  007F59  2E                 	db	46
   260  007F5A  2E                 	db	46
   261  007F5B  00                 	db	0
   262  007F5C                     STR_15:
   263  007F5C  33                 	db	51	;'3'
   264  007F5D  2E                 	db	46
   265  007F5E  43                 	db	67	;'C'
   266  007F5F  52                 	db	82	;'R'
   267  007F60  45                 	db	69	;'E'
   268  007F61  44                 	db	68	;'D'
   269  007F62  49                 	db	73	;'I'
   270  007F63  54                 	db	84	;'T'
   271  007F64  4F                 	db	79	;'O'
   272  007F65  53                 	db	83	;'S'
   273  007F66  2E                 	db	46
   274  007F67  2E                 	db	46
   275  007F68  2E                 	db	46
   276  007F69  2E                 	db	46
   277  007F6A  2E                 	db	46
   278  007F6B  2E                 	db	46
   279  007F6C  00                 	db	0
   280  007F6D                     STR_16:
   281  007F6D  34                 	db	52	;'4'
   282  007F6E  2E                 	db	46
   283  007F6F  46                 	db	70	;'F'
   284  007F70  49                 	db	73	;'I'
   285  007F71  4E                 	db	78	;'N'
   286  007F72  41                 	db	65	;'A'
   287  007F73  4C                 	db	76	;'L'
   288  007F74  49                 	db	73	;'I'
   289  007F75  5A                 	db	90	;'Z'
   290  007F76  41                 	db	65	;'A'
   291  007F77  52                 	db	82	;'R'
   292  007F78  2E                 	db	46
   293  007F79  2E                 	db	46
   294  007F7A  2E                 	db	46
   295  007F7B  2E                 	db	46
   296  007F7C  2E                 	db	46
   297  007F7D  00                 	db	0
   298  007F7E                     STR_14:
   299  007F7E  32                 	db	50	;'2'
   300  007F7F  2E                 	db	46
   301  007F80  49                 	db	73	;'I'
   302  007F81  4E                 	db	78	;'N'
   303  007F82  53                 	db	83	;'S'
   304  007F83  54                 	db	84	;'T'
   305  007F84  52                 	db	82	;'R'
   306  007F85  55                 	db	85	;'U'
   307  007F86  43                 	db	67	;'C'
   308  007F87  4F                 	db	79	;'O'
   309  007F88  45                 	db	69	;'E'
   310  007F89  53                 	db	83	;'S'
   311  007F8A  2E                 	db	46
   312  007F8B  2E                 	db	46
   313  007F8C  2E                 	db	46
   314  007F8D  2E                 	db	46
   315  007F8E  00                 	db	0
   316  007F8F                     STR_10:
   317  007F8F  4E                 	db	78	;'N'
   318  007F90  41                 	db	65	;'A'
   319  007F91  56                 	db	86	;'V'
   320  007F92  45                 	db	69	;'E'
   321  007F93  20                 	db	32
   322  007F94  20                 	db	32
   323  007F95  20                 	db	32
   324  007F96  20                 	db	32
   325  007F97  20                 	db	32
   326  007F98  20                 	db	32
   327  007F99  20                 	db	32
   328  007F9A  20                 	db	32
   329  007F9B  20                 	db	32
   330  007F9C  20                 	db	32
   331  007F9D  20                 	db	32
   332  007F9E  00                 	db	0
   333  007F9F                     STR_12:
   334  007F9F  4D                 	db	77	;'M'
   335  007FA0  45                 	db	69	;'E'
   336  007FA1  4E                 	db	78	;'N'
   337  007FA2  55                 	db	85	;'U'
   338  007FA3  20                 	db	32
   339  007FA4  20                 	db	32
   340  007FA5  20                 	db	32
   341  007FA6  20                 	db	32
   342  007FA7  20                 	db	32
   343  007FA8  20                 	db	32
   344  007FA9  20                 	db	32
   345  007FAA  20                 	db	32
   346  007FAB  20                 	db	32
   347  007FAC  20                 	db	32
   348  007FAD  20                 	db	32
   349  007FAE  00                 	db	0
   350  007FAF                     STR_11:
   351  007FAF  32                 	db	50	;'2'
   352  007FB0  2E                 	db	46
   353  007FB1  45                 	db	69	;'E'
   354  007FB2  53                 	db	83	;'S'
   355  007FB3  43                 	db	67	;'C'
   356  007FB4  41                 	db	65	;'A'
   357  007FB5  50                 	db	80	;'P'
   358  007FB6  45                 	db	69	;'E'
   359  007FB7  20                 	db	32
   360  007FB8  56                 	db	86	;'V'
   361  007FB9  4F                 	db	79	;'O'
   362  007FBA  4C                 	db	76	;'L'
   363  007FBB  54                 	db	84	;'T'
   364  007FBC  41                 	db	65	;'A'
   365  007FBD  20                 	db	32
   366  007FBE  00                 	db	0
   367  007FBF                     STR_5:
   368  007FBF  48                 	db	72	;'H'
   369  007FC0  49                 	db	73	;'I'
   370  007FC1  42                 	db	66	;'B'
   371  007FC2  45                 	db	69	;'E'
   372  007FC3  52                 	db	82	;'R'
   373  007FC4  4E                 	db	78	;'N'
   374  007FC5  41                 	db	65	;'A'
   375  007FC6  4E                 	db	78	;'N'
   376  007FC7  44                 	db	68	;'D'
   377  007FC8  4F                 	db	79	;'O'
   378  007FC9  2E                 	db	46
   379  007FCA  2E                 	db	46
   380  007FCB  2E                 	db	46
   381  007FCC  2E                 	db	46
   382  007FCD  2E                 	db	46
   383  007FCE  00                 	db	0
   384  007FCF                     STR_1:
   385  007FCF  31                 	db	49	;'1'
   386  007FD0  2E                 	db	46
   387  007FD1  44                 	db	68	;'D'
   388  007FD2  49                 	db	73	;'I'
   389  007FD3  4F                 	db	79	;'O'
   390  007FD4  47                 	db	71	;'G'
   391  007FD5  4F                 	db	79	;'O'
   392  007FD6  20                 	db	32
   393  007FD7  4D                 	db	77	;'M'
   394  007FD8  41                 	db	65	;'A'
   395  007FD9  52                 	db	82	;'R'
   396  007FDA  43                 	db	67	;'C'
   397  007FDB  48                 	db	72	;'H'
   398  007FDC  49                 	db	73	;'I'
   399  007FDD  2E                 	db	46
   400  007FDE  00                 	db	0
   401  007FDF                     STR_9:
   402  007FDF  31                 	db	49	;'1'
   403  007FE0  2E                 	db	46
   404  007FE1  53                 	db	83	;'S'
   405  007FE2  45                 	db	69	;'E'
   406  007FE3  54                 	db	84	;'T'
   407  007FE4  41                 	db	65	;'A'
   408  007FE5  53                 	db	83	;'S'
   409  007FE6  20                 	db	32
   410  007FE7  4D                 	db	77	;'M'
   411  007FE8  4F                 	db	79	;'O'
   412  007FE9  56                 	db	86	;'V'
   413  007FEA  45                 	db	69	;'E'
   414  007FEB  4D                 	db	77	;'M'
   415  007FEC  20                 	db	32
   416  007FED  41                 	db	65	;'A'
   417  007FEE  00                 	db	0
   418  007FEF                     STR_2:
   419  007FEF  32                 	db	50	;'2'
   420  007FF0  2E                 	db	46
   421  007FF1  47                 	db	71	;'G'
   422  007FF2  45                 	db	69	;'E'
   423  007FF3  4F                 	db	79	;'O'
   424  007FF4  52                 	db	82	;'R'
   425  007FF5  47                 	db	71	;'G'
   426  007FF6  45                 	db	69	;'E'
   427  007FF7  20                 	db	32
   428  007FF8  4E                 	db	78	;'N'
   429  007FF9  41                 	db	65	;'A'
   430  007FFA  52                 	db	82	;'R'
   431  007FFB  44                 	db	68	;'D'
   432  007FFC  45                 	db	69	;'E'
   433  007FFD  53                 	db	83	;'S'
   434  007FFE  00                 	db	0
   435  0000                     
   436                           ; #config settings
   437  007FFF  00                 	db	0	; dummy byte at the end
   438  0000                     
   439                           	psect	cinit
   440  0014E6                     __pcinit:
   441                           	opt callstack 0
   442  0014E6                     start_initialization:
   443                           	opt callstack 0
   444  0014E6                     __initialization:
   445                           	opt callstack 0
   446                           
   447                           ; Initialize objects allocated to COMRAM (3 bytes)
   448                           ; load TBLPTR registers with __pidataCOMRAM
   449  0014E6  0E3E               	movlw	low __pidataCOMRAM
   450  0014E8  6EF6               	movwf	tblptrl,c
   451  0014EA  0E16               	movlw	high __pidataCOMRAM
   452  0014EC  6EF7               	movwf	tblptrh,c
   453  0014EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   454  0014F0  6EF8               	movwf	tblptru,c
   455  0014F2  0009               	tblrd		*+	;fetch initializer
   456  0014F4  CFF5 F05A          	movff	tablat,__pdataCOMRAM
   457  0014F8  0009               	tblrd		*+	;fetch initializer
   458  0014FA  CFF5 F05B          	movff	tablat,__pdataCOMRAM+1
   459  0014FE  0009               	tblrd		*+	;fetch initializer
   460  001500  CFF5 F05C          	movff	tablat,__pdataCOMRAM+2
   461                           
   462                           ; Clear objects allocated to BANK0 (64 bytes)
   463  001504  EE00  F080         	lfsr	0,__pbssBANK0
   464  001508  0E40               	movlw	64
   465  00150A                     clear_0:
   466  00150A  6AEE               	clrf	postinc0,c
   467  00150C  06E8               	decf	wreg,f,c
   468  00150E  E1FD               	bnz	clear_0
   469                           
   470                           ; Clear objects allocated to COMRAM (17 bytes)
   471  001510  EE00  F049         	lfsr	0,__pbssCOMRAM
   472  001514  0E11               	movlw	17
   473  001516                     clear_1:
   474  001516  6AEE               	clrf	postinc0,c
   475  001518  06E8               	decf	wreg,f,c
   476  00151A  E1FD               	bnz	clear_1
   477  00151C                     end_of_initialization:
   478                           	opt callstack 0
   479  00151C                     __end_of__initialization:
   480                           	opt callstack 0
   481  00151C  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   482  00151E  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   483  001520  0E00               	movlw	low (__Lmediumconst shr (0+16))
   484  001522  6EF8               	movwf	tblptru,c
   485  001524  0100               	movlb	0
   486  001526  EF75  F009         	goto	_main	;jump to C main() function
   487                           
   488                           	psect	bssCOMRAM
   489  000049                     __pbssCOMRAM:
   490                           	opt callstack 0
   491  000049                     _contador:
   492                           	opt callstack 0
   493  000049                     	ds	1
   494  00004A                     _y:
   495                           	opt callstack 0
   496  00004A                     	ds	1
   497  00004B                     _op:
   498                           	opt callstack 0
   499  00004B                     	ds	1
   500  00004C                     _cont_r:
   501                           	opt callstack 0
   502  00004C                     	ds	1
   503  00004D                     _cont_l:
   504                           	opt callstack 0
   505  00004D                     	ds	1
   506  00004E                     _cont_d:
   507                           	opt callstack 0
   508  00004E                     	ds	1
   509  00004F                     _cont_u:
   510                           	opt callstack 0
   511  00004F                     	ds	1
   512  000050                     _botoes_ant:
   513                           	opt callstack 0
   514  000050                     	ds	1
   515  000051                     _botoes:
   516                           	opt callstack 0
   517  000051                     	ds	1
   518  000052                     _seed:
   519                           	opt callstack 0
   520  000052                     	ds	8
   521                           
   522                           	psect	dataCOMRAM
   523  00005A                     __pdataCOMRAM:
   524                           	opt callstack 0
   525  00005A                     _lcd:
   526                           	opt callstack 0
   527  00005A                     	ds	2
   528  00005C                     _x:
   529                           	opt callstack 0
   530  00005C                     	ds	1
   531                           
   532                           	psect	bssBANK0
   533  000080                     __pbssBANK0:
   534                           	opt callstack 0
   535  000080                     _mat_disp:
   536                           	opt callstack 0
   537  000080                     	ds	64
   538                           
   539                           	psect	cstackCOMRAM
   540  000001                     __pcstackCOMRAM:
   541                           	opt callstack 0
   542  000001                     ?_time:
   543                           	opt callstack 0
   544  000001                     ?___omul:
   545                           	opt callstack 0
   546  000001                     pulso@lcd:
   547                           	opt callstack 0
   548  000001                     write_char@lcd:
   549                           	opt callstack 0
   550  000001                     strcpy@dest:
   551                           	opt callstack 0
   552  000001                     time@t:
   553                           	opt callstack 0
   554  000001                     ___omul@multiplier:
   555                           	opt callstack 0
   556                           
   557                           ; 8 bytes @ 0x0
   558  000001                     	ds	2
   559  000003                     ??_pulso:
   560  000003                     write_char@c:
   561                           	opt callstack 0
   562  000003                     strcpy@src:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x2
   566  000003                     	ds	1
   567  000004                     ??_write_char:
   568  000004                     function_set@lcd:
   569                           	opt callstack 0
   570  000004                     display_onoff_control@lcd:
   571                           	opt callstack 0
   572  000004                     lcd_cmd@lcd:
   573                           	opt callstack 0
   574  000004                     entry_mode_set@lcd:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x3
   578  000004                     	ds	1
   579  000005                     strcpy@s:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x4
   583  000005                     	ds	1
   584  000006                     function_set@data_lenght:
   585                           	opt callstack 0
   586  000006                     display_onoff_control@display_on:
   587                           	opt callstack 0
   588  000006                     lcd_cmd@a:
   589                           	opt callstack 0
   590  000006                     entry_mode_set@move_direction:
   591                           	opt callstack 0
   592                           
   593                           ; 1 bytes @ 0x5
   594  000006                     	ds	1
   595  000007                     ??_lcd_cmd:
   596  000007                     function_set@num_lines:
   597                           	opt callstack 0
   598  000007                     display_onoff_control@cursor_on:
   599                           	opt callstack 0
   600  000007                     entry_mode_set@display_shift:
   601                           	opt callstack 0
   602  000007                     strcpy@d:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x6
   606  000007                     	ds	1
   607  000008                     ??_entry_mode_set:
   608  000008                     function_set@char_font:
   609                           	opt callstack 0
   610  000008                     display_onoff_control@blink:
   611                           	opt callstack 0
   612  000008                     goto_XY@lcd:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x7
   616  000008                     	ds	1
   617  000009                     ??_function_set:
   618  000009                     ??_display_onoff_control:
   619  000009                     srand@s:
   620                           	opt callstack 0
   621  000009                     ___omul@multiplicand:
   622                           	opt callstack 0
   623                           
   624                           ; 8 bytes @ 0x8
   625  000009                     	ds	1
   626  00000A                     goto_XY@x:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0x9
   630  00000A                     	ds	1
   631  00000B                     ??_srand:
   632  00000B                     goto_XY@y:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0xA
   636  00000B                     	ds	1
   637  00000C                     ??_goto_XY:
   638                           
   639                           ; 1 bytes @ 0xB
   640  00000C                     	ds	1
   641  00000D                     goto_XY@z:
   642                           	opt callstack 0
   643                           
   644                           ; 1 bytes @ 0xC
   645  00000D                     	ds	1
   646  00000E                     goto_XY@a:
   647                           	opt callstack 0
   648                           
   649                           ; 1 bytes @ 0xD
   650  00000E                     	ds	1
   651  00000F                     goto_XY@temp:
   652                           	opt callstack 0
   653                           
   654                           ; 1 bytes @ 0xE
   655  00000F                     	ds	1
   656  000010                     print_mat@lcd:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0xF
   660  000010                     	ds	1
   661  000011                     ___omul@product:
   662                           	opt callstack 0
   663                           
   664                           ; 8 bytes @ 0x10
   665  000011                     	ds	1
   666  000012                     ??_print_mat:
   667                           
   668                           ; 1 bytes @ 0x11
   669  000012                     	ds	4
   670  000016                     print_mat@j:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x15
   674  000016                     	ds	2
   675  000018                     print_mat@i:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x17
   679  000018                     	ds	1
   680  000019                     ?_rand:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x18
   684  000019                     	ds	1
   685  00001A                     creditos@lcd:
   686                           	opt callstack 0
   687  00001A                     finaliza@lcd:
   688                           	opt callstack 0
   689  00001A                     instrucoes@lcd:
   690                           	opt callstack 0
   691  00001A                     menu@lcd:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x19
   695  00001A                     	ds	1
   696  00001B                     ??_rand:
   697                           
   698                           ; 1 bytes @ 0x1A
   699  00001B                     	ds	1
   700  00001C                     
   701                           ; 1 bytes @ 0x1B
   702  00001C                     	ds	7
   703  000023                     ?___awmod:
   704                           	opt callstack 0
   705  000023                     ___awmod@dividend:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x22
   709  000023                     	ds	2
   710  000025                     ___awmod@divisor:
   711                           	opt callstack 0
   712                           
   713                           ; 2 bytes @ 0x24
   714  000025                     	ds	2
   715  000027                     ___awmod@counter:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x26
   719  000027                     	ds	1
   720  000028                     ___awmod@sign:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x27
   724  000028                     	ds	1
   725  000029                     jogar@lcd:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x28
   729  000029                     	ds	2
   730  00002B                     ??_jogar:
   731                           
   732                           ; 1 bytes @ 0x2A
   733  00002B                     	ds	8
   734  000033                     jogar@linha_aleatoria:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x32
   738  000033                     	ds	2
   739  000035                     jogar@nivel2:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x34
   743  000035                     	ds	2
   744  000037                     jogar@nivel3:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x36
   748  000037                     	ds	2
   749  000039                     jogar@pont4:
   750                           	opt callstack 0
   751                           
   752                           ; 1 bytes @ 0x38
   753  000039                     	ds	1
   754  00003A                     jogar@pont3:
   755                           	opt callstack 0
   756                           
   757                           ; 1 bytes @ 0x39
   758  00003A                     	ds	1
   759  00003B                     jogar@pont2:
   760                           	opt callstack 0
   761                           
   762                           ; 1 bytes @ 0x3A
   763  00003B                     	ds	1
   764  00003C                     jogar@pont1:
   765                           	opt callstack 0
   766                           
   767                           ; 1 bytes @ 0x3B
   768  00003C                     	ds	1
   769  00003D                     jogar@qtd_asteroide:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x3C
   773  00003D                     	ds	2
   774  00003F                     jogar@velocidade:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x3E
   778  00003F                     	ds	2
   779  000041                     jogar@bateu:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x40
   783  000041                     	ds	2
   784  000043                     jogar@j:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x42
   788  000043                     	ds	2
   789  000045                     jogar@i:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x44
   793  000045                     	ds	2
   794  000047                     gerenciador@lcd:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x46
   798  000047                     	ds	2
   799  000049                     
   800                           ; 1 bytes @ 0x48
   801 ;;
   802 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   803 ;;
   804 ;; *************** function _main *****************
   805 ;; Defined at:
   806 ;;		line 36 in file "main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         0       0       0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels required when called:    8
   826 ;; This function calls:
   827 ;;		_display_onoff_control
   828 ;;		_entry_mode_set
   829 ;;		_function_set
   830 ;;		_gerenciador
   831 ;; This function is called by:
   832 ;;		Startup code after reset
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text0
   837  0012EA                     __ptext0:
   838                           	opt callstack 0
   839  0012EA                     _main:
   840                           	opt callstack 23
   841  0012EA                     
   842                           ;main.c: 38:     ADCON1 = 0x0F;
   843  0012EA  0E0F               	movlw	15
   844  0012EC  6EC1               	movwf	193,c	;volatile
   845                           
   846                           ;main.c: 43:     TRISB = 0x0F;
   847  0012EE  0E0F               	movlw	15
   848  0012F0  6E93               	movwf	147,c	;volatile
   849                           
   850                           ;main.c: 46:     PORTB = 0x00;
   851  0012F2  0E00               	movlw	0
   852  0012F4  6E81               	movwf	129,c	;volatile
   853                           
   854                           ;main.c: 49:     TRISD = 0x00;
   855  0012F6  0E00               	movlw	0
   856  0012F8  6E95               	movwf	149,c	;volatile
   857                           
   858                           ;main.c: 52:     T0CON = 0x47;
   859  0012FA  0E47               	movlw	71
   860  0012FC  6ED5               	movwf	213,c	;volatile
   861                           
   862                           ;main.c: 55:     TMR0L = 0x63;
   863  0012FE  0E63               	movlw	99
   864  001300  6ED6               	movwf	214,c	;volatile
   865  001302                     
   866                           ;main.c: 58:     INTCONbits.TMR0IF = 0;
   867  001302  94F2               	bcf	242,2,c	;volatile
   868  001304                     
   869                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   870  001304  8AF2               	bsf	242,5,c	;volatile
   871  001306                     
   872                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   873  001306  88F2               	bsf	242,4,c	;volatile
   874  001308                     
   875                           ;main.c: 61:     INTCONbits.INT0IF = 0;
   876  001308  92F2               	bcf	242,1,c	;volatile
   877  00130A                     
   878                           ;main.c: 62:     INTCONbits.GIE = 1;
   879  00130A  8EF2               	bsf	242,7,c	;volatile
   880  00130C                     
   881                           ;main.c: 64:     function_set(lcd, 0, 1, 0);
   882  00130C  0E83               	movlw	131
   883  00130E  6E04               	movwf	function_set@lcd^0,c
   884  001310  0E0F               	movlw	15
   885  001312  6E05               	movwf	(function_set@lcd+1)^0,c
   886  001314  0E00               	movlw	0
   887  001316  6E06               	movwf	function_set@data_lenght^0,c
   888  001318  0E01               	movlw	1
   889  00131A  6E07               	movwf	function_set@num_lines^0,c
   890  00131C  0E00               	movlw	0
   891  00131E  6E08               	movwf	function_set@char_font^0,c
   892  001320  ECD9  F006         	call	_function_set	;wreg free
   893  001324                     
   894                           ;main.c: 65:     display_onoff_control(lcd, 1, 0, 0);
   895  001324  0E83               	movlw	131
   896  001326  6E04               	movwf	display_onoff_control@lcd^0,c
   897  001328  0E0F               	movlw	15
   898  00132A  6E05               	movwf	(display_onoff_control@lcd+1)^0,c
   899  00132C  0E01               	movlw	1
   900  00132E  6E06               	movwf	display_onoff_control@display_on^0,c
   901  001330  0E00               	movlw	0
   902  001332  6E07               	movwf	display_onoff_control@cursor_on^0,c
   903  001334  0E00               	movlw	0
   904  001336  6E08               	movwf	display_onoff_control@blink^0,c
   905  001338  ECEC  F008         	call	_display_onoff_control	;wreg free
   906  00133C                     
   907                           ;main.c: 66:     entry_mode_set(lcd, 1,0);
   908  00133C  0E83               	movlw	131
   909  00133E  6E04               	movwf	entry_mode_set@lcd^0,c
   910  001340  0E0F               	movlw	15
   911  001342  6E05               	movwf	(entry_mode_set@lcd+1)^0,c
   912  001344  0E01               	movlw	1
   913  001346  6E06               	movwf	entry_mode_set@move_direction^0,c
   914  001348  0E00               	movlw	0
   915  00134A  6E07               	movwf	entry_mode_set@display_shift^0,c
   916  00134C  EC33  F009         	call	_entry_mode_set	;wreg free
   917  001350                     
   918                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   919  001350  8ED5               	bsf	213,7,c	;volatile
   920  001352                     
   921                           ;main.c: 70:     gerenciador(lcd);
   922  001352  0E83               	movlw	131
   923  001354  6E47               	movwf	gerenciador@lcd^0,c
   924  001356  0E0F               	movlw	15
   925  001358  6E48               	movwf	(gerenciador@lcd+1)^0,c
   926  00135A  ECA1  F008         	call	_gerenciador	;wreg free
   927  00135E  EF07  F000         	goto	start
   928  001362                     __end_of_main:
   929                           	opt callstack 0
   930                           
   931 ;; *************** function _gerenciador *****************
   932 ;; Defined at:
   933 ;;		line 15 in file "task_manager.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  lcd             2   70[COMRAM] PTR struct .
   936 ;;		 -> PORTD(1), 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   948 ;;      Params:         2       0       0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0
   951 ;;      Totals:         2       0       0       0       0       0       0
   952 ;;Total ram usage:        2 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    7
   955 ;; This function calls:
   956 ;;		_creditos
   957 ;;		_finaliza
   958 ;;		_instrucoes
   959 ;;		_jogar
   960 ;;		_menu
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text1
   967  001142                     __ptext1:
   968                           	opt callstack 0
   969  001142                     _gerenciador:
   970                           	opt callstack 23
   971  001142                     l185:
   972  001142                     
   973                           ;task_manager.c: 17:         menu(lcd);
   974  001142  C047  F01A         	movff	gerenciador@lcd,menu@lcd
   975  001146  C048  F01B         	movff	gerenciador@lcd+1,menu@lcd+1
   976  00114A  EC6D  F005         	call	_menu	;wreg free
   977  00114E                     
   978                           ;task_manager.c: 18:         if(op == 0) jogar(lcd);
   979  00114E  504B               	movf	_op^0,w,c
   980  001150  A4D8               	btfss	status,2,c
   981  001152  EFAD  F008         	goto	u1551
   982  001156  EFAF  F008         	goto	u1550
   983  00115A                     u1551:
   984  00115A  EFB7  F008         	goto	l2114
   985  00115E                     u1550:
   986  00115E  C047  F029         	movff	gerenciador@lcd,jogar@lcd
   987  001162  C048  F02A         	movff	gerenciador@lcd+1,jogar@lcd+1
   988  001166  EC09  F000         	call	_jogar	;wreg free
   989  00116A  EFA1  F008         	goto	l185
   990  00116E                     l2114:
   991  00116E  044B               	decf	_op^0,w,c
   992  001170  A4D8               	btfss	status,2,c
   993  001172  EFBD  F008         	goto	u1561
   994  001176  EFBF  F008         	goto	u1560
   995  00117A                     u1561:
   996  00117A  EFC7  F008         	goto	l2118
   997  00117E                     u1560:
   998  00117E  C047  F01A         	movff	gerenciador@lcd,instrucoes@lcd
   999  001182  C048  F01B         	movff	gerenciador@lcd+1,instrucoes@lcd+1
  1000  001186  ECB1  F009         	call	_instrucoes	;wreg free
  1001  00118A  EFA1  F008         	goto	l185
  1002  00118E                     l2118:
  1003  00118E  0E02               	movlw	2
  1004  001190  184B               	xorwf	_op^0,w,c
  1005  001192  A4D8               	btfss	status,2,c
  1006  001194  EFCE  F008         	goto	u1571
  1007  001198  EFD0  F008         	goto	u1570
  1008  00119C                     u1571:
  1009  00119C  EFD8  F008         	goto	l2122
  1010  0011A0                     u1570:
  1011  0011A0  C047  F01A         	movff	gerenciador@lcd,creditos@lcd
  1012  0011A4  C048  F01B         	movff	gerenciador@lcd+1,creditos@lcd+1
  1013  0011A8  ECE7  F009         	call	_creditos	;wreg free
  1014  0011AC  EFA1  F008         	goto	l185
  1015  0011B0                     l2122:
  1016  0011B0  0E03               	movlw	3
  1017  0011B2  184B               	xorwf	_op^0,w,c
  1018  0011B4  A4D8               	btfss	status,2,c
  1019  0011B6  EFDF  F008         	goto	u1581
  1020  0011BA  EFE1  F008         	goto	u1580
  1021  0011BE                     u1581:
  1022  0011BE  EFE9  F008         	goto	l187
  1023  0011C2                     u1580:
  1024  0011C2  C047  F01A         	movff	gerenciador@lcd,finaliza@lcd
  1025  0011C6  C048  F01B         	movff	gerenciador@lcd+1,finaliza@lcd+1
  1026  0011CA  EC1D  F00A         	call	_finaliza	;wreg free
  1027  0011CE  EFA1  F008         	goto	l185
  1028  0011D2                     l187:
  1029  0011D2  EFA1  F008         	goto	l185
  1030  0011D6  0012               	return		;funcret
  1031  0011D8                     __end_of_gerenciador:
  1032                           	opt callstack 0
  1033                           
  1034 ;; *************** function _menu *****************
  1035 ;; Defined at:
  1036 ;;		line 53 in file "task_manager.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  lcd             2   25[COMRAM] PTR struct .
  1039 ;;		 -> PORTD(1), 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1051 ;;      Params:         2       0       0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0
  1054 ;;      Totals:         2       0       0       0       0       0       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    6
  1058 ;; This function calls:
  1059 ;;		_print_mat
  1060 ;;		_strcpy
  1061 ;; This function is called by:
  1062 ;;		_gerenciador
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text2
  1067  000ADA                     __ptext2:
  1068                           	opt callstack 0
  1069  000ADA                     _menu:
  1070                           	opt callstack 23
  1071  000ADA                     
  1072                           ;task_manager.c: 54:     strcpy(mat_disp[0], "1.JOGAR.........");
  1073  000ADA  0E80               	movlw	low _mat_disp
  1074  000ADC  6E01               	movwf	strcpy@dest^0,c
  1075  000ADE  0E00               	movlw	high _mat_disp
  1076  000AE0  6E02               	movwf	(strcpy@dest+1)^0,c
  1077  000AE2  0E4B               	movlw	low STR_13
  1078  000AE4  6E03               	movwf	strcpy@src^0,c
  1079  000AE6  0E7F               	movlw	high STR_13
  1080  000AE8  6E04               	movwf	(strcpy@src+1)^0,c
  1081  000AEA  EC95  F00A         	call	_strcpy	;wreg free
  1082                           
  1083                           ;task_manager.c: 55:     strcpy(mat_disp[1], "2.INSTRUCOES....");
  1084  000AEE  0E90               	movlw	low (_mat_disp+16)
  1085  000AF0  6E01               	movwf	strcpy@dest^0,c
  1086  000AF2  0E00               	movlw	high (_mat_disp+16)
  1087  000AF4  6E02               	movwf	(strcpy@dest+1)^0,c
  1088  000AF6  0E7E               	movlw	low STR_14
  1089  000AF8  6E03               	movwf	strcpy@src^0,c
  1090  000AFA  0E7F               	movlw	high STR_14
  1091  000AFC  6E04               	movwf	(strcpy@src+1)^0,c
  1092  000AFE  EC95  F00A         	call	_strcpy	;wreg free
  1093                           
  1094                           ;task_manager.c: 56:     strcpy(mat_disp[2], "3.CREDITOS......");
  1095  000B02  0EA0               	movlw	low (_mat_disp+32)
  1096  000B04  6E01               	movwf	strcpy@dest^0,c
  1097  000B06  0E00               	movlw	high (_mat_disp+32)
  1098  000B08  6E02               	movwf	(strcpy@dest+1)^0,c
  1099  000B0A  0E5C               	movlw	low STR_15
  1100  000B0C  6E03               	movwf	strcpy@src^0,c
  1101  000B0E  0E7F               	movlw	high STR_15
  1102  000B10  6E04               	movwf	(strcpy@src+1)^0,c
  1103  000B12  EC95  F00A         	call	_strcpy	;wreg free
  1104                           
  1105                           ;task_manager.c: 57:     strcpy(mat_disp[3], "4.FINALIZAR.....");
  1106  000B16  0EB0               	movlw	low (_mat_disp+48)
  1107  000B18  6E01               	movwf	strcpy@dest^0,c
  1108  000B1A  0E00               	movlw	high (_mat_disp+48)
  1109  000B1C  6E02               	movwf	(strcpy@dest+1)^0,c
  1110  000B1E  0E6D               	movlw	low STR_16
  1111  000B20  6E03               	movwf	strcpy@src^0,c
  1112  000B22  0E7F               	movlw	high STR_16
  1113  000B24  6E04               	movwf	(strcpy@src+1)^0,c
  1114  000B26  EC95  F00A         	call	_strcpy	;wreg free
  1115  000B2A                     l1792:
  1116                           
  1117                           ;task_manager.c: 60:     mat_disp[op][15] = '<';
  1118  000B2A  504B               	movf	_op^0,w,c
  1119  000B2C  0D10               	mullw	16
  1120  000B2E  0E8F               	movlw	low (_mat_disp+15)
  1121  000B30  24F3               	addwf	243,w,c
  1122  000B32  6ED9               	movwf	fsr2l,c
  1123  000B34  0E00               	movlw	high (_mat_disp+15)
  1124  000B36  20F4               	addwfc	prodh,w,c
  1125  000B38  6EDA               	movwf	fsr2h,c
  1126  000B3A  0E3C               	movlw	60
  1127  000B3C  6EDF               	movwf	indf2,c
  1128  000B3E                     
  1129                           ;task_manager.c: 61:     print_mat(lcd);
  1130  000B3E  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1131  000B42  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1132  000B46  ECFC  F007         	call	_print_mat	;wreg free
  1133                           
  1134                           ;task_manager.c: 62:     while(!botoes.Enter){
  1135  000B4A  EFEF  F005         	goto	l1822
  1136  000B4E                     l214:
  1137                           
  1138                           ;task_manager.c: 63:         if((botoes.U) && (op > 0)){
  1139  000B4E  A051               	btfss	_botoes^0,0,c
  1140  000B50  EFAC  F005         	goto	u1131
  1141  000B54  EFAE  F005         	goto	u1130
  1142  000B58                     u1131:
  1143  000B58  EFD2  F005         	goto	l1808
  1144  000B5C                     u1130:
  1145  000B5C  504B               	movf	_op^0,w,c
  1146  000B5E  B4D8               	btfsc	status,2,c
  1147  000B60  EFB4  F005         	goto	u1141
  1148  000B64  EFB6  F005         	goto	u1140
  1149  000B68                     u1141:
  1150  000B68  EFD2  F005         	goto	l1808
  1151  000B6C                     u1140:
  1152  000B6C                     
  1153                           ;task_manager.c: 64:             mat_disp[op][15] = '.';
  1154  000B6C  504B               	movf	_op^0,w,c
  1155  000B6E  0D10               	mullw	16
  1156  000B70  0E8F               	movlw	low (_mat_disp+15)
  1157  000B72  24F3               	addwf	243,w,c
  1158  000B74  6ED9               	movwf	fsr2l,c
  1159  000B76  0E00               	movlw	high (_mat_disp+15)
  1160  000B78  20F4               	addwfc	prodh,w,c
  1161  000B7A  6EDA               	movwf	fsr2h,c
  1162  000B7C  0E2E               	movlw	46
  1163  000B7E  6EDF               	movwf	indf2,c
  1164  000B80                     
  1165                           ;task_manager.c: 65:             op--;
  1166  000B80  064B               	decf	_op^0,f,c
  1167  000B82                     
  1168                           ;task_manager.c: 66:             botoes.U = 0;
  1169  000B82  9051               	bcf	_botoes^0,0,c
  1170  000B84                     
  1171                           ;task_manager.c: 67:             mat_disp[op][15] = '<';
  1172  000B84  504B               	movf	_op^0,w,c
  1173  000B86  0D10               	mullw	16
  1174  000B88  0E8F               	movlw	low (_mat_disp+15)
  1175  000B8A  24F3               	addwf	243,w,c
  1176  000B8C  6ED9               	movwf	fsr2l,c
  1177  000B8E  0E00               	movlw	high (_mat_disp+15)
  1178  000B90  20F4               	addwfc	prodh,w,c
  1179  000B92  6EDA               	movwf	fsr2h,c
  1180  000B94  0E3C               	movlw	60
  1181  000B96  6EDF               	movwf	indf2,c
  1182  000B98                     
  1183                           ;task_manager.c: 68:             print_mat(lcd);
  1184  000B98  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1185  000B9C  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1186  000BA0  ECFC  F007         	call	_print_mat	;wreg free
  1187  000BA4                     l1808:
  1188                           
  1189                           ;task_manager.c: 70:         if((botoes.D) && (op < 3)){
  1190  000BA4  A251               	btfss	_botoes^0,1,c
  1191  000BA6  EFD7  F005         	goto	u1151
  1192  000BAA  EFD9  F005         	goto	u1150
  1193  000BAE                     u1151:
  1194  000BAE  EFEF  F005         	goto	l1822
  1195  000BB2                     u1150:
  1196  000BB2  0E03               	movlw	3
  1197  000BB4  604B               	cpfslt	_op^0,c
  1198  000BB6  EFDF  F005         	goto	u1161
  1199  000BBA  EFE1  F005         	goto	u1160
  1200  000BBE                     u1161:
  1201  000BBE  EFEF  F005         	goto	l1822
  1202  000BC2                     u1160:
  1203  000BC2                     
  1204                           ;task_manager.c: 71:             mat_disp[op][15] = '.';
  1205  000BC2  504B               	movf	_op^0,w,c
  1206  000BC4  0D10               	mullw	16
  1207  000BC6  0E8F               	movlw	low (_mat_disp+15)
  1208  000BC8  24F3               	addwf	243,w,c
  1209  000BCA  6ED9               	movwf	fsr2l,c
  1210  000BCC  0E00               	movlw	high (_mat_disp+15)
  1211  000BCE  20F4               	addwfc	prodh,w,c
  1212  000BD0  6EDA               	movwf	fsr2h,c
  1213  000BD2  0E2E               	movlw	46
  1214  000BD4  6EDF               	movwf	indf2,c
  1215  000BD6                     
  1216                           ;task_manager.c: 72:             op++;
  1217  000BD6  2A4B               	incf	_op^0,f,c
  1218  000BD8                     
  1219                           ;task_manager.c: 73:             botoes.D = 0;
  1220  000BD8  9251               	bcf	_botoes^0,1,c
  1221  000BDA  EF95  F005         	goto	l1792
  1222  000BDE                     l1822:
  1223                           
  1224                           ;task_manager.c: 62:     while(!botoes.Enter){
  1225  000BDE  A851               	btfss	_botoes^0,4,c
  1226  000BE0  EFF4  F005         	goto	u1171
  1227  000BE4  EFF6  F005         	goto	u1170
  1228  000BE8                     u1171:
  1229  000BE8  EFA7  F005         	goto	l214
  1230  000BEC                     u1170:
  1231  000BEC  0012               	return		;funcret
  1232  000BEE                     __end_of_menu:
  1233                           	opt callstack 0
  1234                           
  1235 ;; *************** function _jogar *****************
  1236 ;; Defined at:
  1237 ;;		line 81 in file "task_manager.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  lcd             2   40[COMRAM] PTR struct .
  1240 ;;		 -> PORTD(1), 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  j               2   66[COMRAM] int 
  1243 ;;  i               2   68[COMRAM] int 
  1244 ;;  bateu           2   64[COMRAM] int 
  1245 ;;  velocidade      2   62[COMRAM] int 
  1246 ;;  qtd_asteroid    2   60[COMRAM] int 
  1247 ;;  nivel3          2   54[COMRAM] int 
  1248 ;;  nivel2          2   52[COMRAM] int 
  1249 ;;  linha_aleato    2   50[COMRAM] int 
  1250 ;;  pont1           1   59[COMRAM] unsigned char 
  1251 ;;  pont2           1   58[COMRAM] unsigned char 
  1252 ;;  pont3           1   57[COMRAM] unsigned char 
  1253 ;;  pont4           1   56[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1263 ;;      Params:         2       0       0       0       0       0       0
  1264 ;;      Locals:        20       0       0       0       0       0       0
  1265 ;;      Temps:          8       0       0       0       0       0       0
  1266 ;;      Totals:        30       0       0       0       0       0       0
  1267 ;;Total ram usage:       30 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    6
  1270 ;; This function calls:
  1271 ;;		___awmod
  1272 ;;		_print_mat
  1273 ;;		_rand
  1274 ;;		_srand
  1275 ;;		_strcpy
  1276 ;;		_time
  1277 ;; This function is called by:
  1278 ;;		_gerenciador
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text3
  1283  000012                     __ptext3:
  1284                           	opt callstack 0
  1285  000012                     _jogar:
  1286                           	opt callstack 23
  1287  000012                     
  1288                           ;task_manager.c: 82:     srand(time(((void*)0)));
  1289  000012  0E00               	movlw	0
  1290  000014  6E01               	movwf	time@t^0,c
  1291  000016  0E00               	movlw	0
  1292  000018  6E02               	movwf	(time@t+1)^0,c
  1293  00001A  EC4D  F00A         	call	_time	;wreg free
  1294  00001E  C001  F02B         	movff	?_time,??_jogar
  1295  000022  C002  F02C         	movff	?_time+1,??_jogar+1
  1296  000026  C003  F02D         	movff	?_time+2,??_jogar+2
  1297  00002A  C004  F02E         	movff	?_time+3,??_jogar+3
  1298  00002E  C005  F02F         	movff	?_time+4,??_jogar+4
  1299  000032  C006  F030         	movff	?_time+5,??_jogar+5
  1300  000036  C007  F031         	movff	?_time+6,??_jogar+6
  1301  00003A  C008  F032         	movff	?_time+7,??_jogar+7
  1302  00003E  C02B  F009         	movff	??_jogar,srand@s
  1303  000042  C02D  F00A         	movff	??_jogar+2,srand@s+1
  1304  000046  EC08  F00B         	call	_srand	;wreg free
  1305  00004A                     
  1306                           ;task_manager.c: 83:     int bateu = 0, qtd_asteroide = 20, velocidade = 4;
  1307  00004A  0E00               	movlw	0
  1308  00004C  6E42               	movwf	(jogar@bateu+1)^0,c
  1309  00004E  0E00               	movlw	0
  1310  000050  6E41               	movwf	jogar@bateu^0,c
  1311  000052  0E00               	movlw	0
  1312  000054  6E3E               	movwf	(jogar@qtd_asteroide+1)^0,c
  1313  000056  0E14               	movlw	20
  1314  000058  6E3D               	movwf	jogar@qtd_asteroide^0,c
  1315  00005A  0E00               	movlw	0
  1316  00005C  6E40               	movwf	(jogar@velocidade+1)^0,c
  1317  00005E  0E04               	movlw	4
  1318  000060  6E3F               	movwf	jogar@velocidade^0,c
  1319  000062                     
  1320                           ;task_manager.c: 85:     int nivel2 = 1, nivel3 = 1;
  1321  000062  0E00               	movlw	0
  1322  000064  6E36               	movwf	(jogar@nivel2+1)^0,c
  1323  000066  0E01               	movlw	1
  1324  000068  6E35               	movwf	jogar@nivel2^0,c
  1325  00006A  0E00               	movlw	0
  1326  00006C  6E38               	movwf	(jogar@nivel3+1)^0,c
  1327  00006E  0E01               	movlw	1
  1328  000070  6E37               	movwf	jogar@nivel3^0,c
  1329  000072                     
  1330                           ;task_manager.c: 88:     strcpy(mat_disp[0], "     SCORE:     ");
  1331  000072  0E80               	movlw	low _mat_disp
  1332  000074  6E01               	movwf	strcpy@dest^0,c
  1333  000076  0E00               	movlw	high _mat_disp
  1334  000078  6E02               	movwf	(strcpy@dest+1)^0,c
  1335  00007A  0E29               	movlw	low STR_17
  1336  00007C  6E03               	movwf	strcpy@src^0,c
  1337  00007E  0E7F               	movlw	high STR_17
  1338  000080  6E04               	movwf	(strcpy@src+1)^0,c
  1339  000082  EC95  F00A         	call	_strcpy	;wreg free
  1340  000086                     
  1341                           ;task_manager.c: 89:     strcpy(mat_disp[1], "                ");
  1342  000086  0E90               	movlw	low (_mat_disp+16)
  1343  000088  6E01               	movwf	strcpy@dest^0,c
  1344  00008A  0E00               	movlw	high (_mat_disp+16)
  1345  00008C  6E02               	movwf	(strcpy@dest+1)^0,c
  1346  00008E  0EC3               	movlw	low STR_18
  1347  000090  6E03               	movwf	strcpy@src^0,c
  1348  000092  0E7E               	movlw	high STR_18
  1349  000094  6E04               	movwf	(strcpy@src+1)^0,c
  1350  000096  EC95  F00A         	call	_strcpy	;wreg free
  1351  00009A                     
  1352                           ;task_manager.c: 90:     strcpy(mat_disp[2], "                ");
  1353  00009A  0EA0               	movlw	low (_mat_disp+32)
  1354  00009C  6E01               	movwf	strcpy@dest^0,c
  1355  00009E  0E00               	movlw	high (_mat_disp+32)
  1356  0000A0  6E02               	movwf	(strcpy@dest+1)^0,c
  1357  0000A2  0EC3               	movlw	low STR_18
  1358  0000A4  6E03               	movwf	strcpy@src^0,c
  1359  0000A6  0E7E               	movlw	high STR_18
  1360  0000A8  6E04               	movwf	(strcpy@src+1)^0,c
  1361  0000AA  EC95  F00A         	call	_strcpy	;wreg free
  1362  0000AE                     
  1363                           ;task_manager.c: 91:     strcpy(mat_disp[3], "                ");
  1364  0000AE  0EB0               	movlw	low (_mat_disp+48)
  1365  0000B0  6E01               	movwf	strcpy@dest^0,c
  1366  0000B2  0E00               	movlw	high (_mat_disp+48)
  1367  0000B4  6E02               	movwf	(strcpy@dest+1)^0,c
  1368  0000B6  0EC3               	movlw	low STR_18
  1369  0000B8  6E03               	movwf	strcpy@src^0,c
  1370  0000BA  0E7E               	movlw	high STR_18
  1371  0000BC  6E04               	movwf	(strcpy@src+1)^0,c
  1372  0000BE  EC95  F00A         	call	_strcpy	;wreg free
  1373  0000C2                     
  1374                           ;task_manager.c: 94:     mat_disp[0][15-1] = 0x30;
  1375  0000C2  0E30               	movlw	48
  1376  0000C4  0100               	movlb	0	; () banked
  1377  0000C6  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1378  0000C8                     
  1379                           ; BSR set to: 0
  1380                           ;task_manager.c: 95:     mat_disp[0][14-1] = 0x30;
  1381  0000C8  0E30               	movlw	48
  1382  0000CA  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1383  0000CC                     
  1384                           ; BSR set to: 0
  1385                           ;task_manager.c: 96:     mat_disp[0][13-1] = 0x30;
  1386  0000CC  0E30               	movlw	48
  1387  0000CE  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1388  0000D0                     
  1389                           ; BSR set to: 0
  1390                           ;task_manager.c: 97:     mat_disp[0][12-1] = 0x30;
  1391  0000D0  0E30               	movlw	48
  1392  0000D2  6F8B               	movwf	(_mat_disp+11)& (0+255),b
  1393                           
  1394                           ;task_manager.c: 99:     print_mat(lcd);
  1395  0000D4  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1396  0000D8  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1397  0000DC  ECFC  F007         	call	_print_mat	;wreg free
  1398                           
  1399                           ;task_manager.c: 102:     while(!botoes.Esc && bateu == 0){
  1400  0000E0  EF1D  F004         	goto	l2028
  1401  0000E4                     l1854:
  1402                           
  1403                           ;task_manager.c: 103:         contador ++;
  1404  0000E4  2A49               	incf	_contador^0,f,c
  1405  0000E6                     
  1406                           ;task_manager.c: 104:         if(contador%qtd_asteroide == 0){
  1407  0000E6  C049  F023         	movff	_contador,___awmod@dividend
  1408  0000EA  6A24               	clrf	(___awmod@dividend+1)^0,c
  1409  0000EC  C03D  F025         	movff	jogar@qtd_asteroide,___awmod@divisor
  1410  0000F0  C03E  F026         	movff	jogar@qtd_asteroide+1,___awmod@divisor+1
  1411  0000F4  ECA4  F007         	call	___awmod	;wreg free
  1412  0000F8  5023               	movf	?___awmod^0,w,c
  1413  0000FA  1024               	iorwf	(?___awmod+1)^0,w,c
  1414  0000FC  A4D8               	btfss	status,2,c
  1415  0000FE  EF83  F000         	goto	u1181
  1416  000102  EF85  F000         	goto	u1180
  1417  000106                     u1181:
  1418  000106  EFAC  F000         	goto	l1862
  1419  00010A                     u1180:
  1420  00010A                     
  1421                           ;task_manager.c: 105:             linha_aleatoria = (rand()%3) + 1 ;
  1422  00010A  EC6B  F006         	call	_rand	;wreg free
  1423  00010E  C019  F023         	movff	?_rand,___awmod@dividend
  1424  000112  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
  1425  000116  0E00               	movlw	0
  1426  000118  6E26               	movwf	(___awmod@divisor+1)^0,c
  1427  00011A  0E03               	movlw	3
  1428  00011C  6E25               	movwf	___awmod@divisor^0,c
  1429  00011E  ECA4  F007         	call	___awmod	;wreg free
  1430  000122  0E01               	movlw	1
  1431  000124  2423               	addwf	?___awmod^0,w,c
  1432  000126  6E33               	movwf	jogar@linha_aleatoria^0,c
  1433  000128  0E00               	movlw	0
  1434  00012A  2024               	addwfc	(?___awmod+1)^0,w,c
  1435  00012C  6E34               	movwf	(jogar@linha_aleatoria+1)^0,c
  1436  00012E                     
  1437                           ;task_manager.c: 106:             mat_disp[linha_aleatoria][15] = '*';
  1438  00012E  C033  F02B         	movff	jogar@linha_aleatoria,??_jogar
  1439  000132  C034  F02C         	movff	jogar@linha_aleatoria+1,??_jogar+1
  1440  000136  3A2B               	swapf	??_jogar^0,f,c
  1441  000138  3A2C               	swapf	(??_jogar+1)^0,f,c
  1442  00013A  0EF0               	movlw	240
  1443  00013C  162C               	andwf	(??_jogar+1)^0,f,c
  1444  00013E  502B               	movf	??_jogar^0,w,c
  1445  000140  0B0F               	andlw	15
  1446  000142  122C               	iorwf	(??_jogar+1)^0,f,c
  1447  000144  0EF0               	movlw	240
  1448  000146  162B               	andwf	??_jogar^0,f,c
  1449  000148  0E8F               	movlw	low (_mat_disp+15)
  1450  00014A  242B               	addwf	??_jogar^0,w,c
  1451  00014C  6ED9               	movwf	fsr2l,c
  1452  00014E  0E00               	movlw	high (_mat_disp+15)
  1453  000150  202C               	addwfc	(??_jogar+1)^0,w,c
  1454  000152  6EDA               	movwf	fsr2h,c
  1455  000154  0E2A               	movlw	42
  1456  000156  6EDF               	movwf	indf2,c
  1457  000158                     l1862:
  1458                           
  1459                           ;task_manager.c: 108:         if(contador%velocidade == 0){
  1460  000158  C049  F023         	movff	_contador,___awmod@dividend
  1461  00015C  6A24               	clrf	(___awmod@dividend+1)^0,c
  1462  00015E  C03F  F025         	movff	jogar@velocidade,___awmod@divisor
  1463  000162  C040  F026         	movff	jogar@velocidade+1,___awmod@divisor+1
  1464  000166  ECA4  F007         	call	___awmod	;wreg free
  1465  00016A  5023               	movf	?___awmod^0,w,c
  1466  00016C  1024               	iorwf	(?___awmod+1)^0,w,c
  1467  00016E  A4D8               	btfss	status,2,c
  1468  000170  EFBC  F000         	goto	u1191
  1469  000174  EFBE  F000         	goto	u1190
  1470  000178                     u1191:
  1471  000178  EFB9  F001         	goto	l1920
  1472  00017C                     u1190:
  1473  00017C                     
  1474                           ;task_manager.c: 109:             for(int i = 1; i <= 3; i++){
  1475  00017C  0E00               	movlw	0
  1476  00017E  6E46               	movwf	(jogar@i+1)^0,c
  1477  000180  0E01               	movlw	1
  1478  000182  6E45               	movwf	jogar@i^0,c
  1479  000184                     l1866:
  1480  000184  BE46               	btfsc	(jogar@i+1)^0,7,c
  1481  000186  EFCE  F000         	goto	u1201
  1482  00018A  5046               	movf	(jogar@i+1)^0,w,c
  1483  00018C  E109               	bnz	u1200
  1484  00018E  0E04               	movlw	4
  1485  000190  5C45               	subwf	jogar@i^0,w,c
  1486  000192  A0D8               	btfss	status,0,c
  1487  000194  EFCE  F000         	goto	u1201
  1488  000198  EFD0  F000         	goto	u1200
  1489  00019C                     u1201:
  1490  00019C  EFD2  F000         	goto	l1870
  1491  0001A0                     u1200:
  1492  0001A0  EF3F  F001         	goto	l1888
  1493  0001A4                     l1870:
  1494                           
  1495                           ;task_manager.c: 110:                 for(int j = 0; j < 15; j++)
  1496  0001A4  0E00               	movlw	0
  1497  0001A6  6E44               	movwf	(jogar@j+1)^0,c
  1498  0001A8  0E00               	movlw	0
  1499  0001AA  6E43               	movwf	jogar@j^0,c
  1500  0001AC                     l1872:
  1501  0001AC  BE44               	btfsc	(jogar@j+1)^0,7,c
  1502  0001AE  EFE2  F000         	goto	u1211
  1503  0001B2  5044               	movf	(jogar@j+1)^0,w,c
  1504  0001B4  E109               	bnz	u1210
  1505  0001B6  0E0F               	movlw	15
  1506  0001B8  5C43               	subwf	jogar@j^0,w,c
  1507  0001BA  A0D8               	btfss	status,0,c
  1508  0001BC  EFE2  F000         	goto	u1211
  1509  0001C0  EFE4  F000         	goto	u1210
  1510  0001C4                     u1211:
  1511  0001C4  EFE6  F000         	goto	l1876
  1512  0001C8                     u1210:
  1513  0001C8  EF26  F001         	goto	l1882
  1514  0001CC                     l1876:
  1515                           
  1516                           ;task_manager.c: 111:                     mat_disp[i][j] = mat_disp[i][j+1];
  1517  0001CC  C045  F02B         	movff	jogar@i,??_jogar
  1518  0001D0  C046  F02C         	movff	jogar@i+1,??_jogar+1
  1519  0001D4  3A2B               	swapf	??_jogar^0,f,c
  1520  0001D6  3A2C               	swapf	(??_jogar+1)^0,f,c
  1521  0001D8  0EF0               	movlw	240
  1522  0001DA  162C               	andwf	(??_jogar+1)^0,f,c
  1523  0001DC  502B               	movf	??_jogar^0,w,c
  1524  0001DE  0B0F               	andlw	15
  1525  0001E0  122C               	iorwf	(??_jogar+1)^0,f,c
  1526  0001E2  0EF0               	movlw	240
  1527  0001E4  162B               	andwf	??_jogar^0,f,c
  1528  0001E6  0E80               	movlw	low _mat_disp
  1529  0001E8  6E2D               	movwf	(??_jogar+2)^0,c
  1530  0001EA  0E00               	movlw	high _mat_disp
  1531  0001EC  6E2E               	movwf	(??_jogar+3)^0,c
  1532  0001EE  0E01               	movlw	1
  1533  0001F0  262D               	addwf	(??_jogar+2)^0,f,c
  1534  0001F2  0E00               	movlw	0
  1535  0001F4  222E               	addwfc	(??_jogar+3)^0,f,c
  1536  0001F6  502B               	movf	??_jogar^0,w,c
  1537  0001F8  262D               	addwf	(??_jogar+2)^0,f,c
  1538  0001FA  502C               	movf	(??_jogar+1)^0,w,c
  1539  0001FC  222E               	addwfc	(??_jogar+3)^0,f,c
  1540  0001FE  5043               	movf	jogar@j^0,w,c
  1541  000200  242D               	addwf	(??_jogar+2)^0,w,c
  1542  000202  6ED9               	movwf	fsr2l,c
  1543  000204  5044               	movf	(jogar@j+1)^0,w,c
  1544  000206  202E               	addwfc	(??_jogar+3)^0,w,c
  1545  000208  6EDA               	movwf	fsr2h,c
  1546  00020A  C045  F02F         	movff	jogar@i,??_jogar+4
  1547  00020E  C046  F030         	movff	jogar@i+1,??_jogar+5
  1548  000212  3A2F               	swapf	(??_jogar+4)^0,f,c
  1549  000214  3A30               	swapf	(??_jogar+5)^0,f,c
  1550  000216  0EF0               	movlw	240
  1551  000218  1630               	andwf	(??_jogar+5)^0,f,c
  1552  00021A  502F               	movf	(??_jogar+4)^0,w,c
  1553  00021C  0B0F               	andlw	15
  1554  00021E  1230               	iorwf	(??_jogar+5)^0,f,c
  1555  000220  0EF0               	movlw	240
  1556  000222  162F               	andwf	(??_jogar+4)^0,f,c
  1557  000224  0E80               	movlw	low _mat_disp
  1558  000226  6E31               	movwf	(??_jogar+6)^0,c
  1559  000228  0E00               	movlw	high _mat_disp
  1560  00022A  6E32               	movwf	(??_jogar+7)^0,c
  1561  00022C  502F               	movf	(??_jogar+4)^0,w,c
  1562  00022E  2631               	addwf	(??_jogar+6)^0,f,c
  1563  000230  5030               	movf	(??_jogar+5)^0,w,c
  1564  000232  2232               	addwfc	(??_jogar+7)^0,f,c
  1565  000234  5043               	movf	jogar@j^0,w,c
  1566  000236  2431               	addwf	(??_jogar+6)^0,w,c
  1567  000238  6EE1               	movwf	fsr1l,c
  1568  00023A  5044               	movf	(jogar@j+1)^0,w,c
  1569  00023C  2032               	addwfc	(??_jogar+7)^0,w,c
  1570  00023E  6EE2               	movwf	fsr1h,c
  1571  000240  CFDF FFE7          	movff	indf2,indf1
  1572  000244  4A43               	infsnz	jogar@j^0,f,c
  1573  000246  2A44               	incf	(jogar@j+1)^0,f,c
  1574  000248  EFD6  F000         	goto	l1872
  1575  00024C                     l1882:
  1576                           
  1577                           ;task_manager.c: 112:                 mat_disp[i][15] = ' ';
  1578  00024C  C045  F02B         	movff	jogar@i,??_jogar
  1579  000250  C046  F02C         	movff	jogar@i+1,??_jogar+1
  1580  000254  3A2B               	swapf	??_jogar^0,f,c
  1581  000256  3A2C               	swapf	(??_jogar+1)^0,f,c
  1582  000258  0EF0               	movlw	240
  1583  00025A  162C               	andwf	(??_jogar+1)^0,f,c
  1584  00025C  502B               	movf	??_jogar^0,w,c
  1585  00025E  0B0F               	andlw	15
  1586  000260  122C               	iorwf	(??_jogar+1)^0,f,c
  1587  000262  0EF0               	movlw	240
  1588  000264  162B               	andwf	??_jogar^0,f,c
  1589  000266  0E8F               	movlw	low (_mat_disp+15)
  1590  000268  242B               	addwf	??_jogar^0,w,c
  1591  00026A  6ED9               	movwf	fsr2l,c
  1592  00026C  0E00               	movlw	high (_mat_disp+15)
  1593  00026E  202C               	addwfc	(??_jogar+1)^0,w,c
  1594  000270  6EDA               	movwf	fsr2h,c
  1595  000272  0E20               	movlw	32
  1596  000274  6EDF               	movwf	indf2,c
  1597  000276                     
  1598                           ;task_manager.c: 113:             }
  1599  000276  4A45               	infsnz	jogar@i^0,f,c
  1600  000278  2A46               	incf	(jogar@i+1)^0,f,c
  1601  00027A  EFC2  F000         	goto	l1866
  1602  00027E                     l1888:
  1603                           
  1604                           ;task_manager.c: 114:             mat_disp[x][y-1] = ' ';
  1605  00027E  505C               	movf	_x^0,w,c
  1606  000280  0D10               	mullw	16
  1607  000282  0EFF               	movlw	255
  1608  000284  6E2B               	movwf	??_jogar^0,c
  1609  000286  0EFF               	movlw	255
  1610  000288  6E2C               	movwf	(??_jogar+1)^0,c
  1611  00028A  0E80               	movlw	low _mat_disp
  1612  00028C  6E2D               	movwf	(??_jogar+2)^0,c
  1613  00028E  0E00               	movlw	high _mat_disp
  1614  000290  6E2E               	movwf	(??_jogar+3)^0,c
  1615  000292  502B               	movf	??_jogar^0,w,c
  1616  000294  262D               	addwf	(??_jogar+2)^0,f,c
  1617  000296  502C               	movf	(??_jogar+1)^0,w,c
  1618  000298  222E               	addwfc	(??_jogar+3)^0,f,c
  1619  00029A  50F3               	movf	243,w,c
  1620  00029C  262D               	addwf	(??_jogar+2)^0,f,c
  1621  00029E  50F4               	movf	244,w,c
  1622  0002A0  222E               	addwfc	(??_jogar+3)^0,f,c
  1623  0002A2  504A               	movf	_y^0,w,c
  1624  0002A4  242D               	addwf	(??_jogar+2)^0,w,c
  1625  0002A6  6ED9               	movwf	fsr2l,c
  1626  0002A8  0E00               	movlw	0
  1627  0002AA  202E               	addwfc	(??_jogar+3)^0,w,c
  1628  0002AC  6EDA               	movwf	fsr2h,c
  1629  0002AE  0E20               	movlw	32
  1630  0002B0  6EDF               	movwf	indf2,c
  1631                           
  1632                           ;task_manager.c: 115:             mat_disp[x][y] = '>';
  1633  0002B2  505C               	movf	_x^0,w,c
  1634  0002B4  0D10               	mullw	16
  1635  0002B6  0E80               	movlw	low _mat_disp
  1636  0002B8  6E2B               	movwf	??_jogar^0,c
  1637  0002BA  0E00               	movlw	high _mat_disp
  1638  0002BC  6E2C               	movwf	(??_jogar+1)^0,c
  1639  0002BE  50F3               	movf	243,w,c
  1640  0002C0  262B               	addwf	??_jogar^0,f,c
  1641  0002C2  50F4               	movf	244,w,c
  1642  0002C4  222C               	addwfc	(??_jogar+1)^0,f,c
  1643  0002C6  504A               	movf	_y^0,w,c
  1644  0002C8  242B               	addwf	??_jogar^0,w,c
  1645  0002CA  6ED9               	movwf	fsr2l,c
  1646  0002CC  0E00               	movlw	0
  1647  0002CE  202C               	addwfc	(??_jogar+1)^0,w,c
  1648  0002D0  6EDA               	movwf	fsr2h,c
  1649  0002D2  0E3E               	movlw	62
  1650  0002D4  6EDF               	movwf	indf2,c
  1651  0002D6                     
  1652                           ;task_manager.c: 117:             if(mat_disp[1][0] == '*' || mat_disp[2][0] == '*' || m
      +                          at_disp[3][0] == '*')
  1653  0002D6  0E2A               	movlw	42
  1654  0002D8  0100               	movlb	0	; () banked
  1655  0002DA  1990               	xorwf	(_mat_disp+16)& (0+255),w,b
  1656  0002DC  B4D8               	btfsc	status,2,c
  1657  0002DE  EF73  F001         	goto	u1221
  1658  0002E2  EF75  F001         	goto	u1220
  1659  0002E6                     u1221:
  1660  0002E6  EF87  F001         	goto	l1896
  1661  0002EA                     u1220:
  1662  0002EA                     
  1663                           ; BSR set to: 0
  1664  0002EA  0E2A               	movlw	42
  1665  0002EC  19A0               	xorwf	(_mat_disp+32)& (0+255),w,b
  1666  0002EE  B4D8               	btfsc	status,2,c
  1667  0002F0  EF7C  F001         	goto	u1231
  1668  0002F4  EF7E  F001         	goto	u1230
  1669  0002F8                     u1231:
  1670  0002F8  EF87  F001         	goto	l1896
  1671  0002FC                     u1230:
  1672  0002FC                     
  1673                           ; BSR set to: 0
  1674  0002FC  0E2A               	movlw	42
  1675  0002FE  19B0               	xorwf	(_mat_disp+48)& (0+255),w,b
  1676  000300  A4D8               	btfss	status,2,c
  1677  000302  EF85  F001         	goto	u1241
  1678  000306  EF87  F001         	goto	u1240
  1679  00030A                     u1241:
  1680  00030A  EFB9  F001         	goto	l1920
  1681  00030E                     u1240:
  1682  00030E                     l1896:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;task_manager.c: 118:             {;task_manager.c: 119:                 mat_disp[0][15-
      +                          1]++;
  1686  00030E  2B8E               	incf	(_mat_disp+14)& (0+255),f,b
  1687  000310                     
  1688                           ; BSR set to: 0
  1689                           ;task_manager.c: 120:                 if(mat_disp[0][15-1]==0x3A)
  1690  000310  0E3A               	movlw	58
  1691  000312  198E               	xorwf	(_mat_disp+14)& (0+255),w,b
  1692  000314  A4D8               	btfss	status,2,c
  1693  000316  EF8F  F001         	goto	u1251
  1694  00031A  EF91  F001         	goto	u1250
  1695  00031E                     u1251:
  1696  00031E  EFB9  F001         	goto	l1920
  1697  000322                     u1250:
  1698  000322                     
  1699                           ; BSR set to: 0
  1700                           ;task_manager.c: 121:                 {;task_manager.c: 122:                     mat_dis
      +                          p[0][15-1] = 0x30;
  1701  000322  0E30               	movlw	48
  1702  000324  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1703  000326                     
  1704                           ; BSR set to: 0
  1705                           ;task_manager.c: 123:                     mat_disp[0][14-1]++;
  1706  000326  2B8D               	incf	(_mat_disp+13)& (0+255),f,b
  1707  000328                     
  1708                           ; BSR set to: 0
  1709                           ;task_manager.c: 125:                     if(mat_disp[0][14-1]==0x3A)
  1710  000328  0E3A               	movlw	58
  1711  00032A  198D               	xorwf	(_mat_disp+13)& (0+255),w,b
  1712  00032C  A4D8               	btfss	status,2,c
  1713  00032E  EF9B  F001         	goto	u1261
  1714  000332  EF9D  F001         	goto	u1260
  1715  000336                     u1261:
  1716  000336  EFB9  F001         	goto	l1920
  1717  00033A                     u1260:
  1718  00033A                     
  1719                           ; BSR set to: 0
  1720                           ;task_manager.c: 126:                     {;task_manager.c: 127:                        
      +                           mat_disp[0][14-1] = 0x30;
  1721  00033A  0E30               	movlw	48
  1722  00033C  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1723  00033E                     
  1724                           ; BSR set to: 0
  1725                           ;task_manager.c: 128:                         mat_disp[0][13-1]++;
  1726  00033E  2B8C               	incf	(_mat_disp+12)& (0+255),f,b
  1727  000340                     
  1728                           ; BSR set to: 0
  1729                           ;task_manager.c: 130:                         if(mat_disp[0][13-1]==0x3A)
  1730  000340  0E3A               	movlw	58
  1731  000342  198C               	xorwf	(_mat_disp+12)& (0+255),w,b
  1732  000344  A4D8               	btfss	status,2,c
  1733  000346  EFA7  F001         	goto	u1271
  1734  00034A  EFA9  F001         	goto	u1270
  1735  00034E                     u1271:
  1736  00034E  EFB9  F001         	goto	l1920
  1737  000352                     u1270:
  1738  000352                     
  1739                           ; BSR set to: 0
  1740                           ;task_manager.c: 131:                         {;task_manager.c: 132:                    
      +                                   mat_disp[0][13-1] = 0x30;
  1741  000352  0E30               	movlw	48
  1742  000354  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1743  000356                     
  1744                           ; BSR set to: 0
  1745                           ;task_manager.c: 133:                             mat_disp[0][12-1]++;
  1746  000356  2B8B               	incf	(_mat_disp+11)& (0+255),f,b
  1747  000358                     
  1748                           ; BSR set to: 0
  1749                           ;task_manager.c: 135:                             if(mat_disp[0][12-1]==0x3A)
  1750  000358  0E3A               	movlw	58
  1751  00035A  198B               	xorwf	(_mat_disp+11)& (0+255),w,b
  1752  00035C  A4D8               	btfss	status,2,c
  1753  00035E  EFB3  F001         	goto	u1281
  1754  000362  EFB5  F001         	goto	u1280
  1755  000366                     u1281:
  1756  000366  EFB9  F001         	goto	l232
  1757  00036A                     u1280:
  1758  00036A                     
  1759                           ; BSR set to: 0
  1760                           ;task_manager.c: 136:                                 mat_disp[0][12-1] = 0x30;
  1761  00036A  0E30               	movlw	48
  1762  00036C  6F8B               	movwf	(_mat_disp+11)& (0+255),b
  1763  00036E  EFB9  F001         	goto	l1920
  1764  000372                     l232:
  1765  000372                     l1920:
  1766                           
  1767                           ;task_manager.c: 144:         print_mat(lcd);
  1768  000372  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1769  000376  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1770  00037A  ECFC  F007         	call	_print_mat	;wreg free
  1771  00037E                     
  1772                           ;task_manager.c: 146:         if(mat_disp[0][14-1] == 0x31 && mat_disp[0][15-1] == 0x30 
      +                          && nivel2 == 1){
  1773  00037E  0E31               	movlw	49
  1774  000380  0100               	movlb	0	; () banked
  1775  000382  198D               	xorwf	(_mat_disp+13)& (0+255),w,b
  1776  000384  A4D8               	btfss	status,2,c
  1777  000386  EFC7  F001         	goto	u1291
  1778  00038A  EFC9  F001         	goto	u1290
  1779  00038E                     u1291:
  1780  00038E  EF21  F002         	goto	l1942
  1781  000392                     u1290:
  1782  000392                     
  1783                           ; BSR set to: 0
  1784  000392  0E30               	movlw	48
  1785  000394  198E               	xorwf	(_mat_disp+14)& (0+255),w,b
  1786  000396  A4D8               	btfss	status,2,c
  1787  000398  EFD0  F001         	goto	u1301
  1788  00039C  EFD2  F001         	goto	u1300
  1789  0003A0                     u1301:
  1790  0003A0  EF21  F002         	goto	l1942
  1791  0003A4                     u1300:
  1792  0003A4                     
  1793                           ; BSR set to: 0
  1794  0003A4  0435               	decf	jogar@nivel2^0,w,c
  1795  0003A6  1036               	iorwf	(jogar@nivel2+1)^0,w,c
  1796  0003A8  A4D8               	btfss	status,2,c
  1797  0003AA  EFD9  F001         	goto	u1311
  1798  0003AE  EFDB  F001         	goto	u1310
  1799  0003B2                     u1311:
  1800  0003B2  EF21  F002         	goto	l1942
  1801  0003B6                     u1310:
  1802  0003B6                     
  1803                           ; BSR set to: 0
  1804                           ;task_manager.c: 147:             strcpy(mat_disp[1], "   NIVEL 2      ");
  1805  0003B6  0E90               	movlw	low (_mat_disp+16)
  1806  0003B8  6E01               	movwf	strcpy@dest^0,c
  1807  0003BA  0E00               	movlw	high (_mat_disp+16)
  1808  0003BC  6E02               	movwf	(strcpy@dest+1)^0,c
  1809  0003BE  0EF6               	movlw	low STR_21
  1810  0003C0  6E03               	movwf	strcpy@src^0,c
  1811  0003C2  0E7E               	movlw	high STR_21
  1812  0003C4  6E04               	movwf	(strcpy@src+1)^0,c
  1813  0003C6  EC95  F00A         	call	_strcpy	;wreg free
  1814                           
  1815                           ;task_manager.c: 148:             strcpy(mat_disp[2], "                ");
  1816  0003CA  0EA0               	movlw	low (_mat_disp+32)
  1817  0003CC  6E01               	movwf	strcpy@dest^0,c
  1818  0003CE  0E00               	movlw	high (_mat_disp+32)
  1819  0003D0  6E02               	movwf	(strcpy@dest+1)^0,c
  1820  0003D2  0EC3               	movlw	low STR_18
  1821  0003D4  6E03               	movwf	strcpy@src^0,c
  1822  0003D6  0E7E               	movlw	high STR_18
  1823  0003D8  6E04               	movwf	(strcpy@src+1)^0,c
  1824  0003DA  EC95  F00A         	call	_strcpy	;wreg free
  1825                           
  1826                           ;task_manager.c: 149:             strcpy(mat_disp[3], "                ");
  1827  0003DE  0EB0               	movlw	low (_mat_disp+48)
  1828  0003E0  6E01               	movwf	strcpy@dest^0,c
  1829  0003E2  0E00               	movlw	high (_mat_disp+48)
  1830  0003E4  6E02               	movwf	(strcpy@dest+1)^0,c
  1831  0003E6  0EC3               	movlw	low STR_18
  1832  0003E8  6E03               	movwf	strcpy@src^0,c
  1833  0003EA  0E7E               	movlw	high STR_18
  1834  0003EC  6E04               	movwf	(strcpy@src+1)^0,c
  1835  0003EE  EC95  F00A         	call	_strcpy	;wreg free
  1836  0003F2                     
  1837                           ;task_manager.c: 150:             print_mat(lcd);
  1838  0003F2  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1839  0003F6  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1840  0003FA  ECFC  F007         	call	_print_mat	;wreg free
  1841  0003FE                     
  1842                           ;task_manager.c: 152:             _delay((unsigned long)((2000)*(16000000/4000.0)));
  1843  0003FE  0E29               	movlw	41
  1844  000400  6E2C               	movwf	(??_jogar+1)^0,c
  1845  000402  0E96               	movlw	150
  1846  000404  6E2B               	movwf	??_jogar^0,c
  1847  000406  0E7F               	movlw	127
  1848  000408                     u1597:
  1849  000408  2EE8               	decfsz	wreg,f,c
  1850  00040A  D7FE               	bra	u1597
  1851  00040C  2E2B               	decfsz	??_jogar^0,f,c
  1852  00040E  D7FC               	bra	u1597
  1853  000410  2E2C               	decfsz	(??_jogar+1)^0,f,c
  1854  000412  D7FA               	bra	u1597
  1855  000414  F000               	nop	
  1856  000416                     
  1857                           ;task_manager.c: 153:             strcpy(mat_disp[1], "                ");
  1858  000416  0E90               	movlw	low (_mat_disp+16)
  1859  000418  6E01               	movwf	strcpy@dest^0,c
  1860  00041A  0E00               	movlw	high (_mat_disp+16)
  1861  00041C  6E02               	movwf	(strcpy@dest+1)^0,c
  1862  00041E  0EC3               	movlw	low STR_18
  1863  000420  6E03               	movwf	strcpy@src^0,c
  1864  000422  0E7E               	movlw	high STR_18
  1865  000424  6E04               	movwf	(strcpy@src+1)^0,c
  1866  000426  EC95  F00A         	call	_strcpy	;wreg free
  1867  00042A                     
  1868                           ;task_manager.c: 154:             nivel2 = 0;
  1869  00042A  0E00               	movlw	0
  1870  00042C  6E36               	movwf	(jogar@nivel2+1)^0,c
  1871  00042E  0E00               	movlw	0
  1872  000430  6E35               	movwf	jogar@nivel2^0,c
  1873  000432                     
  1874                           ;task_manager.c: 155:             velocidade = 2;
  1875  000432  0E00               	movlw	0
  1876  000434  6E40               	movwf	(jogar@velocidade+1)^0,c
  1877  000436  0E02               	movlw	2
  1878  000438  6E3F               	movwf	jogar@velocidade^0,c
  1879  00043A                     
  1880                           ;task_manager.c: 156:             qtd_asteroide = 15;
  1881  00043A  0E00               	movlw	0
  1882  00043C  6E3E               	movwf	(jogar@qtd_asteroide+1)^0,c
  1883  00043E  0E0F               	movlw	15
  1884  000440  6E3D               	movwf	jogar@qtd_asteroide^0,c
  1885  000442                     l1942:
  1886                           
  1887                           ;task_manager.c: 159:         if(mat_disp[0][14-1] == 0x33 && mat_disp[0][15-1] == 0x30 
      +                          && nivel3 == 1){
  1888  000442  0E33               	movlw	51
  1889  000444  0100               	movlb	0	; () banked
  1890  000446  198D               	xorwf	(_mat_disp+13)& (0+255),w,b
  1891  000448  A4D8               	btfss	status,2,c
  1892  00044A  EF29  F002         	goto	u1321
  1893  00044E  EF2B  F002         	goto	u1320
  1894  000452                     u1321:
  1895  000452  EF83  F002         	goto	l1962
  1896  000456                     u1320:
  1897  000456                     
  1898                           ; BSR set to: 0
  1899  000456  0E30               	movlw	48
  1900  000458  198E               	xorwf	(_mat_disp+14)& (0+255),w,b
  1901  00045A  A4D8               	btfss	status,2,c
  1902  00045C  EF32  F002         	goto	u1331
  1903  000460  EF34  F002         	goto	u1330
  1904  000464                     u1331:
  1905  000464  EF83  F002         	goto	l1962
  1906  000468                     u1330:
  1907  000468                     
  1908                           ; BSR set to: 0
  1909  000468  0437               	decf	jogar@nivel3^0,w,c
  1910  00046A  1038               	iorwf	(jogar@nivel3+1)^0,w,c
  1911  00046C  A4D8               	btfss	status,2,c
  1912  00046E  EF3B  F002         	goto	u1341
  1913  000472  EF3D  F002         	goto	u1340
  1914  000476                     u1341:
  1915  000476  EF83  F002         	goto	l1962
  1916  00047A                     u1340:
  1917  00047A                     
  1918                           ; BSR set to: 0
  1919                           ;task_manager.c: 160:             strcpy(mat_disp[1], "   NIVEL 3      ");
  1920  00047A  0E90               	movlw	low (_mat_disp+16)
  1921  00047C  6E01               	movwf	strcpy@dest^0,c
  1922  00047E  0E00               	movlw	high (_mat_disp+16)
  1923  000480  6E02               	movwf	(strcpy@dest+1)^0,c
  1924  000482  0E07               	movlw	low STR_25
  1925  000484  6E03               	movwf	strcpy@src^0,c
  1926  000486  0E7F               	movlw	high STR_25
  1927  000488  6E04               	movwf	(strcpy@src+1)^0,c
  1928  00048A  EC95  F00A         	call	_strcpy	;wreg free
  1929                           
  1930                           ;task_manager.c: 161:             strcpy(mat_disp[2], "                ");
  1931  00048E  0EA0               	movlw	low (_mat_disp+32)
  1932  000490  6E01               	movwf	strcpy@dest^0,c
  1933  000492  0E00               	movlw	high (_mat_disp+32)
  1934  000494  6E02               	movwf	(strcpy@dest+1)^0,c
  1935  000496  0EC3               	movlw	low STR_18
  1936  000498  6E03               	movwf	strcpy@src^0,c
  1937  00049A  0E7E               	movlw	high STR_18
  1938  00049C  6E04               	movwf	(strcpy@src+1)^0,c
  1939  00049E  EC95  F00A         	call	_strcpy	;wreg free
  1940                           
  1941                           ;task_manager.c: 162:             strcpy(mat_disp[3], "                ");
  1942  0004A2  0EB0               	movlw	low (_mat_disp+48)
  1943  0004A4  6E01               	movwf	strcpy@dest^0,c
  1944  0004A6  0E00               	movlw	high (_mat_disp+48)
  1945  0004A8  6E02               	movwf	(strcpy@dest+1)^0,c
  1946  0004AA  0EC3               	movlw	low STR_18
  1947  0004AC  6E03               	movwf	strcpy@src^0,c
  1948  0004AE  0E7E               	movlw	high STR_18
  1949  0004B0  6E04               	movwf	(strcpy@src+1)^0,c
  1950  0004B2  EC95  F00A         	call	_strcpy	;wreg free
  1951  0004B6                     
  1952                           ;task_manager.c: 163:             print_mat(lcd);
  1953  0004B6  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1954  0004BA  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1955  0004BE  ECFC  F007         	call	_print_mat	;wreg free
  1956  0004C2                     
  1957                           ;task_manager.c: 165:             _delay((unsigned long)((2000)*(16000000/4000.0)));
  1958  0004C2  0E29               	movlw	41
  1959  0004C4  6E2C               	movwf	(??_jogar+1)^0,c
  1960  0004C6  0E96               	movlw	150
  1961  0004C8  6E2B               	movwf	??_jogar^0,c
  1962  0004CA  0E7F               	movlw	127
  1963  0004CC                     u1607:
  1964  0004CC  2EE8               	decfsz	wreg,f,c
  1965  0004CE  D7FE               	bra	u1607
  1966  0004D0  2E2B               	decfsz	??_jogar^0,f,c
  1967  0004D2  D7FC               	bra	u1607
  1968  0004D4  2E2C               	decfsz	(??_jogar+1)^0,f,c
  1969  0004D6  D7FA               	bra	u1607
  1970  0004D8  F000               	nop	
  1971  0004DA                     
  1972                           ;task_manager.c: 166:             strcpy(mat_disp[1], "                ");
  1973  0004DA  0E90               	movlw	low (_mat_disp+16)
  1974  0004DC  6E01               	movwf	strcpy@dest^0,c
  1975  0004DE  0E00               	movlw	high (_mat_disp+16)
  1976  0004E0  6E02               	movwf	(strcpy@dest+1)^0,c
  1977  0004E2  0EC3               	movlw	low STR_18
  1978  0004E4  6E03               	movwf	strcpy@src^0,c
  1979  0004E6  0E7E               	movlw	high STR_18
  1980  0004E8  6E04               	movwf	(strcpy@src+1)^0,c
  1981  0004EA  EC95  F00A         	call	_strcpy	;wreg free
  1982  0004EE                     
  1983                           ;task_manager.c: 167:             nivel3 = 0;
  1984  0004EE  0E00               	movlw	0
  1985  0004F0  6E38               	movwf	(jogar@nivel3+1)^0,c
  1986  0004F2  0E00               	movlw	0
  1987  0004F4  6E37               	movwf	jogar@nivel3^0,c
  1988  0004F6                     
  1989                           ;task_manager.c: 168:             velocidade = 1;
  1990  0004F6  0E00               	movlw	0
  1991  0004F8  6E40               	movwf	(jogar@velocidade+1)^0,c
  1992  0004FA  0E01               	movlw	1
  1993  0004FC  6E3F               	movwf	jogar@velocidade^0,c
  1994  0004FE                     
  1995                           ;task_manager.c: 169:             qtd_asteroide = 5;
  1996  0004FE  0E00               	movlw	0
  1997  000500  6E3E               	movwf	(jogar@qtd_asteroide+1)^0,c
  1998  000502  0E05               	movlw	5
  1999  000504  6E3D               	movwf	jogar@qtd_asteroide^0,c
  2000  000506                     l1962:
  2001                           
  2002                           ;task_manager.c: 173:         if(mat_disp[x][y] == '>' && mat_disp[x][y+1] == '*')
  2003  000506  505C               	movf	_x^0,w,c
  2004  000508  0D10               	mullw	16
  2005  00050A  0E80               	movlw	low _mat_disp
  2006  00050C  6E2B               	movwf	??_jogar^0,c
  2007  00050E  0E00               	movlw	high _mat_disp
  2008  000510  6E2C               	movwf	(??_jogar+1)^0,c
  2009  000512  50F3               	movf	243,w,c
  2010  000514  262B               	addwf	??_jogar^0,f,c
  2011  000516  50F4               	movf	244,w,c
  2012  000518  222C               	addwfc	(??_jogar+1)^0,f,c
  2013  00051A  504A               	movf	_y^0,w,c
  2014  00051C  242B               	addwf	??_jogar^0,w,c
  2015  00051E  6ED9               	movwf	fsr2l,c
  2016  000520  0E00               	movlw	0
  2017  000522  202C               	addwfc	(??_jogar+1)^0,w,c
  2018  000524  6EDA               	movwf	fsr2h,c
  2019  000526  0E3E               	movlw	62
  2020  000528  18DE               	xorwf	postinc2,w,c
  2021  00052A  A4D8               	btfss	status,2,c
  2022  00052C  EF9A  F002         	goto	u1351
  2023  000530  EF9C  F002         	goto	u1350
  2024  000534                     u1351:
  2025  000534  EFBD  F002         	goto	l1968
  2026  000538                     u1350:
  2027  000538  505C               	movf	_x^0,w,c
  2028  00053A  0D10               	mullw	16
  2029  00053C  0E80               	movlw	low _mat_disp
  2030  00053E  6E2B               	movwf	??_jogar^0,c
  2031  000540  0E00               	movlw	high _mat_disp
  2032  000542  6E2C               	movwf	(??_jogar+1)^0,c
  2033  000544  0E01               	movlw	1
  2034  000546  262B               	addwf	??_jogar^0,f,c
  2035  000548  0E00               	movlw	0
  2036  00054A  222C               	addwfc	(??_jogar+1)^0,f,c
  2037  00054C  50F3               	movf	243,w,c
  2038  00054E  262B               	addwf	??_jogar^0,f,c
  2039  000550  50F4               	movf	244,w,c
  2040  000552  222C               	addwfc	(??_jogar+1)^0,f,c
  2041  000554  504A               	movf	_y^0,w,c
  2042  000556  242B               	addwf	??_jogar^0,w,c
  2043  000558  6ED9               	movwf	fsr2l,c
  2044  00055A  0E00               	movlw	0
  2045  00055C  202C               	addwfc	(??_jogar+1)^0,w,c
  2046  00055E  6EDA               	movwf	fsr2h,c
  2047  000560  0E2A               	movlw	42
  2048  000562  18DE               	xorwf	postinc2,w,c
  2049  000564  A4D8               	btfss	status,2,c
  2050  000566  EFB7  F002         	goto	u1361
  2051  00056A  EFB9  F002         	goto	u1360
  2052  00056E                     u1361:
  2053  00056E  EFBD  F002         	goto	l1968
  2054  000572                     u1360:
  2055  000572                     
  2056                           ;task_manager.c: 174:             bateu = 1;
  2057  000572  0E00               	movlw	0
  2058  000574  6E42               	movwf	(jogar@bateu+1)^0,c
  2059  000576  0E01               	movlw	1
  2060  000578  6E41               	movwf	jogar@bateu^0,c
  2061  00057A                     l1968:
  2062                           
  2063                           ;task_manager.c: 176:         if((botoes.U) && (x > 1)){
  2064  00057A  A051               	btfss	_botoes^0,0,c
  2065  00057C  EFC2  F002         	goto	u1371
  2066  000580  EFC4  F002         	goto	u1370
  2067  000584                     u1371:
  2068  000584  EF3A  F003         	goto	l1986
  2069  000588                     u1370:
  2070  000588  0E01               	movlw	1
  2071  00058A  645C               	cpfsgt	_x^0,c
  2072  00058C  EFCA  F002         	goto	u1381
  2073  000590  EFCC  F002         	goto	u1380
  2074  000594                     u1381:
  2075  000594  EF3A  F003         	goto	l1986
  2076  000598                     u1380:
  2077  000598                     
  2078                           ;task_manager.c: 177:             if(mat_disp[x][y] == '>' && mat_disp[x-1][y] == '*')
  2079  000598  505C               	movf	_x^0,w,c
  2080  00059A  0D10               	mullw	16
  2081  00059C  0E80               	movlw	low _mat_disp
  2082  00059E  6E2B               	movwf	??_jogar^0,c
  2083  0005A0  0E00               	movlw	high _mat_disp
  2084  0005A2  6E2C               	movwf	(??_jogar+1)^0,c
  2085  0005A4  50F3               	movf	243,w,c
  2086  0005A6  262B               	addwf	??_jogar^0,f,c
  2087  0005A8  50F4               	movf	244,w,c
  2088  0005AA  222C               	addwfc	(??_jogar+1)^0,f,c
  2089  0005AC  504A               	movf	_y^0,w,c
  2090  0005AE  242B               	addwf	??_jogar^0,w,c
  2091  0005B0  6ED9               	movwf	fsr2l,c
  2092  0005B2  0E00               	movlw	0
  2093  0005B4  202C               	addwfc	(??_jogar+1)^0,w,c
  2094  0005B6  6EDA               	movwf	fsr2h,c
  2095  0005B8  0E3E               	movlw	62
  2096  0005BA  18DE               	xorwf	postinc2,w,c
  2097  0005BC  A4D8               	btfss	status,2,c
  2098  0005BE  EFE3  F002         	goto	u1391
  2099  0005C2  EFE5  F002         	goto	u1390
  2100  0005C6                     u1391:
  2101  0005C6  EF14  F003         	goto	l1978
  2102  0005CA                     u1390:
  2103  0005CA  505C               	movf	_x^0,w,c
  2104  0005CC  6E2B               	movwf	??_jogar^0,c
  2105  0005CE  6A2C               	clrf	(??_jogar+1)^0,c
  2106  0005D0  3A2B               	swapf	??_jogar^0,f,c
  2107  0005D2  3A2C               	swapf	(??_jogar+1)^0,f,c
  2108  0005D4  0EF0               	movlw	240
  2109  0005D6  162C               	andwf	(??_jogar+1)^0,f,c
  2110  0005D8  502B               	movf	??_jogar^0,w,c
  2111  0005DA  0B0F               	andlw	15
  2112  0005DC  122C               	iorwf	(??_jogar+1)^0,f,c
  2113  0005DE  0EF0               	movlw	240
  2114  0005E0  162B               	andwf	??_jogar^0,f,c
  2115  0005E2  0EF0               	movlw	240
  2116  0005E4  6E2D               	movwf	(??_jogar+2)^0,c
  2117  0005E6  0EFF               	movlw	255
  2118  0005E8  6E2E               	movwf	(??_jogar+3)^0,c
  2119  0005EA  0E80               	movlw	low _mat_disp
  2120  0005EC  6E2F               	movwf	(??_jogar+4)^0,c
  2121  0005EE  0E00               	movlw	high _mat_disp
  2122  0005F0  6E30               	movwf	(??_jogar+5)^0,c
  2123  0005F2  502D               	movf	(??_jogar+2)^0,w,c
  2124  0005F4  262F               	addwf	(??_jogar+4)^0,f,c
  2125  0005F6  502E               	movf	(??_jogar+3)^0,w,c
  2126  0005F8  2230               	addwfc	(??_jogar+5)^0,f,c
  2127  0005FA  502B               	movf	??_jogar^0,w,c
  2128  0005FC  262F               	addwf	(??_jogar+4)^0,f,c
  2129  0005FE  502C               	movf	(??_jogar+1)^0,w,c
  2130  000600  2230               	addwfc	(??_jogar+5)^0,f,c
  2131  000602  504A               	movf	_y^0,w,c
  2132  000604  242F               	addwf	(??_jogar+4)^0,w,c
  2133  000606  6ED9               	movwf	fsr2l,c
  2134  000608  0E00               	movlw	0
  2135  00060A  2030               	addwfc	(??_jogar+5)^0,w,c
  2136  00060C  6EDA               	movwf	fsr2h,c
  2137  00060E  0E2A               	movlw	42
  2138  000610  18DE               	xorwf	postinc2,w,c
  2139  000612  A4D8               	btfss	status,2,c
  2140  000614  EF0E  F003         	goto	u1401
  2141  000618  EF10  F003         	goto	u1400
  2142  00061C                     u1401:
  2143  00061C  EF14  F003         	goto	l1978
  2144  000620                     u1400:
  2145  000620                     
  2146                           ;task_manager.c: 178:                 bateu = 1;
  2147  000620  0E00               	movlw	0
  2148  000622  6E42               	movwf	(jogar@bateu+1)^0,c
  2149  000624  0E01               	movlw	1
  2150  000626  6E41               	movwf	jogar@bateu^0,c
  2151  000628                     l1978:
  2152                           
  2153                           ;task_manager.c: 179:             mat_disp[x][y] = ' ';
  2154  000628  505C               	movf	_x^0,w,c
  2155  00062A  0D10               	mullw	16
  2156  00062C  0E80               	movlw	low _mat_disp
  2157  00062E  6E2B               	movwf	??_jogar^0,c
  2158  000630  0E00               	movlw	high _mat_disp
  2159  000632  6E2C               	movwf	(??_jogar+1)^0,c
  2160  000634  50F3               	movf	243,w,c
  2161  000636  262B               	addwf	??_jogar^0,f,c
  2162  000638  50F4               	movf	244,w,c
  2163  00063A  222C               	addwfc	(??_jogar+1)^0,f,c
  2164  00063C  504A               	movf	_y^0,w,c
  2165  00063E  242B               	addwf	??_jogar^0,w,c
  2166  000640  6ED9               	movwf	fsr2l,c
  2167  000642  0E00               	movlw	0
  2168  000644  202C               	addwfc	(??_jogar+1)^0,w,c
  2169  000646  6EDA               	movwf	fsr2h,c
  2170  000648  0E20               	movlw	32
  2171  00064A  6EDF               	movwf	indf2,c
  2172  00064C                     
  2173                           ;task_manager.c: 180:             x--;
  2174  00064C  065C               	decf	_x^0,f,c
  2175  00064E                     
  2176                           ;task_manager.c: 181:             botoes.U = 0;
  2177  00064E  9051               	bcf	_botoes^0,0,c
  2178  000650                     
  2179                           ;task_manager.c: 182:             mat_disp[x][y] = '>';
  2180  000650  505C               	movf	_x^0,w,c
  2181  000652  0D10               	mullw	16
  2182  000654  0E80               	movlw	low _mat_disp
  2183  000656  6E2B               	movwf	??_jogar^0,c
  2184  000658  0E00               	movlw	high _mat_disp
  2185  00065A  6E2C               	movwf	(??_jogar+1)^0,c
  2186  00065C  50F3               	movf	243,w,c
  2187  00065E  262B               	addwf	??_jogar^0,f,c
  2188  000660  50F4               	movf	244,w,c
  2189  000662  222C               	addwfc	(??_jogar+1)^0,f,c
  2190  000664  504A               	movf	_y^0,w,c
  2191  000666  242B               	addwf	??_jogar^0,w,c
  2192  000668  6ED9               	movwf	fsr2l,c
  2193  00066A  0E00               	movlw	0
  2194  00066C  202C               	addwfc	(??_jogar+1)^0,w,c
  2195  00066E  6EDA               	movwf	fsr2h,c
  2196  000670  0E3E               	movlw	62
  2197  000672  6EDF               	movwf	indf2,c
  2198  000674                     l1986:
  2199                           
  2200                           ;task_manager.c: 184:         if((botoes.D) && (x < 3)){
  2201  000674  A251               	btfss	_botoes^0,1,c
  2202  000676  EF3F  F003         	goto	u1411
  2203  00067A  EF41  F003         	goto	u1410
  2204  00067E                     u1411:
  2205  00067E  EFB3  F003         	goto	l2004
  2206  000682                     u1410:
  2207  000682  0E03               	movlw	3
  2208  000684  605C               	cpfslt	_x^0,c
  2209  000686  EF47  F003         	goto	u1421
  2210  00068A  EF49  F003         	goto	u1420
  2211  00068E                     u1421:
  2212  00068E  EFB3  F003         	goto	l2004
  2213  000692                     u1420:
  2214  000692                     
  2215                           ;task_manager.c: 185:             if(mat_disp[x][y] == '>' && mat_disp[x+1][y] == '*')
  2216  000692  505C               	movf	_x^0,w,c
  2217  000694  0D10               	mullw	16
  2218  000696  0E80               	movlw	low _mat_disp
  2219  000698  6E2B               	movwf	??_jogar^0,c
  2220  00069A  0E00               	movlw	high _mat_disp
  2221  00069C  6E2C               	movwf	(??_jogar+1)^0,c
  2222  00069E  50F3               	movf	243,w,c
  2223  0006A0  262B               	addwf	??_jogar^0,f,c
  2224  0006A2  50F4               	movf	244,w,c
  2225  0006A4  222C               	addwfc	(??_jogar+1)^0,f,c
  2226  0006A6  504A               	movf	_y^0,w,c
  2227  0006A8  242B               	addwf	??_jogar^0,w,c
  2228  0006AA  6ED9               	movwf	fsr2l,c
  2229  0006AC  0E00               	movlw	0
  2230  0006AE  202C               	addwfc	(??_jogar+1)^0,w,c
  2231  0006B0  6EDA               	movwf	fsr2h,c
  2232  0006B2  0E3E               	movlw	62
  2233  0006B4  18DE               	xorwf	postinc2,w,c
  2234  0006B6  A4D8               	btfss	status,2,c
  2235  0006B8  EF60  F003         	goto	u1431
  2236  0006BC  EF62  F003         	goto	u1430
  2237  0006C0                     u1431:
  2238  0006C0  EF8D  F003         	goto	l1996
  2239  0006C4                     u1430:
  2240  0006C4  505C               	movf	_x^0,w,c
  2241  0006C6  6E2B               	movwf	??_jogar^0,c
  2242  0006C8  6A2C               	clrf	(??_jogar+1)^0,c
  2243  0006CA  3A2B               	swapf	??_jogar^0,f,c
  2244  0006CC  3A2C               	swapf	(??_jogar+1)^0,f,c
  2245  0006CE  0EF0               	movlw	240
  2246  0006D0  162C               	andwf	(??_jogar+1)^0,f,c
  2247  0006D2  502B               	movf	??_jogar^0,w,c
  2248  0006D4  0B0F               	andlw	15
  2249  0006D6  122C               	iorwf	(??_jogar+1)^0,f,c
  2250  0006D8  0EF0               	movlw	240
  2251  0006DA  162B               	andwf	??_jogar^0,f,c
  2252  0006DC  0E80               	movlw	low _mat_disp
  2253  0006DE  6E2D               	movwf	(??_jogar+2)^0,c
  2254  0006E0  0E00               	movlw	high _mat_disp
  2255  0006E2  6E2E               	movwf	(??_jogar+3)^0,c
  2256  0006E4  0E10               	movlw	16
  2257  0006E6  262D               	addwf	(??_jogar+2)^0,f,c
  2258  0006E8  0E00               	movlw	0
  2259  0006EA  222E               	addwfc	(??_jogar+3)^0,f,c
  2260  0006EC  502B               	movf	??_jogar^0,w,c
  2261  0006EE  262D               	addwf	(??_jogar+2)^0,f,c
  2262  0006F0  502C               	movf	(??_jogar+1)^0,w,c
  2263  0006F2  222E               	addwfc	(??_jogar+3)^0,f,c
  2264  0006F4  504A               	movf	_y^0,w,c
  2265  0006F6  242D               	addwf	(??_jogar+2)^0,w,c
  2266  0006F8  6ED9               	movwf	fsr2l,c
  2267  0006FA  0E00               	movlw	0
  2268  0006FC  202E               	addwfc	(??_jogar+3)^0,w,c
  2269  0006FE  6EDA               	movwf	fsr2h,c
  2270  000700  0E2A               	movlw	42
  2271  000702  18DE               	xorwf	postinc2,w,c
  2272  000704  A4D8               	btfss	status,2,c
  2273  000706  EF87  F003         	goto	u1441
  2274  00070A  EF89  F003         	goto	u1440
  2275  00070E                     u1441:
  2276  00070E  EF8D  F003         	goto	l1996
  2277  000712                     u1440:
  2278  000712                     
  2279                           ;task_manager.c: 186:                 bateu = 1;
  2280  000712  0E00               	movlw	0
  2281  000714  6E42               	movwf	(jogar@bateu+1)^0,c
  2282  000716  0E01               	movlw	1
  2283  000718  6E41               	movwf	jogar@bateu^0,c
  2284  00071A                     l1996:
  2285                           
  2286                           ;task_manager.c: 187:             mat_disp[x][y] = ' ';
  2287  00071A  505C               	movf	_x^0,w,c
  2288  00071C  0D10               	mullw	16
  2289  00071E  0E80               	movlw	low _mat_disp
  2290  000720  6E2B               	movwf	??_jogar^0,c
  2291  000722  0E00               	movlw	high _mat_disp
  2292  000724  6E2C               	movwf	(??_jogar+1)^0,c
  2293  000726  50F3               	movf	243,w,c
  2294  000728  262B               	addwf	??_jogar^0,f,c
  2295  00072A  50F4               	movf	244,w,c
  2296  00072C  222C               	addwfc	(??_jogar+1)^0,f,c
  2297  00072E  504A               	movf	_y^0,w,c
  2298  000730  242B               	addwf	??_jogar^0,w,c
  2299  000732  6ED9               	movwf	fsr2l,c
  2300  000734  0E00               	movlw	0
  2301  000736  202C               	addwfc	(??_jogar+1)^0,w,c
  2302  000738  6EDA               	movwf	fsr2h,c
  2303  00073A  0E20               	movlw	32
  2304  00073C  6EDF               	movwf	indf2,c
  2305  00073E                     
  2306                           ;task_manager.c: 188:             x++;
  2307  00073E  2A5C               	incf	_x^0,f,c
  2308  000740                     
  2309                           ;task_manager.c: 189:             botoes.D = 0;
  2310  000740  9251               	bcf	_botoes^0,1,c
  2311  000742                     
  2312                           ;task_manager.c: 190:             mat_disp[x][y] = '>';
  2313  000742  505C               	movf	_x^0,w,c
  2314  000744  0D10               	mullw	16
  2315  000746  0E80               	movlw	low _mat_disp
  2316  000748  6E2B               	movwf	??_jogar^0,c
  2317  00074A  0E00               	movlw	high _mat_disp
  2318  00074C  6E2C               	movwf	(??_jogar+1)^0,c
  2319  00074E  50F3               	movf	243,w,c
  2320  000750  262B               	addwf	??_jogar^0,f,c
  2321  000752  50F4               	movf	244,w,c
  2322  000754  222C               	addwfc	(??_jogar+1)^0,f,c
  2323  000756  504A               	movf	_y^0,w,c
  2324  000758  242B               	addwf	??_jogar^0,w,c
  2325  00075A  6ED9               	movwf	fsr2l,c
  2326  00075C  0E00               	movlw	0
  2327  00075E  202C               	addwfc	(??_jogar+1)^0,w,c
  2328  000760  6EDA               	movwf	fsr2h,c
  2329  000762  0E3E               	movlw	62
  2330  000764  6EDF               	movwf	indf2,c
  2331  000766                     l2004:
  2332                           
  2333                           ;task_manager.c: 192:         if((botoes.R) && (y < 15)){
  2334  000766  A651               	btfss	_botoes^0,3,c
  2335  000768  EFB8  F003         	goto	u1451
  2336  00076C  EFBA  F003         	goto	u1450
  2337  000770                     u1451:
  2338  000770  EFE8  F003         	goto	l2016
  2339  000774                     u1450:
  2340  000774  0E0F               	movlw	15
  2341  000776  604A               	cpfslt	_y^0,c
  2342  000778  EFC0  F003         	goto	u1461
  2343  00077C  EFC2  F003         	goto	u1460
  2344  000780                     u1461:
  2345  000780  EFE8  F003         	goto	l2016
  2346  000784                     u1460:
  2347  000784                     
  2348                           ;task_manager.c: 193:             mat_disp[x][y] = ' ';
  2349  000784  505C               	movf	_x^0,w,c
  2350  000786  0D10               	mullw	16
  2351  000788  0E80               	movlw	low _mat_disp
  2352  00078A  6E2B               	movwf	??_jogar^0,c
  2353  00078C  0E00               	movlw	high _mat_disp
  2354  00078E  6E2C               	movwf	(??_jogar+1)^0,c
  2355  000790  50F3               	movf	243,w,c
  2356  000792  262B               	addwf	??_jogar^0,f,c
  2357  000794  50F4               	movf	244,w,c
  2358  000796  222C               	addwfc	(??_jogar+1)^0,f,c
  2359  000798  504A               	movf	_y^0,w,c
  2360  00079A  242B               	addwf	??_jogar^0,w,c
  2361  00079C  6ED9               	movwf	fsr2l,c
  2362  00079E  0E00               	movlw	0
  2363  0007A0  202C               	addwfc	(??_jogar+1)^0,w,c
  2364  0007A2  6EDA               	movwf	fsr2h,c
  2365  0007A4  0E20               	movlw	32
  2366  0007A6  6EDF               	movwf	indf2,c
  2367  0007A8                     
  2368                           ;task_manager.c: 194:             y++;
  2369  0007A8  2A4A               	incf	_y^0,f,c
  2370  0007AA                     
  2371                           ;task_manager.c: 195:             botoes.R = 0;
  2372  0007AA  9651               	bcf	_botoes^0,3,c
  2373  0007AC                     
  2374                           ;task_manager.c: 196:             mat_disp[x][y] = '>';
  2375  0007AC  505C               	movf	_x^0,w,c
  2376  0007AE  0D10               	mullw	16
  2377  0007B0  0E80               	movlw	low _mat_disp
  2378  0007B2  6E2B               	movwf	??_jogar^0,c
  2379  0007B4  0E00               	movlw	high _mat_disp
  2380  0007B6  6E2C               	movwf	(??_jogar+1)^0,c
  2381  0007B8  50F3               	movf	243,w,c
  2382  0007BA  262B               	addwf	??_jogar^0,f,c
  2383  0007BC  50F4               	movf	244,w,c
  2384  0007BE  222C               	addwfc	(??_jogar+1)^0,f,c
  2385  0007C0  504A               	movf	_y^0,w,c
  2386  0007C2  242B               	addwf	??_jogar^0,w,c
  2387  0007C4  6ED9               	movwf	fsr2l,c
  2388  0007C6  0E00               	movlw	0
  2389  0007C8  202C               	addwfc	(??_jogar+1)^0,w,c
  2390  0007CA  6EDA               	movwf	fsr2h,c
  2391  0007CC  0E3E               	movlw	62
  2392  0007CE  6EDF               	movwf	indf2,c
  2393  0007D0                     l2016:
  2394                           
  2395                           ;task_manager.c: 198:         if((botoes.L) && (y > 0)){
  2396  0007D0  A451               	btfss	_botoes^0,2,c
  2397  0007D2  EFED  F003         	goto	u1471
  2398  0007D6  EFEF  F003         	goto	u1470
  2399  0007DA                     u1471:
  2400  0007DA  EF1D  F004         	goto	l2028
  2401  0007DE                     u1470:
  2402  0007DE  504A               	movf	_y^0,w,c
  2403  0007E0  B4D8               	btfsc	status,2,c
  2404  0007E2  EFF5  F003         	goto	u1481
  2405  0007E6  EFF7  F003         	goto	u1480
  2406  0007EA                     u1481:
  2407  0007EA  EF1D  F004         	goto	l2028
  2408  0007EE                     u1480:
  2409  0007EE                     
  2410                           ;task_manager.c: 199:             mat_disp[x][y] = ' ';
  2411  0007EE  505C               	movf	_x^0,w,c
  2412  0007F0  0D10               	mullw	16
  2413  0007F2  0E80               	movlw	low _mat_disp
  2414  0007F4  6E2B               	movwf	??_jogar^0,c
  2415  0007F6  0E00               	movlw	high _mat_disp
  2416  0007F8  6E2C               	movwf	(??_jogar+1)^0,c
  2417  0007FA  50F3               	movf	243,w,c
  2418  0007FC  262B               	addwf	??_jogar^0,f,c
  2419  0007FE  50F4               	movf	244,w,c
  2420  000800  222C               	addwfc	(??_jogar+1)^0,f,c
  2421  000802  504A               	movf	_y^0,w,c
  2422  000804  242B               	addwf	??_jogar^0,w,c
  2423  000806  6ED9               	movwf	fsr2l,c
  2424  000808  0E00               	movlw	0
  2425  00080A  202C               	addwfc	(??_jogar+1)^0,w,c
  2426  00080C  6EDA               	movwf	fsr2h,c
  2427  00080E  0E20               	movlw	32
  2428  000810  6EDF               	movwf	indf2,c
  2429  000812                     
  2430                           ;task_manager.c: 200:             y--;
  2431  000812  064A               	decf	_y^0,f,c
  2432  000814                     
  2433                           ;task_manager.c: 201:             botoes.L = 0;
  2434  000814  9451               	bcf	_botoes^0,2,c
  2435  000816                     
  2436                           ;task_manager.c: 202:             mat_disp[x][y] = '>';
  2437  000816  505C               	movf	_x^0,w,c
  2438  000818  0D10               	mullw	16
  2439  00081A  0E80               	movlw	low _mat_disp
  2440  00081C  6E2B               	movwf	??_jogar^0,c
  2441  00081E  0E00               	movlw	high _mat_disp
  2442  000820  6E2C               	movwf	(??_jogar+1)^0,c
  2443  000822  50F3               	movf	243,w,c
  2444  000824  262B               	addwf	??_jogar^0,f,c
  2445  000826  50F4               	movf	244,w,c
  2446  000828  222C               	addwfc	(??_jogar+1)^0,f,c
  2447  00082A  504A               	movf	_y^0,w,c
  2448  00082C  242B               	addwf	??_jogar^0,w,c
  2449  00082E  6ED9               	movwf	fsr2l,c
  2450  000830  0E00               	movlw	0
  2451  000832  202C               	addwfc	(??_jogar+1)^0,w,c
  2452  000834  6EDA               	movwf	fsr2h,c
  2453  000836  0E3E               	movlw	62
  2454  000838  6EDF               	movwf	indf2,c
  2455  00083A                     l2028:
  2456                           
  2457                           ;task_manager.c: 102:     while(!botoes.Esc && bateu == 0){
  2458  00083A  BA51               	btfsc	_botoes^0,5,c
  2459  00083C  EF22  F004         	goto	u1491
  2460  000840  EF24  F004         	goto	u1490
  2461  000844                     u1491:
  2462  000844  EF2D  F004         	goto	l247
  2463  000848                     u1490:
  2464  000848  5041               	movf	jogar@bateu^0,w,c
  2465  00084A  1042               	iorwf	(jogar@bateu+1)^0,w,c
  2466  00084C  B4D8               	btfsc	status,2,c
  2467  00084E  EF2B  F004         	goto	u1501
  2468  000852  EF2D  F004         	goto	u1500
  2469  000856                     u1501:
  2470  000856  EF72  F000         	goto	l1854
  2471  00085A                     u1500:
  2472  00085A                     l247:
  2473                           
  2474                           ;task_manager.c: 206:     char pont4 = mat_disp[0][14], pont3 = mat_disp[0][13], pont2 =
      +                           mat_disp[0][12], pont1 = mat_disp[0][11];
  2475  00085A  C08E  F039         	movff	_mat_disp+14,jogar@pont4
  2476  00085E  C08D  F03A         	movff	_mat_disp+13,jogar@pont3
  2477  000862  C08C  F03B         	movff	_mat_disp+12,jogar@pont2
  2478  000866  C08B  F03C         	movff	_mat_disp+11,jogar@pont1
  2479  00086A                     
  2480                           ;task_manager.c: 207:     if(bateu == 1){
  2481  00086A  0441               	decf	jogar@bateu^0,w,c
  2482  00086C  1042               	iorwf	(jogar@bateu+1)^0,w,c
  2483  00086E  A4D8               	btfss	status,2,c
  2484  000870  EF3C  F004         	goto	u1511
  2485  000874  EF3E  F004         	goto	u1510
  2486  000878                     u1511:
  2487  000878  EF7B  F004         	goto	l2046
  2488  00087C                     u1510:
  2489  00087C                     
  2490                           ;task_manager.c: 208:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  2491  00087C  0E80               	movlw	low _mat_disp
  2492  00087E  6E01               	movwf	strcpy@dest^0,c
  2493  000880  0E00               	movlw	high _mat_disp
  2494  000882  6E02               	movwf	(strcpy@dest+1)^0,c
  2495  000884  0E3A               	movlw	low STR_29
  2496  000886  6E03               	movwf	strcpy@src^0,c
  2497  000888  0E7F               	movlw	high STR_29
  2498  00088A  6E04               	movwf	(strcpy@src+1)^0,c
  2499  00088C  EC95  F00A         	call	_strcpy	;wreg free
  2500                           
  2501                           ;task_manager.c: 209:             strcpy(mat_disp[1], "SCORE:          ");
  2502  000890  0E90               	movlw	low (_mat_disp+16)
  2503  000892  6E01               	movwf	strcpy@dest^0,c
  2504  000894  0E00               	movlw	high (_mat_disp+16)
  2505  000896  6E02               	movwf	(strcpy@dest+1)^0,c
  2506  000898  0ED4               	movlw	low STR_30
  2507  00089A  6E03               	movwf	strcpy@src^0,c
  2508  00089C  0E7E               	movlw	high STR_30
  2509  00089E  6E04               	movwf	(strcpy@src+1)^0,c
  2510  0008A0  EC95  F00A         	call	_strcpy	;wreg free
  2511                           
  2512                           ;task_manager.c: 210:             strcpy(mat_disp[2], "APERTE ESC      ");
  2513  0008A4  0EA0               	movlw	low (_mat_disp+32)
  2514  0008A6  6E01               	movwf	strcpy@dest^0,c
  2515  0008A8  0E00               	movlw	high (_mat_disp+32)
  2516  0008AA  6E02               	movwf	(strcpy@dest+1)^0,c
  2517  0008AC  0E18               	movlw	low STR_31
  2518  0008AE  6E03               	movwf	strcpy@src^0,c
  2519  0008B0  0E7F               	movlw	high STR_31
  2520  0008B2  6E04               	movwf	(strcpy@src+1)^0,c
  2521  0008B4  EC95  F00A         	call	_strcpy	;wreg free
  2522                           
  2523                           ;task_manager.c: 211:             strcpy(mat_disp[3], "PARA SAIR       ");
  2524  0008B8  0EB0               	movlw	low (_mat_disp+48)
  2525  0008BA  6E01               	movwf	strcpy@dest^0,c
  2526  0008BC  0E00               	movlw	high (_mat_disp+48)
  2527  0008BE  6E02               	movwf	(strcpy@dest+1)^0,c
  2528  0008C0  0EE5               	movlw	low STR_32
  2529  0008C2  6E03               	movwf	strcpy@src^0,c
  2530  0008C4  0E7E               	movlw	high STR_32
  2531  0008C6  6E04               	movwf	(strcpy@src+1)^0,c
  2532  0008C8  EC95  F00A         	call	_strcpy	;wreg free
  2533  0008CC                     
  2534                           ;task_manager.c: 212:             mat_disp[1][6] = pont1;
  2535  0008CC  C03C  F096         	movff	jogar@pont1,_mat_disp+22
  2536  0008D0                     
  2537                           ;task_manager.c: 213:             mat_disp[1][7] = pont2;
  2538  0008D0  C03B  F097         	movff	jogar@pont2,_mat_disp+23
  2539  0008D4                     
  2540                           ;task_manager.c: 214:             mat_disp[1][8] = pont3;
  2541  0008D4  C03A  F098         	movff	jogar@pont3,_mat_disp+24
  2542  0008D8                     
  2543                           ;task_manager.c: 215:             mat_disp[1][9] = pont4;
  2544  0008D8  C039  F099         	movff	jogar@pont4,_mat_disp+25
  2545  0008DC                     
  2546                           ;task_manager.c: 216:             print_mat(lcd);
  2547  0008DC  C029  F010         	movff	jogar@lcd,print_mat@lcd
  2548  0008E0  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  2549  0008E4  ECFC  F007         	call	_print_mat	;wreg free
  2550  0008E8                     l249:
  2551  0008E8  AA51               	btfss	_botoes^0,5,c
  2552  0008EA  EF79  F004         	goto	u1521
  2553  0008EE  EF7B  F004         	goto	u1520
  2554  0008F2                     u1521:
  2555  0008F2  EF74  F004         	goto	l249
  2556  0008F6                     u1520:
  2557  0008F6                     l2046:
  2558                           
  2559                           ;task_manager.c: 220:     x = 1;
  2560  0008F6  0E01               	movlw	1
  2561  0008F8  6E5C               	movwf	_x^0,c
  2562                           
  2563                           ;task_manager.c: 221:     y = 0;
  2564  0008FA  0E00               	movlw	0
  2565  0008FC  6E4A               	movwf	_y^0,c
  2566                           
  2567                           ;task_manager.c: 222:     contador = 0;
  2568  0008FE  0E00               	movlw	0
  2569  000900  6E49               	movwf	_contador^0,c
  2570  000902  0012               	return		;funcret
  2571  000904                     __end_of_jogar:
  2572                           	opt callstack 0
  2573                           
  2574 ;; *************** function _time *****************
  2575 ;; Defined at:
  2576 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  t               2    0[COMRAM] PTR long long 
  2579 ;;		 -> NULL(0), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  8    0[COMRAM] long long 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2591 ;;      Params:         8       0       0       0       0       0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0
  2594 ;;      Totals:         8       0       0       0       0       0       0
  2595 ;;Total ram usage:        8 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    2
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_jogar
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text4
  2606  00149A                     __ptext4:
  2607                           	opt callstack 0
  2608  00149A                     _time:
  2609                           	opt callstack 26
  2610  00149A  5001               	movf	time@t^0,w,c
  2611  00149C  1002               	iorwf	(time@t+1)^0,w,c
  2612  00149E  B4D8               	btfsc	status,2,c
  2613  0014A0  EF54  F00A         	goto	u1051
  2614  0014A4  EF56  F00A         	goto	u1050
  2615  0014A8                     u1051:
  2616  0014A8  EF6A  F00A         	goto	l1742
  2617  0014AC                     u1050:
  2618  0014AC  C001  FFD9         	movff	time@t,fsr2l
  2619  0014B0  C002  FFDA         	movff	time@t+1,fsr2h
  2620  0014B4  0EFF               	movlw	255
  2621  0014B6  6EDE               	movwf	postinc2,c
  2622  0014B8  0EFF               	movlw	255
  2623  0014BA  6EDE               	movwf	postinc2,c
  2624  0014BC  0EFF               	movlw	255
  2625  0014BE  6EDE               	movwf	postinc2,c
  2626  0014C0  0EFF               	movlw	255
  2627  0014C2  6EDE               	movwf	postinc2,c
  2628  0014C4  0EFF               	movlw	255
  2629  0014C6  6EDE               	movwf	postinc2,c
  2630  0014C8  0EFF               	movlw	255
  2631  0014CA  6EDE               	movwf	postinc2,c
  2632  0014CC  0EFF               	movlw	255
  2633  0014CE  6EDE               	movwf	postinc2,c
  2634  0014D0  0EFF               	movlw	255
  2635  0014D2  6EDD               	movwf	postdec2,c
  2636  0014D4                     l1742:
  2637  0014D4  6801               	setf	?_time^0,c
  2638  0014D6  6802               	setf	(?_time+1)^0,c
  2639  0014D8  6803               	setf	(?_time+2)^0,c
  2640  0014DA  6804               	setf	(?_time+3)^0,c
  2641  0014DC  6805               	setf	(?_time+4)^0,c
  2642  0014DE  6806               	setf	(?_time+5)^0,c
  2643  0014E0  6807               	setf	(?_time+6)^0,c
  2644  0014E2  6808               	setf	(?_time+7)^0,c
  2645  0014E4  0012               	return		;funcret
  2646  0014E6                     __end_of_time:
  2647                           	opt callstack 0
  2648                           
  2649 ;; *************** function _srand *****************
  2650 ;; Defined at:
  2651 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  s               2    8[COMRAM] unsigned int 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2665 ;;      Params:         2       0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0
  2667 ;;      Temps:          4       0       0       0       0       0       0
  2668 ;;      Totals:         6       0       0       0       0       0       0
  2669 ;;Total ram usage:        6 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    2
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_jogar
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text5
  2680  001610                     __ptext5:
  2681                           	opt callstack 0
  2682  001610                     _srand:
  2683                           	opt callstack 26
  2684  001610  0EFF               	movlw	255
  2685  001612  6E0B               	movwf	??_srand^0,c
  2686  001614  0EFF               	movlw	255
  2687  001616  6E0C               	movwf	(??_srand+1)^0,c
  2688  001618  C009  F00D         	movff	srand@s,??_srand+2
  2689  00161C  C00A  F00E         	movff	srand@s+1,??_srand+3
  2690  001620  500B               	movf	??_srand^0,w,c
  2691  001622  260D               	addwf	(??_srand+2)^0,f,c
  2692  001624  500C               	movf	(??_srand+1)^0,w,c
  2693  001626  220E               	addwfc	(??_srand+3)^0,f,c
  2694  001628  C00D  F052         	movff	??_srand+2,_seed
  2695  00162C  C00E  F053         	movff	??_srand+3,_seed+1
  2696  001630  6A54               	clrf	(_seed+2)^0,c
  2697  001632  6A55               	clrf	(_seed+3)^0,c
  2698  001634  6A56               	clrf	(_seed+4)^0,c
  2699  001636  6A57               	clrf	(_seed+5)^0,c
  2700  001638  6A58               	clrf	(_seed+6)^0,c
  2701  00163A  6A59               	clrf	(_seed+7)^0,c
  2702  00163C  0012               	return		;funcret
  2703  00163E                     __end_of_srand:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _rand *****************
  2707 ;; Defined at:
  2708 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2   24[COMRAM] int 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         2       0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0
  2724 ;;      Temps:          8       0       0       0       0       0       0
  2725 ;;      Totals:        10       0       0       0       0       0       0
  2726 ;;Total ram usage:       10 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    3
  2729 ;; This function calls:
  2730 ;;		___omul
  2731 ;; This function is called by:
  2732 ;;		_jogar
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text6
  2737  000CD6                     __ptext6:
  2738                           	opt callstack 0
  2739  000CD6                     _rand:
  2740                           	opt callstack 25
  2741  000CD6  C052  F001         	movff	_seed,___omul@multiplier
  2742  000CDA  C053  F002         	movff	_seed+1,___omul@multiplier+1
  2743  000CDE  C054  F003         	movff	_seed+2,___omul@multiplier+2
  2744  000CE2  C055  F004         	movff	_seed+3,___omul@multiplier+3
  2745  000CE6  C056  F005         	movff	_seed+4,___omul@multiplier+4
  2746  000CEA  C057  F006         	movff	_seed+5,___omul@multiplier+5
  2747  000CEE  C058  F007         	movff	_seed+6,___omul@multiplier+6
  2748  000CF2  C059  F008         	movff	_seed+7,___omul@multiplier+7
  2749  000CF6  0E2D               	movlw	45
  2750  000CF8  6E09               	movwf	___omul@multiplicand^0,c
  2751  000CFA  0E7F               	movlw	127
  2752  000CFC  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2753  000CFE  0E95               	movlw	149
  2754  000D00  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2755  000D02  0E4C               	movlw	76
  2756  000D04  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2757  000D06  0E2D               	movlw	45
  2758  000D08  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2759  000D0A  0EF4               	movlw	244
  2760  000D0C  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2761  000D0E  0E51               	movlw	81
  2762  000D10  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2763  000D12  0E58               	movlw	88
  2764  000D14  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2765  000D16  EC52  F008         	call	___omul	;wreg free
  2766  000D1A  C001  F01B         	movff	?___omul,??_rand
  2767  000D1E  C002  F01C         	movff	?___omul+1,??_rand+1
  2768  000D22  C003  F01D         	movff	?___omul+2,??_rand+2
  2769  000D26  C004  F01E         	movff	?___omul+3,??_rand+3
  2770  000D2A  C005  F01F         	movff	?___omul+4,??_rand+4
  2771  000D2E  C006  F020         	movff	?___omul+5,??_rand+5
  2772  000D32  C007  F021         	movff	?___omul+6,??_rand+6
  2773  000D36  C008  F022         	movff	?___omul+7,??_rand+7
  2774  000D3A  0E01               	movlw	1
  2775  000D3C  241B               	addwf	??_rand^0,w,c
  2776  000D3E  6E52               	movwf	_seed^0,c
  2777  000D40  0E00               	movlw	0
  2778  000D42  201C               	addwfc	(??_rand+1)^0,w,c
  2779  000D44  6E53               	movwf	(_seed+1)^0,c
  2780  000D46  0E00               	movlw	0
  2781  000D48  201D               	addwfc	(??_rand+2)^0,w,c
  2782  000D4A  6E54               	movwf	(_seed+2)^0,c
  2783  000D4C  0E00               	movlw	0
  2784  000D4E  201E               	addwfc	(??_rand+3)^0,w,c
  2785  000D50  6E55               	movwf	(_seed+3)^0,c
  2786  000D52  0E00               	movlw	0
  2787  000D54  201F               	addwfc	(??_rand+4)^0,w,c
  2788  000D56  6E56               	movwf	(_seed+4)^0,c
  2789  000D58  0E00               	movlw	0
  2790  000D5A  2020               	addwfc	(??_rand+5)^0,w,c
  2791  000D5C  6E57               	movwf	(_seed+5)^0,c
  2792  000D5E  0E00               	movlw	0
  2793  000D60  2021               	addwfc	(??_rand+6)^0,w,c
  2794  000D62  6E58               	movwf	(_seed+6)^0,c
  2795  000D64  0E00               	movlw	0
  2796  000D66  2022               	addwfc	(??_rand+7)^0,w,c
  2797  000D68  6E59               	movwf	(_seed+7)^0,c
  2798  000D6A  C052  F01B         	movff	_seed,??_rand
  2799  000D6E  C053  F01C         	movff	_seed+1,??_rand+1
  2800  000D72  C054  F01D         	movff	_seed+2,??_rand+2
  2801  000D76  C055  F01E         	movff	_seed+3,??_rand+3
  2802  000D7A  C056  F01F         	movff	_seed+4,??_rand+4
  2803  000D7E  C057  F020         	movff	_seed+5,??_rand+5
  2804  000D82  C058  F021         	movff	_seed+6,??_rand+6
  2805  000D86  C059  F022         	movff	_seed+7,??_rand+7
  2806  000D8A  0E32               	movlw	50
  2807  000D8C  EFD1  F006         	goto	u1060
  2808  000D90                     u1065:
  2809  000D90  90D8               	bcf	status,0,c
  2810  000D92  3222               	rrcf	(??_rand+7)^0,f,c
  2811  000D94  3221               	rrcf	(??_rand+6)^0,f,c
  2812  000D96  3220               	rrcf	(??_rand+5)^0,f,c
  2813  000D98  321F               	rrcf	(??_rand+4)^0,f,c
  2814  000D9A  321E               	rrcf	(??_rand+3)^0,f,c
  2815  000D9C  321D               	rrcf	(??_rand+2)^0,f,c
  2816  000D9E  321C               	rrcf	(??_rand+1)^0,f,c
  2817  000DA0  321B               	rrcf	??_rand^0,f,c
  2818  000DA2                     u1060:
  2819  000DA2  2EE8               	decfsz	wreg,f,c
  2820  000DA4  EFC8  F006         	goto	u1065
  2821  000DA8  C01B  F019         	movff	??_rand,?_rand
  2822  000DAC  C01D  F01A         	movff	??_rand+2,?_rand+1
  2823  000DB0  0012               	return		;funcret
  2824  000DB2                     __end_of_rand:
  2825                           	opt callstack 0
  2826                           
  2827 ;; *************** function ___omul *****************
  2828 ;; Defined at:
  2829 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2832 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  product         8   16[COMRAM] unsigned long long 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  8    0[COMRAM] unsigned long long 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2844 ;;      Params:        16       0       0       0       0       0       0
  2845 ;;      Locals:         8       0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0
  2847 ;;      Totals:        24       0       0       0       0       0       0
  2848 ;;Total ram usage:       24 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    2
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_rand
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text7
  2859  0010A4                     __ptext7:
  2860                           	opt callstack 0
  2861  0010A4                     ___omul:
  2862                           	opt callstack 25
  2863  0010A4  EE20  F011         	lfsr	2,___omul@product
  2864  0010A8  0E07               	movlw	7
  2865  0010AA                     u991:
  2866  0010AA  6ADE               	clrf	postinc2,c
  2867  0010AC  06E8               	decf	wreg,f,c
  2868  0010AE  E2FD               	bc	u991
  2869  0010B0                     l1702:
  2870  0010B0  A001               	btfss	___omul@multiplier^0,0,c
  2871  0010B2  EF5D  F008         	goto	u1001
  2872  0010B6  EF5F  F008         	goto	u1000
  2873  0010BA                     u1001:
  2874  0010BA  EF6F  F008         	goto	l1706
  2875  0010BE                     u1000:
  2876  0010BE  5009               	movf	___omul@multiplicand^0,w,c
  2877  0010C0  2611               	addwf	___omul@product^0,f,c
  2878  0010C2  500A               	movf	(___omul@multiplicand+1)^0,w,c
  2879  0010C4  2212               	addwfc	(___omul@product+1)^0,f,c
  2880  0010C6  500B               	movf	(___omul@multiplicand+2)^0,w,c
  2881  0010C8  2213               	addwfc	(___omul@product+2)^0,f,c
  2882  0010CA  500C               	movf	(___omul@multiplicand+3)^0,w,c
  2883  0010CC  2214               	addwfc	(___omul@product+3)^0,f,c
  2884  0010CE  500D               	movf	(___omul@multiplicand+4)^0,w,c
  2885  0010D0  2215               	addwfc	(___omul@product+4)^0,f,c
  2886  0010D2  500E               	movf	(___omul@multiplicand+5)^0,w,c
  2887  0010D4  2216               	addwfc	(___omul@product+5)^0,f,c
  2888  0010D6  500F               	movf	(___omul@multiplicand+6)^0,w,c
  2889  0010D8  2217               	addwfc	(___omul@product+6)^0,f,c
  2890  0010DA  5010               	movf	(___omul@multiplicand+7)^0,w,c
  2891  0010DC  2218               	addwfc	(___omul@product+7)^0,f,c
  2892  0010DE                     l1706:
  2893  0010DE  90D8               	bcf	status,0,c
  2894  0010E0  3609               	rlcf	___omul@multiplicand^0,f,c
  2895  0010E2  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  2896  0010E4  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  2897  0010E6  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  2898  0010E8  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  2899  0010EA  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  2900  0010EC  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  2901  0010EE  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  2902  0010F0  90D8               	bcf	status,0,c
  2903  0010F2  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  2904  0010F4  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  2905  0010F6  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  2906  0010F8  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  2907  0010FA  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  2908  0010FC  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  2909  0010FE  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  2910  001100  3201               	rrcf	___omul@multiplier^0,f,c
  2911  001102  5001               	movf	___omul@multiplier^0,w,c
  2912  001104  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  2913  001106  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  2914  001108  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  2915  00110A  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  2916  00110C  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  2917  00110E  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  2918  001110  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  2919  001112  A4D8               	btfss	status,2,c
  2920  001114  EF8E  F008         	goto	u1011
  2921  001118  EF90  F008         	goto	u1010
  2922  00111C                     u1011:
  2923  00111C  EF58  F008         	goto	l1702
  2924  001120                     u1010:
  2925  001120  C011  F001         	movff	___omul@product,?___omul
  2926  001124  C012  F002         	movff	___omul@product+1,?___omul+1
  2927  001128  C013  F003         	movff	___omul@product+2,?___omul+2
  2928  00112C  C014  F004         	movff	___omul@product+3,?___omul+3
  2929  001130  C015  F005         	movff	___omul@product+4,?___omul+4
  2930  001134  C016  F006         	movff	___omul@product+5,?___omul+5
  2931  001138  C017  F007         	movff	___omul@product+6,?___omul+6
  2932  00113C  C018  F008         	movff	___omul@product+7,?___omul+7
  2933  001140  0012               	return		;funcret
  2934  001142                     __end_of___omul:
  2935                           	opt callstack 0
  2936                           
  2937 ;; *************** function ___awmod *****************
  2938 ;; Defined at:
  2939 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  dividend        2   34[COMRAM] int 
  2942 ;;  divisor         2   36[COMRAM] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  sign            1   39[COMRAM] unsigned char 
  2945 ;;  counter         1   38[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  2   34[COMRAM] int 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2955 ;;      Params:         4       0       0       0       0       0       0
  2956 ;;      Locals:         2       0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0
  2958 ;;      Totals:         6       0       0       0       0       0       0
  2959 ;;Total ram usage:        6 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    2
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_jogar
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text8
  2970  000F48                     __ptext8:
  2971                           	opt callstack 0
  2972  000F48                     ___awmod:
  2973                           	opt callstack 26
  2974  000F48  0E00               	movlw	0
  2975  000F4A  6E28               	movwf	___awmod@sign^0,c
  2976  000F4C  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  2977  000F4E  EFAD  F007         	goto	u1070
  2978  000F52  EFAB  F007         	goto	u1071
  2979  000F56                     u1071:
  2980  000F56  EFB3  F007         	goto	l1762
  2981  000F5A                     u1070:
  2982  000F5A  6C23               	negf	___awmod@dividend^0,c
  2983  000F5C  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2984  000F5E  B0D8               	btfsc	status,0,c
  2985  000F60  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2986  000F62  0E01               	movlw	1
  2987  000F64  6E28               	movwf	___awmod@sign^0,c
  2988  000F66                     l1762:
  2989  000F66  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  2990  000F68  EFBA  F007         	goto	u1080
  2991  000F6C  EFB8  F007         	goto	u1081
  2992  000F70                     u1081:
  2993  000F70  EFBE  F007         	goto	l1766
  2994  000F74                     u1080:
  2995  000F74  6C25               	negf	___awmod@divisor^0,c
  2996  000F76  1E26               	comf	(___awmod@divisor+1)^0,f,c
  2997  000F78  B0D8               	btfsc	status,0,c
  2998  000F7A  2A26               	incf	(___awmod@divisor+1)^0,f,c
  2999  000F7C                     l1766:
  3000  000F7C  5025               	movf	___awmod@divisor^0,w,c
  3001  000F7E  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  3002  000F80  B4D8               	btfsc	status,2,c
  3003  000F82  EFC5  F007         	goto	u1091
  3004  000F86  EFC7  F007         	goto	u1090
  3005  000F8A                     u1091:
  3006  000F8A  EFEB  F007         	goto	l1782
  3007  000F8E                     u1090:
  3008  000F8E  0E01               	movlw	1
  3009  000F90  6E27               	movwf	___awmod@counter^0,c
  3010  000F92  EFCF  F007         	goto	l1772
  3011  000F96                     l1770:
  3012  000F96  90D8               	bcf	status,0,c
  3013  000F98  3625               	rlcf	___awmod@divisor^0,f,c
  3014  000F9A  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  3015  000F9C  2A27               	incf	___awmod@counter^0,f,c
  3016  000F9E                     l1772:
  3017  000F9E  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  3018  000FA0  EFD4  F007         	goto	u1101
  3019  000FA4  EFD6  F007         	goto	u1100
  3020  000FA8                     u1101:
  3021  000FA8  EFCB  F007         	goto	l1770
  3022  000FAC                     u1100:
  3023  000FAC                     l1774:
  3024  000FAC  5025               	movf	___awmod@divisor^0,w,c
  3025  000FAE  5C23               	subwf	___awmod@dividend^0,w,c
  3026  000FB0  5026               	movf	(___awmod@divisor+1)^0,w,c
  3027  000FB2  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  3028  000FB4  A0D8               	btfss	status,0,c
  3029  000FB6  EFDF  F007         	goto	u1111
  3030  000FBA  EFE1  F007         	goto	u1110
  3031  000FBE                     u1111:
  3032  000FBE  EFE5  F007         	goto	l1778
  3033  000FC2                     u1110:
  3034  000FC2  5025               	movf	___awmod@divisor^0,w,c
  3035  000FC4  5E23               	subwf	___awmod@dividend^0,f,c
  3036  000FC6  5026               	movf	(___awmod@divisor+1)^0,w,c
  3037  000FC8  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  3038  000FCA                     l1778:
  3039  000FCA  90D8               	bcf	status,0,c
  3040  000FCC  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  3041  000FCE  3225               	rrcf	___awmod@divisor^0,f,c
  3042  000FD0  2E27               	decfsz	___awmod@counter^0,f,c
  3043  000FD2  EFD6  F007         	goto	l1774
  3044  000FD6                     l1782:
  3045  000FD6  5028               	movf	___awmod@sign^0,w,c
  3046  000FD8  B4D8               	btfsc	status,2,c
  3047  000FDA  EFF1  F007         	goto	u1121
  3048  000FDE  EFF3  F007         	goto	u1120
  3049  000FE2                     u1121:
  3050  000FE2  EFF7  F007         	goto	l1786
  3051  000FE6                     u1120:
  3052  000FE6  6C23               	negf	___awmod@dividend^0,c
  3053  000FE8  1E24               	comf	(___awmod@dividend+1)^0,f,c
  3054  000FEA  B0D8               	btfsc	status,0,c
  3055  000FEC  2A24               	incf	(___awmod@dividend+1)^0,f,c
  3056  000FEE                     l1786:
  3057  000FEE  C023  F023         	movff	___awmod@dividend,?___awmod
  3058  000FF2  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  3059  000FF6  0012               	return		;funcret
  3060  000FF8                     __end_of___awmod:
  3061                           	opt callstack 0
  3062                           
  3063 ;; *************** function _instrucoes *****************
  3064 ;; Defined at:
  3065 ;;		line 44 in file "task_manager.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  lcd             2   25[COMRAM] PTR struct .
  3068 ;;		 -> PORTD(1), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3080 ;;      Params:         2       0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0
  3083 ;;      Totals:         2       0       0       0       0       0       0
  3084 ;;Total ram usage:        2 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    6
  3087 ;; This function calls:
  3088 ;;		_print_mat
  3089 ;;		_strcpy
  3090 ;; This function is called by:
  3091 ;;		_gerenciador
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text9
  3096  001362                     __ptext9:
  3097                           	opt callstack 0
  3098  001362                     _instrucoes:
  3099                           	opt callstack 23
  3100  001362                     
  3101                           ;task_manager.c: 45:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  3102  001362  0E80               	movlw	low _mat_disp
  3103  001364  6E01               	movwf	strcpy@dest^0,c
  3104  001366  0E00               	movlw	high _mat_disp
  3105  001368  6E02               	movwf	(strcpy@dest+1)^0,c
  3106  00136A  0EDF               	movlw	low STR_9
  3107  00136C  6E03               	movwf	strcpy@src^0,c
  3108  00136E  0E7F               	movlw	high STR_9
  3109  001370  6E04               	movwf	(strcpy@src+1)^0,c
  3110  001372  EC95  F00A         	call	_strcpy	;wreg free
  3111                           
  3112                           ;task_manager.c: 46:     strcpy(mat_disp[1], "NAVE           ");
  3113  001376  0E90               	movlw	low (_mat_disp+16)
  3114  001378  6E01               	movwf	strcpy@dest^0,c
  3115  00137A  0E00               	movlw	high (_mat_disp+16)
  3116  00137C  6E02               	movwf	(strcpy@dest+1)^0,c
  3117  00137E  0E8F               	movlw	low STR_10
  3118  001380  6E03               	movwf	strcpy@src^0,c
  3119  001382  0E7F               	movlw	high STR_10
  3120  001384  6E04               	movwf	(strcpy@src+1)^0,c
  3121  001386  EC95  F00A         	call	_strcpy	;wreg free
  3122                           
  3123                           ;task_manager.c: 47:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  3124  00138A  0EA0               	movlw	low (_mat_disp+32)
  3125  00138C  6E01               	movwf	strcpy@dest^0,c
  3126  00138E  0E00               	movlw	high (_mat_disp+32)
  3127  001390  6E02               	movwf	(strcpy@dest+1)^0,c
  3128  001392  0EAF               	movlw	low STR_11
  3129  001394  6E03               	movwf	strcpy@src^0,c
  3130  001396  0E7F               	movlw	high STR_11
  3131  001398  6E04               	movwf	(strcpy@src+1)^0,c
  3132  00139A  EC95  F00A         	call	_strcpy	;wreg free
  3133                           
  3134                           ;task_manager.c: 48:     strcpy(mat_disp[3], "MENU           ");
  3135  00139E  0EB0               	movlw	low (_mat_disp+48)
  3136  0013A0  6E01               	movwf	strcpy@dest^0,c
  3137  0013A2  0E00               	movlw	high (_mat_disp+48)
  3138  0013A4  6E02               	movwf	(strcpy@dest+1)^0,c
  3139  0013A6  0E9F               	movlw	low STR_12
  3140  0013A8  6E03               	movwf	strcpy@src^0,c
  3141  0013AA  0E7F               	movlw	high STR_12
  3142  0013AC  6E04               	movwf	(strcpy@src+1)^0,c
  3143  0013AE  EC95  F00A         	call	_strcpy	;wreg free
  3144  0013B2                     
  3145                           ;task_manager.c: 49:     print_mat(lcd);
  3146  0013B2  C01A  F010         	movff	instrucoes@lcd,print_mat@lcd
  3147  0013B6  C01B  F011         	movff	instrucoes@lcd+1,print_mat@lcd+1
  3148  0013BA  ECFC  F007         	call	_print_mat	;wreg free
  3149  0013BE                     l207:
  3150  0013BE  AA51               	btfss	_botoes^0,5,c
  3151  0013C0  EFE4  F009         	goto	u1531
  3152  0013C4  EFE6  F009         	goto	u1530
  3153  0013C8                     u1531:
  3154  0013C8  EFDF  F009         	goto	l207
  3155  0013CC                     u1530:
  3156  0013CC  0012               	return		;funcret
  3157  0013CE                     __end_of_instrucoes:
  3158                           	opt callstack 0
  3159                           
  3160 ;; *************** function _finaliza *****************
  3161 ;; Defined at:
  3162 ;;		line 35 in file "task_manager.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  lcd             2   25[COMRAM] PTR struct .
  3165 ;;		 -> PORTD(1), 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3177 ;;      Params:         2       0       0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0
  3180 ;;      Totals:         2       0       0       0       0       0       0
  3181 ;;Total ram usage:        2 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    6
  3184 ;; This function calls:
  3185 ;;		_print_mat
  3186 ;;		_strcpy
  3187 ;; This function is called by:
  3188 ;;		_gerenciador
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text10
  3193  00143A                     __ptext10:
  3194                           	opt callstack 0
  3195  00143A                     _finaliza:
  3196                           	opt callstack 23
  3197  00143A                     
  3198                           ;task_manager.c: 36:     strcpy(mat_disp[0], "HIBERNANDO.....");
  3199  00143A  0E80               	movlw	low _mat_disp
  3200  00143C  6E01               	movwf	strcpy@dest^0,c
  3201  00143E  0E00               	movlw	high _mat_disp
  3202  001440  6E02               	movwf	(strcpy@dest+1)^0,c
  3203  001442  0EBF               	movlw	low STR_5
  3204  001444  6E03               	movwf	strcpy@src^0,c
  3205  001446  0E7F               	movlw	high STR_5
  3206  001448  6E04               	movwf	(strcpy@src+1)^0,c
  3207  00144A  EC95  F00A         	call	_strcpy	;wreg free
  3208                           
  3209                           ;task_manager.c: 37:     strcpy(mat_disp[1], "               ");
  3210  00144E  0E90               	movlw	low (_mat_disp+16)
  3211  001450  6E01               	movwf	strcpy@dest^0,c
  3212  001452  0E00               	movlw	high (_mat_disp+16)
  3213  001454  6E02               	movwf	(strcpy@dest+1)^0,c
  3214  001456  0EC4               	movlw	low (STR_18+1)
  3215  001458  6E03               	movwf	strcpy@src^0,c
  3216  00145A  0E7E               	movlw	high (STR_18+1)
  3217  00145C  6E04               	movwf	(strcpy@src+1)^0,c
  3218  00145E  EC95  F00A         	call	_strcpy	;wreg free
  3219                           
  3220                           ;task_manager.c: 38:     strcpy(mat_disp[2], "               ");
  3221  001462  0EA0               	movlw	low (_mat_disp+32)
  3222  001464  6E01               	movwf	strcpy@dest^0,c
  3223  001466  0E00               	movlw	high (_mat_disp+32)
  3224  001468  6E02               	movwf	(strcpy@dest+1)^0,c
  3225  00146A  0EC4               	movlw	low (STR_18+1)
  3226  00146C  6E03               	movwf	strcpy@src^0,c
  3227  00146E  0E7E               	movlw	high (STR_18+1)
  3228  001470  6E04               	movwf	(strcpy@src+1)^0,c
  3229  001472  EC95  F00A         	call	_strcpy	;wreg free
  3230                           
  3231                           ;task_manager.c: 39:     strcpy(mat_disp[3], "               ");
  3232  001476  0EB0               	movlw	low (_mat_disp+48)
  3233  001478  6E01               	movwf	strcpy@dest^0,c
  3234  00147A  0E00               	movlw	high (_mat_disp+48)
  3235  00147C  6E02               	movwf	(strcpy@dest+1)^0,c
  3236  00147E  0EC4               	movlw	low (STR_18+1)
  3237  001480  6E03               	movwf	strcpy@src^0,c
  3238  001482  0E7E               	movlw	high (STR_18+1)
  3239  001484  6E04               	movwf	(strcpy@src+1)^0,c
  3240  001486  EC95  F00A         	call	_strcpy	;wreg free
  3241  00148A                     
  3242                           ;task_manager.c: 40:     print_mat(lcd);
  3243  00148A  C01A  F010         	movff	finaliza@lcd,print_mat@lcd
  3244  00148E  C01B  F011         	movff	finaliza@lcd+1,print_mat@lcd+1
  3245  001492  ECFC  F007         	call	_print_mat	;wreg free
  3246  001496  0003               	sleep		;# 
  3247  001498  0012               	return		;funcret
  3248  00149A                     __end_of_finaliza:
  3249                           	opt callstack 0
  3250                           
  3251 ;; *************** function _creditos *****************
  3252 ;; Defined at:
  3253 ;;		line 26 in file "task_manager.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  lcd             2   25[COMRAM] PTR struct .
  3256 ;;		 -> PORTD(1), 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3268 ;;      Params:         2       0       0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0
  3271 ;;      Totals:         2       0       0       0       0       0       0
  3272 ;;Total ram usage:        2 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    6
  3275 ;; This function calls:
  3276 ;;		_print_mat
  3277 ;;		_strcpy
  3278 ;; This function is called by:
  3279 ;;		_gerenciador
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text11
  3284  0013CE                     __ptext11:
  3285                           	opt callstack 0
  3286  0013CE                     _creditos:
  3287                           	opt callstack 23
  3288  0013CE                     
  3289                           ;task_manager.c: 27:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  3290  0013CE  0E80               	movlw	low _mat_disp
  3291  0013D0  6E01               	movwf	strcpy@dest^0,c
  3292  0013D2  0E00               	movlw	high _mat_disp
  3293  0013D4  6E02               	movwf	(strcpy@dest+1)^0,c
  3294  0013D6  0ECF               	movlw	low STR_1
  3295  0013D8  6E03               	movwf	strcpy@src^0,c
  3296  0013DA  0E7F               	movlw	high STR_1
  3297  0013DC  6E04               	movwf	(strcpy@src+1)^0,c
  3298  0013DE  EC95  F00A         	call	_strcpy	;wreg free
  3299                           
  3300                           ;task_manager.c: 28:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  3301  0013E2  0E90               	movlw	low (_mat_disp+16)
  3302  0013E4  6E01               	movwf	strcpy@dest^0,c
  3303  0013E6  0E00               	movlw	high (_mat_disp+16)
  3304  0013E8  6E02               	movwf	(strcpy@dest+1)^0,c
  3305  0013EA  0EEF               	movlw	low STR_2
  3306  0013EC  6E03               	movwf	strcpy@src^0,c
  3307  0013EE  0E7F               	movlw	high STR_2
  3308  0013F0  6E04               	movwf	(strcpy@src+1)^0,c
  3309  0013F2  EC95  F00A         	call	_strcpy	;wreg free
  3310                           
  3311                           ;task_manager.c: 29:     strcpy(mat_disp[2], "               ");
  3312  0013F6  0EA0               	movlw	low (_mat_disp+32)
  3313  0013F8  6E01               	movwf	strcpy@dest^0,c
  3314  0013FA  0E00               	movlw	high (_mat_disp+32)
  3315  0013FC  6E02               	movwf	(strcpy@dest+1)^0,c
  3316  0013FE  0EC4               	movlw	low (STR_18+1)
  3317  001400  6E03               	movwf	strcpy@src^0,c
  3318  001402  0E7E               	movlw	high (STR_18+1)
  3319  001404  6E04               	movwf	(strcpy@src+1)^0,c
  3320  001406  EC95  F00A         	call	_strcpy	;wreg free
  3321                           
  3322                           ;task_manager.c: 30:     strcpy(mat_disp[3], "               ");
  3323  00140A  0EB0               	movlw	low (_mat_disp+48)
  3324  00140C  6E01               	movwf	strcpy@dest^0,c
  3325  00140E  0E00               	movlw	high (_mat_disp+48)
  3326  001410  6E02               	movwf	(strcpy@dest+1)^0,c
  3327  001412  0EC4               	movlw	low (STR_18+1)
  3328  001414  6E03               	movwf	strcpy@src^0,c
  3329  001416  0E7E               	movlw	high (STR_18+1)
  3330  001418  6E04               	movwf	(strcpy@src+1)^0,c
  3331  00141A  EC95  F00A         	call	_strcpy	;wreg free
  3332  00141E                     
  3333                           ;task_manager.c: 31:     print_mat(lcd);
  3334  00141E  C01A  F010         	movff	creditos@lcd,print_mat@lcd
  3335  001422  C01B  F011         	movff	creditos@lcd+1,print_mat@lcd+1
  3336  001426  ECFC  F007         	call	_print_mat	;wreg free
  3337  00142A                     l198:
  3338  00142A  AA51               	btfss	_botoes^0,5,c
  3339  00142C  EF1A  F00A         	goto	u1541
  3340  001430  EF1C  F00A         	goto	u1540
  3341  001434                     u1541:
  3342  001434  EF15  F00A         	goto	l198
  3343  001438                     u1540:
  3344  001438  0012               	return		;funcret
  3345  00143A                     __end_of_creditos:
  3346                           	opt callstack 0
  3347                           
  3348 ;; *************** function _strcpy *****************
  3349 ;; Defined at:
  3350 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3353 ;;		 -> mat_disp(64), 
  3354 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3355 ;;		 -> STR_32(17), STR_31(17), STR_30(17), STR_29(17), 
  3356 ;;		 -> STR_28(17), STR_27(17), STR_26(17), STR_25(17), 
  3357 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  3358 ;;		 -> STR_20(17), STR_19(17), STR_18(17), STR_17(17), 
  3359 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  3360 ;;		 -> STR_12(16), STR_11(16), STR_10(16), STR_9(16), 
  3361 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  3362 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  d               2    6[COMRAM] PTR unsigned char 
  3365 ;;		 -> mat_disp(64), 
  3366 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3367 ;;		 -> STR_32(17), STR_31(17), STR_30(17), STR_29(17), 
  3368 ;;		 -> STR_28(17), STR_27(17), STR_26(17), STR_25(17), 
  3369 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  3370 ;;		 -> STR_20(17), STR_19(17), STR_18(17), STR_17(17), 
  3371 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  3372 ;;		 -> STR_12(16), STR_11(16), STR_10(16), STR_9(16), 
  3373 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  3374 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2    0[COMRAM] PTR unsigned char 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3384 ;;      Params:         4       0       0       0       0       0       0
  3385 ;;      Locals:         4       0       0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0
  3387 ;;      Totals:         8       0       0       0       0       0       0
  3388 ;;Total ram usage:        8 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    2
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_creditos
  3395 ;;		_finaliza
  3396 ;;		_instrucoes
  3397 ;;		_menu
  3398 ;;		_jogar
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text12
  3403  00152A                     __ptext12:
  3404                           	opt callstack 0
  3405  00152A                     _strcpy:
  3406                           	opt callstack 26
  3407  00152A  C003  F005         	movff	strcpy@src,strcpy@s
  3408  00152E  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3409  001532  C001  F007         	movff	strcpy@dest,strcpy@d
  3410  001536  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3411  00153A                     l1736:
  3412  00153A  C005  FFF6         	movff	strcpy@s,tblptrl
  3413  00153E  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3414  001542  4A05               	infsnz	strcpy@s^0,f,c
  3415  001544  2A06               	incf	(strcpy@s+1)^0,f,c
  3416  001546                     	if	0	;tblptru may be non-zero
  3417  001546                     	endif
  3418  001546                     	if	0	;tblptru may be non-zero
  3419  001546                     	endif
  3420  001546  C007  FFD9         	movff	strcpy@d,fsr2l
  3421  00154A  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3422  00154E  4A07               	infsnz	strcpy@d^0,f,c
  3423  001550  2A08               	incf	(strcpy@d+1)^0,f,c
  3424  001552  0008               	tblrd		*
  3425  001554  CFF5 FFDF          	movff	tablat,indf2
  3426  001558  50DF               	movf	indf2,w,c
  3427  00155A  A4D8               	btfss	status,2,c
  3428  00155C  EFB2  F00A         	goto	u1041
  3429  001560  EFB4  F00A         	goto	u1040
  3430  001564                     u1041:
  3431  001564  EF9D  F00A         	goto	l1736
  3432  001568                     u1040:
  3433  001568  0012               	return		;funcret
  3434  00156A                     __end_of_strcpy:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _print_mat *****************
  3438 ;; Defined at:
  3439 ;;		line 199 in file "lcd.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  lcd             2   15[COMRAM] PTR struct .
  3442 ;;		 -> PORTD(1), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  j               2   21[COMRAM] int 
  3445 ;;  i               2   23[COMRAM] int 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         2       0       0       0       0       0       0
  3456 ;;      Locals:         4       0       0       0       0       0       0
  3457 ;;      Temps:          4       0       0       0       0       0       0
  3458 ;;      Totals:        10       0       0       0       0       0       0
  3459 ;;Total ram usage:       10 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    5
  3462 ;; This function calls:
  3463 ;;		_goto_XY
  3464 ;;		_write_char
  3465 ;; This function is called by:
  3466 ;;		_creditos
  3467 ;;		_finaliza
  3468 ;;		_instrucoes
  3469 ;;		_menu
  3470 ;;		_jogar
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text13
  3475  000FF8                     __ptext13:
  3476                           	opt callstack 0
  3477  000FF8                     _print_mat:
  3478                           	opt callstack 23
  3479  000FF8                     
  3480                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  3481  000FF8  0E00               	movlw	0
  3482  000FFA  6E19               	movwf	(print_mat@i+1)^0,c
  3483  000FFC  0E00               	movlw	0
  3484  000FFE  6E18               	movwf	print_mat@i^0,c
  3485  001000                     l1716:
  3486                           
  3487                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  3488  001000  C010  F008         	movff	print_mat@lcd,goto_XY@lcd
  3489  001004  C011  F009         	movff	print_mat@lcd+1,goto_XY@lcd+1
  3490  001008  2818               	incf	print_mat@i^0,w,c
  3491  00100A  6E0A               	movwf	goto_XY@x^0,c
  3492  00100C  0E01               	movlw	1
  3493  00100E  6E0B               	movwf	goto_XY@y^0,c
  3494  001010  EC46  F007         	call	_goto_XY	;wreg free
  3495  001014                     
  3496                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  3497  001014  0E00               	movlw	0
  3498  001016  6E17               	movwf	(print_mat@j+1)^0,c
  3499  001018  0E00               	movlw	0
  3500  00101A  6E16               	movwf	print_mat@j^0,c
  3501  00101C                     l1724:
  3502                           
  3503                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  3504  00101C  C010  F001         	movff	print_mat@lcd,write_char@lcd
  3505  001020  C011  F002         	movff	print_mat@lcd+1,write_char@lcd+1
  3506  001024  C018  F012         	movff	print_mat@i,??_print_mat
  3507  001028  C019  F013         	movff	print_mat@i+1,??_print_mat+1
  3508  00102C  3A12               	swapf	??_print_mat^0,f,c
  3509  00102E  3A13               	swapf	(??_print_mat+1)^0,f,c
  3510  001030  0EF0               	movlw	240
  3511  001032  1613               	andwf	(??_print_mat+1)^0,f,c
  3512  001034  5012               	movf	??_print_mat^0,w,c
  3513  001036  0B0F               	andlw	15
  3514  001038  1213               	iorwf	(??_print_mat+1)^0,f,c
  3515  00103A  0EF0               	movlw	240
  3516  00103C  1612               	andwf	??_print_mat^0,f,c
  3517  00103E  0E80               	movlw	low _mat_disp
  3518  001040  6E14               	movwf	(??_print_mat+2)^0,c
  3519  001042  0E00               	movlw	high _mat_disp
  3520  001044  6E15               	movwf	(??_print_mat+3)^0,c
  3521  001046  5012               	movf	??_print_mat^0,w,c
  3522  001048  2614               	addwf	(??_print_mat+2)^0,f,c
  3523  00104A  5013               	movf	(??_print_mat+1)^0,w,c
  3524  00104C  2215               	addwfc	(??_print_mat+3)^0,f,c
  3525  00104E  5016               	movf	print_mat@j^0,w,c
  3526  001050  2414               	addwf	(??_print_mat+2)^0,w,c
  3527  001052  6ED9               	movwf	fsr2l,c
  3528  001054  5017               	movf	(print_mat@j+1)^0,w,c
  3529  001056  2015               	addwfc	(??_print_mat+3)^0,w,c
  3530  001058  6EDA               	movwf	fsr2h,c
  3531  00105A  50DF               	movf	indf2,w,c
  3532  00105C  6E03               	movwf	write_char@c^0,c
  3533  00105E  ECF7  F005         	call	_write_char	;wreg free
  3534  001062  4A16               	infsnz	print_mat@j^0,f,c
  3535  001064  2A17               	incf	(print_mat@j+1)^0,f,c
  3536  001066  BE17               	btfsc	(print_mat@j+1)^0,7,c
  3537  001068  EF3F  F008         	goto	u1021
  3538  00106C  5017               	movf	(print_mat@j+1)^0,w,c
  3539  00106E  E109               	bnz	u1020
  3540  001070  0E10               	movlw	16
  3541  001072  5C16               	subwf	print_mat@j^0,w,c
  3542  001074  A0D8               	btfss	status,0,c
  3543  001076  EF3F  F008         	goto	u1021
  3544  00107A  EF41  F008         	goto	u1020
  3545  00107E                     u1021:
  3546  00107E  EF0E  F008         	goto	l1724
  3547  001082                     u1020:
  3548  001082                     
  3549                           ;lcd.c: 204:     }
  3550  001082  4A18               	infsnz	print_mat@i^0,f,c
  3551  001084  2A19               	incf	(print_mat@i+1)^0,f,c
  3552  001086  BE19               	btfsc	(print_mat@i+1)^0,7,c
  3553  001088  EF4F  F008         	goto	u1031
  3554  00108C  5019               	movf	(print_mat@i+1)^0,w,c
  3555  00108E  E109               	bnz	u1030
  3556  001090  0E04               	movlw	4
  3557  001092  5C18               	subwf	print_mat@i^0,w,c
  3558  001094  A0D8               	btfss	status,0,c
  3559  001096  EF4F  F008         	goto	u1031
  3560  00109A  EF51  F008         	goto	u1030
  3561  00109E                     u1031:
  3562  00109E  EF00  F008         	goto	l1716
  3563  0010A2                     u1030:
  3564  0010A2  0012               	return		;funcret
  3565  0010A4                     __end_of_print_mat:
  3566                           	opt callstack 0
  3567                           
  3568 ;; *************** function _write_char *****************
  3569 ;; Defined at:
  3570 ;;		line 133 in file "lcd.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  lcd             2    0[COMRAM] PTR struct .
  3573 ;;		 -> PORTD(1), 
  3574 ;;  c               1    2[COMRAM] unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3586 ;;      Params:         3       0       0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0
  3588 ;;      Temps:          1       0       0       0       0       0       0
  3589 ;;      Totals:         4       0       0       0       0       0       0
  3590 ;;Total ram usage:        4 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    2
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_print_mat
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text14
  3601  000BEE                     __ptext14:
  3602                           	opt callstack 0
  3603  000BEE                     _write_char:
  3604                           	opt callstack 25
  3605  000BEE                     
  3606                           ;lcd.c: 134:     lcd->E = 0;
  3607  000BEE  C001  FFD9         	movff	write_char@lcd,fsr2l
  3608  000BF2  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3609  000BF6  94DF               	bcf	indf2,2,c
  3610                           
  3611                           ;lcd.c: 135:     lcd->RS = 1;
  3612  000BF8  C001  FFD9         	movff	write_char@lcd,fsr2l
  3613  000BFC  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3614  000C00  80DF               	bsf	indf2,0,c
  3615                           
  3616                           ;lcd.c: 136:     lcd->R_W = 0;
  3617  000C02  C001  FFD9         	movff	write_char@lcd,fsr2l
  3618  000C06  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3619  000C0A  92DF               	bcf	indf2,1,c
  3620  000C0C                     
  3621                           ;lcd.c: 139:     lcd->data = (c>>4);
  3622  000C0C  C003  F004         	movff	write_char@c,??_write_char
  3623  000C10  3A04               	swapf	??_write_char^0,f,c
  3624  000C12  0E0F               	movlw	15
  3625  000C14  1604               	andwf	??_write_char^0,f,c
  3626  000C16  C001  FFD9         	movff	write_char@lcd,fsr2l
  3627  000C1A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3628  000C1E  3A04               	swapf	??_write_char^0,f,c
  3629  000C20  50DF               	movf	indf2,w,c
  3630  000C22  1804               	xorwf	??_write_char^0,w,c
  3631  000C24  0B0F               	andlw	-241
  3632  000C26  1804               	xorwf	??_write_char^0,w,c
  3633  000C28  6EDF               	movwf	indf2,c
  3634  000C2A                     
  3635                           ;lcd.c: 140:     lcd->E = 1;
  3636  000C2A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3637  000C2E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3638  000C32  84DF               	bsf	indf2,2,c
  3639  000C34                     
  3640                           ;lcd.c: 141:     lcd->E = 0;
  3641  000C34  C001  FFD9         	movff	write_char@lcd,fsr2l
  3642  000C38  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3643  000C3C  94DF               	bcf	indf2,2,c
  3644  000C3E                     
  3645                           ;lcd.c: 144:     lcd->data = (c);
  3646  000C3E  C003  F004         	movff	write_char@c,??_write_char
  3647  000C42  C001  FFD9         	movff	write_char@lcd,fsr2l
  3648  000C46  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3649  000C4A  3A04               	swapf	??_write_char^0,f,c
  3650  000C4C  50DF               	movf	indf2,w,c
  3651  000C4E  1804               	xorwf	??_write_char^0,w,c
  3652  000C50  0B0F               	andlw	-241
  3653  000C52  1804               	xorwf	??_write_char^0,w,c
  3654  000C54  6EDF               	movwf	indf2,c
  3655                           
  3656                           ;lcd.c: 145:     lcd->E = 1;
  3657  000C56  C001  FFD9         	movff	write_char@lcd,fsr2l
  3658  000C5A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3659  000C5E  84DF               	bsf	indf2,2,c
  3660                           
  3661                           ;lcd.c: 146:     lcd->E = 0;
  3662  000C60  C001  FFD9         	movff	write_char@lcd,fsr2l
  3663  000C64  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3664  000C68  94DF               	bcf	indf2,2,c
  3665  000C6A                     
  3666                           ;lcd.c: 149:     TRISD = 0xF0;
  3667  000C6A  0EF0               	movlw	240
  3668  000C6C  6E95               	movwf	149,c	;volatile
  3669  000C6E                     
  3670                           ;lcd.c: 150:     lcd->RS = 0;
  3671  000C6E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3672  000C72  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3673  000C76  90DF               	bcf	indf2,0,c
  3674  000C78                     
  3675                           ;lcd.c: 151:     lcd->R_W = 1;
  3676  000C78  C001  FFD9         	movff	write_char@lcd,fsr2l
  3677  000C7C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3678  000C80  82DF               	bsf	indf2,1,c
  3679  000C82                     l1686:
  3680                           
  3681                           ;lcd.c: 153:        lcd->E = 1;
  3682  000C82  C001  FFD9         	movff	write_char@lcd,fsr2l
  3683  000C86  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3684  000C8A  84DF               	bsf	indf2,2,c
  3685  000C8C                     
  3686                           ;lcd.c: 154:        lcd->E = 0;
  3687  000C8C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3688  000C90  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3689  000C94  94DF               	bcf	indf2,2,c
  3690  000C96                     
  3691                           ;lcd.c: 155:        lcd->E = 1;
  3692  000C96  C001  FFD9         	movff	write_char@lcd,fsr2l
  3693  000C9A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3694  000C9E  84DF               	bsf	indf2,2,c
  3695  000CA0                     
  3696                           ;lcd.c: 156:        lcd->E = 0;
  3697  000CA0  C001  FFD9         	movff	write_char@lcd,fsr2l
  3698  000CA4  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3699  000CA8  94DF               	bcf	indf2,2,c
  3700  000CAA                     
  3701                           ;lcd.c: 157:     } while(lcd->data&0x08);
  3702  000CAA  C001  FFD9         	movff	write_char@lcd,fsr2l
  3703  000CAE  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3704  000CB2  38DF               	swapf	indf2,w,c
  3705  000CB4  0B0F               	andlw	15
  3706  000CB6  6E04               	movwf	??_write_char^0,c
  3707  000CB8  B604               	btfsc	??_write_char^0,3,c
  3708  000CBA  EF61  F006         	goto	u981
  3709  000CBE  EF63  F006         	goto	u980
  3710  000CC2                     u981:
  3711  000CC2  EF41  F006         	goto	l1686
  3712  000CC6                     u980:
  3713  000CC6                     
  3714                           ;lcd.c: 158:     lcd->R_W = 0;
  3715  000CC6  C001  FFD9         	movff	write_char@lcd,fsr2l
  3716  000CCA  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3717  000CCE  92DF               	bcf	indf2,1,c
  3718  000CD0                     
  3719                           ;lcd.c: 159:     TRISD = 0x00;
  3720  000CD0  0E00               	movlw	0
  3721  000CD2  6E95               	movwf	149,c	;volatile
  3722  000CD4  0012               	return		;funcret
  3723  000CD6                     __end_of_write_char:
  3724                           	opt callstack 0
  3725                           
  3726 ;; *************** function _goto_XY *****************
  3727 ;; Defined at:
  3728 ;;		line 76 in file "lcd.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  lcd             2    7[COMRAM] PTR struct .
  3731 ;;		 -> PORTD(1), 
  3732 ;;  x               1    9[COMRAM] unsigned char 
  3733 ;;  y               1   10[COMRAM] unsigned char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  temp            1   14[COMRAM] unsigned char 
  3736 ;;  a               1   13[COMRAM] unsigned char 
  3737 ;;  z               1   12[COMRAM] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3747 ;;      Params:         4       0       0       0       0       0       0
  3748 ;;      Locals:         3       0       0       0       0       0       0
  3749 ;;      Temps:          1       0       0       0       0       0       0
  3750 ;;      Totals:         8       0       0       0       0       0       0
  3751 ;;Total ram usage:        8 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    4
  3754 ;; This function calls:
  3755 ;;		_lcd_cmd
  3756 ;; This function is called by:
  3757 ;;		_print_mat
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text15
  3762  000E8C                     __ptext15:
  3763                           	opt callstack 0
  3764  000E8C                     _goto_XY:
  3765                           	opt callstack 23
  3766  000E8C                     
  3767                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  3768  000E8C  040A               	decf	goto_XY@x^0,w,c
  3769  000E8E  A4D8               	btfss	status,2,c
  3770  000E90  EF4C  F007         	goto	u941
  3771  000E94  EF4E  F007         	goto	u940
  3772  000E98                     u941:
  3773  000E98  EF70  F007         	goto	l1634
  3774  000E9C                     u940:
  3775  000E9C                     
  3776                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  3777  000E9C  500B               	movf	goto_XY@y^0,w,c
  3778  000E9E  0F7F               	addlw	127
  3779  000EA0  6E0F               	movwf	goto_XY@temp^0,c
  3780                           
  3781                           ;lcd.c: 81:        z = temp>>4;
  3782  000EA2  380F               	swapf	goto_XY@temp^0,w,c
  3783  000EA4  0B0F               	andlw	15
  3784  000EA6  6E0D               	movwf	goto_XY@z^0,c
  3785  000EA8                     l1626:
  3786                           
  3787                           ;lcd.c: 82:        a = temp;
  3788  000EA8  C00F  F00E         	movff	goto_XY@temp,goto_XY@a
  3789  000EAC                     
  3790                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  3791  000EAC  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3792  000EB0  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3793  000EB4  C00D  F006         	movff	goto_XY@z,lcd_cmd@a
  3794  000EB8  ECB5  F00A         	call	_lcd_cmd	;wreg free
  3795  000EBC                     
  3796                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  3797  000EBC  0E06               	movlw	6
  3798  000EBE  6E0C               	movwf	??_goto_XY^0,c
  3799  000EC0  0E30               	movlw	48
  3800  000EC2                     u1617:
  3801  000EC2  2EE8               	decfsz	wreg,f,c
  3802  000EC4  D7FE               	bra	u1617
  3803  000EC6  2E0C               	decfsz	??_goto_XY^0,f,c
  3804  000EC8  D7FC               	bra	u1617
  3805  000ECA  D000               	nop2	
  3806  000ECC                     
  3807                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  3808  000ECC  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3809  000ED0  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3810  000ED4  C00E  F006         	movff	goto_XY@a,lcd_cmd@a
  3811  000ED8  ECB5  F00A         	call	_lcd_cmd	;wreg free
  3812                           
  3813                           ;lcd.c: 86:     }
  3814  000EDC  EFA3  F007         	goto	l74
  3815  000EE0                     l1634:
  3816  000EE0  0E02               	movlw	2
  3817  000EE2  180A               	xorwf	goto_XY@x^0,w,c
  3818  000EE4  A4D8               	btfss	status,2,c
  3819  000EE6  EF77  F007         	goto	u951
  3820  000EEA  EF79  F007         	goto	u950
  3821  000EEE                     u951:
  3822  000EEE  EF81  F007         	goto	l1646
  3823  000EF2                     u950:
  3824  000EF2                     
  3825                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  3826  000EF2  500B               	movf	goto_XY@y^0,w,c
  3827  000EF4  0FBF               	addlw	191
  3828  000EF6  6E0F               	movwf	goto_XY@temp^0,c
  3829                           
  3830                           ;lcd.c: 90:        z = temp>>4;
  3831  000EF8  380F               	swapf	goto_XY@temp^0,w,c
  3832  000EFA  0B0F               	andlw	15
  3833  000EFC  6E0D               	movwf	goto_XY@z^0,c
  3834  000EFE  EF54  F007         	goto	l1626
  3835  000F02                     l1646:
  3836  000F02  0E03               	movlw	3
  3837  000F04  180A               	xorwf	goto_XY@x^0,w,c
  3838  000F06  A4D8               	btfss	status,2,c
  3839  000F08  EF88  F007         	goto	u961
  3840  000F0C  EF8A  F007         	goto	u960
  3841  000F10                     u961:
  3842  000F10  EF92  F007         	goto	l1658
  3843  000F14                     u960:
  3844  000F14                     
  3845                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  3846  000F14  500B               	movf	goto_XY@y^0,w,c
  3847  000F16  0F8F               	addlw	143
  3848  000F18  6E0F               	movwf	goto_XY@temp^0,c
  3849                           
  3850                           ;lcd.c: 99:        z = temp>>4;
  3851  000F1A  380F               	swapf	goto_XY@temp^0,w,c
  3852  000F1C  0B0F               	andlw	15
  3853  000F1E  6E0D               	movwf	goto_XY@z^0,c
  3854  000F20  EF54  F007         	goto	l1626
  3855  000F24                     l1658:
  3856  000F24  0E04               	movlw	4
  3857  000F26  180A               	xorwf	goto_XY@x^0,w,c
  3858  000F28  A4D8               	btfss	status,2,c
  3859  000F2A  EF99  F007         	goto	u971
  3860  000F2E  EF9B  F007         	goto	u970
  3861  000F32                     u971:
  3862  000F32  EFA3  F007         	goto	l70
  3863  000F36                     u970:
  3864  000F36                     
  3865                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  3866  000F36  500B               	movf	goto_XY@y^0,w,c
  3867  000F38  0FCF               	addlw	207
  3868  000F3A  6E0F               	movwf	goto_XY@temp^0,c
  3869                           
  3870                           ;lcd.c: 108:        z = temp>>4;
  3871  000F3C  380F               	swapf	goto_XY@temp^0,w,c
  3872  000F3E  0B0F               	andlw	15
  3873  000F40  6E0D               	movwf	goto_XY@z^0,c
  3874  000F42  EF54  F007         	goto	l1626
  3875  000F46                     l70:
  3876  000F46                     l74:
  3877  000F46  0012               	return		;funcret
  3878  000F48                     __end_of_goto_XY:
  3879                           	opt callstack 0
  3880                           
  3881 ;; *************** function _lcd_cmd *****************
  3882 ;; Defined at:
  3883 ;;		line 67 in file "lcd.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  lcd             2    3[COMRAM] PTR struct .
  3886 ;;		 -> PORTD(1), 
  3887 ;;  a               1    5[COMRAM] unsigned char 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3899 ;;      Params:         3       0       0       0       0       0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0
  3901 ;;      Temps:          1       0       0       0       0       0       0
  3902 ;;      Totals:         4       0       0       0       0       0       0
  3903 ;;Total ram usage:        4 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    3
  3906 ;; This function calls:
  3907 ;;		_pulso
  3908 ;; This function is called by:
  3909 ;;		_goto_XY
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text16
  3914  00156A                     __ptext16:
  3915                           	opt callstack 0
  3916  00156A                     _lcd_cmd:
  3917                           	opt callstack 23
  3918  00156A                     
  3919                           ;lcd.c: 68:     lcd->RS = 0;
  3920  00156A  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3921  00156E  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3922  001572  90DF               	bcf	indf2,0,c
  3923  001574                     
  3924                           ;lcd.c: 69:     lcd->data = (a);
  3925  001574  C006  F007         	movff	lcd_cmd@a,??_lcd_cmd
  3926  001578  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3927  00157C  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3928  001580  3A07               	swapf	??_lcd_cmd^0,f,c
  3929  001582  50DF               	movf	indf2,w,c
  3930  001584  1807               	xorwf	??_lcd_cmd^0,w,c
  3931  001586  0B0F               	andlw	-241
  3932  001588  1807               	xorwf	??_lcd_cmd^0,w,c
  3933  00158A  6EDF               	movwf	indf2,c
  3934  00158C                     
  3935                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3936  00158C  0E06               	movlw	6
  3937  00158E  6E07               	movwf	??_lcd_cmd^0,c
  3938  001590  0E30               	movlw	48
  3939  001592                     u1627:
  3940  001592  2EE8               	decfsz	wreg,f,c
  3941  001594  D7FE               	bra	u1627
  3942  001596  2E07               	decfsz	??_lcd_cmd^0,f,c
  3943  001598  D7FC               	bra	u1627
  3944  00159A  D000               	nop2	
  3945  00159C                     
  3946                           ;lcd.c: 72:     pulso(lcd);
  3947  00159C  C004  F001         	movff	lcd_cmd@lcd,pulso@lcd
  3948  0015A0  C005  F002         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  3949  0015A4  ECD5  F00A         	call	_pulso	;wreg free
  3950  0015A8  0012               	return		;funcret
  3951  0015AA                     __end_of_lcd_cmd:
  3952                           	opt callstack 0
  3953                           
  3954 ;; *************** function _function_set *****************
  3955 ;; Defined at:
  3956 ;;		line 21 in file "lcd.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  lcd             2    3[COMRAM] PTR struct .
  3959 ;;		 -> PORTD(1), 
  3960 ;;  data_lenght     1    5[COMRAM] unsigned char 
  3961 ;;  num_lines       1    6[COMRAM] unsigned char 
  3962 ;;  char_font       1    7[COMRAM] unsigned char 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3974 ;;      Params:         5       0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0
  3976 ;;      Temps:          3       0       0       0       0       0       0
  3977 ;;      Totals:         8       0       0       0       0       0       0
  3978 ;;Total ram usage:        8 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    3
  3981 ;; This function calls:
  3982 ;;		_pulso
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text17
  3989  000DB2                     __ptext17:
  3990                           	opt callstack 0
  3991  000DB2                     _function_set:
  3992                           	opt callstack 27
  3993  000DB2                     
  3994                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  3995  000DB2  C004  FFD9         	movff	function_set@lcd,fsr2l
  3996  000DB6  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3997  000DBA  94DF               	bcf	indf2,2,c
  3998                           
  3999                           ;lcd.c: 24:     lcd->RS = 0;
  4000  000DBC  C004  FFD9         	movff	function_set@lcd,fsr2l
  4001  000DC0  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  4002  000DC4  90DF               	bcf	indf2,0,c
  4003                           
  4004                           ;lcd.c: 25:     lcd->R_W = 0;
  4005  000DC6  C004  FFD9         	movff	function_set@lcd,fsr2l
  4006  000DCA  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  4007  000DCE  92DF               	bcf	indf2,1,c
  4008  000DD0                     
  4009                           ;lcd.c: 28:     lcd->data = 0x02;
  4010  000DD0  C004  FFD9         	movff	function_set@lcd,fsr2l
  4011  000DD4  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  4012  000DD8  50DF               	movf	indf2,w,c
  4013  000DDA  0B0F               	andlw	-241
  4014  000DDC  0920               	iorlw	32
  4015  000DDE  6EDF               	movwf	indf2,c
  4016  000DE0                     
  4017                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4018  000DE0  0E06               	movlw	6
  4019  000DE2  6E09               	movwf	??_function_set^0,c
  4020  000DE4  0E30               	movlw	48
  4021  000DE6                     u1637:
  4022  000DE6  2EE8               	decfsz	wreg,f,c
  4023  000DE8  D7FE               	bra	u1637
  4024  000DEA  2E09               	decfsz	??_function_set^0,f,c
  4025  000DEC  D7FC               	bra	u1637
  4026  000DEE  D000               	nop2	
  4027  000DF0                     
  4028                           ;lcd.c: 31:     pulso(lcd);
  4029  000DF0  C004  F001         	movff	function_set@lcd,pulso@lcd
  4030  000DF4  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  4031  000DF8  ECD5  F00A         	call	_pulso	;wreg free
  4032  000DFC                     
  4033                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  4034  000DFC  C006  F009         	movff	function_set@data_lenght,??_function_set
  4035  000E00  0E02               	movlw	2
  4036  000E02  1209               	iorwf	??_function_set^0,f,c
  4037  000E04  C004  FFD9         	movff	function_set@lcd,fsr2l
  4038  000E08  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  4039  000E0C  3A09               	swapf	??_function_set^0,f,c
  4040  000E0E  50DF               	movf	indf2,w,c
  4041  000E10  1809               	xorwf	??_function_set^0,w,c
  4042  000E12  0B0F               	andlw	-241
  4043  000E14  1809               	xorwf	??_function_set^0,w,c
  4044  000E16  6EDF               	movwf	indf2,c
  4045  000E18                     
  4046                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4047  000E18  0E06               	movlw	6
  4048  000E1A  6E09               	movwf	??_function_set^0,c
  4049  000E1C  0E30               	movlw	48
  4050  000E1E                     u1647:
  4051  000E1E  2EE8               	decfsz	wreg,f,c
  4052  000E20  D7FE               	bra	u1647
  4053  000E22  2E09               	decfsz	??_function_set^0,f,c
  4054  000E24  D7FC               	bra	u1647
  4055  000E26  D000               	nop2	
  4056  000E28                     
  4057                           ;lcd.c: 37:     pulso(lcd);
  4058  000E28  C004  F001         	movff	function_set@lcd,pulso@lcd
  4059  000E2C  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  4060  000E30  ECD5  F00A         	call	_pulso	;wreg free
  4061  000E34                     
  4062                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  4063  000E34  C004  FFD9         	movff	function_set@lcd,fsr2l
  4064  000E38  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  4065  000E3C  38DF               	swapf	indf2,w,c
  4066  000E3E  0B0F               	andlw	15
  4067  000E40  6E09               	movwf	??_function_set^0,c
  4068  000E42  C008  F00A         	movff	function_set@char_font,??_function_set+1
  4069  000E46  90D8               	bcf	status,0,c
  4070  000E48  360A               	rlcf	(??_function_set+1)^0,f,c
  4071  000E4A  90D8               	bcf	status,0,c
  4072  000E4C  360A               	rlcf	(??_function_set+1)^0,f,c
  4073  000E4E  3807               	swapf	function_set@num_lines^0,w,c
  4074  000E50  42E8               	rrncf	wreg,f,c
  4075  000E52  0BF8               	andlw	248
  4076  000E54  100A               	iorwf	(??_function_set+1)^0,w,c
  4077  000E56  1009               	iorwf	??_function_set^0,w,c
  4078  000E58  6E0B               	movwf	(??_function_set+2)^0,c
  4079  000E5A  C004  FFD9         	movff	function_set@lcd,fsr2l
  4080  000E5E  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  4081  000E62  3A0B               	swapf	(??_function_set+2)^0,f,c
  4082  000E64  50DF               	movf	indf2,w,c
  4083  000E66  180B               	xorwf	(??_function_set+2)^0,w,c
  4084  000E68  0B0F               	andlw	-241
  4085  000E6A  180B               	xorwf	(??_function_set+2)^0,w,c
  4086  000E6C  6EDF               	movwf	indf2,c
  4087  000E6E                     
  4088                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4089  000E6E  0E06               	movlw	6
  4090  000E70  6E09               	movwf	??_function_set^0,c
  4091  000E72  0E30               	movlw	48
  4092  000E74                     u1657:
  4093  000E74  2EE8               	decfsz	wreg,f,c
  4094  000E76  D7FE               	bra	u1657
  4095  000E78  2E09               	decfsz	??_function_set^0,f,c
  4096  000E7A  D7FC               	bra	u1657
  4097  000E7C  D000               	nop2	
  4098  000E7E                     
  4099                           ;lcd.c: 44:     pulso(lcd);
  4100  000E7E  C004  F001         	movff	function_set@lcd,pulso@lcd
  4101  000E82  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  4102  000E86  ECD5  F00A         	call	_pulso	;wreg free
  4103  000E8A  0012               	return		;funcret
  4104  000E8C                     __end_of_function_set:
  4105                           	opt callstack 0
  4106                           
  4107 ;; *************** function _entry_mode_set *****************
  4108 ;; Defined at:
  4109 ;;		line 116 in file "lcd.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  lcd             2    3[COMRAM] PTR struct .
  4112 ;;		 -> PORTD(1), 
  4113 ;;  move_directi    1    5[COMRAM] unsigned char 
  4114 ;;  display_shif    1    6[COMRAM] unsigned char 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4126 ;;      Params:         4       0       0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0
  4128 ;;      Temps:          1       0       0       0       0       0       0
  4129 ;;      Totals:         5       0       0       0       0       0       0
  4130 ;;Total ram usage:        5 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    3
  4133 ;; This function calls:
  4134 ;;		_pulso
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text18
  4141  001266                     __ptext18:
  4142                           	opt callstack 0
  4143  001266                     _entry_mode_set:
  4144                           	opt callstack 27
  4145  001266                     
  4146                           ;lcd.c: 117:     lcd->E = 0;
  4147  001266  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4148  00126A  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4149  00126E  94DF               	bcf	indf2,2,c
  4150                           
  4151                           ;lcd.c: 118:     lcd->RS = 0;
  4152  001270  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4153  001274  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4154  001278  90DF               	bcf	indf2,0,c
  4155                           
  4156                           ;lcd.c: 119:     lcd->R_W = 0;
  4157  00127A  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4158  00127E  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4159  001282  92DF               	bcf	indf2,1,c
  4160  001284                     
  4161                           ;lcd.c: 121:     lcd->data = 0x00;
  4162  001284  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4163  001288  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4164  00128C  0E0F               	movlw	-241
  4165  00128E  16DF               	andwf	indf2,f,c
  4166  001290                     
  4167                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4168  001290  0E06               	movlw	6
  4169  001292  6E08               	movwf	??_entry_mode_set^0,c
  4170  001294  0E30               	movlw	48
  4171  001296                     u1667:
  4172  001296  2EE8               	decfsz	wreg,f,c
  4173  001298  D7FE               	bra	u1667
  4174  00129A  2E08               	decfsz	??_entry_mode_set^0,f,c
  4175  00129C  D7FC               	bra	u1667
  4176  00129E  D000               	nop2	
  4177  0012A0                     
  4178                           ;lcd.c: 124:     pulso(lcd);
  4179  0012A0  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  4180  0012A4  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  4181  0012A8  ECD5  F00A         	call	_pulso	;wreg free
  4182  0012AC                     
  4183                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  4184  0012AC  5006               	movf	entry_mode_set@move_direction^0,w,c
  4185  0012AE  2406               	addwf	entry_mode_set@move_direction^0,w,c
  4186  0012B0  1007               	iorwf	entry_mode_set@display_shift^0,w,c
  4187  0012B2  6E08               	movwf	??_entry_mode_set^0,c
  4188  0012B4  0E04               	movlw	4
  4189  0012B6  1208               	iorwf	??_entry_mode_set^0,f,c
  4190  0012B8  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  4191  0012BC  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  4192  0012C0  3A08               	swapf	??_entry_mode_set^0,f,c
  4193  0012C2  50DF               	movf	indf2,w,c
  4194  0012C4  1808               	xorwf	??_entry_mode_set^0,w,c
  4195  0012C6  0B0F               	andlw	-241
  4196  0012C8  1808               	xorwf	??_entry_mode_set^0,w,c
  4197  0012CA  6EDF               	movwf	indf2,c
  4198  0012CC                     
  4199                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4200  0012CC  0E06               	movlw	6
  4201  0012CE  6E08               	movwf	??_entry_mode_set^0,c
  4202  0012D0  0E30               	movlw	48
  4203  0012D2                     u1677:
  4204  0012D2  2EE8               	decfsz	wreg,f,c
  4205  0012D4  D7FE               	bra	u1677
  4206  0012D6  2E08               	decfsz	??_entry_mode_set^0,f,c
  4207  0012D8  D7FC               	bra	u1677
  4208  0012DA  D000               	nop2	
  4209  0012DC                     
  4210                           ;lcd.c: 130:     pulso(lcd);
  4211  0012DC  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  4212  0012E0  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  4213  0012E4  ECD5  F00A         	call	_pulso	;wreg free
  4214  0012E8  0012               	return		;funcret
  4215  0012EA                     __end_of_entry_mode_set:
  4216                           	opt callstack 0
  4217                           
  4218 ;; *************** function _display_onoff_control *****************
  4219 ;; Defined at:
  4220 ;;		line 47 in file "lcd.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  lcd             2    3[COMRAM] PTR struct .
  4223 ;;		 -> PORTD(1), 
  4224 ;;  display_on      1    5[COMRAM] unsigned char 
  4225 ;;  cursor_on       1    6[COMRAM] unsigned char 
  4226 ;;  blink           1    7[COMRAM] unsigned char 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4238 ;;      Params:         5       0       0       0       0       0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0
  4240 ;;      Temps:          2       0       0       0       0       0       0
  4241 ;;      Totals:         7       0       0       0       0       0       0
  4242 ;;Total ram usage:        7 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    3
  4245 ;; This function calls:
  4246 ;;		_pulso
  4247 ;; This function is called by:
  4248 ;;		_main
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text19
  4253  0011D8                     __ptext19:
  4254                           	opt callstack 0
  4255  0011D8                     _display_onoff_control:
  4256                           	opt callstack 27
  4257  0011D8                     
  4258                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  4259  0011D8  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4260  0011DC  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4261  0011E0  94DF               	bcf	indf2,2,c
  4262                           
  4263                           ;lcd.c: 50:     lcd->RS = 0;
  4264  0011E2  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4265  0011E6  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4266  0011EA  90DF               	bcf	indf2,0,c
  4267                           
  4268                           ;lcd.c: 51:     lcd->R_W = 0;
  4269  0011EC  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4270  0011F0  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4271  0011F4  92DF               	bcf	indf2,1,c
  4272  0011F6                     
  4273                           ;lcd.c: 54:     lcd->data = 0x00;
  4274  0011F6  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4275  0011FA  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4276  0011FE  0E0F               	movlw	-241
  4277  001200  16DF               	andwf	indf2,f,c
  4278  001202                     
  4279                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4280  001202  0E06               	movlw	6
  4281  001204  6E09               	movwf	??_display_onoff_control^0,c
  4282  001206  0E30               	movlw	48
  4283  001208                     u1687:
  4284  001208  2EE8               	decfsz	wreg,f,c
  4285  00120A  D7FE               	bra	u1687
  4286  00120C  2E09               	decfsz	??_display_onoff_control^0,f,c
  4287  00120E  D7FC               	bra	u1687
  4288  001210  D000               	nop2	
  4289  001212                     
  4290                           ;lcd.c: 57:     pulso(lcd);
  4291  001212  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  4292  001216  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  4293  00121A  ECD5  F00A         	call	_pulso	;wreg free
  4294  00121E                     
  4295                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  4296  00121E  90D8               	bcf	status,0,c
  4297  001220  3407               	rlcf	display_onoff_control@cursor_on^0,w,c
  4298  001222  6E09               	movwf	??_display_onoff_control^0,c
  4299  001224  4406               	rlncf	display_onoff_control@display_on^0,w,c
  4300  001226  46E8               	rlncf	wreg,f,c
  4301  001228  0BFC               	andlw	252
  4302  00122A  1009               	iorwf	??_display_onoff_control^0,w,c
  4303  00122C  1008               	iorwf	display_onoff_control@blink^0,w,c
  4304  00122E  6E0A               	movwf	(??_display_onoff_control+1)^0,c
  4305  001230  0E08               	movlw	8
  4306  001232  120A               	iorwf	(??_display_onoff_control+1)^0,f,c
  4307  001234  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  4308  001238  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  4309  00123C  3A0A               	swapf	(??_display_onoff_control+1)^0,f,c
  4310  00123E  50DF               	movf	indf2,w,c
  4311  001240  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  4312  001242  0B0F               	andlw	-241
  4313  001244  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  4314  001246  6EDF               	movwf	indf2,c
  4315  001248                     
  4316                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4317  001248  0E06               	movlw	6
  4318  00124A  6E09               	movwf	??_display_onoff_control^0,c
  4319  00124C  0E30               	movlw	48
  4320  00124E                     u1697:
  4321  00124E  2EE8               	decfsz	wreg,f,c
  4322  001250  D7FE               	bra	u1697
  4323  001252  2E09               	decfsz	??_display_onoff_control^0,f,c
  4324  001254  D7FC               	bra	u1697
  4325  001256  D000               	nop2	
  4326  001258                     
  4327                           ;lcd.c: 64:     pulso(lcd);
  4328  001258  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  4329  00125C  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  4330  001260  ECD5  F00A         	call	_pulso	;wreg free
  4331  001264  0012               	return		;funcret
  4332  001266                     __end_of_display_onoff_control:
  4333                           	opt callstack 0
  4334                           
  4335 ;; *************** function _pulso *****************
  4336 ;; Defined at:
  4337 ;;		line 11 in file "lcd.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  lcd             2    0[COMRAM] PTR struct .
  4340 ;;		 -> PORTD(1), 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr2l, fsr2h
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4352 ;;      Params:         2       0       0       0       0       0       0
  4353 ;;      Locals:         0       0       0       0       0       0       0
  4354 ;;      Temps:          1       0       0       0       0       0       0
  4355 ;;      Totals:         3       0       0       0       0       0       0
  4356 ;;Total ram usage:        3 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    2
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_function_set
  4363 ;;		_display_onoff_control
  4364 ;;		_lcd_cmd
  4365 ;;		_entry_mode_set
  4366 ;;		_clear_display
  4367 ;;		_return_home
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text20
  4372  0015AA                     __ptext20:
  4373                           	opt callstack 0
  4374  0015AA                     _pulso:
  4375                           	opt callstack 23
  4376  0015AA                     
  4377                           ;lcd.c: 13:     lcd->E = 1;
  4378  0015AA  C001  FFD9         	movff	pulso@lcd,fsr2l
  4379  0015AE  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  4380  0015B2  84DF               	bsf	indf2,2,c
  4381  0015B4                     
  4382                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4383  0015B4  0E06               	movlw	6
  4384  0015B6  6E03               	movwf	??_pulso^0,c
  4385  0015B8  0E30               	movlw	48
  4386  0015BA                     u1707:
  4387  0015BA  2EE8               	decfsz	wreg,f,c
  4388  0015BC  D7FE               	bra	u1707
  4389  0015BE  2E03               	decfsz	??_pulso^0,f,c
  4390  0015C0  D7FC               	bra	u1707
  4391  0015C2  D000               	nop2	
  4392  0015C4                     
  4393                           ;lcd.c: 17:     lcd->E = 0;
  4394  0015C4  C001  FFD9         	movff	pulso@lcd,fsr2l
  4395  0015C8  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  4396  0015CC  94DF               	bcf	indf2,2,c
  4397                           
  4398                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  4399  0015CE  0E06               	movlw	6
  4400  0015D0  6E03               	movwf	??_pulso^0,c
  4401  0015D2  0E30               	movlw	48
  4402  0015D4                     u1717:
  4403  0015D4  2EE8               	decfsz	wreg,f,c
  4404  0015D6  D7FE               	bra	u1717
  4405  0015D8  2E03               	decfsz	??_pulso^0,f,c
  4406  0015DA  D7FC               	bra	u1717
  4407  0015DC  D000               	nop2	
  4408  0015DE  0012               	return		;funcret
  4409  0015E0                     __end_of_pulso:
  4410                           	opt callstack 0
  4411                           
  4412 ;; *************** function _int_handler *****************
  4413 ;; Defined at:
  4414 ;;		line 24 in file "main.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4428 ;;      Params:         0       0       0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0
  4431 ;;      Totals:         0       0       0       0       0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    1
  4435 ;; This function calls:
  4436 ;;		_le_entrada
  4437 ;; This function is called by:
  4438 ;;		Interrupt level 2
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	intcode
  4443  000008                     __pintcode:
  4444                           	opt callstack 0
  4445  000008                     _int_handler:
  4446                           	opt callstack 23
  4447                           
  4448                           ;incstack = 0
  4449  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4450  00000A  EDF0  F00A         	call	int_func,f	;refresh shadow registers
  4451                           
  4452                           	psect	intcode_body
  4453  0015E0                     __pintcode_body:
  4454                           	opt callstack 23
  4455  0015E0                     int_func:
  4456                           	opt callstack 23
  4457  0015E0  0006               	pop		; remove dummy address from shadow register refresh
  4458  0015E2                     
  4459                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  4460  0015E2  A4F2               	btfss	242,2,c	;volatile
  4461  0015E4  EFF6  F00A         	goto	i2u92_41
  4462  0015E8  EFF8  F00A         	goto	i2u92_40
  4463  0015EC                     i2u92_41:
  4464  0015EC  EFFD  F00A         	goto	i2l1554
  4465  0015F0                     i2u92_40:
  4466  0015F0                     
  4467                           ;main.c: 26:         TMR0L = 0x63;
  4468  0015F0  0E63               	movlw	99
  4469  0015F2  6ED6               	movwf	214,c	;volatile
  4470  0015F4                     
  4471                           ;main.c: 27:         le_entrada();
  4472  0015F4  EC82  F004         	call	_le_entrada	;wreg free
  4473  0015F8                     
  4474                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  4475  0015F8  94F2               	bcf	242,2,c	;volatile
  4476  0015FA                     i2l1554:
  4477                           
  4478                           ;main.c: 30:     if(INTCONbits.INT0IF == 1){
  4479  0015FA  A2F2               	btfss	242,1,c	;volatile
  4480  0015FC  EF02  F00B         	goto	i2u93_41
  4481  001600  EF04  F00B         	goto	i2u93_40
  4482  001604                     i2u93_41:
  4483  001604  EF06  F00B         	goto	i2l41
  4484  001608                     i2u93_40:
  4485  001608                     
  4486                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  4487  001608  92F2               	bcf	242,1,c	;volatile
  4488  00160A  00FF               	reset		;# 
  4489  00160C                     i2l41:
  4490  00160C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4491  00160E  0011               	retfie		f
  4492  001610                     __end_of_int_handler:
  4493                           	opt callstack 0
  4494                           
  4495 ;; *************** function _le_entrada *****************
  4496 ;; Defined at:
  4497 ;;		line 12 in file "keyboard.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2, status,0
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4511 ;;      Params:         0       0       0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0
  4514 ;;      Totals:         0       0       0       0       0       0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_int_handler
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text22
  4525  000904                     __ptext22:
  4526                           	opt callstack 0
  4527  000904                     _le_entrada:
  4528                           	opt callstack 23
  4529  000904                     
  4530                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  4531  000904  8E81               	bsf	129,7,c	;volatile
  4532                           
  4533                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  4534  000906  B050               	btfsc	_botoes_ant^0,0,c
  4535  000908  EF88  F004         	goto	i2u62_41
  4536  00090C  EF8A  F004         	goto	i2u62_40
  4537  000910                     i2u62_41:
  4538  000910  EF91  F004         	goto	i2l1402
  4539  000914                     i2u62_40:
  4540  000914  B481               	btfsc	129,2,c	;volatile
  4541  000916  EF8F  F004         	goto	i2u63_41
  4542  00091A  EF91  F004         	goto	i2u63_40
  4543  00091E                     i2u63_41:
  4544  00091E  EF99  F004         	goto	i2l114
  4545  000922                     i2u63_40:
  4546  000922                     i2l1402:
  4547  000922  0E32               	movlw	50
  4548  000924  644F               	cpfsgt	_cont_u^0,c
  4549  000926  EF97  F004         	goto	i2u64_41
  4550  00092A  EF99  F004         	goto	i2u64_40
  4551  00092E                     i2u64_41:
  4552  00092E  EF9F  F004         	goto	i2l112
  4553  000932                     i2u64_40:
  4554  000932                     i2l114:
  4555                           
  4556                           ;keyboard.c: 15:         botoes.U = 1;
  4557  000932  8051               	bsf	_botoes^0,0,c
  4558                           
  4559                           ;keyboard.c: 16:         botoes_ant.U = 1;
  4560  000934  8050               	bsf	_botoes_ant^0,0,c
  4561  000936                     i2l1404:
  4562                           
  4563                           ;keyboard.c: 17:         cont_u = 0;
  4564  000936  0E00               	movlw	0
  4565  000938  6E4F               	movwf	_cont_u^0,c
  4566                           
  4567                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  4568  00093A  EFB9  F004         	goto	i2l1414
  4569  00093E                     i2l112:
  4570  00093E  A050               	btfss	_botoes_ant^0,0,c
  4571  000940  EFA4  F004         	goto	i2u65_41
  4572  000944  EFA6  F004         	goto	i2u65_40
  4573  000948                     i2u65_41:
  4574  000948  EFB1  F004         	goto	i2l118
  4575  00094C                     i2u65_40:
  4576  00094C  B481               	btfsc	129,2,c	;volatile
  4577  00094E  EFAB  F004         	goto	i2u66_41
  4578  000952  EFAD  F004         	goto	i2u66_40
  4579  000956                     i2u66_41:
  4580  000956  EFB1  F004         	goto	i2l118
  4581  00095A                     i2u66_40:
  4582  00095A                     
  4583                           ;keyboard.c: 19:         botoes.U = 0;
  4584  00095A  9051               	bcf	_botoes^0,0,c
  4585                           
  4586                           ;keyboard.c: 20:         botoes_ant.U = 0;
  4587  00095C  9050               	bcf	_botoes_ant^0,0,c
  4588  00095E  EF9B  F004         	goto	i2l1404
  4589  000962                     i2l118:
  4590  000962  A481               	btfss	129,2,c	;volatile
  4591  000964  EFB6  F004         	goto	i2u67_41
  4592  000968  EFB8  F004         	goto	i2u67_40
  4593  00096C                     i2u67_41:
  4594  00096C  EFB9  F004         	goto	i2l1414
  4595  000970                     i2u67_40:
  4596  000970  2A4F               	incf	_cont_u^0,f,c
  4597  000972                     i2l1414:
  4598                           
  4599                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  4600  000972  9E81               	bcf	129,7,c	;volatile
  4601  000974                     
  4602                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  4603  000974  8C81               	bsf	129,6,c	;volatile
  4604  000976                     
  4605                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  4606  000976  B450               	btfsc	_botoes_ant^0,2,c
  4607  000978  EFC0  F004         	goto	i2u68_41
  4608  00097C  EFC2  F004         	goto	i2u68_40
  4609  000980                     i2u68_41:
  4610  000980  EFC9  F004         	goto	i2l1422
  4611  000984                     i2u68_40:
  4612  000984  B281               	btfsc	129,1,c	;volatile
  4613  000986  EFC7  F004         	goto	i2u69_41
  4614  00098A  EFC9  F004         	goto	i2u69_40
  4615  00098E                     i2u69_41:
  4616  00098E  EFD1  F004         	goto	i2l123
  4617  000992                     i2u69_40:
  4618  000992                     i2l1422:
  4619  000992  0E32               	movlw	50
  4620  000994  644D               	cpfsgt	_cont_l^0,c
  4621  000996  EFCF  F004         	goto	i2u70_41
  4622  00099A  EFD1  F004         	goto	i2u70_40
  4623  00099E                     i2u70_41:
  4624  00099E  EFD7  F004         	goto	i2l121
  4625  0009A2                     i2u70_40:
  4626  0009A2                     i2l123:
  4627                           
  4628                           ;keyboard.c: 27:         botoes.L = 1;
  4629  0009A2  8451               	bsf	_botoes^0,2,c
  4630                           
  4631                           ;keyboard.c: 28:         botoes_ant.L = 1;
  4632  0009A4  8450               	bsf	_botoes_ant^0,2,c
  4633  0009A6                     i2l1424:
  4634                           
  4635                           ;keyboard.c: 29:         cont_l = 0;
  4636  0009A6  0E00               	movlw	0
  4637  0009A8  6E4D               	movwf	_cont_l^0,c
  4638                           
  4639                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  4640  0009AA  EFF1  F004         	goto	i2l1434
  4641  0009AE                     i2l121:
  4642  0009AE  A450               	btfss	_botoes_ant^0,2,c
  4643  0009B0  EFDC  F004         	goto	i2u71_41
  4644  0009B4  EFDE  F004         	goto	i2u71_40
  4645  0009B8                     i2u71_41:
  4646  0009B8  EFE9  F004         	goto	i2l127
  4647  0009BC                     i2u71_40:
  4648  0009BC  B281               	btfsc	129,1,c	;volatile
  4649  0009BE  EFE3  F004         	goto	i2u72_41
  4650  0009C2  EFE5  F004         	goto	i2u72_40
  4651  0009C6                     i2u72_41:
  4652  0009C6  EFE9  F004         	goto	i2l127
  4653  0009CA                     i2u72_40:
  4654  0009CA                     
  4655                           ;keyboard.c: 31:         botoes.L = 0;
  4656  0009CA  9451               	bcf	_botoes^0,2,c
  4657                           
  4658                           ;keyboard.c: 32:         botoes_ant.L = 0;
  4659  0009CC  9450               	bcf	_botoes_ant^0,2,c
  4660  0009CE  EFD3  F004         	goto	i2l1424
  4661  0009D2                     i2l127:
  4662  0009D2  A281               	btfss	129,1,c	;volatile
  4663  0009D4  EFEE  F004         	goto	i2u73_41
  4664  0009D8  EFF0  F004         	goto	i2u73_40
  4665  0009DC                     i2u73_41:
  4666  0009DC  EFF1  F004         	goto	i2l1434
  4667  0009E0                     i2u73_40:
  4668  0009E0  2A4D               	incf	_cont_l^0,f,c
  4669  0009E2                     i2l1434:
  4670                           
  4671                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  4672  0009E2  B650               	btfsc	_botoes_ant^0,3,c
  4673  0009E4  EFF6  F004         	goto	i2u74_41
  4674  0009E8  EFF8  F004         	goto	i2u74_40
  4675  0009EC                     i2u74_41:
  4676  0009EC  EFFF  F004         	goto	i2l1438
  4677  0009F0                     i2u74_40:
  4678  0009F0  B681               	btfsc	129,3,c	;volatile
  4679  0009F2  EFFD  F004         	goto	i2u75_41
  4680  0009F6  EFFF  F004         	goto	i2u75_40
  4681  0009FA                     i2u75_41:
  4682  0009FA  EF07  F005         	goto	i2l132
  4683  0009FE                     i2u75_40:
  4684  0009FE                     i2l1438:
  4685  0009FE  0E32               	movlw	50
  4686  000A00  644C               	cpfsgt	_cont_r^0,c
  4687  000A02  EF05  F005         	goto	i2u76_41
  4688  000A06  EF07  F005         	goto	i2u76_40
  4689  000A0A                     i2u76_41:
  4690  000A0A  EF0D  F005         	goto	i2l130
  4691  000A0E                     i2u76_40:
  4692  000A0E                     i2l132:
  4693                           
  4694                           ;keyboard.c: 37:         botoes.R = 1;
  4695  000A0E  8651               	bsf	_botoes^0,3,c
  4696                           
  4697                           ;keyboard.c: 38:         botoes_ant.R = 1;
  4698  000A10  8650               	bsf	_botoes_ant^0,3,c
  4699  000A12                     i2l1440:
  4700                           
  4701                           ;keyboard.c: 39:         cont_r = 0;
  4702  000A12  0E00               	movlw	0
  4703  000A14  6E4C               	movwf	_cont_r^0,c
  4704                           
  4705                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  4706  000A16  EF27  F005         	goto	i2l1450
  4707  000A1A                     i2l130:
  4708  000A1A  A650               	btfss	_botoes_ant^0,3,c
  4709  000A1C  EF12  F005         	goto	i2u77_41
  4710  000A20  EF14  F005         	goto	i2u77_40
  4711  000A24                     i2u77_41:
  4712  000A24  EF1F  F005         	goto	i2l136
  4713  000A28                     i2u77_40:
  4714  000A28  B681               	btfsc	129,3,c	;volatile
  4715  000A2A  EF19  F005         	goto	i2u78_41
  4716  000A2E  EF1B  F005         	goto	i2u78_40
  4717  000A32                     i2u78_41:
  4718  000A32  EF1F  F005         	goto	i2l136
  4719  000A36                     i2u78_40:
  4720  000A36                     
  4721                           ;keyboard.c: 41:         botoes.R = 0;
  4722  000A36  9651               	bcf	_botoes^0,3,c
  4723                           
  4724                           ;keyboard.c: 42:         botoes_ant.R = 0;
  4725  000A38  9650               	bcf	_botoes_ant^0,3,c
  4726  000A3A  EF09  F005         	goto	i2l1440
  4727  000A3E                     i2l136:
  4728  000A3E  A681               	btfss	129,3,c	;volatile
  4729  000A40  EF24  F005         	goto	i2u79_41
  4730  000A44  EF26  F005         	goto	i2u79_40
  4731  000A48                     i2u79_41:
  4732  000A48  EF27  F005         	goto	i2l1450
  4733  000A4C                     i2u79_40:
  4734  000A4C  2A4C               	incf	_cont_r^0,f,c
  4735  000A4E                     i2l1450:
  4736                           
  4737                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  4738  000A4E  9C81               	bcf	129,6,c	;volatile
  4739  000A50                     
  4740                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  4741  000A50  8A81               	bsf	129,5,c	;volatile
  4742  000A52                     
  4743                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  4744  000A52  B250               	btfsc	_botoes_ant^0,1,c
  4745  000A54  EF2E  F005         	goto	i2u80_41
  4746  000A58  EF30  F005         	goto	i2u80_40
  4747  000A5C                     i2u80_41:
  4748  000A5C  EF37  F005         	goto	i2l1458
  4749  000A60                     i2u80_40:
  4750  000A60  B481               	btfsc	129,2,c	;volatile
  4751  000A62  EF35  F005         	goto	i2u81_41
  4752  000A66  EF37  F005         	goto	i2u81_40
  4753  000A6A                     i2u81_41:
  4754  000A6A  EF3F  F005         	goto	i2l141
  4755  000A6E                     i2u81_40:
  4756  000A6E                     i2l1458:
  4757  000A6E  0E32               	movlw	50
  4758  000A70  644E               	cpfsgt	_cont_d^0,c
  4759  000A72  EF3D  F005         	goto	i2u82_41
  4760  000A76  EF3F  F005         	goto	i2u82_40
  4761  000A7A                     i2u82_41:
  4762  000A7A  EF45  F005         	goto	i2l139
  4763  000A7E                     i2u82_40:
  4764  000A7E                     i2l141:
  4765                           
  4766                           ;keyboard.c: 49:         botoes.D = 1;
  4767  000A7E  8251               	bsf	_botoes^0,1,c
  4768                           
  4769                           ;keyboard.c: 50:         botoes_ant.D = 1;
  4770  000A80  8250               	bsf	_botoes_ant^0,1,c
  4771  000A82                     i2l1460:
  4772                           
  4773                           ;keyboard.c: 51:         cont_d = 0;
  4774  000A82  0E00               	movlw	0
  4775  000A84  6E4E               	movwf	_cont_d^0,c
  4776                           
  4777                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  4778  000A86  EF5F  F005         	goto	i2l1470
  4779  000A8A                     i2l139:
  4780  000A8A  A250               	btfss	_botoes_ant^0,1,c
  4781  000A8C  EF4A  F005         	goto	i2u83_41
  4782  000A90  EF4C  F005         	goto	i2u83_40
  4783  000A94                     i2u83_41:
  4784  000A94  EF57  F005         	goto	i2l145
  4785  000A98                     i2u83_40:
  4786  000A98  B481               	btfsc	129,2,c	;volatile
  4787  000A9A  EF51  F005         	goto	i2u84_41
  4788  000A9E  EF53  F005         	goto	i2u84_40
  4789  000AA2                     i2u84_41:
  4790  000AA2  EF57  F005         	goto	i2l145
  4791  000AA6                     i2u84_40:
  4792  000AA6                     
  4793                           ;keyboard.c: 53:         botoes.D = 0;
  4794  000AA6  9251               	bcf	_botoes^0,1,c
  4795                           
  4796                           ;keyboard.c: 54:         botoes_ant.D = 0;
  4797  000AA8  9250               	bcf	_botoes_ant^0,1,c
  4798  000AAA  EF41  F005         	goto	i2l1460
  4799  000AAE                     i2l145:
  4800  000AAE  A481               	btfss	129,2,c	;volatile
  4801  000AB0  EF5C  F005         	goto	i2u85_41
  4802  000AB4  EF5E  F005         	goto	i2u85_40
  4803  000AB8                     i2u85_41:
  4804  000AB8  EF5F  F005         	goto	i2l1470
  4805  000ABC                     i2u85_40:
  4806  000ABC  2A4E               	incf	_cont_d^0,f,c
  4807  000ABE                     i2l1470:
  4808                           
  4809                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  4810  000ABE  9A81               	bcf	129,5,c	;volatile
  4811  000AC0                     
  4812                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  4813  000AC0  8881               	bsf	129,4,c	;volatile
  4814  000AC2                     
  4815                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  4816  000AC2  A281               	btfss	129,1,c	;volatile
  4817  000AC4  D002               	bra	i2u86_45
  4818  000AC6  8851               	bsf	_botoes^0,4,c
  4819  000AC8  D001               	bra	i2u86_47
  4820  000ACA                     i2u86_45:
  4821  000ACA  9851               	bcf	_botoes^0,4,c
  4822  000ACC                     i2u86_47:
  4823  000ACC                     
  4824                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  4825  000ACC  A681               	btfss	129,3,c	;volatile
  4826  000ACE  D002               	bra	i2u87_45
  4827  000AD0  8A51               	bsf	_botoes^0,5,c
  4828  000AD2  D001               	bra	i2u87_47
  4829  000AD4                     i2u87_45:
  4830  000AD4  9A51               	bcf	_botoes^0,5,c
  4831  000AD6                     i2u87_47:
  4832  000AD6                     
  4833                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  4834  000AD6  9881               	bcf	129,4,c	;volatile
  4835  000AD8  0012               	return		;funcret
  4836  000ADA                     __end_of_le_entrada:
  4837                           	opt callstack 0
  4838                           
  4839                           	psect	rparam
  4840  0000                     
  4841                           	psect	temp
  4842  00005D                     btemp:
  4843                           	opt callstack 0
  4844  00005D                     	ds	1
  4845  0000                     int$flags	set	btemp
  4846  0000                     wtemp8	set	btemp+1
  4847  0000                     ttemp5	set	btemp+1
  4848  0000                     ttemp6	set	btemp+4
  4849  0000                     ttemp7	set	btemp+8
  4850                           tosu	equ	0xFFF
  4851                           tosh	equ	0xFFE
  4852                           tosl	equ	0xFFD
  4853                           stkptr	equ	0xFFC
  4854                           pclatu	equ	0xFFB
  4855                           pclath	equ	0xFFA
  4856                           pcl	equ	0xFF9
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           indf0	equ	0xFEF
  4864                           postinc0	equ	0xFEE
  4865                           postdec0	equ	0xFED
  4866                           preinc0	equ	0xFEC
  4867                           plusw0	equ	0xFEB
  4868                           fsr0h	equ	0xFEA
  4869                           fsr0l	equ	0xFE9
  4870                           wreg	equ	0xFE8
  4871                           indf1	equ	0xFE7
  4872                           postinc1	equ	0xFE6
  4873                           postdec1	equ	0xFE5
  4874                           preinc1	equ	0xFE4
  4875                           plusw1	equ	0xFE3
  4876                           fsr1h	equ	0xFE2
  4877                           fsr1l	equ	0xFE1
  4878                           bsr	equ	0xFE0
  4879                           indf2	equ	0xFDF
  4880                           postinc2	equ	0xFDE
  4881                           postdec2	equ	0xFDD
  4882                           preinc2	equ	0xFDC
  4883                           plusw2	equ	0xFDB
  4884                           fsr2h	equ	0xFDA
  4885                           fsr2l	equ	0xFD9
  4886                           status	equ	0xFD8


Data Sizes:
    Strings     316
    Constant    0
    Data        3
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     72      92
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_32(CODE[17]), STR_31(CODE[17]), STR_30(CODE[17]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), 
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_32(CODE[17]), STR_31(CODE[17]), STR_30(CODE[17]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), 
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   55880
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   51472
                                             70 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    9914
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                               30    28      2   11762
                                             40 COMRAM    30    28      2
                            ___awmod
                          _print_mat
                               _rand
                              _srand
                             _strcpy
                               _time
 ---------------------------------------------------------------------------------
 (3) _time                                                 8     0      8     120
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _srand                                                6     4      2      98
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    9870
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    9870
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    9870
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    4960
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4812
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       ___awmod
         _rand (ARG)
           ___omul
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _rand
         ___omul
       _srand
         _time (ARG)
       _strcpy
       _time
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     48      5C       1       73.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      15        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 23 12:36:13 2020

                              _x 005C                                _y 004A  
         ?_display_onoff_control 0004                               l61 1264  
                             l70 0F46                               l46 135E  
                             l55 15DE                               l64 15A8  
                             l58 0E8A                               l74 0F46  
                             l82 0CD4                               l77 12E8  
                             l95 10A2                               _op 004B  
                    creditos@lcd 001A                      __CFG_OSC$HS 000000  
                            l201 1438                              l210 13CC  
                            l204 1498                              l214 0B4E  
                            l207 13BE                              l232 0372  
                            l218 0BEC                              l252 0902  
                            l247 085A                              l272 1120  
                            l273 1140                              l249 08E8  
                            l185 1142                              l187 11D2  
                            l198 142A                              l499 0FF6  
                            l931 163C                              l940 1568  
                            l934 0DB0                              l944 14E4  
                            u940 0E9C                              u941 0E98  
                            u950 0EF2                              u951 0EEE  
                            u960 0F14                              u961 0F10  
                            u970 0F36                              u971 0F32  
                            u980 0CC6                              u981 0CC2  
                            u991 10AA                      finaliza@lcd 001A  
                            _lcd 005A                     ___awmod@sign 0028  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0001                     __CFG_WDT$OFF 000000  
                           l2000 0740                             l2010 07A8  
                           l2002 0742                             l2100 12A0  
                           l2020 07EE                             l2012 07AA  
                           l2004 0766                             l2102 12AC  
                           l2030 0848                             l2022 0812  
                           l2014 07AC                             l2006 0774  
                           l2110 114E                             l2104 12CC  
                           l2040 08D4                             l2032 086A  
                           l2024 0814                             l2008 0784  
                           l2016 07D0                             l2120 11A0  
                           l2112 115E                             l2106 12DC  
                           l2050 13B2                             l2042 08D8  
                           l2034 087C                             l2026 0816  
                           l2018 07DE                             l2122 11B0  
                           l2114 116E                             l2130 1304  
                           l2060 0DB2                             l2052 13CE  
                           l2044 08DC                             l2036 08CC  
                           l2028 083A                             l2124 11C2  
                           l2116 117E                             l2108 1142  
                           l2140 1324                             l2132 1306  
                           l2070 0E18                             l2062 0DD0  
                           l2054 141E                             l2038 08D0  
                           l2046 08F6                             l2118 118E  
                           l2142 133C                             l2134 1308  
                           l2126 12EA                             l2080 11D8  
                           l2072 0E28                             l2064 0DE0  
                           l2056 143A                             l2048 1362  
                           l2144 1350                             l2136 130A  
                           l2128 1302                             l1610 15B4  
                           l2090 1248                             l2082 11F6  
                           l2074 0E34                             l2066 0DF0  
                           l2058 148A                             l2146 1352  
                           l2138 130C                             l1612 15C4  
                           l2092 1258                             l2084 1202  
                           l2076 0E6E                             l2068 0DFC  
                           l1620 159C                             l1700 10A4  
                           l2086 1212                             l2094 1266  
                           l2078 0E7E                             l1614 156A  
                           l1630 0EBC                             l1622 0E8C  
                           l1710 0FF8                             l1702 10B0  
                           l1608 15AA                             l2088 121E  
                           l2096 1284                             l1616 1574  
                           l1632 0ECC                             l1624 0E9C  
                           l1704 10BE                             l1800 0B80  
                           l2098 1290                             l1618 158C  
                           l1626 0EA8                             l1634 0EE0  
                           l1730 1082                             l1706 10DE  
                           l1810 0BB2                             l1802 0B82  
                           l1660 0F36                             l1636 0EF2  
                           l1628 0EAC                             l1732 1086  
                           l1724 101C                             l1716 1000  
                           l1708 10F0                             l1740 14AC  
                           l1900 0322                             l1812 0BC2  
                           l1804 0B84                             l1646 0F02  
                           l1670 0BEE                             l1726 1062  
                           l1718 1014                             l1734 152A  
                           l1750 0D6A                             l1742 14D4  
                           l1910 0340                             l1902 0326  
                           l1830 005A                             l1814 0BD6  
                           l1806 0B98                             l1822 0BDE  
                           l1648 0F14                             l1680 0C6A  
                           l1672 0C0C                             l1728 1066  
                           l1736 153A                             l1760 0F62  
                           l1912 0352                             l1904 0328  
                           l1920 0372                             l1840 0086  
                           l1832 0062                             l1824 0012  
                           l1816 0BD8                             l1808 0BA4  
                           l1658 0F24                             l1690 0C96  
                           l1682 0C6E                             l1674 0C2A  
                           l1770 0F96                             l1762 0F66  
                           l1754 0F48                             l1746 1610  
                           l1738 149A                             l1930 03F2  
                           l1922 037E                             l1914 0356  
                           l1906 033A                             l1850 00CC  
                           l1842 009A                             l1834 0062  
                           l1826 004A                             l1692 0CA0  
                           l1684 0C78                             l1676 0C34  
                           l1780 0FD0                             l1772 0F9E  
                           l1764 0F74                             l1756 0F4C  
                           l1748 0CD6                             l1940 043A  
                           l1932 03FE                             l1924 0392  
                           l1916 0358                             l1908 033E  
                           l1860 012E                             l1852 00D0  
                           l1844 00AE                             l1836 006A  
                           l1828 0052                             l1694 0CAA  
                           l1686 0C82                             l1678 0C3E  
                           l1774 0FAC                             l1782 0FD6  
                           l1766 0F7C                             l1758 0F5A  
                           l1950 04B6                             l1934 0416  
                           l1926 03A4                             l1942 0442  
                           l1918 036A                             l1870 01A4  
                           l1862 0158                             l1854 00E4  
                           l1846 00C2                             l1838 0072  
                           l1790 0ADA                             l1696 0CC6  
                           l1688 0C8C                             l1784 0FE6  
                           l1776 0FC2                             l1768 0F8E  
                           l1960 04FE                             l1952 04C2  
                           l1944 0456                             l1936 042A  
                           l1928 03B6                             l1872 01AC  
                           l1864 017C                             l1856 00E6  
                           l1848 00C8                             l1792 0B2A  
                           l1698 0CD0                             l1786 0FEE  
                           l1778 0FCA                             l1970 0588  
                           l1954 04DA                             l1946 0468  
                           l1962 0506                             l1938 0432  
                           l1890 02D6                             l1882 024C  
                           l1866 0184                             l1858 010A  
                           l1794 0B3E                             l1980 064C  
                           l1972 0598                             l1964 0538  
                           l1956 04EE                             l1948 047A  
                           l1892 02EA                             l1884 0276  
                           l1876 01CC                             l1796 0B5C  
                           l1990 0692                             l1982 064E  
                           l1974 05CA                             l1966 0572  
                           l1958 04F6                             l1894 02FC  
                           l1878 0244                             l1798 0B6C  
                           l1992 06C4                             l1984 0650  
                           l1976 0620                             l1968 057A  
                           l1896 030E                             l1888 027E  
                           l1994 0712                             l1978 0628  
                           l1986 0674                             l1898 0310  
                           l1996 071A                             l1988 0682  
                           l1998 073E                             STR_1 7FCF  
                           STR_2 7FEF                             STR_3 7EC4  
                           STR_4 7EC4                             STR_5 7FBF  
                           STR_6 7EC4                             STR_7 7EC4  
                           STR_8 7EC4                             STR_9 7FDF  
                           u1000 10BE                             u1001 10BA  
                           u1010 1120                             u1011 111C  
                           u1020 1082                             u1100 0FAC  
                           u1021 107E                             u1101 0FA8  
                           u1030 10A2                             u1110 0FC2  
                           u1031 109E                             u1111 0FBE  
                           u1040 1568                             u1120 0FE6  
                           u1200 01A0                             u1041 1564  
                           u1121 0FE2                             u1201 019C  
                           u1050 14AC                             u1210 01C8  
                           u1130 0B5C                             u1051 14A8  
                           u1211 01C4                             u1131 0B58  
                           u1060 0DA2                             u1300 03A4  
                           u1220 02EA                             u1140 0B6C  
                           u1301 03A0                             u1221 02E6  
                           u1141 0B68                             u1070 0F5A  
                           u1310 03B6                             u1230 02FC  
                           u1150 0BB2                             u1071 0F56  
                           u1311 03B2                             u1231 02F8  
                           u1151 0BAE                             u1080 0F74  
                           u1400 0620                             u1320 0456  
                           u1240 030E                             u1160 0BC2  
                           u1081 0F70                             u1065 0D90  
                           u1401 061C                             u1321 0452  
                           u1241 030A                             u1161 0BBE  
                           u1090 0F8E                             u1410 0682  
                           u1330 0468                             u1250 0322  
                           u1170 0BEC                             u1091 0F8A  
                           u1411 067E                             u1331 0464  
                           u1251 031E                             u1171 0BE8  
                           u1500 085A                             u1420 0692  
                           u1340 047A                             u1260 033A  
                           u1180 010A                             u1501 0856  
                           u1421 068E                             u1341 0476  
                           u1261 0336                             u1181 0106  
                           u1510 087C                             u1430 06C4  
                           u1350 0538                             u1270 0352  
                           u1190 017C                             u1511 0878  
                           u1431 06C0                             u1351 0534  
                           u1271 034E                             u1191 0178  
                           u1520 08F6                             u1440 0712  
                           u1360 0572                             u1280 036A  
                           u1521 08F2                             u1441 070E  
                           u1361 056E                             u1281 0366  
                           u1530 13CC                             u1450 0774  
                           u1370 0588                             u1290 0392  
                           u1531 13C8                             u1451 0770  
                           u1371 0584                             u1291 038E  
                           u1540 1438                             u1460 0784  
                           u1380 0598                             u1541 1434  
                           u1461 0780                             u1381 0594  
                           u1470 07DE                             u1390 05CA  
                           u1550 115E                             u1471 07DA  
                           u1391 05C6                             u1607 04CC  
                           u1551 115A                             u1480 07EE  
                           u1560 117E                             u1617 0EC2  
                           u1481 07EA                             u1561 117A  
                           u1490 0848                             u1570 11A0  
                           u1707 15BA                             u1627 1592  
                           u1491 0844                             u1571 119C  
                           u1580 11C2                             u1717 15D4  
                           u1637 0DE6                             u1581 11BE  
                           u1647 0E1E                             u1657 0E74  
                           u1667 1296                             u1677 12D2  
                           u1597 0408                             u1687 1208  
                           u1697 124E                             i2l41 160C  
                           _main 12EA                             _menu 0ADA  
                           _rand 0CD6                             _seed 0052  
                           _time 149A                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 005D                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
          function_set@num_lines 0007                     print_mat@lcd 0010  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                function_set@lcd 0004                            ?_main 0001  
                          ?_menu 001A                            ?_rand 0019  
                          STR_10 7F8F                            STR_11 7FAF  
                          STR_20 7EC3                            STR_12 7F9F  
                          STR_13 7F4B                            STR_21 7EF6  
                          STR_22 7EC3                            STR_14 7F7E  
                          STR_30 7ED4                            STR_23 7EC3  
                          STR_15 7F5C                            STR_31 7F18  
                          STR_24 7EC3                            STR_16 7F6D  
                          STR_32 7EE5                            STR_17 7F29  
                          STR_25 7F07                            STR_26 7EC3  
                          STR_18 7EC3                            STR_27 7EC3  
                          STR_19 7EC3                            STR_28 7EC3  
                __end_of___awmod 0FF8                            STR_29 7F3A  
                          ?_time 0001                            _T0CON 000FD5  
                          i2l112 093E                            i2l121 09AE  
                          i2l130 0A1A                            i2l114 0932  
                          i2l123 09A2                            i2l132 0A0E  
                          i2l141 0A7E                            i2l118 0962  
                          i2l127 09D2                            i2l136 0A3E  
                          i2l145 0AAE                            i2l139 0A8A  
                          i2l148 0AD8                            _TMR0L 000FD6  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0001                  __end_of_lcd_cmd 15AA  
                __end_of_goto_XY 0F48                            _jogar 0012  
                          _srand 1610                            _pulso 15AA  
                          tablat 000FF5                            time@t 0001  
                          ttemp5 005E                            ttemp6 0061  
                          ttemp7 0065                            status 000FD8  
                          wtemp8 005E                  __initialization 14E6  
                   __end_of_main 1362                     __end_of_menu 0BEE  
                   __end_of_rand 0DB2                     __end_of_time 14E6  
                         ??_main 0049                           ??_menu 001C  
                         ??_rand 001B                           ??_time 0009  
                  __activetblptr 000002                           _ADCON1 000FC1  
                    jogar@nivel2 0035                      jogar@nivel3 0037  
                         ?_jogar 0029                           ?_srand 0009  
                         ?_pulso 0001                           i2l1400 0914  
                         i2l1402 0922                           i2l1420 0984  
                         i2l1412 0970                           i2l1404 0936  
                         i2l1422 0992                           i2l1406 094C  
                         i2l1414 0972                           i2l1440 0A12  
                         i2l1432 09E0                           i2l1424 09A6  
                         i2l1416 0974                           i2l1408 095A  
                         i2l1442 0A28                           i2l1450 0A4E  
                         i2l1426 09BC                           i2l1434 09E2  
                         i2l1418 0976                           i2l1460 0A82  
                         i2l1452 0A50                           i2l1444 0A36  
                         i2l1436 09F0                           i2l1428 09CA  
                         i2l1462 0A98                           i2l1470 0ABE  
                         i2l1454 0A52                           i2l1438 09FE  
                         i2l1550 15F4                           i2l1472 0AC0  
                         i2l1464 0AA6                           i2l1456 0A60  
                         i2l1448 0A4C                           i2l1552 15F8  
                         i2l1474 0AC2                           i2l1458 0A6E  
                         i2l1554 15FA                           i2l1546 15E2  
                         i2l1476 0ACC                           i2l1468 0ABC  
                         i2l1556 1608                           i2l1548 15F0  
                         i2l1478 0AD6                           i2l1398 0904  
               __end_of_creditos 143A                 __end_of_finaliza 149A  
                    goto_XY@temp 000F                           ___omul 10A4  
                      ??___awmod 0027             __size_of_gerenciador 0096  
                         _cont_d 004E                           _cont_l 004D  
                         _cont_r 004C                           _cont_u 004F  
                         _botoes 0051                           clear_0 150A  
                         clear_1 1516                  ___awmod@divisor 0025  
                ___awmod@counter 0027                    ?_function_set 0004  
                      ??_lcd_cmd 0007                           _strcpy 152A  
                         jogar@i 0045                           jogar@j 0043  
                      ??_goto_XY 000C                     __pdataCOMRAM 005A  
                   __mediumconst 7EC2                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         srand@s 0009         display_onoff_control@lcd 0004  
                     __accesstop 0080          __end_of__initialization 151C  
                  ___rparam_used 000001          ??_display_onoff_control 0009  
                 __pcstackCOMRAM 0001                    __end_of_jogar 0904  
                 gerenciador@lcd 0047                    __end_of_srand 163E  
                  __end_of_pulso 15E0                   ??_function_set 0009  
                        ??_jogar 002B                          ??_srand 000B  
           __size_of_int_handler 1608                          ??_pulso 0003  
                     __pbssBANK0 0080                          ?___omul 0001  
            ___omul@multiplicand 0009                          ?_strcpy 0001  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 0007  
                        i2u70_40 09A2                          i2u62_40 0914  
                        i2u70_41 099E                          i2u62_41 0910  
                        i2u71_40 09BC                          i2u63_40 0922  
                        i2u71_41 09B8                          i2u63_41 091E  
                        i2u80_40 0A60                          i2u72_40 09CA  
                        i2u64_40 0932                          i2u80_41 0A5C  
                        i2u72_41 09C6                          i2u64_41 092E  
                        i2u81_40 0A6E                          i2u73_40 09E0  
                        i2u65_40 094C                          i2u81_41 0A6A  
                        i2u73_41 09DC                          i2u65_41 0948  
                        i2u82_40 0A7E                          i2u74_40 09F0  
                        i2u66_40 095A                          i2u82_41 0A7A  
                        i2u74_41 09EC                          i2u66_41 0956  
                        i2u83_40 0A98                          i2u75_40 09FE  
                        i2u67_40 0970                          i2u83_41 0A94  
                        i2u75_41 09FA                          i2u67_41 096C  
                        i2u84_40 0AA6                          i2u76_40 0A0E  
                        i2u68_40 0984                          i2u92_40 15F0  
                        i2u84_41 0AA2                          i2u76_41 0A0A  
                        i2u68_41 0980                          i2u92_41 15EC  
                        i2u85_40 0ABC                          i2u77_40 0A28  
                        i2u69_40 0992                          i2u93_40 1608  
                        i2u85_41 0AB8                          i2u77_41 0A24  
                        i2u69_41 098E                          i2u93_41 1604  
                        i2u78_40 0A36                          i2u78_41 0A32  
                        i2u86_45 0ACA                          i2u86_47 0ACC  
                        i2u79_40 0A4C                          i2u79_41 0A48  
                        i2u87_45 0AD4                          i2u87_47 0AD6  
                      ?_creditos 001A                       _le_entrada 0904  
                      ?_finaliza 001A                       _botoes_ant 0050  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 0007                          __Lparam 0000  
                        ___awmod 0F48                  __size_of___omul 009E  
                        __pcinit 14E6                          __ramtop 0600  
                  instrucoes@lcd 001A                          __ptext0 12EA  
                        __ptext1 1142                          __ptext2 0ADA  
                        __ptext3 0012                          __ptext4 149A  
                        __ptext5 1610                          __ptext6 0CD6  
                        __ptext7 10A4                          __ptext8 0F48  
                        __ptext9 1362                          _lcd_cmd 156A  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 0E8C                 ___awmod@dividend 0023  
                     ??_creditos 001C                       ??_finaliza 001C  
                 __pintcode_body 15E0             end_of_initialization 151C  
                     _instrucoes 1362                          menu@lcd 001A  
                 ___omul@product 0011             __end_of_function_set 0E8C  
                  __Lmediumconst 7EC2                          int_func 15E0  
              __end_of_print_mat 10A4                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
                        strcpy@d 0007                          strcpy@s 0005  
                      _PORTBbits 000F81               jogar@qtd_asteroide 003D  
                     lcd_cmd@lcd 0004                      ?_le_entrada 0001  
                  ??_gerenciador 0049   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 1266                   __end_of___omul 1142  
                     _write_char 0BEE                    __pidataCOMRAM 163E  
                 __end_of_strcpy 156A              start_initialization 14E6  
                    ?_instrucoes 001A                       jogar@bateu 0041  
              ___omul@multiplier 0001                       jogar@pont1 003C  
                     jogar@pont2 003B                       jogar@pont3 003A  
                     jogar@pont4 0039                   _entry_mode_set 1266  
                     goto_XY@lcd 0008                         ??___omul 0011  
            __size_of_le_entrada 01D6              __end_of_gerenciador 11D8  
                       ??_strcpy 0005                      __pbssCOMRAM 0049  
                  ??_int_handler 0001            __size_of_function_set 00DA  
              __size_of_creditos 006C                __size_of_finaliza 0060  
         __end_of_entry_mode_set 12EA                        __pintcode 0008  
                  __pmediumconst 7EC2                         ?___awmod 0023  
                    ?_write_char 0001              __size_of_instrucoes 006C  
                       ?_lcd_cmd 0004                     _function_set 0DB2  
                       ?_goto_XY 0008                   __size_of_jogar 08F2  
                 __size_of_srand 002E                   __size_of_pulso 0036  
            __end_of_int_handler 1610                  ?_entry_mode_set 0004  
                    _gerenciador 1142     entry_mode_set@move_direction 0006  
                      _print_mat 0FF8  display_onoff_control@display_on 0006  
     display_onoff_control@blink 0008                      write_char@c 0003  
                     print_mat@i 0018                       print_mat@j 0016  
                   ??_le_entrada 0001              __size_of_write_char 00E8  
                       __Hrparam 0000                         __Lrparam 0000  
              entry_mode_set@lcd 0004                 __size_of___awmod 00B0  
                     ?_print_mat 0010               __end_of_le_entrada 0ADA  
                jogar@velocidade 003F                 __size_of_lcd_cmd 0040  
               __size_of_goto_XY 00BC                      _int_handler 0008  
                       __ptext10 143A                         __ptext11 13CE  
                       __ptext20 15AA                         __ptext12 152A  
                       __ptext13 0FF8                         __ptext22 0904  
                       __ptext14 0BEE                         __ptext15 0E8C  
                       __ptext16 156A                         __ptext17 0DB2  
                       __ptext18 1266                         __ptext19 11D8  
                       _creditos 13CE                         _finaliza 143A  
                       _contador 0049                     ??_instrucoes 001C  
                     strcpy@dest 0001             jogar@linha_aleatoria 0033  
                       _mat_disp 0080                    __size_of_main 0078  
                  __size_of_menu 0114                    __size_of_rand 00DC  
                  __size_of_time 004C                         int$flags 005D  
                       lcd_cmd@a 0006            _display_onoff_control 11D8  
             __end_of_instrucoes 13CE                       _INTCONbits 000FF2  
                       jogar@lcd 0029                         goto_XY@a 000E  
                       goto_XY@x 000A                         goto_XY@y 000B  
                       goto_XY@z 000D                         intlevel2 0000  
                      strcpy@src 0003          function_set@data_lenght 0006  
                    ??_print_mat 0012                     ??_write_char 0004  
                       pulso@lcd 0001                 ??_entry_mode_set 0008  
          function_set@char_font 0008               __end_of_write_char 0CD6  
                   ?_gerenciador 0047  
