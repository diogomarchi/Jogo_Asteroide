

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 16 18:50:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.10
    35                           ; Generated 31/07/2019 GMT
    36                           ; 
    37                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  000DE4                     __pidataCOMRAM:
    71                           	opt callstack 0
    72                           
    73                           ;initializer for _lcd
    74  000DE4  83                 	db	131
    75  000DE5  0F                 	db	15
    76                           
    77                           ;initializer for _x
    78  000DE6  01                 	db	1
    79  0000                     _PORTBbits	set	3969
    80  0000                     _T0CONbits	set	4053
    81  0000                     _T0CON	set	4053
    82  0000                     _TRISD	set	3989
    83  0000                     _PORTB	set	3969
    84  0000                     _TRISB	set	3987
    85  0000                     _ADCON1	set	4033
    86  0000                     _TMR0L	set	4054
    87  0000                     _INTCONbits	set	4082
    88  0000                     _PORTD	set	3971
    89                           
    90                           	psect	mediumconst
    91  007EF4                     __pmediumconst:
    92                           	opt callstack 0
    93  007EF4  00                 	db	0
    94  007EF5                     STR_10:
    95  007EF5  20                 	db	32
    96  007EF6  20                 	db	32
    97  007EF7  20                 	db	32
    98  007EF8  20                 	db	32
    99  007EF9  20                 	db	32
   100  007EFA  20                 	db	32
   101  007EFB  20                 	db	32
   102  007EFC  20                 	db	32
   103  007EFD  20                 	db	32
   104  007EFE  20                 	db	32
   105  007EFF  20                 	db	32
   106  007F00  20                 	db	32
   107  007F01  20                 	db	32
   108  007F02  20                 	db	32
   109  007F03  20                 	db	32
   110  007F04  20                 	db	32
   111  007F05  00                 	db	0
   112  007F06                     STR_15:
   113  007F06  50                 	db	80	;'P'
   114  007F07  41                 	db	65	;'A'
   115  007F08  52                 	db	82	;'R'
   116  007F09  41                 	db	65	;'A'
   117  007F0A  20                 	db	32
   118  007F0B  53                 	db	83	;'S'
   119  007F0C  41                 	db	65	;'A'
   120  007F0D  49                 	db	73	;'I'
   121  007F0E  52                 	db	82	;'R'
   122  007F0F  20                 	db	32
   123  007F10  20                 	db	32
   124  007F11  20                 	db	32
   125  007F12  20                 	db	32
   126  007F13  20                 	db	32
   127  007F14  20                 	db	32
   128  007F15  20                 	db	32
   129  007F16  00                 	db	0
   130  007F17                     STR_14:
   131  007F17  41                 	db	65	;'A'
   132  007F18  50                 	db	80	;'P'
   133  007F19  45                 	db	69	;'E'
   134  007F1A  52                 	db	82	;'R'
   135  007F1B  54                 	db	84	;'T'
   136  007F1C  45                 	db	69	;'E'
   137  007F1D  20                 	db	32
   138  007F1E  45                 	db	69	;'E'
   139  007F1F  53                 	db	83	;'S'
   140  007F20  43                 	db	67	;'C'
   141  007F21  20                 	db	32
   142  007F22  20                 	db	32
   143  007F23  20                 	db	32
   144  007F24  20                 	db	32
   145  007F25  20                 	db	32
   146  007F26  20                 	db	32
   147  007F27  00                 	db	0
   148  007F28                     STR_9:
   149  007F28  20                 	db	32
   150  007F29  20                 	db	32
   151  007F2A  20                 	db	32
   152  007F2B  20                 	db	32
   153  007F2C  20                 	db	32
   154  007F2D  20                 	db	32
   155  007F2E  20                 	db	32
   156  007F2F  53                 	db	83	;'S'
   157  007F30  43                 	db	67	;'C'
   158  007F31  4F                 	db	79	;'O'
   159  007F32  52                 	db	82	;'R'
   160  007F33  45                 	db	69	;'E'
   161  007F34  3A                 	db	58	;':'
   162  007F35  20                 	db	32
   163  007F36  20                 	db	32
   164  007F37  20                 	db	32
   165  007F38  00                 	db	0
   166  007F39                     STR_13:
   167  007F39  21                 	db	33
   168  007F3A  21                 	db	33
   169  007F3B  21                 	db	33
   170  007F3C  56                 	db	86	;'V'
   171  007F3D  4F                 	db	79	;'O'
   172  007F3E  43                 	db	67	;'C'
   173  007F3F  45                 	db	69	;'E'
   174  007F40  20                 	db	32
   175  007F41  42                 	db	66	;'B'
   176  007F42  41                 	db	65	;'A'
   177  007F43  54                 	db	84	;'T'
   178  007F44  45                 	db	69	;'E'
   179  007F45  55                 	db	85	;'U'
   180  007F46  21                 	db	33
   181  007F47  21                 	db	33
   182  007F48  21                 	db	33
   183  007F49  00                 	db	0
   184  007F4A                     STR_21:
   185  007F4A  31                 	db	49	;'1'
   186  007F4B  2E                 	db	46
   187  007F4C  4A                 	db	74	;'J'
   188  007F4D  4F                 	db	79	;'O'
   189  007F4E  47                 	db	71	;'G'
   190  007F4F  41                 	db	65	;'A'
   191  007F50  52                 	db	82	;'R'
   192  007F51  2E                 	db	46
   193  007F52  2E                 	db	46
   194  007F53  2E                 	db	46
   195  007F54  2E                 	db	46
   196  007F55  2E                 	db	46
   197  007F56  2E                 	db	46
   198  007F57  2E                 	db	46
   199  007F58  2E                 	db	46
   200  007F59  2E                 	db	46
   201  007F5A  00                 	db	0
   202  007F5B                     STR_23:
   203  007F5B  33                 	db	51	;'3'
   204  007F5C  2E                 	db	46
   205  007F5D  43                 	db	67	;'C'
   206  007F5E  52                 	db	82	;'R'
   207  007F5F  45                 	db	69	;'E'
   208  007F60  44                 	db	68	;'D'
   209  007F61  49                 	db	73	;'I'
   210  007F62  54                 	db	84	;'T'
   211  007F63  4F                 	db	79	;'O'
   212  007F64  53                 	db	83	;'S'
   213  007F65  2E                 	db	46
   214  007F66  2E                 	db	46
   215  007F67  2E                 	db	46
   216  007F68  2E                 	db	46
   217  007F69  2E                 	db	46
   218  007F6A  2E                 	db	46
   219  007F6B  00                 	db	0
   220  007F6C                     STR_24:
   221  007F6C  34                 	db	52	;'4'
   222  007F6D  2E                 	db	46
   223  007F6E  46                 	db	70	;'F'
   224  007F6F  49                 	db	73	;'I'
   225  007F70  4E                 	db	78	;'N'
   226  007F71  41                 	db	65	;'A'
   227  007F72  4C                 	db	76	;'L'
   228  007F73  49                 	db	73	;'I'
   229  007F74  5A                 	db	90	;'Z'
   230  007F75  41                 	db	65	;'A'
   231  007F76  52                 	db	82	;'R'
   232  007F77  2E                 	db	46
   233  007F78  2E                 	db	46
   234  007F79  2E                 	db	46
   235  007F7A  2E                 	db	46
   236  007F7B  2E                 	db	46
   237  007F7C  00                 	db	0
   238  007F7D                     STR_22:
   239  007F7D  32                 	db	50	;'2'
   240  007F7E  2E                 	db	46
   241  007F7F  49                 	db	73	;'I'
   242  007F80  4E                 	db	78	;'N'
   243  007F81  53                 	db	83	;'S'
   244  007F82  54                 	db	84	;'T'
   245  007F83  52                 	db	82	;'R'
   246  007F84  55                 	db	85	;'U'
   247  007F85  43                 	db	67	;'C'
   248  007F86  4F                 	db	79	;'O'
   249  007F87  45                 	db	69	;'E'
   250  007F88  53                 	db	83	;'S'
   251  007F89  2E                 	db	46
   252  007F8A  2E                 	db	46
   253  007F8B  2E                 	db	46
   254  007F8C  2E                 	db	46
   255  007F8D  00                 	db	0
   256  007F8E                     STR_18:
   257  007F8E  4E                 	db	78	;'N'
   258  007F8F  41                 	db	65	;'A'
   259  007F90  56                 	db	86	;'V'
   260  007F91  45                 	db	69	;'E'
   261  007F92  20                 	db	32
   262  007F93  20                 	db	32
   263  007F94  20                 	db	32
   264  007F95  20                 	db	32
   265  007F96  20                 	db	32
   266  007F97  20                 	db	32
   267  007F98  20                 	db	32
   268  007F99  20                 	db	32
   269  007F9A  20                 	db	32
   270  007F9B  20                 	db	32
   271  007F9C  20                 	db	32
   272  007F9D  00                 	db	0
   273  007F9E                     STR_20:
   274  007F9E  4D                 	db	77	;'M'
   275  007F9F  45                 	db	69	;'E'
   276  007FA0  4E                 	db	78	;'N'
   277  007FA1  55                 	db	85	;'U'
   278  007FA2  20                 	db	32
   279  007FA3  20                 	db	32
   280  007FA4  20                 	db	32
   281  007FA5  20                 	db	32
   282  007FA6  20                 	db	32
   283  007FA7  20                 	db	32
   284  007FA8  20                 	db	32
   285  007FA9  20                 	db	32
   286  007FAA  20                 	db	32
   287  007FAB  20                 	db	32
   288  007FAC  20                 	db	32
   289  007FAD  00                 	db	0
   290  007FAE                     STR_19:
   291  007FAE  32                 	db	50	;'2'
   292  007FAF  2E                 	db	46
   293  007FB0  45                 	db	69	;'E'
   294  007FB1  53                 	db	83	;'S'
   295  007FB2  43                 	db	67	;'C'
   296  007FB3  41                 	db	65	;'A'
   297  007FB4  50                 	db	80	;'P'
   298  007FB5  45                 	db	69	;'E'
   299  007FB6  20                 	db	32
   300  007FB7  56                 	db	86	;'V'
   301  007FB8  4F                 	db	79	;'O'
   302  007FB9  4C                 	db	76	;'L'
   303  007FBA  54                 	db	84	;'T'
   304  007FBB  41                 	db	65	;'A'
   305  007FBC  20                 	db	32
   306  007FBD  00                 	db	0
   307  007FBE                     STR_5:
   308  007FBE  48                 	db	72	;'H'
   309  007FBF  49                 	db	73	;'I'
   310  007FC0  42                 	db	66	;'B'
   311  007FC1  45                 	db	69	;'E'
   312  007FC2  52                 	db	82	;'R'
   313  007FC3  4E                 	db	78	;'N'
   314  007FC4  41                 	db	65	;'A'
   315  007FC5  4E                 	db	78	;'N'
   316  007FC6  44                 	db	68	;'D'
   317  007FC7  4F                 	db	79	;'O'
   318  007FC8  2E                 	db	46
   319  007FC9  2E                 	db	46
   320  007FCA  2E                 	db	46
   321  007FCB  2E                 	db	46
   322  007FCC  2E                 	db	46
   323  007FCD  00                 	db	0
   324  007FCE                     STR_1:
   325  007FCE  31                 	db	49	;'1'
   326  007FCF  2E                 	db	46
   327  007FD0  44                 	db	68	;'D'
   328  007FD1  49                 	db	73	;'I'
   329  007FD2  4F                 	db	79	;'O'
   330  007FD3  47                 	db	71	;'G'
   331  007FD4  4F                 	db	79	;'O'
   332  007FD5  20                 	db	32
   333  007FD6  4D                 	db	77	;'M'
   334  007FD7  41                 	db	65	;'A'
   335  007FD8  52                 	db	82	;'R'
   336  007FD9  43                 	db	67	;'C'
   337  007FDA  48                 	db	72	;'H'
   338  007FDB  49                 	db	73	;'I'
   339  007FDC  2E                 	db	46
   340  007FDD  00                 	db	0
   341  007FDE                     STR_17:
   342  007FDE  31                 	db	49	;'1'
   343  007FDF  2E                 	db	46
   344  007FE0  53                 	db	83	;'S'
   345  007FE1  45                 	db	69	;'E'
   346  007FE2  54                 	db	84	;'T'
   347  007FE3  41                 	db	65	;'A'
   348  007FE4  53                 	db	83	;'S'
   349  007FE5  20                 	db	32
   350  007FE6  4D                 	db	77	;'M'
   351  007FE7  4F                 	db	79	;'O'
   352  007FE8  56                 	db	86	;'V'
   353  007FE9  45                 	db	69	;'E'
   354  007FEA  4D                 	db	77	;'M'
   355  007FEB  20                 	db	32
   356  007FEC  41                 	db	65	;'A'
   357  007FED  00                 	db	0
   358  007FEE                     STR_2:
   359  007FEE  32                 	db	50	;'2'
   360  007FEF  2E                 	db	46
   361  007FF0  47                 	db	71	;'G'
   362  007FF1  45                 	db	69	;'E'
   363  007FF2  4F                 	db	79	;'O'
   364  007FF3  52                 	db	82	;'R'
   365  007FF4  47                 	db	71	;'G'
   366  007FF5  45                 	db	69	;'E'
   367  007FF6  20                 	db	32
   368  007FF7  4E                 	db	78	;'N'
   369  007FF8  41                 	db	65	;'A'
   370  007FF9  52                 	db	82	;'R'
   371  007FFA  44                 	db	68	;'D'
   372  007FFB  45                 	db	69	;'E'
   373  007FFC  53                 	db	83	;'S'
   374  007FFD  00                 	db	0
   375  0000                     
   376                           ; #config settings
   377  007FFE  00                 	db	0	; dummy byte at the end
   378  0000                     
   379                           	psect	cinit
   380  000D58                     __pcinit:
   381                           	opt callstack 0
   382  000D58                     start_initialization:
   383                           	opt callstack 0
   384  000D58                     __initialization:
   385                           	opt callstack 0
   386                           
   387                           ; Initialize objects allocated to COMRAM (3 bytes)
   388                           ; load TBLPTR registers with __pidataCOMRAM
   389  000D58  0EE4               	movlw	low __pidataCOMRAM
   390  000D5A  6EF6               	movwf	tblptrl,c
   391  000D5C  0E0D               	movlw	high __pidataCOMRAM
   392  000D5E  6EF7               	movwf	tblptrh,c
   393  000D60  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   394  000D62  6EF8               	movwf	tblptru,c
   395  000D64  0009               	tblrd		*+	;fetch initializer
   396  000D66  CFF5 F06D          	movff	tablat,__pdataCOMRAM
   397  000D6A  0009               	tblrd		*+	;fetch initializer
   398  000D6C  CFF5 F06E          	movff	tablat,__pdataCOMRAM+1
   399  000D70  0009               	tblrd		*+	;fetch initializer
   400  000D72  CFF5 F06F          	movff	tablat,__pdataCOMRAM+2
   401                           
   402                           ; Clear objects allocated to COMRAM (72 bytes)
   403  000D76  EE00  F001         	lfsr	0,__pbssCOMRAM
   404  000D7A  0E48               	movlw	72
   405  000D7C                     clear_0:
   406  000D7C  6AEE               	clrf	postinc0,c
   407  000D7E  06E8               	decf	wreg,f,c
   408  000D80  E1FD               	bnz	clear_0
   409  000D82                     end_of_initialization:
   410                           	opt callstack 0
   411  000D82                     __end_of__initialization:
   412                           	opt callstack 0
   413  000D82  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   414  000D84  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   415  000D86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   416  000D88  6EF8               	movwf	tblptru,c
   417  000D8A  0100               	movlb	0
   418  000D8C  EF96  F005         	goto	_main	;jump to C main() function
   419                           
   420                           	psect	bssCOMRAM
   421  000001                     __pbssCOMRAM:
   422                           	opt callstack 0
   423  000001                     _y:
   424                           	opt callstack 0
   425  000001                     	ds	1
   426  000002                     _op:
   427                           	opt callstack 0
   428  000002                     	ds	1
   429  000003                     _cont_r:
   430                           	opt callstack 0
   431  000003                     	ds	1
   432  000004                     _cont_l:
   433                           	opt callstack 0
   434  000004                     	ds	1
   435  000005                     _cont_d:
   436                           	opt callstack 0
   437  000005                     	ds	1
   438  000006                     _cont_u:
   439                           	opt callstack 0
   440  000006                     	ds	1
   441  000007                     _botoes_ant:
   442                           	opt callstack 0
   443  000007                     	ds	1
   444  000008                     _botoes:
   445                           	opt callstack 0
   446  000008                     	ds	1
   447  000009                     _mat_disp:
   448                           	opt callstack 0
   449  000009                     	ds	64
   450                           
   451                           	psect	dataCOMRAM
   452  00006D                     __pdataCOMRAM:
   453                           	opt callstack 0
   454  00006D                     _lcd:
   455                           	opt callstack 0
   456  00006D                     	ds	2
   457  00006F                     _x:
   458                           	opt callstack 0
   459  00006F                     	ds	1
   460                           
   461                           	psect	cstackCOMRAM
   462  000049                     __pcstackCOMRAM:
   463                           	opt callstack 0
   464  000049                     pulso@lcd:
   465                           	opt callstack 0
   466  000049                     write_char@lcd:
   467                           	opt callstack 0
   468  000049                     strcpy@dest:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x0
   472  000049                     	ds	2
   473  00004B                     ??_pulso:
   474  00004B                     write_char@c:
   475                           	opt callstack 0
   476  00004B                     strcpy@src:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x2
   480  00004B                     	ds	1
   481  00004C                     ??_write_char:
   482  00004C                     function_set@lcd:
   483                           	opt callstack 0
   484  00004C                     display_onoff_control@lcd:
   485                           	opt callstack 0
   486  00004C                     lcd_cmd@lcd:
   487                           	opt callstack 0
   488  00004C                     entry_mode_set@lcd:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x3
   492  00004C                     	ds	1
   493  00004D                     strcpy@s:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x4
   497  00004D                     	ds	1
   498  00004E                     function_set@data_lenght:
   499                           	opt callstack 0
   500  00004E                     display_onoff_control@display_on:
   501                           	opt callstack 0
   502  00004E                     lcd_cmd@a:
   503                           	opt callstack 0
   504  00004E                     entry_mode_set@move_direction:
   505                           	opt callstack 0
   506                           
   507                           ; 1 bytes @ 0x5
   508  00004E                     	ds	1
   509  00004F                     ??_lcd_cmd:
   510  00004F                     function_set@num_lines:
   511                           	opt callstack 0
   512  00004F                     display_onoff_control@cursor_on:
   513                           	opt callstack 0
   514  00004F                     entry_mode_set@display_shift:
   515                           	opt callstack 0
   516  00004F                     strcpy@d:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x6
   520  00004F                     	ds	1
   521  000050                     ??_entry_mode_set:
   522  000050                     function_set@char_font:
   523                           	opt callstack 0
   524  000050                     display_onoff_control@blink:
   525                           	opt callstack 0
   526  000050                     goto_XY@lcd:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x7
   530  000050                     	ds	1
   531  000051                     ??_function_set:
   532  000051                     ??_display_onoff_control:
   533                           
   534                           ; 1 bytes @ 0x8
   535  000051                     	ds	1
   536  000052                     goto_XY@x:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x9
   540  000052                     	ds	1
   541  000053                     goto_XY@y:
   542                           	opt callstack 0
   543                           
   544                           ; 1 bytes @ 0xA
   545  000053                     	ds	1
   546  000054                     ??_goto_XY:
   547                           
   548                           ; 1 bytes @ 0xB
   549  000054                     	ds	1
   550  000055                     goto_XY@z:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0xC
   554  000055                     	ds	1
   555  000056                     goto_XY@a:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0xD
   559  000056                     	ds	1
   560  000057                     goto_XY@temp:
   561                           	opt callstack 0
   562                           
   563                           ; 1 bytes @ 0xE
   564  000057                     	ds	1
   565  000058                     print_mat@lcd:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0xF
   569  000058                     	ds	2
   570  00005A                     ??_print_mat:
   571                           
   572                           ; 1 bytes @ 0x11
   573  00005A                     	ds	4
   574  00005E                     print_mat@j:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x15
   578  00005E                     	ds	2
   579  000060                     print_mat@i:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x17
   583  000060                     	ds	2
   584  000062                     creditos@lcd:
   585                           	opt callstack 0
   586  000062                     finaliza@lcd:
   587                           	opt callstack 0
   588  000062                     jogar@lcd:
   589                           	opt callstack 0
   590  000062                     instrucoes@lcd:
   591                           	opt callstack 0
   592  000062                     menu@lcd:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x19
   596  000062                     	ds	2
   597  000064                     ??_jogar:
   598  000064                     
   599                           ; 1 bytes @ 0x1B
   600  000064                     	ds	5
   601  000069                     jogar@bateu:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x20
   605  000069                     	ds	2
   606  00006B                     gerenciador@lcd:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0x22
   610  00006B                     	ds	2
   611  00006D                     
   612                           ; 1 bytes @ 0x24
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 32 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   632 ;;      Params:         0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels required when called:    8
   638 ;; This function calls:
   639 ;;		_display_onoff_control
   640 ;;		_entry_mode_set
   641 ;;		_function_set
   642 ;;		_gerenciador
   643 ;; This function is called by:
   644 ;;		Startup code after reset
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text0
   649  000B2C                     __ptext0:
   650                           	opt callstack 0
   651  000B2C                     _main:
   652                           	opt callstack 23
   653  000B2C                     
   654                           ;main.c: 34:     ADCON1 = 0x0F;
   655  000B2C  0E0F               	movlw	15
   656  000B2E  6EC1               	movwf	193,c	;volatile
   657                           
   658                           ;main.c: 39:     TRISB = 0x0F;
   659  000B30  0E0F               	movlw	15
   660  000B32  6E93               	movwf	147,c	;volatile
   661                           
   662                           ;main.c: 42:     PORTB = 0x00;
   663  000B34  0E00               	movlw	0
   664  000B36  6E81               	movwf	129,c	;volatile
   665                           
   666                           ;main.c: 45:     TRISD = 0x00;
   667  000B38  0E00               	movlw	0
   668  000B3A  6E95               	movwf	149,c	;volatile
   669                           
   670                           ;main.c: 48:     T0CON = 0x47;
   671  000B3C  0E47               	movlw	71
   672  000B3E  6ED5               	movwf	213,c	;volatile
   673                           
   674                           ;main.c: 51:     TMR0L = 0x63;
   675  000B40  0E63               	movlw	99
   676  000B42  6ED6               	movwf	214,c	;volatile
   677  000B44                     
   678                           ;main.c: 54:     INTCONbits.TMR0IF = 0;
   679  000B44  94F2               	bcf	242,2,c	;volatile
   680  000B46                     
   681                           ;main.c: 55:     INTCONbits.TMR0IE = 1;
   682  000B46  8AF2               	bsf	242,5,c	;volatile
   683  000B48                     
   684                           ;main.c: 56:     INTCONbits.GIE = 1;
   685  000B48  8EF2               	bsf	242,7,c	;volatile
   686  000B4A                     
   687                           ;main.c: 58:     function_set(lcd, 0, 1, 0);
   688  000B4A  0E83               	movlw	131
   689  000B4C  6E4C               	movwf	function_set@lcd^0,c
   690  000B4E  0E0F               	movlw	15
   691  000B50  6E4D               	movwf	(function_set@lcd+1)^0,c
   692  000B52  0E00               	movlw	0
   693  000B54  6E4E               	movwf	function_set@data_lenght^0,c
   694  000B56  0E01               	movlw	1
   695  000B58  6E4F               	movwf	function_set@num_lines^0,c
   696  000B5A  0E00               	movlw	0
   697  000B5C  6E50               	movwf	function_set@char_font^0,c
   698  000B5E  ECA1  F003         	call	_function_set	;wreg free
   699  000B62                     
   700                           ;main.c: 59:     display_onoff_control(lcd, 1, 1, 0);
   701  000B62  0E83               	movlw	131
   702  000B64  6E4C               	movwf	display_onoff_control@lcd^0,c
   703  000B66  0E0F               	movlw	15
   704  000B68  6E4D               	movwf	(display_onoff_control@lcd+1)^0,c
   705  000B6A  0E01               	movlw	1
   706  000B6C  6E4E               	movwf	display_onoff_control@display_on^0,c
   707  000B6E  0E01               	movlw	1
   708  000B70  6E4F               	movwf	display_onoff_control@cursor_on^0,c
   709  000B72  0E00               	movlw	0
   710  000B74  6E50               	movwf	display_onoff_control@blink^0,c
   711  000B76  EC0D  F005         	call	_display_onoff_control	;wreg free
   712  000B7A                     
   713                           ;main.c: 60:     entry_mode_set(lcd, 1,0);
   714  000B7A  0E83               	movlw	131
   715  000B7C  6E4C               	movwf	entry_mode_set@lcd^0,c
   716  000B7E  0E0F               	movlw	15
   717  000B80  6E4D               	movwf	(entry_mode_set@lcd+1)^0,c
   718  000B82  0E01               	movlw	1
   719  000B84  6E4E               	movwf	entry_mode_set@move_direction^0,c
   720  000B86  0E00               	movlw	0
   721  000B88  6E4F               	movwf	entry_mode_set@display_shift^0,c
   722  000B8A  EC54  F005         	call	_entry_mode_set	;wreg free
   723  000B8E                     
   724                           ;main.c: 62:     T0CONbits.TMR0ON = 1;
   725  000B8E  8ED5               	bsf	213,7,c	;volatile
   726  000B90                     
   727                           ;main.c: 64:     gerenciador(lcd);
   728  000B90  0E83               	movlw	131
   729  000B92  6E6B               	movwf	gerenciador@lcd^0,c
   730  000B94  0E0F               	movlw	15
   731  000B96  6E6C               	movwf	(gerenciador@lcd+1)^0,c
   732  000B98  ECC2  F004         	call	_gerenciador	;wreg free
   733  000B9C  EF07  F000         	goto	start
   734  000BA0                     __end_of_main:
   735                           	opt callstack 0
   736                           
   737 ;; *************** function _gerenciador *****************
   738 ;; Defined at:
   739 ;;		line 15 in file "task_manager.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  lcd             2   34[COMRAM] PTR struct .
   742 ;;		 -> PORTD(1), 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   754 ;;      Params:         2       0       0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0
   757 ;;      Totals:         2       0       0       0       0       0       0
   758 ;;Total ram usage:        2 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    7
   761 ;; This function calls:
   762 ;;		_creditos
   763 ;;		_finaliza
   764 ;;		_instrucoes
   765 ;;		_jogar
   766 ;;		_menu
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text1
   773  000984                     __ptext1:
   774                           	opt callstack 0
   775  000984                     _gerenciador:
   776                           	opt callstack 23
   777  000984                     l174:
   778  000984                     
   779                           ;task_manager.c: 17:         menu(lcd);
   780  000984  C06B  F062         	movff	gerenciador@lcd,menu@lcd
   781  000988  C06C  F063         	movff	gerenciador@lcd+1,menu@lcd+1
   782  00098C  ECA3  F002         	call	_menu	;wreg free
   783  000990                     
   784                           ;task_manager.c: 18:         if(op == 0) jogar(lcd);
   785  000990  5002               	movf	_op^0,w,c
   786  000992  A4D8               	btfss	status,2,c
   787  000994  EFCE  F004         	goto	u901
   788  000998  EFD0  F004         	goto	u900
   789  00099C                     u901:
   790  00099C  EFD8  F004         	goto	l1666
   791  0009A0                     u900:
   792  0009A0  C06B  F062         	movff	gerenciador@lcd,jogar@lcd
   793  0009A4  C06C  F063         	movff	gerenciador@lcd+1,jogar@lcd+1
   794  0009A8  EC09  F000         	call	_jogar	;wreg free
   795  0009AC  EFC2  F004         	goto	l174
   796  0009B0                     l1666:
   797  0009B0  0402               	decf	_op^0,w,c
   798  0009B2  A4D8               	btfss	status,2,c
   799  0009B4  EFDE  F004         	goto	u911
   800  0009B8  EFE0  F004         	goto	u910
   801  0009BC                     u911:
   802  0009BC  EFE8  F004         	goto	l1670
   803  0009C0                     u910:
   804  0009C0  C06B  F062         	movff	gerenciador@lcd,instrucoes@lcd
   805  0009C4  C06C  F063         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   806  0009C8  ECD0  F005         	call	_instrucoes	;wreg free
   807  0009CC  EFC2  F004         	goto	l174
   808  0009D0                     l1670:
   809  0009D0  0E02               	movlw	2
   810  0009D2  1802               	xorwf	_op^0,w,c
   811  0009D4  A4D8               	btfss	status,2,c
   812  0009D6  EFEF  F004         	goto	u921
   813  0009DA  EFF1  F004         	goto	u920
   814  0009DE                     u921:
   815  0009DE  EFF9  F004         	goto	l1674
   816  0009E2                     u920:
   817  0009E2  C06B  F062         	movff	gerenciador@lcd,creditos@lcd
   818  0009E6  C06C  F063         	movff	gerenciador@lcd+1,creditos@lcd+1
   819  0009EA  EC06  F006         	call	_creditos	;wreg free
   820  0009EE  EFC2  F004         	goto	l174
   821  0009F2                     l1674:
   822  0009F2  0E03               	movlw	3
   823  0009F4  1802               	xorwf	_op^0,w,c
   824  0009F6  A4D8               	btfss	status,2,c
   825  0009F8  EF00  F005         	goto	u931
   826  0009FC  EF02  F005         	goto	u930
   827  000A00                     u931:
   828  000A00  EF0A  F005         	goto	l176
   829  000A04                     u930:
   830  000A04  C06B  F062         	movff	gerenciador@lcd,finaliza@lcd
   831  000A08  C06C  F063         	movff	gerenciador@lcd+1,finaliza@lcd+1
   832  000A0C  EC3C  F006         	call	_finaliza	;wreg free
   833  000A10  EFC2  F004         	goto	l174
   834  000A14                     l176:
   835  000A14  EFC2  F004         	goto	l174
   836  000A18  0012               	return		;funcret
   837  000A1A                     __end_of_gerenciador:
   838                           	opt callstack 0
   839                           
   840 ;; *************** function _menu *****************
   841 ;; Defined at:
   842 ;;		line 114 in file "task_manager.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  lcd             2   25[COMRAM] PTR struct .
   845 ;;		 -> PORTD(1), 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      unsigned char 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   857 ;;      Params:         2       0       0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0
   860 ;;      Totals:         2       0       0       0       0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    6
   864 ;; This function calls:
   865 ;;		_print_mat
   866 ;;		_strcpy
   867 ;; This function is called by:
   868 ;;		_gerenciador
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text2
   873  000546                     __ptext2:
   874                           	opt callstack 0
   875  000546                     _menu:
   876                           	opt callstack 23
   877  000546                     
   878                           ;task_manager.c: 115:     strcpy(mat_disp[0], "1.JOGAR.........");
   879  000546  0E09               	movlw	low _mat_disp
   880  000548  6E49               	movwf	strcpy@dest^0,c
   881  00054A  0E00               	movlw	high _mat_disp
   882  00054C  6E4A               	movwf	(strcpy@dest+1)^0,c
   883  00054E  0E4A               	movlw	low STR_21
   884  000550  6E4B               	movwf	strcpy@src^0,c
   885  000552  0E7F               	movlw	high STR_21
   886  000554  6E4C               	movwf	(strcpy@src+1)^0,c
   887  000556  EC6C  F006         	call	_strcpy	;wreg free
   888                           
   889                           ;task_manager.c: 116:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   890  00055A  0E19               	movlw	low (_mat_disp+16)
   891  00055C  6E49               	movwf	strcpy@dest^0,c
   892  00055E  0E00               	movlw	high (_mat_disp+16)
   893  000560  6E4A               	movwf	(strcpy@dest+1)^0,c
   894  000562  0E7D               	movlw	low STR_22
   895  000564  6E4B               	movwf	strcpy@src^0,c
   896  000566  0E7F               	movlw	high STR_22
   897  000568  6E4C               	movwf	(strcpy@src+1)^0,c
   898  00056A  EC6C  F006         	call	_strcpy	;wreg free
   899                           
   900                           ;task_manager.c: 117:     strcpy(mat_disp[2], "3.CREDITOS......");
   901  00056E  0E29               	movlw	low (_mat_disp+32)
   902  000570  6E49               	movwf	strcpy@dest^0,c
   903  000572  0E00               	movlw	high (_mat_disp+32)
   904  000574  6E4A               	movwf	(strcpy@dest+1)^0,c
   905  000576  0E5B               	movlw	low STR_23
   906  000578  6E4B               	movwf	strcpy@src^0,c
   907  00057A  0E7F               	movlw	high STR_23
   908  00057C  6E4C               	movwf	(strcpy@src+1)^0,c
   909  00057E  EC6C  F006         	call	_strcpy	;wreg free
   910                           
   911                           ;task_manager.c: 118:     strcpy(mat_disp[3], "4.FINALIZAR.....");
   912  000582  0E39               	movlw	low (_mat_disp+48)
   913  000584  6E49               	movwf	strcpy@dest^0,c
   914  000586  0E00               	movlw	high (_mat_disp+48)
   915  000588  6E4A               	movwf	(strcpy@dest+1)^0,c
   916  00058A  0E6C               	movlw	low STR_24
   917  00058C  6E4B               	movwf	strcpy@src^0,c
   918  00058E  0E7F               	movlw	high STR_24
   919  000590  6E4C               	movwf	(strcpy@src+1)^0,c
   920  000592  EC6C  F006         	call	_strcpy	;wreg free
   921  000596                     l1482:
   922                           
   923                           ;task_manager.c: 121:     mat_disp[op][15] = '<';
   924  000596  5002               	movf	_op^0,w,c
   925  000598  0D10               	mullw	16
   926  00059A  0E18               	movlw	low (_mat_disp+15)
   927  00059C  24F3               	addwf	243,w,c
   928  00059E  6ED9               	movwf	fsr2l,c
   929  0005A0  0E00               	movlw	high (_mat_disp+15)
   930  0005A2  20F4               	addwfc	prodh,w,c
   931  0005A4  6EDA               	movwf	fsr2h,c
   932  0005A6  0E3C               	movlw	60
   933  0005A8  6EDF               	movwf	indf2,c
   934  0005AA                     
   935                           ;task_manager.c: 122:     print_mat(lcd);
   936  0005AA  C062  F058         	movff	menu@lcd,print_mat@lcd
   937  0005AE  C063  F059         	movff	menu@lcd+1,print_mat@lcd+1
   938  0005B2  EC6C  F004         	call	_print_mat	;wreg free
   939                           
   940                           ;task_manager.c: 124:     while(!botoes.Enter){
   941  0005B6  EF25  F003         	goto	l1512
   942  0005BA                     l220:
   943                           
   944                           ;task_manager.c: 125:         if((botoes.U) && (op > 0)){
   945  0005BA  A008               	btfss	_botoes^0,0,c
   946  0005BC  EFE2  F002         	goto	u691
   947  0005C0  EFE4  F002         	goto	u690
   948  0005C4                     u691:
   949  0005C4  EF08  F003         	goto	l1498
   950  0005C8                     u690:
   951  0005C8  5002               	movf	_op^0,w,c
   952  0005CA  B4D8               	btfsc	status,2,c
   953  0005CC  EFEA  F002         	goto	u701
   954  0005D0  EFEC  F002         	goto	u700
   955  0005D4                     u701:
   956  0005D4  EF08  F003         	goto	l1498
   957  0005D8                     u700:
   958  0005D8                     
   959                           ;task_manager.c: 126:             mat_disp[op][15] = '.';
   960  0005D8  5002               	movf	_op^0,w,c
   961  0005DA  0D10               	mullw	16
   962  0005DC  0E18               	movlw	low (_mat_disp+15)
   963  0005DE  24F3               	addwf	243,w,c
   964  0005E0  6ED9               	movwf	fsr2l,c
   965  0005E2  0E00               	movlw	high (_mat_disp+15)
   966  0005E4  20F4               	addwfc	prodh,w,c
   967  0005E6  6EDA               	movwf	fsr2h,c
   968  0005E8  0E2E               	movlw	46
   969  0005EA  6EDF               	movwf	indf2,c
   970  0005EC                     
   971                           ;task_manager.c: 127:             op--;
   972  0005EC  0602               	decf	_op^0,f,c
   973  0005EE                     
   974                           ;task_manager.c: 128:             botoes.U = 0;
   975  0005EE  9008               	bcf	_botoes^0,0,c
   976  0005F0                     
   977                           ;task_manager.c: 129:             mat_disp[op][15] = '<';
   978  0005F0  5002               	movf	_op^0,w,c
   979  0005F2  0D10               	mullw	16
   980  0005F4  0E18               	movlw	low (_mat_disp+15)
   981  0005F6  24F3               	addwf	243,w,c
   982  0005F8  6ED9               	movwf	fsr2l,c
   983  0005FA  0E00               	movlw	high (_mat_disp+15)
   984  0005FC  20F4               	addwfc	prodh,w,c
   985  0005FE  6EDA               	movwf	fsr2h,c
   986  000600  0E3C               	movlw	60
   987  000602  6EDF               	movwf	indf2,c
   988  000604                     
   989                           ;task_manager.c: 130:             print_mat(lcd);
   990  000604  C062  F058         	movff	menu@lcd,print_mat@lcd
   991  000608  C063  F059         	movff	menu@lcd+1,print_mat@lcd+1
   992  00060C  EC6C  F004         	call	_print_mat	;wreg free
   993  000610                     l1498:
   994                           
   995                           ;task_manager.c: 132:         if((botoes.D) && (op < 3)){
   996  000610  A208               	btfss	_botoes^0,1,c
   997  000612  EF0D  F003         	goto	u711
   998  000616  EF0F  F003         	goto	u710
   999  00061A                     u711:
  1000  00061A  EF25  F003         	goto	l1512
  1001  00061E                     u710:
  1002  00061E  0E03               	movlw	3
  1003  000620  6002               	cpfslt	_op^0,c
  1004  000622  EF15  F003         	goto	u721
  1005  000626  EF17  F003         	goto	u720
  1006  00062A                     u721:
  1007  00062A  EF25  F003         	goto	l1512
  1008  00062E                     u720:
  1009  00062E                     
  1010                           ;task_manager.c: 133:             mat_disp[op][15] = '.';
  1011  00062E  5002               	movf	_op^0,w,c
  1012  000630  0D10               	mullw	16
  1013  000632  0E18               	movlw	low (_mat_disp+15)
  1014  000634  24F3               	addwf	243,w,c
  1015  000636  6ED9               	movwf	fsr2l,c
  1016  000638  0E00               	movlw	high (_mat_disp+15)
  1017  00063A  20F4               	addwfc	prodh,w,c
  1018  00063C  6EDA               	movwf	fsr2h,c
  1019  00063E  0E2E               	movlw	46
  1020  000640  6EDF               	movwf	indf2,c
  1021  000642                     
  1022                           ;task_manager.c: 134:             op++;
  1023  000642  2A02               	incf	_op^0,f,c
  1024  000644                     
  1025                           ;task_manager.c: 135:             botoes.D = 0;
  1026  000644  9208               	bcf	_botoes^0,1,c
  1027  000646  EFCB  F002         	goto	l1482
  1028  00064A                     l1512:
  1029                           
  1030                           ;task_manager.c: 124:     while(!botoes.Enter){
  1031  00064A  A808               	btfss	_botoes^0,4,c
  1032  00064C  EF2A  F003         	goto	u731
  1033  000650  EF2C  F003         	goto	u730
  1034  000654                     u731:
  1035  000654  EFDD  F002         	goto	l220
  1036  000658                     u730:
  1037  000658  0012               	return		;funcret
  1038  00065A                     __end_of_menu:
  1039                           	opt callstack 0
  1040                           
  1041 ;; *************** function _jogar *****************
  1042 ;; Defined at:
  1043 ;;		line 46 in file "task_manager.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  lcd             2   25[COMRAM] PTR struct .
  1046 ;;		 -> PORTD(1), 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  bateu           2   32[COMRAM] int 
  1049 ;;  score           2    0        int 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1059 ;;      Params:         2       0       0       0       0       0       0
  1060 ;;      Locals:         4       0       0       0       0       0       0
  1061 ;;      Temps:          3       0       0       0       0       0       0
  1062 ;;      Totals:         9       0       0       0       0       0       0
  1063 ;;Total ram usage:        9 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    6
  1066 ;; This function calls:
  1067 ;;		_print_mat
  1068 ;;		_strcpy
  1069 ;; This function is called by:
  1070 ;;		_gerenciador
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text3
  1075  000012                     __ptext3:
  1076                           	opt callstack 0
  1077  000012                     _jogar:
  1078                           	opt callstack 23
  1079  000012                     
  1080                           ;task_manager.c: 48:     int bateu = 0;
  1081  000012  0E00               	movlw	0
  1082  000014  6E6A               	movwf	(jogar@bateu+1)^0,c
  1083  000016  0E00               	movlw	0
  1084  000018  6E69               	movwf	jogar@bateu^0,c
  1085  00001A                     
  1086                           ;task_manager.c: 51:     strcpy(mat_disp[0], "       SCORE:   ");
  1087  00001A  0E09               	movlw	low _mat_disp
  1088  00001C  6E49               	movwf	strcpy@dest^0,c
  1089  00001E  0E00               	movlw	high _mat_disp
  1090  000020  6E4A               	movwf	(strcpy@dest+1)^0,c
  1091  000022  0E28               	movlw	low STR_9
  1092  000024  6E4B               	movwf	strcpy@src^0,c
  1093  000026  0E7F               	movlw	high STR_9
  1094  000028  6E4C               	movwf	(strcpy@src+1)^0,c
  1095  00002A  EC6C  F006         	call	_strcpy	;wreg free
  1096  00002E                     
  1097                           ;task_manager.c: 52:     strcpy(mat_disp[1], "                ");
  1098  00002E  0E19               	movlw	low (_mat_disp+16)
  1099  000030  6E49               	movwf	strcpy@dest^0,c
  1100  000032  0E00               	movlw	high (_mat_disp+16)
  1101  000034  6E4A               	movwf	(strcpy@dest+1)^0,c
  1102  000036  0EF5               	movlw	low STR_10
  1103  000038  6E4B               	movwf	strcpy@src^0,c
  1104  00003A  0E7E               	movlw	high STR_10
  1105  00003C  6E4C               	movwf	(strcpy@src+1)^0,c
  1106  00003E  EC6C  F006         	call	_strcpy	;wreg free
  1107  000042                     
  1108                           ;task_manager.c: 53:     strcpy(mat_disp[2], "                ");
  1109  000042  0E29               	movlw	low (_mat_disp+32)
  1110  000044  6E49               	movwf	strcpy@dest^0,c
  1111  000046  0E00               	movlw	high (_mat_disp+32)
  1112  000048  6E4A               	movwf	(strcpy@dest+1)^0,c
  1113  00004A  0EF5               	movlw	low STR_10
  1114  00004C  6E4B               	movwf	strcpy@src^0,c
  1115  00004E  0E7E               	movlw	high STR_10
  1116  000050  6E4C               	movwf	(strcpy@src+1)^0,c
  1117  000052  EC6C  F006         	call	_strcpy	;wreg free
  1118  000056                     
  1119                           ;task_manager.c: 54:     strcpy(mat_disp[3], "                ");
  1120  000056  0E39               	movlw	low (_mat_disp+48)
  1121  000058  6E49               	movwf	strcpy@dest^0,c
  1122  00005A  0E00               	movlw	high (_mat_disp+48)
  1123  00005C  6E4A               	movwf	(strcpy@dest+1)^0,c
  1124  00005E  0EF5               	movlw	low STR_10
  1125  000060  6E4B               	movwf	strcpy@src^0,c
  1126  000062  0E7E               	movlw	high STR_10
  1127  000064  6E4C               	movwf	(strcpy@src+1)^0,c
  1128  000066  EC6C  F006         	call	_strcpy	;wreg free
  1129                           
  1130                           ;task_manager.c: 55:     mat_disp[1][0] = '>';
  1131  00006A  0E3E               	movlw	62
  1132  00006C  6E19               	movwf	(_mat_disp+16)^0,c
  1133                           
  1134                           ;task_manager.c: 56:     mat_disp[1][10] = '*';
  1135  00006E  0E2A               	movlw	42
  1136  000070  6E23               	movwf	(_mat_disp+26)^0,c
  1137                           
  1138                           ;task_manager.c: 57:     mat_disp[2][5] = '*';
  1139  000072  0E2A               	movlw	42
  1140  000074  6E2E               	movwf	(_mat_disp+37)^0,c
  1141  000076                     l1524:
  1142                           
  1143                           ;task_manager.c: 58:     print_mat(lcd);
  1144  000076  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1145  00007A  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1146  00007E  EC6C  F004         	call	_print_mat	;wreg free
  1147                           
  1148                           ;task_manager.c: 60:     while(!botoes.Esc && bateu == 0){
  1149  000082  EF65  F001         	goto	l1588
  1150  000086                     l1526:
  1151                           
  1152                           ;task_manager.c: 61:         if(mat_disp[x][y] == '>' && mat_disp[x][y+1] == '*')
  1153  000086  506F               	movf	_x^0,w,c
  1154  000088  0D10               	mullw	16
  1155  00008A  0E09               	movlw	low _mat_disp
  1156  00008C  6E64               	movwf	??_jogar^0,c
  1157  00008E  0E00               	movlw	high _mat_disp
  1158  000090  6E65               	movwf	(??_jogar+1)^0,c
  1159  000092  50F3               	movf	243,w,c
  1160  000094  2664               	addwf	??_jogar^0,f,c
  1161  000096  50F4               	movf	244,w,c
  1162  000098  2265               	addwfc	(??_jogar+1)^0,f,c
  1163  00009A  5001               	movf	_y^0,w,c
  1164  00009C  2464               	addwf	??_jogar^0,w,c
  1165  00009E  6ED9               	movwf	fsr2l,c
  1166  0000A0  0E00               	movlw	0
  1167  0000A2  2065               	addwfc	(??_jogar+1)^0,w,c
  1168  0000A4  6EDA               	movwf	fsr2h,c
  1169  0000A6  0E3E               	movlw	62
  1170  0000A8  18DE               	xorwf	postinc2,w,c
  1171  0000AA  A4D8               	btfss	status,2,c
  1172  0000AC  EF5A  F000         	goto	u741
  1173  0000B0  EF5C  F000         	goto	u740
  1174  0000B4                     u741:
  1175  0000B4  EF7D  F000         	goto	l1532
  1176  0000B8                     u740:
  1177  0000B8  506F               	movf	_x^0,w,c
  1178  0000BA  0D10               	mullw	16
  1179  0000BC  0E09               	movlw	low _mat_disp
  1180  0000BE  6E64               	movwf	??_jogar^0,c
  1181  0000C0  0E00               	movlw	high _mat_disp
  1182  0000C2  6E65               	movwf	(??_jogar+1)^0,c
  1183  0000C4  0E01               	movlw	1
  1184  0000C6  2664               	addwf	??_jogar^0,f,c
  1185  0000C8  0E00               	movlw	0
  1186  0000CA  2265               	addwfc	(??_jogar+1)^0,f,c
  1187  0000CC  50F3               	movf	243,w,c
  1188  0000CE  2664               	addwf	??_jogar^0,f,c
  1189  0000D0  50F4               	movf	244,w,c
  1190  0000D2  2265               	addwfc	(??_jogar+1)^0,f,c
  1191  0000D4  5001               	movf	_y^0,w,c
  1192  0000D6  2464               	addwf	??_jogar^0,w,c
  1193  0000D8  6ED9               	movwf	fsr2l,c
  1194  0000DA  0E00               	movlw	0
  1195  0000DC  2065               	addwfc	(??_jogar+1)^0,w,c
  1196  0000DE  6EDA               	movwf	fsr2h,c
  1197  0000E0  0E2A               	movlw	42
  1198  0000E2  18DE               	xorwf	postinc2,w,c
  1199  0000E4  A4D8               	btfss	status,2,c
  1200  0000E6  EF77  F000         	goto	u751
  1201  0000EA  EF79  F000         	goto	u750
  1202  0000EE                     u751:
  1203  0000EE  EF7D  F000         	goto	l1532
  1204  0000F2                     u750:
  1205  0000F2                     
  1206                           ;task_manager.c: 62:             bateu = 1;
  1207  0000F2  0E00               	movlw	0
  1208  0000F4  6E6A               	movwf	(jogar@bateu+1)^0,c
  1209  0000F6  0E01               	movlw	1
  1210  0000F8  6E69               	movwf	jogar@bateu^0,c
  1211  0000FA                     l1532:
  1212                           
  1213                           ;task_manager.c: 63:         if((botoes.U) && (x > 1)){
  1214  0000FA  A008               	btfss	_botoes^0,0,c
  1215  0000FC  EF82  F000         	goto	u761
  1216  000100  EF84  F000         	goto	u760
  1217  000104                     u761:
  1218  000104  EFB8  F000         	goto	l1546
  1219  000108                     u760:
  1220  000108  0E01               	movlw	1
  1221  00010A  646F               	cpfsgt	_x^0,c
  1222  00010C  EF8A  F000         	goto	u771
  1223  000110  EF8C  F000         	goto	u770
  1224  000114                     u771:
  1225  000114  EFB8  F000         	goto	l1546
  1226  000118                     u770:
  1227  000118                     
  1228                           ;task_manager.c: 64:             mat_disp[x][y] = ' ';
  1229  000118  506F               	movf	_x^0,w,c
  1230  00011A  0D10               	mullw	16
  1231  00011C  0E09               	movlw	low _mat_disp
  1232  00011E  6E64               	movwf	??_jogar^0,c
  1233  000120  0E00               	movlw	high _mat_disp
  1234  000122  6E65               	movwf	(??_jogar+1)^0,c
  1235  000124  50F3               	movf	243,w,c
  1236  000126  2664               	addwf	??_jogar^0,f,c
  1237  000128  50F4               	movf	244,w,c
  1238  00012A  2265               	addwfc	(??_jogar+1)^0,f,c
  1239  00012C  5001               	movf	_y^0,w,c
  1240  00012E  2464               	addwf	??_jogar^0,w,c
  1241  000130  6ED9               	movwf	fsr2l,c
  1242  000132  0E00               	movlw	0
  1243  000134  2065               	addwfc	(??_jogar+1)^0,w,c
  1244  000136  6EDA               	movwf	fsr2h,c
  1245  000138  0E20               	movlw	32
  1246  00013A  6EDF               	movwf	indf2,c
  1247  00013C                     
  1248                           ;task_manager.c: 65:             x--;
  1249  00013C  066F               	decf	_x^0,f,c
  1250  00013E                     
  1251                           ;task_manager.c: 66:             botoes.U = 0;
  1252  00013E  9008               	bcf	_botoes^0,0,c
  1253  000140                     
  1254                           ;task_manager.c: 67:             mat_disp[x][y] = '>';
  1255  000140  506F               	movf	_x^0,w,c
  1256  000142  0D10               	mullw	16
  1257  000144  0E09               	movlw	low _mat_disp
  1258  000146  6E64               	movwf	??_jogar^0,c
  1259  000148  0E00               	movlw	high _mat_disp
  1260  00014A  6E65               	movwf	(??_jogar+1)^0,c
  1261  00014C  50F3               	movf	243,w,c
  1262  00014E  2664               	addwf	??_jogar^0,f,c
  1263  000150  50F4               	movf	244,w,c
  1264  000152  2265               	addwfc	(??_jogar+1)^0,f,c
  1265  000154  5001               	movf	_y^0,w,c
  1266  000156  2464               	addwf	??_jogar^0,w,c
  1267  000158  6ED9               	movwf	fsr2l,c
  1268  00015A  0E00               	movlw	0
  1269  00015C  2065               	addwfc	(??_jogar+1)^0,w,c
  1270  00015E  6EDA               	movwf	fsr2h,c
  1271  000160  0E3E               	movlw	62
  1272  000162  6EDF               	movwf	indf2,c
  1273  000164                     
  1274                           ;task_manager.c: 68:             print_mat(lcd);
  1275  000164  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1276  000168  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1277  00016C  EC6C  F004         	call	_print_mat	;wreg free
  1278  000170                     l1546:
  1279                           
  1280                           ;task_manager.c: 70:         if((botoes.D) && (x < 3)){
  1281  000170  A208               	btfss	_botoes^0,1,c
  1282  000172  EFBD  F000         	goto	u781
  1283  000176  EFBF  F000         	goto	u780
  1284  00017A                     u781:
  1285  00017A  EFF3  F000         	goto	l1560
  1286  00017E                     u780:
  1287  00017E  0E03               	movlw	3
  1288  000180  606F               	cpfslt	_x^0,c
  1289  000182  EFC5  F000         	goto	u791
  1290  000186  EFC7  F000         	goto	u790
  1291  00018A                     u791:
  1292  00018A  EFF3  F000         	goto	l1560
  1293  00018E                     u790:
  1294  00018E                     
  1295                           ;task_manager.c: 71:             mat_disp[x][y] = ' ';
  1296  00018E  506F               	movf	_x^0,w,c
  1297  000190  0D10               	mullw	16
  1298  000192  0E09               	movlw	low _mat_disp
  1299  000194  6E64               	movwf	??_jogar^0,c
  1300  000196  0E00               	movlw	high _mat_disp
  1301  000198  6E65               	movwf	(??_jogar+1)^0,c
  1302  00019A  50F3               	movf	243,w,c
  1303  00019C  2664               	addwf	??_jogar^0,f,c
  1304  00019E  50F4               	movf	244,w,c
  1305  0001A0  2265               	addwfc	(??_jogar+1)^0,f,c
  1306  0001A2  5001               	movf	_y^0,w,c
  1307  0001A4  2464               	addwf	??_jogar^0,w,c
  1308  0001A6  6ED9               	movwf	fsr2l,c
  1309  0001A8  0E00               	movlw	0
  1310  0001AA  2065               	addwfc	(??_jogar+1)^0,w,c
  1311  0001AC  6EDA               	movwf	fsr2h,c
  1312  0001AE  0E20               	movlw	32
  1313  0001B0  6EDF               	movwf	indf2,c
  1314  0001B2                     
  1315                           ;task_manager.c: 72:             x++;
  1316  0001B2  2A6F               	incf	_x^0,f,c
  1317  0001B4                     
  1318                           ;task_manager.c: 73:             botoes.D = 0;
  1319  0001B4  9208               	bcf	_botoes^0,1,c
  1320  0001B6                     
  1321                           ;task_manager.c: 74:             mat_disp[x][y] = '>';
  1322  0001B6  506F               	movf	_x^0,w,c
  1323  0001B8  0D10               	mullw	16
  1324  0001BA  0E09               	movlw	low _mat_disp
  1325  0001BC  6E64               	movwf	??_jogar^0,c
  1326  0001BE  0E00               	movlw	high _mat_disp
  1327  0001C0  6E65               	movwf	(??_jogar+1)^0,c
  1328  0001C2  50F3               	movf	243,w,c
  1329  0001C4  2664               	addwf	??_jogar^0,f,c
  1330  0001C6  50F4               	movf	244,w,c
  1331  0001C8  2265               	addwfc	(??_jogar+1)^0,f,c
  1332  0001CA  5001               	movf	_y^0,w,c
  1333  0001CC  2464               	addwf	??_jogar^0,w,c
  1334  0001CE  6ED9               	movwf	fsr2l,c
  1335  0001D0  0E00               	movlw	0
  1336  0001D2  2065               	addwfc	(??_jogar+1)^0,w,c
  1337  0001D4  6EDA               	movwf	fsr2h,c
  1338  0001D6  0E3E               	movlw	62
  1339  0001D8  6EDF               	movwf	indf2,c
  1340  0001DA                     
  1341                           ;task_manager.c: 75:             print_mat(lcd);
  1342  0001DA  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1343  0001DE  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1344  0001E2  EC6C  F004         	call	_print_mat	;wreg free
  1345  0001E6                     l1560:
  1346                           
  1347                           ;task_manager.c: 77:         if((botoes.R) && (y < 15)){
  1348  0001E6  A608               	btfss	_botoes^0,3,c
  1349  0001E8  EFF8  F000         	goto	u801
  1350  0001EC  EFFA  F000         	goto	u800
  1351  0001F0                     u801:
  1352  0001F0  EF2E  F001         	goto	l1574
  1353  0001F4                     u800:
  1354  0001F4  0E0F               	movlw	15
  1355  0001F6  6001               	cpfslt	_y^0,c
  1356  0001F8  EF00  F001         	goto	u811
  1357  0001FC  EF02  F001         	goto	u810
  1358  000200                     u811:
  1359  000200  EF2E  F001         	goto	l1574
  1360  000204                     u810:
  1361  000204                     
  1362                           ;task_manager.c: 78:             mat_disp[x][y] = ' ';
  1363  000204  506F               	movf	_x^0,w,c
  1364  000206  0D10               	mullw	16
  1365  000208  0E09               	movlw	low _mat_disp
  1366  00020A  6E64               	movwf	??_jogar^0,c
  1367  00020C  0E00               	movlw	high _mat_disp
  1368  00020E  6E65               	movwf	(??_jogar+1)^0,c
  1369  000210  50F3               	movf	243,w,c
  1370  000212  2664               	addwf	??_jogar^0,f,c
  1371  000214  50F4               	movf	244,w,c
  1372  000216  2265               	addwfc	(??_jogar+1)^0,f,c
  1373  000218  5001               	movf	_y^0,w,c
  1374  00021A  2464               	addwf	??_jogar^0,w,c
  1375  00021C  6ED9               	movwf	fsr2l,c
  1376  00021E  0E00               	movlw	0
  1377  000220  2065               	addwfc	(??_jogar+1)^0,w,c
  1378  000222  6EDA               	movwf	fsr2h,c
  1379  000224  0E20               	movlw	32
  1380  000226  6EDF               	movwf	indf2,c
  1381  000228                     
  1382                           ;task_manager.c: 79:             y++;
  1383  000228  2A01               	incf	_y^0,f,c
  1384  00022A                     
  1385                           ;task_manager.c: 80:             botoes.R = 0;
  1386  00022A  9608               	bcf	_botoes^0,3,c
  1387  00022C                     
  1388                           ;task_manager.c: 81:             mat_disp[x][y] = '>';
  1389  00022C  506F               	movf	_x^0,w,c
  1390  00022E  0D10               	mullw	16
  1391  000230  0E09               	movlw	low _mat_disp
  1392  000232  6E64               	movwf	??_jogar^0,c
  1393  000234  0E00               	movlw	high _mat_disp
  1394  000236  6E65               	movwf	(??_jogar+1)^0,c
  1395  000238  50F3               	movf	243,w,c
  1396  00023A  2664               	addwf	??_jogar^0,f,c
  1397  00023C  50F4               	movf	244,w,c
  1398  00023E  2265               	addwfc	(??_jogar+1)^0,f,c
  1399  000240  5001               	movf	_y^0,w,c
  1400  000242  2464               	addwf	??_jogar^0,w,c
  1401  000244  6ED9               	movwf	fsr2l,c
  1402  000246  0E00               	movlw	0
  1403  000248  2065               	addwfc	(??_jogar+1)^0,w,c
  1404  00024A  6EDA               	movwf	fsr2h,c
  1405  00024C  0E3E               	movlw	62
  1406  00024E  6EDF               	movwf	indf2,c
  1407  000250                     
  1408                           ;task_manager.c: 82:             print_mat(lcd);
  1409  000250  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1410  000254  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1411  000258  EC6C  F004         	call	_print_mat	;wreg free
  1412  00025C                     l1574:
  1413                           
  1414                           ;task_manager.c: 84:         if((botoes.L) && (y > 0)){
  1415  00025C  A408               	btfss	_botoes^0,2,c
  1416  00025E  EF33  F001         	goto	u821
  1417  000262  EF35  F001         	goto	u820
  1418  000266                     u821:
  1419  000266  EF65  F001         	goto	l1588
  1420  00026A                     u820:
  1421  00026A  5001               	movf	_y^0,w,c
  1422  00026C  B4D8               	btfsc	status,2,c
  1423  00026E  EF3B  F001         	goto	u831
  1424  000272  EF3D  F001         	goto	u830
  1425  000276                     u831:
  1426  000276  EF65  F001         	goto	l1588
  1427  00027A                     u830:
  1428  00027A                     
  1429                           ;task_manager.c: 85:             mat_disp[x][y] = ' ';
  1430  00027A  506F               	movf	_x^0,w,c
  1431  00027C  0D10               	mullw	16
  1432  00027E  0E09               	movlw	low _mat_disp
  1433  000280  6E64               	movwf	??_jogar^0,c
  1434  000282  0E00               	movlw	high _mat_disp
  1435  000284  6E65               	movwf	(??_jogar+1)^0,c
  1436  000286  50F3               	movf	243,w,c
  1437  000288  2664               	addwf	??_jogar^0,f,c
  1438  00028A  50F4               	movf	244,w,c
  1439  00028C  2265               	addwfc	(??_jogar+1)^0,f,c
  1440  00028E  5001               	movf	_y^0,w,c
  1441  000290  2464               	addwf	??_jogar^0,w,c
  1442  000292  6ED9               	movwf	fsr2l,c
  1443  000294  0E00               	movlw	0
  1444  000296  2065               	addwfc	(??_jogar+1)^0,w,c
  1445  000298  6EDA               	movwf	fsr2h,c
  1446  00029A  0E20               	movlw	32
  1447  00029C  6EDF               	movwf	indf2,c
  1448  00029E                     
  1449                           ;task_manager.c: 86:             y--;
  1450  00029E  0601               	decf	_y^0,f,c
  1451  0002A0                     
  1452                           ;task_manager.c: 87:             botoes.L = 0;
  1453  0002A0  9408               	bcf	_botoes^0,2,c
  1454  0002A2                     
  1455                           ;task_manager.c: 88:             mat_disp[x][y] = '>';
  1456  0002A2  506F               	movf	_x^0,w,c
  1457  0002A4  0D10               	mullw	16
  1458  0002A6  0E09               	movlw	low _mat_disp
  1459  0002A8  6E64               	movwf	??_jogar^0,c
  1460  0002AA  0E00               	movlw	high _mat_disp
  1461  0002AC  6E65               	movwf	(??_jogar+1)^0,c
  1462  0002AE  50F3               	movf	243,w,c
  1463  0002B0  2664               	addwf	??_jogar^0,f,c
  1464  0002B2  50F4               	movf	244,w,c
  1465  0002B4  2265               	addwfc	(??_jogar+1)^0,f,c
  1466  0002B6  5001               	movf	_y^0,w,c
  1467  0002B8  2464               	addwf	??_jogar^0,w,c
  1468  0002BA  6ED9               	movwf	fsr2l,c
  1469  0002BC  0E00               	movlw	0
  1470  0002BE  2065               	addwfc	(??_jogar+1)^0,w,c
  1471  0002C0  6EDA               	movwf	fsr2h,c
  1472  0002C2  0E3E               	movlw	62
  1473  0002C4  6EDF               	movwf	indf2,c
  1474  0002C6  EF3B  F000         	goto	l1524
  1475  0002CA                     l1588:
  1476                           
  1477                           ;task_manager.c: 60:     while(!botoes.Esc && bateu == 0){
  1478  0002CA  BA08               	btfsc	_botoes^0,5,c
  1479  0002CC  EF6A  F001         	goto	u841
  1480  0002D0  EF6C  F001         	goto	u840
  1481  0002D4                     u841:
  1482  0002D4  EF75  F001         	goto	l1592
  1483  0002D8                     u840:
  1484  0002D8  5069               	movf	jogar@bateu^0,w,c
  1485  0002DA  106A               	iorwf	(jogar@bateu+1)^0,w,c
  1486  0002DC  B4D8               	btfsc	status,2,c
  1487  0002DE  EF73  F001         	goto	u851
  1488  0002E2  EF75  F001         	goto	u850
  1489  0002E6                     u851:
  1490  0002E6  EF43  F000         	goto	l1526
  1491  0002EA                     u850:
  1492  0002EA                     l1592:
  1493                           
  1494                           ;task_manager.c: 92:     if(bateu == 1){
  1495  0002EA  0469               	decf	jogar@bateu^0,w,c
  1496  0002EC  106A               	iorwf	(jogar@bateu+1)^0,w,c
  1497  0002EE  A4D8               	btfss	status,2,c
  1498  0002F0  EF7C  F001         	goto	u861
  1499  0002F4  EF7E  F001         	goto	u860
  1500  0002F8                     u861:
  1501  0002F8  EFB3  F001         	goto	l1598
  1502  0002FC                     u860:
  1503  0002FC                     
  1504                           ;task_manager.c: 93:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  1505  0002FC  0E09               	movlw	low _mat_disp
  1506  0002FE  6E49               	movwf	strcpy@dest^0,c
  1507  000300  0E00               	movlw	high _mat_disp
  1508  000302  6E4A               	movwf	(strcpy@dest+1)^0,c
  1509  000304  0E39               	movlw	low STR_13
  1510  000306  6E4B               	movwf	strcpy@src^0,c
  1511  000308  0E7F               	movlw	high STR_13
  1512  00030A  6E4C               	movwf	(strcpy@src+1)^0,c
  1513  00030C  EC6C  F006         	call	_strcpy	;wreg free
  1514                           
  1515                           ;task_manager.c: 94:             strcpy(mat_disp[1], "APERTE ESC      ");
  1516  000310  0E19               	movlw	low (_mat_disp+16)
  1517  000312  6E49               	movwf	strcpy@dest^0,c
  1518  000314  0E00               	movlw	high (_mat_disp+16)
  1519  000316  6E4A               	movwf	(strcpy@dest+1)^0,c
  1520  000318  0E17               	movlw	low STR_14
  1521  00031A  6E4B               	movwf	strcpy@src^0,c
  1522  00031C  0E7F               	movlw	high STR_14
  1523  00031E  6E4C               	movwf	(strcpy@src+1)^0,c
  1524  000320  EC6C  F006         	call	_strcpy	;wreg free
  1525                           
  1526                           ;task_manager.c: 95:             strcpy(mat_disp[2], "PARA SAIR       ");
  1527  000324  0E29               	movlw	low (_mat_disp+32)
  1528  000326  6E49               	movwf	strcpy@dest^0,c
  1529  000328  0E00               	movlw	high (_mat_disp+32)
  1530  00032A  6E4A               	movwf	(strcpy@dest+1)^0,c
  1531  00032C  0E06               	movlw	low STR_15
  1532  00032E  6E4B               	movwf	strcpy@src^0,c
  1533  000330  0E7F               	movlw	high STR_15
  1534  000332  6E4C               	movwf	(strcpy@src+1)^0,c
  1535  000334  EC6C  F006         	call	_strcpy	;wreg free
  1536                           
  1537                           ;task_manager.c: 96:             strcpy(mat_disp[3], "                ");
  1538  000338  0E39               	movlw	low (_mat_disp+48)
  1539  00033A  6E49               	movwf	strcpy@dest^0,c
  1540  00033C  0E00               	movlw	high (_mat_disp+48)
  1541  00033E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1542  000340  0EF5               	movlw	low STR_10
  1543  000342  6E4B               	movwf	strcpy@src^0,c
  1544  000344  0E7E               	movlw	high STR_10
  1545  000346  6E4C               	movwf	(strcpy@src+1)^0,c
  1546  000348  EC6C  F006         	call	_strcpy	;wreg free
  1547  00034C                     
  1548                           ;task_manager.c: 97:             print_mat(lcd);
  1549  00034C  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1550  000350  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1551  000354  EC6C  F004         	call	_print_mat	;wreg free
  1552  000358                     l207:
  1553  000358  AA08               	btfss	_botoes^0,5,c
  1554  00035A  EFB1  F001         	goto	u871
  1555  00035E  EFB3  F001         	goto	u870
  1556  000362                     u871:
  1557  000362  EFAC  F001         	goto	l207
  1558  000366                     u870:
  1559  000366                     l1598:
  1560                           
  1561                           ;task_manager.c: 101:     x = 1;
  1562  000366  0E01               	movlw	1
  1563  000368  6E6F               	movwf	_x^0,c
  1564                           
  1565                           ;task_manager.c: 102:     y = 0;
  1566  00036A  0E00               	movlw	0
  1567  00036C  6E01               	movwf	_y^0,c
  1568  00036E  0012               	return		;funcret
  1569  000370                     __end_of_jogar:
  1570                           	opt callstack 0
  1571                           
  1572 ;; *************** function _instrucoes *****************
  1573 ;; Defined at:
  1574 ;;		line 105 in file "task_manager.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  lcd             2   25[COMRAM] PTR struct .
  1577 ;;		 -> PORTD(1), 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1589 ;;      Params:         2       0       0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0
  1592 ;;      Totals:         2       0       0       0       0       0       0
  1593 ;;Total ram usage:        2 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    6
  1596 ;; This function calls:
  1597 ;;		_print_mat
  1598 ;;		_strcpy
  1599 ;; This function is called by:
  1600 ;;		_gerenciador
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text4
  1605  000BA0                     __ptext4:
  1606                           	opt callstack 0
  1607  000BA0                     _instrucoes:
  1608                           	opt callstack 23
  1609  000BA0                     
  1610                           ;task_manager.c: 106:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  1611  000BA0  0E09               	movlw	low _mat_disp
  1612  000BA2  6E49               	movwf	strcpy@dest^0,c
  1613  000BA4  0E00               	movlw	high _mat_disp
  1614  000BA6  6E4A               	movwf	(strcpy@dest+1)^0,c
  1615  000BA8  0EDE               	movlw	low STR_17
  1616  000BAA  6E4B               	movwf	strcpy@src^0,c
  1617  000BAC  0E7F               	movlw	high STR_17
  1618  000BAE  6E4C               	movwf	(strcpy@src+1)^0,c
  1619  000BB0  EC6C  F006         	call	_strcpy	;wreg free
  1620                           
  1621                           ;task_manager.c: 107:     strcpy(mat_disp[1], "NAVE           ");
  1622  000BB4  0E19               	movlw	low (_mat_disp+16)
  1623  000BB6  6E49               	movwf	strcpy@dest^0,c
  1624  000BB8  0E00               	movlw	high (_mat_disp+16)
  1625  000BBA  6E4A               	movwf	(strcpy@dest+1)^0,c
  1626  000BBC  0E8E               	movlw	low STR_18
  1627  000BBE  6E4B               	movwf	strcpy@src^0,c
  1628  000BC0  0E7F               	movlw	high STR_18
  1629  000BC2  6E4C               	movwf	(strcpy@src+1)^0,c
  1630  000BC4  EC6C  F006         	call	_strcpy	;wreg free
  1631                           
  1632                           ;task_manager.c: 108:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  1633  000BC8  0E29               	movlw	low (_mat_disp+32)
  1634  000BCA  6E49               	movwf	strcpy@dest^0,c
  1635  000BCC  0E00               	movlw	high (_mat_disp+32)
  1636  000BCE  6E4A               	movwf	(strcpy@dest+1)^0,c
  1637  000BD0  0EAE               	movlw	low STR_19
  1638  000BD2  6E4B               	movwf	strcpy@src^0,c
  1639  000BD4  0E7F               	movlw	high STR_19
  1640  000BD6  6E4C               	movwf	(strcpy@src+1)^0,c
  1641  000BD8  EC6C  F006         	call	_strcpy	;wreg free
  1642                           
  1643                           ;task_manager.c: 109:     strcpy(mat_disp[3], "MENU           ");
  1644  000BDC  0E39               	movlw	low (_mat_disp+48)
  1645  000BDE  6E49               	movwf	strcpy@dest^0,c
  1646  000BE0  0E00               	movlw	high (_mat_disp+48)
  1647  000BE2  6E4A               	movwf	(strcpy@dest+1)^0,c
  1648  000BE4  0E9E               	movlw	low STR_20
  1649  000BE6  6E4B               	movwf	strcpy@src^0,c
  1650  000BE8  0E7F               	movlw	high STR_20
  1651  000BEA  6E4C               	movwf	(strcpy@src+1)^0,c
  1652  000BEC  EC6C  F006         	call	_strcpy	;wreg free
  1653  000BF0                     
  1654                           ;task_manager.c: 110:     print_mat(lcd);
  1655  000BF0  C062  F058         	movff	instrucoes@lcd,print_mat@lcd
  1656  000BF4  C063  F059         	movff	instrucoes@lcd+1,print_mat@lcd+1
  1657  000BF8  EC6C  F004         	call	_print_mat	;wreg free
  1658  000BFC                     l213:
  1659  000BFC  AA08               	btfss	_botoes^0,5,c
  1660  000BFE  EF03  F006         	goto	u881
  1661  000C02  EF05  F006         	goto	u880
  1662  000C06                     u881:
  1663  000C06  EFFE  F005         	goto	l213
  1664  000C0A                     u880:
  1665  000C0A  0012               	return		;funcret
  1666  000C0C                     __end_of_instrucoes:
  1667                           	opt callstack 0
  1668                           
  1669 ;; *************** function _finaliza *****************
  1670 ;; Defined at:
  1671 ;;		line 37 in file "task_manager.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  lcd             2   25[COMRAM] PTR struct .
  1674 ;;		 -> PORTD(1), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1686 ;;      Params:         2       0       0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0
  1689 ;;      Totals:         2       0       0       0       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    6
  1693 ;; This function calls:
  1694 ;;		_print_mat
  1695 ;;		_strcpy
  1696 ;; This function is called by:
  1697 ;;		_gerenciador
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text5
  1702  000C78                     __ptext5:
  1703                           	opt callstack 0
  1704  000C78                     _finaliza:
  1705                           	opt callstack 23
  1706  000C78                     
  1707                           ;task_manager.c: 38:     strcpy(mat_disp[0], "HIBERNANDO.....");
  1708  000C78  0E09               	movlw	low _mat_disp
  1709  000C7A  6E49               	movwf	strcpy@dest^0,c
  1710  000C7C  0E00               	movlw	high _mat_disp
  1711  000C7E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1712  000C80  0EBE               	movlw	low STR_5
  1713  000C82  6E4B               	movwf	strcpy@src^0,c
  1714  000C84  0E7F               	movlw	high STR_5
  1715  000C86  6E4C               	movwf	(strcpy@src+1)^0,c
  1716  000C88  EC6C  F006         	call	_strcpy	;wreg free
  1717                           
  1718                           ;task_manager.c: 39:     strcpy(mat_disp[1], "               ");
  1719  000C8C  0E19               	movlw	low (_mat_disp+16)
  1720  000C8E  6E49               	movwf	strcpy@dest^0,c
  1721  000C90  0E00               	movlw	high (_mat_disp+16)
  1722  000C92  6E4A               	movwf	(strcpy@dest+1)^0,c
  1723  000C94  0EF6               	movlw	low (STR_10+1)
  1724  000C96  6E4B               	movwf	strcpy@src^0,c
  1725  000C98  0E7E               	movlw	high (STR_10+1)
  1726  000C9A  6E4C               	movwf	(strcpy@src+1)^0,c
  1727  000C9C  EC6C  F006         	call	_strcpy	;wreg free
  1728                           
  1729                           ;task_manager.c: 40:     strcpy(mat_disp[2], "               ");
  1730  000CA0  0E29               	movlw	low (_mat_disp+32)
  1731  000CA2  6E49               	movwf	strcpy@dest^0,c
  1732  000CA4  0E00               	movlw	high (_mat_disp+32)
  1733  000CA6  6E4A               	movwf	(strcpy@dest+1)^0,c
  1734  000CA8  0EF6               	movlw	low (STR_10+1)
  1735  000CAA  6E4B               	movwf	strcpy@src^0,c
  1736  000CAC  0E7E               	movlw	high (STR_10+1)
  1737  000CAE  6E4C               	movwf	(strcpy@src+1)^0,c
  1738  000CB0  EC6C  F006         	call	_strcpy	;wreg free
  1739                           
  1740                           ;task_manager.c: 41:     strcpy(mat_disp[3], "               ");
  1741  000CB4  0E39               	movlw	low (_mat_disp+48)
  1742  000CB6  6E49               	movwf	strcpy@dest^0,c
  1743  000CB8  0E00               	movlw	high (_mat_disp+48)
  1744  000CBA  6E4A               	movwf	(strcpy@dest+1)^0,c
  1745  000CBC  0EF6               	movlw	low (STR_10+1)
  1746  000CBE  6E4B               	movwf	strcpy@src^0,c
  1747  000CC0  0E7E               	movlw	high (STR_10+1)
  1748  000CC2  6E4C               	movwf	(strcpy@src+1)^0,c
  1749  000CC4  EC6C  F006         	call	_strcpy	;wreg free
  1750  000CC8                     
  1751                           ;task_manager.c: 42:     print_mat(lcd);
  1752  000CC8  C062  F058         	movff	finaliza@lcd,print_mat@lcd
  1753  000CCC  C063  F059         	movff	finaliza@lcd+1,print_mat@lcd+1
  1754  000CD0  EC6C  F004         	call	_print_mat	;wreg free
  1755  000CD4  0003               	sleep		;# 
  1756  000CD6  0012               	return		;funcret
  1757  000CD8                     __end_of_finaliza:
  1758                           	opt callstack 0
  1759                           
  1760 ;; *************** function _creditos *****************
  1761 ;; Defined at:
  1762 ;;		line 27 in file "task_manager.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  lcd             2   25[COMRAM] PTR struct .
  1765 ;;		 -> PORTD(1), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         2       0       0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0
  1780 ;;      Totals:         2       0       0       0       0       0       0
  1781 ;;Total ram usage:        2 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    6
  1784 ;; This function calls:
  1785 ;;		_print_mat
  1786 ;;		_strcpy
  1787 ;; This function is called by:
  1788 ;;		_gerenciador
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text6
  1793  000C0C                     __ptext6:
  1794                           	opt callstack 0
  1795  000C0C                     _creditos:
  1796                           	opt callstack 23
  1797  000C0C                     
  1798                           ;task_manager.c: 29:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  1799  000C0C  0E09               	movlw	low _mat_disp
  1800  000C0E  6E49               	movwf	strcpy@dest^0,c
  1801  000C10  0E00               	movlw	high _mat_disp
  1802  000C12  6E4A               	movwf	(strcpy@dest+1)^0,c
  1803  000C14  0ECE               	movlw	low STR_1
  1804  000C16  6E4B               	movwf	strcpy@src^0,c
  1805  000C18  0E7F               	movlw	high STR_1
  1806  000C1A  6E4C               	movwf	(strcpy@src+1)^0,c
  1807  000C1C  EC6C  F006         	call	_strcpy	;wreg free
  1808                           
  1809                           ;task_manager.c: 30:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  1810  000C20  0E19               	movlw	low (_mat_disp+16)
  1811  000C22  6E49               	movwf	strcpy@dest^0,c
  1812  000C24  0E00               	movlw	high (_mat_disp+16)
  1813  000C26  6E4A               	movwf	(strcpy@dest+1)^0,c
  1814  000C28  0EEE               	movlw	low STR_2
  1815  000C2A  6E4B               	movwf	strcpy@src^0,c
  1816  000C2C  0E7F               	movlw	high STR_2
  1817  000C2E  6E4C               	movwf	(strcpy@src+1)^0,c
  1818  000C30  EC6C  F006         	call	_strcpy	;wreg free
  1819                           
  1820                           ;task_manager.c: 31:     strcpy(mat_disp[2], "               ");
  1821  000C34  0E29               	movlw	low (_mat_disp+32)
  1822  000C36  6E49               	movwf	strcpy@dest^0,c
  1823  000C38  0E00               	movlw	high (_mat_disp+32)
  1824  000C3A  6E4A               	movwf	(strcpy@dest+1)^0,c
  1825  000C3C  0EF6               	movlw	low (STR_10+1)
  1826  000C3E  6E4B               	movwf	strcpy@src^0,c
  1827  000C40  0E7E               	movlw	high (STR_10+1)
  1828  000C42  6E4C               	movwf	(strcpy@src+1)^0,c
  1829  000C44  EC6C  F006         	call	_strcpy	;wreg free
  1830                           
  1831                           ;task_manager.c: 32:     strcpy(mat_disp[3], "               ");
  1832  000C48  0E39               	movlw	low (_mat_disp+48)
  1833  000C4A  6E49               	movwf	strcpy@dest^0,c
  1834  000C4C  0E00               	movlw	high (_mat_disp+48)
  1835  000C4E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1836  000C50  0EF6               	movlw	low (STR_10+1)
  1837  000C52  6E4B               	movwf	strcpy@src^0,c
  1838  000C54  0E7E               	movlw	high (STR_10+1)
  1839  000C56  6E4C               	movwf	(strcpy@src+1)^0,c
  1840  000C58  EC6C  F006         	call	_strcpy	;wreg free
  1841  000C5C                     
  1842                           ;task_manager.c: 33:     print_mat(lcd);
  1843  000C5C  C062  F058         	movff	creditos@lcd,print_mat@lcd
  1844  000C60  C063  F059         	movff	creditos@lcd+1,print_mat@lcd+1
  1845  000C64  EC6C  F004         	call	_print_mat	;wreg free
  1846  000C68                     l187:
  1847  000C68  AA08               	btfss	_botoes^0,5,c
  1848  000C6A  EF39  F006         	goto	u891
  1849  000C6E  EF3B  F006         	goto	u890
  1850  000C72                     u891:
  1851  000C72  EF34  F006         	goto	l187
  1852  000C76                     u890:
  1853  000C76  0012               	return		;funcret
  1854  000C78                     __end_of_creditos:
  1855                           	opt callstack 0
  1856                           
  1857 ;; *************** function _strcpy *****************
  1858 ;; Defined at:
  1859 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  dest            2    0[COMRAM] PTR unsigned char 
  1862 ;;		 -> mat_disp(64), 
  1863 ;;  src             2    2[COMRAM] PTR const unsigned char 
  1864 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  1865 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  1866 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1867 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1868 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  1869 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  d               2    6[COMRAM] PTR unsigned char 
  1872 ;;		 -> mat_disp(64), 
  1873 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1874 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  1875 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  1876 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  1877 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1878 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  1879 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2    0[COMRAM] PTR unsigned char 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1889 ;;      Params:         4       0       0       0       0       0       0
  1890 ;;      Locals:         4       0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0
  1892 ;;      Totals:         8       0       0       0       0       0       0
  1893 ;;Total ram usage:        8 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    2
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_creditos
  1900 ;;		_finaliza
  1901 ;;		_jogar
  1902 ;;		_instrucoes
  1903 ;;		_menu
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text7
  1908  000CD8                     __ptext7:
  1909                           	opt callstack 0
  1910  000CD8                     _strcpy:
  1911                           	opt callstack 26
  1912  000CD8  C04B  F04D         	movff	strcpy@src,strcpy@s
  1913  000CDC  C04C  F04E         	movff	strcpy@src+1,strcpy@s+1
  1914  000CE0  C049  F04F         	movff	strcpy@dest,strcpy@d
  1915  000CE4  C04A  F050         	movff	strcpy@dest+1,strcpy@d+1
  1916  000CE8                     l1478:
  1917  000CE8  C04D  FFF6         	movff	strcpy@s,tblptrl
  1918  000CEC  C04E  FFF7         	movff	strcpy@s+1,tblptrh
  1919  000CF0  4A4D               	infsnz	strcpy@s^0,f,c
  1920  000CF2  2A4E               	incf	(strcpy@s+1)^0,f,c
  1921  000CF4                     	if	0	;tblptru may be non-zero
  1922  000CF4                     	endif
  1923  000CF4                     	if	0	;tblptru may be non-zero
  1924  000CF4                     	endif
  1925  000CF4  C04F  FFD9         	movff	strcpy@d,fsr2l
  1926  000CF8  C050  FFDA         	movff	strcpy@d+1,fsr2h
  1927  000CFC  4A4F               	infsnz	strcpy@d^0,f,c
  1928  000CFE  2A50               	incf	(strcpy@d+1)^0,f,c
  1929  000D00  0008               	tblrd		*
  1930  000D02  CFF5 FFDF          	movff	tablat,indf2
  1931  000D06  50DF               	movf	indf2,w,c
  1932  000D08  A4D8               	btfss	status,2,c
  1933  000D0A  EF89  F006         	goto	u681
  1934  000D0E  EF8B  F006         	goto	u680
  1935  000D12                     u681:
  1936  000D12  EF74  F006         	goto	l1478
  1937  000D16                     u680:
  1938  000D16  0012               	return		;funcret
  1939  000D18                     __end_of_strcpy:
  1940                           	opt callstack 0
  1941                           
  1942 ;; *************** function _print_mat *****************
  1943 ;; Defined at:
  1944 ;;		line 199 in file "lcd.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  lcd             2   15[COMRAM] PTR struct .
  1947 ;;		 -> PORTD(1), 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  j               2   21[COMRAM] int 
  1950 ;;  i               2   23[COMRAM] int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         2       0       0       0       0       0       0
  1961 ;;      Locals:         4       0       0       0       0       0       0
  1962 ;;      Temps:          4       0       0       0       0       0       0
  1963 ;;      Totals:        10       0       0       0       0       0       0
  1964 ;;Total ram usage:       10 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    5
  1967 ;; This function calls:
  1968 ;;		_goto_XY
  1969 ;;		_write_char
  1970 ;; This function is called by:
  1971 ;;		_creditos
  1972 ;;		_finaliza
  1973 ;;		_jogar
  1974 ;;		_instrucoes
  1975 ;;		_menu
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text8
  1980  0008D8                     __ptext8:
  1981                           	opt callstack 0
  1982  0008D8                     _print_mat:
  1983                           	opt callstack 23
  1984  0008D8                     
  1985                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  1986  0008D8  0E00               	movlw	0
  1987  0008DA  6E61               	movwf	(print_mat@i+1)^0,c
  1988  0008DC  0E00               	movlw	0
  1989  0008DE  6E60               	movwf	print_mat@i^0,c
  1990  0008E0                     l1458:
  1991                           
  1992                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  1993  0008E0  C058  F050         	movff	print_mat@lcd,goto_XY@lcd
  1994  0008E4  C059  F051         	movff	print_mat@lcd+1,goto_XY@lcd+1
  1995  0008E8  2860               	incf	print_mat@i^0,w,c
  1996  0008EA  6E52               	movwf	goto_XY@x^0,c
  1997  0008EC  0E01               	movlw	1
  1998  0008EE  6E53               	movwf	goto_XY@y^0,c
  1999  0008F0  EC0E  F004         	call	_goto_XY	;wreg free
  2000  0008F4                     
  2001                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  2002  0008F4  0E00               	movlw	0
  2003  0008F6  6E5F               	movwf	(print_mat@j+1)^0,c
  2004  0008F8  0E00               	movlw	0
  2005  0008FA  6E5E               	movwf	print_mat@j^0,c
  2006  0008FC                     l1466:
  2007                           
  2008                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  2009  0008FC  C058  F049         	movff	print_mat@lcd,write_char@lcd
  2010  000900  C059  F04A         	movff	print_mat@lcd+1,write_char@lcd+1
  2011  000904  C060  F05A         	movff	print_mat@i,??_print_mat
  2012  000908  C061  F05B         	movff	print_mat@i+1,??_print_mat+1
  2013  00090C  3A5A               	swapf	??_print_mat^0,f,c
  2014  00090E  3A5B               	swapf	(??_print_mat+1)^0,f,c
  2015  000910  0EF0               	movlw	240
  2016  000912  165B               	andwf	(??_print_mat+1)^0,f,c
  2017  000914  505A               	movf	??_print_mat^0,w,c
  2018  000916  0B0F               	andlw	15
  2019  000918  125B               	iorwf	(??_print_mat+1)^0,f,c
  2020  00091A  0EF0               	movlw	240
  2021  00091C  165A               	andwf	??_print_mat^0,f,c
  2022  00091E  0E09               	movlw	low _mat_disp
  2023  000920  6E5C               	movwf	(??_print_mat+2)^0,c
  2024  000922  0E00               	movlw	high _mat_disp
  2025  000924  6E5D               	movwf	(??_print_mat+3)^0,c
  2026  000926  505A               	movf	??_print_mat^0,w,c
  2027  000928  265C               	addwf	(??_print_mat+2)^0,f,c
  2028  00092A  505B               	movf	(??_print_mat+1)^0,w,c
  2029  00092C  225D               	addwfc	(??_print_mat+3)^0,f,c
  2030  00092E  505E               	movf	print_mat@j^0,w,c
  2031  000930  245C               	addwf	(??_print_mat+2)^0,w,c
  2032  000932  6ED9               	movwf	fsr2l,c
  2033  000934  505F               	movf	(print_mat@j+1)^0,w,c
  2034  000936  205D               	addwfc	(??_print_mat+3)^0,w,c
  2035  000938  6EDA               	movwf	fsr2h,c
  2036  00093A  50DF               	movf	indf2,w,c
  2037  00093C  6E4B               	movwf	write_char@c^0,c
  2038  00093E  EC2D  F003         	call	_write_char	;wreg free
  2039  000942  4A5E               	infsnz	print_mat@j^0,f,c
  2040  000944  2A5F               	incf	(print_mat@j+1)^0,f,c
  2041  000946  BE5F               	btfsc	(print_mat@j+1)^0,7,c
  2042  000948  EFAF  F004         	goto	u661
  2043  00094C  505F               	movf	(print_mat@j+1)^0,w,c
  2044  00094E  E109               	bnz	u660
  2045  000950  0E10               	movlw	16
  2046  000952  5C5E               	subwf	print_mat@j^0,w,c
  2047  000954  A0D8               	btfss	status,0,c
  2048  000956  EFAF  F004         	goto	u661
  2049  00095A  EFB1  F004         	goto	u660
  2050  00095E                     u661:
  2051  00095E  EF7E  F004         	goto	l1466
  2052  000962                     u660:
  2053  000962                     
  2054                           ;lcd.c: 204:     }
  2055  000962  4A60               	infsnz	print_mat@i^0,f,c
  2056  000964  2A61               	incf	(print_mat@i+1)^0,f,c
  2057  000966  BE61               	btfsc	(print_mat@i+1)^0,7,c
  2058  000968  EFBF  F004         	goto	u671
  2059  00096C  5061               	movf	(print_mat@i+1)^0,w,c
  2060  00096E  E109               	bnz	u670
  2061  000970  0E04               	movlw	4
  2062  000972  5C60               	subwf	print_mat@i^0,w,c
  2063  000974  A0D8               	btfss	status,0,c
  2064  000976  EFBF  F004         	goto	u671
  2065  00097A  EFC1  F004         	goto	u670
  2066  00097E                     u671:
  2067  00097E  EF70  F004         	goto	l1458
  2068  000982                     u670:
  2069  000982  0012               	return		;funcret
  2070  000984                     __end_of_print_mat:
  2071                           	opt callstack 0
  2072                           
  2073 ;; *************** function _write_char *****************
  2074 ;; Defined at:
  2075 ;;		line 133 in file "lcd.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  lcd             2    0[COMRAM] PTR struct .
  2078 ;;		 -> PORTD(1), 
  2079 ;;  c               1    2[COMRAM] unsigned char 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2091 ;;      Params:         3       0       0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0
  2093 ;;      Temps:          1       0       0       0       0       0       0
  2094 ;;      Totals:         4       0       0       0       0       0       0
  2095 ;;Total ram usage:        4 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    2
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_print_mat
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text9
  2106  00065A                     __ptext9:
  2107                           	opt callstack 0
  2108  00065A                     _write_char:
  2109                           	opt callstack 25
  2110  00065A                     
  2111                           ;lcd.c: 134:     lcd->E = 0;
  2112  00065A  C049  FFD9         	movff	write_char@lcd,fsr2l
  2113  00065E  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2114  000662  94DF               	bcf	indf2,2,c
  2115                           
  2116                           ;lcd.c: 135:     lcd->RS = 1;
  2117  000664  C049  FFD9         	movff	write_char@lcd,fsr2l
  2118  000668  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2119  00066C  80DF               	bsf	indf2,0,c
  2120                           
  2121                           ;lcd.c: 136:     lcd->R_W = 0;
  2122  00066E  C049  FFD9         	movff	write_char@lcd,fsr2l
  2123  000672  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2124  000676  92DF               	bcf	indf2,1,c
  2125  000678                     
  2126                           ;lcd.c: 139:     lcd->data = (c>>4);
  2127  000678  C04B  F04C         	movff	write_char@c,??_write_char
  2128  00067C  3A4C               	swapf	??_write_char^0,f,c
  2129  00067E  0E0F               	movlw	15
  2130  000680  164C               	andwf	??_write_char^0,f,c
  2131  000682  C049  FFD9         	movff	write_char@lcd,fsr2l
  2132  000686  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2133  00068A  3A4C               	swapf	??_write_char^0,f,c
  2134  00068C  50DF               	movf	indf2,w,c
  2135  00068E  184C               	xorwf	??_write_char^0,w,c
  2136  000690  0B0F               	andlw	-241
  2137  000692  184C               	xorwf	??_write_char^0,w,c
  2138  000694  6EDF               	movwf	indf2,c
  2139  000696                     
  2140                           ;lcd.c: 140:     lcd->E = 1;
  2141  000696  C049  FFD9         	movff	write_char@lcd,fsr2l
  2142  00069A  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2143  00069E  84DF               	bsf	indf2,2,c
  2144  0006A0                     
  2145                           ;lcd.c: 141:     lcd->E = 0;
  2146  0006A0  C049  FFD9         	movff	write_char@lcd,fsr2l
  2147  0006A4  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2148  0006A8  94DF               	bcf	indf2,2,c
  2149  0006AA                     
  2150                           ;lcd.c: 144:     lcd->data = (c);
  2151  0006AA  C04B  F04C         	movff	write_char@c,??_write_char
  2152  0006AE  C049  FFD9         	movff	write_char@lcd,fsr2l
  2153  0006B2  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2154  0006B6  3A4C               	swapf	??_write_char^0,f,c
  2155  0006B8  50DF               	movf	indf2,w,c
  2156  0006BA  184C               	xorwf	??_write_char^0,w,c
  2157  0006BC  0B0F               	andlw	-241
  2158  0006BE  184C               	xorwf	??_write_char^0,w,c
  2159  0006C0  6EDF               	movwf	indf2,c
  2160                           
  2161                           ;lcd.c: 145:     lcd->E = 1;
  2162  0006C2  C049  FFD9         	movff	write_char@lcd,fsr2l
  2163  0006C6  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2164  0006CA  84DF               	bsf	indf2,2,c
  2165                           
  2166                           ;lcd.c: 146:     lcd->E = 0;
  2167  0006CC  C049  FFD9         	movff	write_char@lcd,fsr2l
  2168  0006D0  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2169  0006D4  94DF               	bcf	indf2,2,c
  2170  0006D6                     
  2171                           ;lcd.c: 149:     TRISD = 0xF0;
  2172  0006D6  0EF0               	movlw	240
  2173  0006D8  6E95               	movwf	149,c	;volatile
  2174  0006DA                     
  2175                           ;lcd.c: 150:     lcd->RS = 0;
  2176  0006DA  C049  FFD9         	movff	write_char@lcd,fsr2l
  2177  0006DE  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2178  0006E2  90DF               	bcf	indf2,0,c
  2179  0006E4                     
  2180                           ;lcd.c: 151:     lcd->R_W = 1;
  2181  0006E4  C049  FFD9         	movff	write_char@lcd,fsr2l
  2182  0006E8  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2183  0006EC  82DF               	bsf	indf2,1,c
  2184  0006EE                     l1438:
  2185                           
  2186                           ;lcd.c: 153:        lcd->E = 1;
  2187  0006EE  C049  FFD9         	movff	write_char@lcd,fsr2l
  2188  0006F2  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2189  0006F6  84DF               	bsf	indf2,2,c
  2190  0006F8                     
  2191                           ;lcd.c: 154:        lcd->E = 0;
  2192  0006F8  C049  FFD9         	movff	write_char@lcd,fsr2l
  2193  0006FC  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2194  000700  94DF               	bcf	indf2,2,c
  2195  000702                     
  2196                           ;lcd.c: 155:        lcd->E = 1;
  2197  000702  C049  FFD9         	movff	write_char@lcd,fsr2l
  2198  000706  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2199  00070A  84DF               	bsf	indf2,2,c
  2200  00070C                     
  2201                           ;lcd.c: 156:        lcd->E = 0;
  2202  00070C  C049  FFD9         	movff	write_char@lcd,fsr2l
  2203  000710  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2204  000714  94DF               	bcf	indf2,2,c
  2205  000716                     
  2206                           ;lcd.c: 157:     } while(lcd->data&0x08);
  2207  000716  C049  FFD9         	movff	write_char@lcd,fsr2l
  2208  00071A  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2209  00071E  38DF               	swapf	indf2,w,c
  2210  000720  0B0F               	andlw	15
  2211  000722  6E4C               	movwf	??_write_char^0,c
  2212  000724  B64C               	btfsc	??_write_char^0,3,c
  2213  000726  EF97  F003         	goto	u651
  2214  00072A  EF99  F003         	goto	u650
  2215  00072E                     u651:
  2216  00072E  EF77  F003         	goto	l1438
  2217  000732                     u650:
  2218  000732                     
  2219                           ;lcd.c: 158:     lcd->R_W = 0;
  2220  000732  C049  FFD9         	movff	write_char@lcd,fsr2l
  2221  000736  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2222  00073A  92DF               	bcf	indf2,1,c
  2223  00073C                     
  2224                           ;lcd.c: 159:     TRISD = 0x00;
  2225  00073C  0E00               	movlw	0
  2226  00073E  6E95               	movwf	149,c	;volatile
  2227  000740  0012               	return		;funcret
  2228  000742                     __end_of_write_char:
  2229                           	opt callstack 0
  2230                           
  2231 ;; *************** function _goto_XY *****************
  2232 ;; Defined at:
  2233 ;;		line 76 in file "lcd.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  lcd             2    7[COMRAM] PTR struct .
  2236 ;;		 -> PORTD(1), 
  2237 ;;  x               1    9[COMRAM] unsigned char 
  2238 ;;  y               1   10[COMRAM] unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  temp            1   14[COMRAM] unsigned char 
  2241 ;;  a               1   13[COMRAM] unsigned char 
  2242 ;;  z               1   12[COMRAM] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2252 ;;      Params:         4       0       0       0       0       0       0
  2253 ;;      Locals:         3       0       0       0       0       0       0
  2254 ;;      Temps:          1       0       0       0       0       0       0
  2255 ;;      Totals:         8       0       0       0       0       0       0
  2256 ;;Total ram usage:        8 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    4
  2259 ;; This function calls:
  2260 ;;		_lcd_cmd
  2261 ;; This function is called by:
  2262 ;;		_print_mat
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text10
  2267  00081C                     __ptext10:
  2268                           	opt callstack 0
  2269  00081C                     _goto_XY:
  2270                           	opt callstack 23
  2271  00081C                     
  2272                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  2273  00081C  0452               	decf	goto_XY@x^0,w,c
  2274  00081E  A4D8               	btfss	status,2,c
  2275  000820  EF14  F004         	goto	u611
  2276  000824  EF16  F004         	goto	u610
  2277  000828                     u611:
  2278  000828  EF38  F004         	goto	l1386
  2279  00082C                     u610:
  2280  00082C                     
  2281                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  2282  00082C  5053               	movf	goto_XY@y^0,w,c
  2283  00082E  0F7F               	addlw	127
  2284  000830  6E57               	movwf	goto_XY@temp^0,c
  2285                           
  2286                           ;lcd.c: 81:        z = temp>>4;
  2287  000832  3857               	swapf	goto_XY@temp^0,w,c
  2288  000834  0B0F               	andlw	15
  2289  000836  6E55               	movwf	goto_XY@z^0,c
  2290  000838                     l1378:
  2291                           
  2292                           ;lcd.c: 82:        a = temp;
  2293  000838  C057  F056         	movff	goto_XY@temp,goto_XY@a
  2294  00083C                     
  2295                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  2296  00083C  C050  F04C         	movff	goto_XY@lcd,lcd_cmd@lcd
  2297  000840  C051  F04D         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  2298  000844  C055  F04E         	movff	goto_XY@z,lcd_cmd@a
  2299  000848  EC8C  F006         	call	_lcd_cmd	;wreg free
  2300  00084C                     
  2301                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  2302  00084C  0E06               	movlw	6
  2303  00084E  6E54               	movwf	??_goto_XY^0,c
  2304  000850  0E30               	movlw	48
  2305  000852                     u947:
  2306  000852  2EE8               	decfsz	wreg,f,c
  2307  000854  D7FE               	bra	u947
  2308  000856  2E54               	decfsz	??_goto_XY^0,f,c
  2309  000858  D7FC               	bra	u947
  2310  00085A  D000               	nop2	
  2311  00085C                     
  2312                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  2313  00085C  C050  F04C         	movff	goto_XY@lcd,lcd_cmd@lcd
  2314  000860  C051  F04D         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  2315  000864  C056  F04E         	movff	goto_XY@a,lcd_cmd@a
  2316  000868  EC8C  F006         	call	_lcd_cmd	;wreg free
  2317                           
  2318                           ;lcd.c: 86:     }
  2319  00086C  EF6B  F004         	goto	l73
  2320  000870                     l1386:
  2321  000870  0E02               	movlw	2
  2322  000872  1852               	xorwf	goto_XY@x^0,w,c
  2323  000874  A4D8               	btfss	status,2,c
  2324  000876  EF3F  F004         	goto	u621
  2325  00087A  EF41  F004         	goto	u620
  2326  00087E                     u621:
  2327  00087E  EF49  F004         	goto	l1398
  2328  000882                     u620:
  2329  000882                     
  2330                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  2331  000882  5053               	movf	goto_XY@y^0,w,c
  2332  000884  0FBF               	addlw	191
  2333  000886  6E57               	movwf	goto_XY@temp^0,c
  2334                           
  2335                           ;lcd.c: 90:        z = temp>>4;
  2336  000888  3857               	swapf	goto_XY@temp^0,w,c
  2337  00088A  0B0F               	andlw	15
  2338  00088C  6E55               	movwf	goto_XY@z^0,c
  2339  00088E  EF1C  F004         	goto	l1378
  2340  000892                     l1398:
  2341  000892  0E03               	movlw	3
  2342  000894  1852               	xorwf	goto_XY@x^0,w,c
  2343  000896  A4D8               	btfss	status,2,c
  2344  000898  EF50  F004         	goto	u631
  2345  00089C  EF52  F004         	goto	u630
  2346  0008A0                     u631:
  2347  0008A0  EF5A  F004         	goto	l1410
  2348  0008A4                     u630:
  2349  0008A4                     
  2350                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  2351  0008A4  5053               	movf	goto_XY@y^0,w,c
  2352  0008A6  0F8F               	addlw	143
  2353  0008A8  6E57               	movwf	goto_XY@temp^0,c
  2354                           
  2355                           ;lcd.c: 99:        z = temp>>4;
  2356  0008AA  3857               	swapf	goto_XY@temp^0,w,c
  2357  0008AC  0B0F               	andlw	15
  2358  0008AE  6E55               	movwf	goto_XY@z^0,c
  2359  0008B0  EF1C  F004         	goto	l1378
  2360  0008B4                     l1410:
  2361  0008B4  0E04               	movlw	4
  2362  0008B6  1852               	xorwf	goto_XY@x^0,w,c
  2363  0008B8  A4D8               	btfss	status,2,c
  2364  0008BA  EF61  F004         	goto	u641
  2365  0008BE  EF63  F004         	goto	u640
  2366  0008C2                     u641:
  2367  0008C2  EF6B  F004         	goto	l69
  2368  0008C6                     u640:
  2369  0008C6                     
  2370                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  2371  0008C6  5053               	movf	goto_XY@y^0,w,c
  2372  0008C8  0FCF               	addlw	207
  2373  0008CA  6E57               	movwf	goto_XY@temp^0,c
  2374                           
  2375                           ;lcd.c: 108:        z = temp>>4;
  2376  0008CC  3857               	swapf	goto_XY@temp^0,w,c
  2377  0008CE  0B0F               	andlw	15
  2378  0008D0  6E55               	movwf	goto_XY@z^0,c
  2379  0008D2  EF1C  F004         	goto	l1378
  2380  0008D6                     l69:
  2381  0008D6                     l73:
  2382  0008D6  0012               	return		;funcret
  2383  0008D8                     __end_of_goto_XY:
  2384                           	opt callstack 0
  2385                           
  2386 ;; *************** function _lcd_cmd *****************
  2387 ;; Defined at:
  2388 ;;		line 67 in file "lcd.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  lcd             2    3[COMRAM] PTR struct .
  2391 ;;		 -> PORTD(1), 
  2392 ;;  a               1    5[COMRAM] unsigned char 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2404 ;;      Params:         3       0       0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0
  2406 ;;      Temps:          1       0       0       0       0       0       0
  2407 ;;      Totals:         4       0       0       0       0       0       0
  2408 ;;Total ram usage:        4 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    3
  2411 ;; This function calls:
  2412 ;;		_pulso
  2413 ;; This function is called by:
  2414 ;;		_goto_XY
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text11
  2419  000D18                     __ptext11:
  2420                           	opt callstack 0
  2421  000D18                     _lcd_cmd:
  2422                           	opt callstack 23
  2423  000D18                     
  2424                           ;lcd.c: 68:     lcd->RS = 0;
  2425  000D18  C04C  FFD9         	movff	lcd_cmd@lcd,fsr2l
  2426  000D1C  C04D  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  2427  000D20  90DF               	bcf	indf2,0,c
  2428  000D22                     
  2429                           ;lcd.c: 69:     lcd->data = (a);
  2430  000D22  C04E  F04F         	movff	lcd_cmd@a,??_lcd_cmd
  2431  000D26  C04C  FFD9         	movff	lcd_cmd@lcd,fsr2l
  2432  000D2A  C04D  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  2433  000D2E  3A4F               	swapf	??_lcd_cmd^0,f,c
  2434  000D30  50DF               	movf	indf2,w,c
  2435  000D32  184F               	xorwf	??_lcd_cmd^0,w,c
  2436  000D34  0B0F               	andlw	-241
  2437  000D36  184F               	xorwf	??_lcd_cmd^0,w,c
  2438  000D38  6EDF               	movwf	indf2,c
  2439  000D3A                     
  2440                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2441  000D3A  0E06               	movlw	6
  2442  000D3C  6E4F               	movwf	??_lcd_cmd^0,c
  2443  000D3E  0E30               	movlw	48
  2444  000D40                     u957:
  2445  000D40  2EE8               	decfsz	wreg,f,c
  2446  000D42  D7FE               	bra	u957
  2447  000D44  2E4F               	decfsz	??_lcd_cmd^0,f,c
  2448  000D46  D7FC               	bra	u957
  2449  000D48  D000               	nop2	
  2450  000D4A                     
  2451                           ;lcd.c: 72:     pulso(lcd);
  2452  000D4A  C04C  F049         	movff	lcd_cmd@lcd,pulso@lcd
  2453  000D4E  C04D  F04A         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  2454  000D52  ECC8  F006         	call	_pulso	;wreg free
  2455  000D56  0012               	return		;funcret
  2456  000D58                     __end_of_lcd_cmd:
  2457                           	opt callstack 0
  2458                           
  2459 ;; *************** function _function_set *****************
  2460 ;; Defined at:
  2461 ;;		line 21 in file "lcd.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  lcd             2    3[COMRAM] PTR struct .
  2464 ;;		 -> PORTD(1), 
  2465 ;;  data_lenght     1    5[COMRAM] unsigned char 
  2466 ;;  num_lines       1    6[COMRAM] unsigned char 
  2467 ;;  char_font       1    7[COMRAM] unsigned char 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2479 ;;      Params:         5       0       0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0
  2481 ;;      Temps:          3       0       0       0       0       0       0
  2482 ;;      Totals:         8       0       0       0       0       0       0
  2483 ;;Total ram usage:        8 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    3
  2486 ;; This function calls:
  2487 ;;		_pulso
  2488 ;; This function is called by:
  2489 ;;		_main
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text12
  2494  000742                     __ptext12:
  2495                           	opt callstack 0
  2496  000742                     _function_set:
  2497                           	opt callstack 27
  2498  000742                     
  2499                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  2500  000742  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2501  000746  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2502  00074A  94DF               	bcf	indf2,2,c
  2503                           
  2504                           ;lcd.c: 24:     lcd->RS = 0;
  2505  00074C  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2506  000750  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2507  000754  90DF               	bcf	indf2,0,c
  2508                           
  2509                           ;lcd.c: 25:     lcd->R_W = 0;
  2510  000756  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2511  00075A  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2512  00075E  92DF               	bcf	indf2,1,c
  2513  000760                     
  2514                           ;lcd.c: 28:     lcd->data = 0x02;
  2515  000760  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2516  000764  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2517  000768  50DF               	movf	indf2,w,c
  2518  00076A  0B0F               	andlw	-241
  2519  00076C  0920               	iorlw	32
  2520  00076E  6EDF               	movwf	indf2,c
  2521  000770                     
  2522                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2523  000770  0E06               	movlw	6
  2524  000772  6E51               	movwf	??_function_set^0,c
  2525  000774  0E30               	movlw	48
  2526  000776                     u967:
  2527  000776  2EE8               	decfsz	wreg,f,c
  2528  000778  D7FE               	bra	u967
  2529  00077A  2E51               	decfsz	??_function_set^0,f,c
  2530  00077C  D7FC               	bra	u967
  2531  00077E  D000               	nop2	
  2532  000780                     
  2533                           ;lcd.c: 31:     pulso(lcd);
  2534  000780  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2535  000784  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2536  000788  ECC8  F006         	call	_pulso	;wreg free
  2537  00078C                     
  2538                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  2539  00078C  C04E  F051         	movff	function_set@data_lenght,??_function_set
  2540  000790  0E02               	movlw	2
  2541  000792  1251               	iorwf	??_function_set^0,f,c
  2542  000794  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2543  000798  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2544  00079C  3A51               	swapf	??_function_set^0,f,c
  2545  00079E  50DF               	movf	indf2,w,c
  2546  0007A0  1851               	xorwf	??_function_set^0,w,c
  2547  0007A2  0B0F               	andlw	-241
  2548  0007A4  1851               	xorwf	??_function_set^0,w,c
  2549  0007A6  6EDF               	movwf	indf2,c
  2550  0007A8                     
  2551                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2552  0007A8  0E06               	movlw	6
  2553  0007AA  6E51               	movwf	??_function_set^0,c
  2554  0007AC  0E30               	movlw	48
  2555  0007AE                     u977:
  2556  0007AE  2EE8               	decfsz	wreg,f,c
  2557  0007B0  D7FE               	bra	u977
  2558  0007B2  2E51               	decfsz	??_function_set^0,f,c
  2559  0007B4  D7FC               	bra	u977
  2560  0007B6  D000               	nop2	
  2561  0007B8                     
  2562                           ;lcd.c: 37:     pulso(lcd);
  2563  0007B8  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2564  0007BC  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2565  0007C0  ECC8  F006         	call	_pulso	;wreg free
  2566  0007C4                     
  2567                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  2568  0007C4  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2569  0007C8  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2570  0007CC  38DF               	swapf	indf2,w,c
  2571  0007CE  0B0F               	andlw	15
  2572  0007D0  6E51               	movwf	??_function_set^0,c
  2573  0007D2  C050  F052         	movff	function_set@char_font,??_function_set+1
  2574  0007D6  90D8               	bcf	status,0,c
  2575  0007D8  3652               	rlcf	(??_function_set+1)^0,f,c
  2576  0007DA  90D8               	bcf	status,0,c
  2577  0007DC  3652               	rlcf	(??_function_set+1)^0,f,c
  2578  0007DE  384F               	swapf	function_set@num_lines^0,w,c
  2579  0007E0  42E8               	rrncf	wreg,f,c
  2580  0007E2  0BF8               	andlw	248
  2581  0007E4  1052               	iorwf	(??_function_set+1)^0,w,c
  2582  0007E6  1051               	iorwf	??_function_set^0,w,c
  2583  0007E8  6E53               	movwf	(??_function_set+2)^0,c
  2584  0007EA  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2585  0007EE  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2586  0007F2  3A53               	swapf	(??_function_set+2)^0,f,c
  2587  0007F4  50DF               	movf	indf2,w,c
  2588  0007F6  1853               	xorwf	(??_function_set+2)^0,w,c
  2589  0007F8  0B0F               	andlw	-241
  2590  0007FA  1853               	xorwf	(??_function_set+2)^0,w,c
  2591  0007FC  6EDF               	movwf	indf2,c
  2592  0007FE                     
  2593                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2594  0007FE  0E06               	movlw	6
  2595  000800  6E51               	movwf	??_function_set^0,c
  2596  000802  0E30               	movlw	48
  2597  000804                     u987:
  2598  000804  2EE8               	decfsz	wreg,f,c
  2599  000806  D7FE               	bra	u987
  2600  000808  2E51               	decfsz	??_function_set^0,f,c
  2601  00080A  D7FC               	bra	u987
  2602  00080C  D000               	nop2	
  2603  00080E                     
  2604                           ;lcd.c: 44:     pulso(lcd);
  2605  00080E  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2606  000812  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2607  000816  ECC8  F006         	call	_pulso	;wreg free
  2608  00081A  0012               	return		;funcret
  2609  00081C                     __end_of_function_set:
  2610                           	opt callstack 0
  2611                           
  2612 ;; *************** function _entry_mode_set *****************
  2613 ;; Defined at:
  2614 ;;		line 116 in file "lcd.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  lcd             2    3[COMRAM] PTR struct .
  2617 ;;		 -> PORTD(1), 
  2618 ;;  move_directi    1    5[COMRAM] unsigned char 
  2619 ;;  display_shif    1    6[COMRAM] unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2631 ;;      Params:         4       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0
  2633 ;;      Temps:          1       0       0       0       0       0       0
  2634 ;;      Totals:         5       0       0       0       0       0       0
  2635 ;;Total ram usage:        5 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    3
  2638 ;; This function calls:
  2639 ;;		_pulso
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text13
  2646  000AA8                     __ptext13:
  2647                           	opt callstack 0
  2648  000AA8                     _entry_mode_set:
  2649                           	opt callstack 27
  2650  000AA8                     
  2651                           ;lcd.c: 117:     lcd->E = 0;
  2652  000AA8  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2653  000AAC  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2654  000AB0  94DF               	bcf	indf2,2,c
  2655                           
  2656                           ;lcd.c: 118:     lcd->RS = 0;
  2657  000AB2  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2658  000AB6  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2659  000ABA  90DF               	bcf	indf2,0,c
  2660                           
  2661                           ;lcd.c: 119:     lcd->R_W = 0;
  2662  000ABC  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2663  000AC0  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2664  000AC4  92DF               	bcf	indf2,1,c
  2665  000AC6                     
  2666                           ;lcd.c: 121:     lcd->data = 0x00;
  2667  000AC6  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2668  000ACA  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2669  000ACE  0E0F               	movlw	-241
  2670  000AD0  16DF               	andwf	indf2,f,c
  2671  000AD2                     
  2672                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2673  000AD2  0E06               	movlw	6
  2674  000AD4  6E50               	movwf	??_entry_mode_set^0,c
  2675  000AD6  0E30               	movlw	48
  2676  000AD8                     u997:
  2677  000AD8  2EE8               	decfsz	wreg,f,c
  2678  000ADA  D7FE               	bra	u997
  2679  000ADC  2E50               	decfsz	??_entry_mode_set^0,f,c
  2680  000ADE  D7FC               	bra	u997
  2681  000AE0  D000               	nop2	
  2682  000AE2                     
  2683                           ;lcd.c: 124:     pulso(lcd);
  2684  000AE2  C04C  F049         	movff	entry_mode_set@lcd,pulso@lcd
  2685  000AE6  C04D  F04A         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  2686  000AEA  ECC8  F006         	call	_pulso	;wreg free
  2687  000AEE                     
  2688                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  2689  000AEE  504E               	movf	entry_mode_set@move_direction^0,w,c
  2690  000AF0  244E               	addwf	entry_mode_set@move_direction^0,w,c
  2691  000AF2  104F               	iorwf	entry_mode_set@display_shift^0,w,c
  2692  000AF4  6E50               	movwf	??_entry_mode_set^0,c
  2693  000AF6  0E04               	movlw	4
  2694  000AF8  1250               	iorwf	??_entry_mode_set^0,f,c
  2695  000AFA  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2696  000AFE  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2697  000B02  3A50               	swapf	??_entry_mode_set^0,f,c
  2698  000B04  50DF               	movf	indf2,w,c
  2699  000B06  1850               	xorwf	??_entry_mode_set^0,w,c
  2700  000B08  0B0F               	andlw	-241
  2701  000B0A  1850               	xorwf	??_entry_mode_set^0,w,c
  2702  000B0C  6EDF               	movwf	indf2,c
  2703  000B0E                     
  2704                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2705  000B0E  0E06               	movlw	6
  2706  000B10  6E50               	movwf	??_entry_mode_set^0,c
  2707  000B12  0E30               	movlw	48
  2708  000B14                     u1007:
  2709  000B14  2EE8               	decfsz	wreg,f,c
  2710  000B16  D7FE               	bra	u1007
  2711  000B18  2E50               	decfsz	??_entry_mode_set^0,f,c
  2712  000B1A  D7FC               	bra	u1007
  2713  000B1C  D000               	nop2	
  2714  000B1E                     
  2715                           ;lcd.c: 130:     pulso(lcd);
  2716  000B1E  C04C  F049         	movff	entry_mode_set@lcd,pulso@lcd
  2717  000B22  C04D  F04A         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  2718  000B26  ECC8  F006         	call	_pulso	;wreg free
  2719  000B2A  0012               	return		;funcret
  2720  000B2C                     __end_of_entry_mode_set:
  2721                           	opt callstack 0
  2722                           
  2723 ;; *************** function _display_onoff_control *****************
  2724 ;; Defined at:
  2725 ;;		line 47 in file "lcd.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  lcd             2    3[COMRAM] PTR struct .
  2728 ;;		 -> PORTD(1), 
  2729 ;;  display_on      1    5[COMRAM] unsigned char 
  2730 ;;  cursor_on       1    6[COMRAM] unsigned char 
  2731 ;;  blink           1    7[COMRAM] unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         5       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0
  2745 ;;      Temps:          2       0       0       0       0       0       0
  2746 ;;      Totals:         7       0       0       0       0       0       0
  2747 ;;Total ram usage:        7 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    3
  2750 ;; This function calls:
  2751 ;;		_pulso
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text14
  2758  000A1A                     __ptext14:
  2759                           	opt callstack 0
  2760  000A1A                     _display_onoff_control:
  2761                           	opt callstack 27
  2762  000A1A                     
  2763                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  2764  000A1A  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2765  000A1E  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2766  000A22  94DF               	bcf	indf2,2,c
  2767                           
  2768                           ;lcd.c: 50:     lcd->RS = 0;
  2769  000A24  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2770  000A28  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2771  000A2C  90DF               	bcf	indf2,0,c
  2772                           
  2773                           ;lcd.c: 51:     lcd->R_W = 0;
  2774  000A2E  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2775  000A32  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2776  000A36  92DF               	bcf	indf2,1,c
  2777  000A38                     
  2778                           ;lcd.c: 54:     lcd->data = 0x00;
  2779  000A38  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2780  000A3C  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2781  000A40  0E0F               	movlw	-241
  2782  000A42  16DF               	andwf	indf2,f,c
  2783  000A44                     
  2784                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2785  000A44  0E06               	movlw	6
  2786  000A46  6E51               	movwf	??_display_onoff_control^0,c
  2787  000A48  0E30               	movlw	48
  2788  000A4A                     u1017:
  2789  000A4A  2EE8               	decfsz	wreg,f,c
  2790  000A4C  D7FE               	bra	u1017
  2791  000A4E  2E51               	decfsz	??_display_onoff_control^0,f,c
  2792  000A50  D7FC               	bra	u1017
  2793  000A52  D000               	nop2	
  2794  000A54                     
  2795                           ;lcd.c: 57:     pulso(lcd);
  2796  000A54  C04C  F049         	movff	display_onoff_control@lcd,pulso@lcd
  2797  000A58  C04D  F04A         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2798  000A5C  ECC8  F006         	call	_pulso	;wreg free
  2799  000A60                     
  2800                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  2801  000A60  90D8               	bcf	status,0,c
  2802  000A62  344F               	rlcf	display_onoff_control@cursor_on^0,w,c
  2803  000A64  6E51               	movwf	??_display_onoff_control^0,c
  2804  000A66  444E               	rlncf	display_onoff_control@display_on^0,w,c
  2805  000A68  46E8               	rlncf	wreg,f,c
  2806  000A6A  0BFC               	andlw	252
  2807  000A6C  1051               	iorwf	??_display_onoff_control^0,w,c
  2808  000A6E  1050               	iorwf	display_onoff_control@blink^0,w,c
  2809  000A70  6E52               	movwf	(??_display_onoff_control+1)^0,c
  2810  000A72  0E08               	movlw	8
  2811  000A74  1252               	iorwf	(??_display_onoff_control+1)^0,f,c
  2812  000A76  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2813  000A7A  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2814  000A7E  3A52               	swapf	(??_display_onoff_control+1)^0,f,c
  2815  000A80  50DF               	movf	indf2,w,c
  2816  000A82  1852               	xorwf	(??_display_onoff_control+1)^0,w,c
  2817  000A84  0B0F               	andlw	-241
  2818  000A86  1852               	xorwf	(??_display_onoff_control+1)^0,w,c
  2819  000A88  6EDF               	movwf	indf2,c
  2820  000A8A                     
  2821                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2822  000A8A  0E06               	movlw	6
  2823  000A8C  6E51               	movwf	??_display_onoff_control^0,c
  2824  000A8E  0E30               	movlw	48
  2825  000A90                     u1027:
  2826  000A90  2EE8               	decfsz	wreg,f,c
  2827  000A92  D7FE               	bra	u1027
  2828  000A94  2E51               	decfsz	??_display_onoff_control^0,f,c
  2829  000A96  D7FC               	bra	u1027
  2830  000A98  D000               	nop2	
  2831  000A9A                     
  2832                           ;lcd.c: 64:     pulso(lcd);
  2833  000A9A  C04C  F049         	movff	display_onoff_control@lcd,pulso@lcd
  2834  000A9E  C04D  F04A         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2835  000AA2  ECC8  F006         	call	_pulso	;wreg free
  2836  000AA6  0012               	return		;funcret
  2837  000AA8                     __end_of_display_onoff_control:
  2838                           	opt callstack 0
  2839                           
  2840 ;; *************** function _pulso *****************
  2841 ;; Defined at:
  2842 ;;		line 11 in file "lcd.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  lcd             2    0[COMRAM] PTR struct .
  2845 ;;		 -> PORTD(1), 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr2l, fsr2h
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2857 ;;      Params:         2       0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0       0       0
  2860 ;;      Totals:         3       0       0       0       0       0       0
  2861 ;;Total ram usage:        3 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    2
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_function_set
  2868 ;;		_display_onoff_control
  2869 ;;		_lcd_cmd
  2870 ;;		_entry_mode_set
  2871 ;;		_clear_display
  2872 ;;		_return_home
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text15
  2877  000D90                     __ptext15:
  2878                           	opt callstack 0
  2879  000D90                     _pulso:
  2880                           	opt callstack 23
  2881  000D90                     
  2882                           ;lcd.c: 13:     lcd->E = 1;
  2883  000D90  C049  FFD9         	movff	pulso@lcd,fsr2l
  2884  000D94  C04A  FFDA         	movff	pulso@lcd+1,fsr2h
  2885  000D98  84DF               	bsf	indf2,2,c
  2886  000D9A                     
  2887                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2888  000D9A  0E06               	movlw	6
  2889  000D9C  6E4B               	movwf	??_pulso^0,c
  2890  000D9E  0E30               	movlw	48
  2891  000DA0                     u1037:
  2892  000DA0  2EE8               	decfsz	wreg,f,c
  2893  000DA2  D7FE               	bra	u1037
  2894  000DA4  2E4B               	decfsz	??_pulso^0,f,c
  2895  000DA6  D7FC               	bra	u1037
  2896  000DA8  D000               	nop2	
  2897  000DAA                     
  2898                           ;lcd.c: 17:     lcd->E = 0;
  2899  000DAA  C049  FFD9         	movff	pulso@lcd,fsr2l
  2900  000DAE  C04A  FFDA         	movff	pulso@lcd+1,fsr2h
  2901  000DB2  94DF               	bcf	indf2,2,c
  2902                           
  2903                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2904  000DB4  0E06               	movlw	6
  2905  000DB6  6E4B               	movwf	??_pulso^0,c
  2906  000DB8  0E30               	movlw	48
  2907  000DBA                     u1047:
  2908  000DBA  2EE8               	decfsz	wreg,f,c
  2909  000DBC  D7FE               	bra	u1047
  2910  000DBE  2E4B               	decfsz	??_pulso^0,f,c
  2911  000DC0  D7FC               	bra	u1047
  2912  000DC2  D000               	nop2	
  2913  000DC4  0012               	return		;funcret
  2914  000DC6                     __end_of_pulso:
  2915                           	opt callstack 0
  2916                           
  2917 ;; *************** function _int_handler *****************
  2918 ;; Defined at:
  2919 ;;		line 24 in file "main.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2933 ;;      Params:         0       0       0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    1
  2940 ;; This function calls:
  2941 ;;		_le_entrada
  2942 ;; This function is called by:
  2943 ;;		Interrupt level 2
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	intcode
  2948  000008                     __pintcode:
  2949                           	opt callstack 0
  2950  000008                     _int_handler:
  2951                           	opt callstack 23
  2952                           
  2953                           ;incstack = 0
  2954  000008  8270               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2955  00000A  EDE3  F006         	call	int_func,f	;refresh shadow registers
  2956                           
  2957                           	psect	intcode_body
  2958  000DC6                     __pintcode_body:
  2959                           	opt callstack 23
  2960  000DC6                     int_func:
  2961                           	opt callstack 23
  2962  000DC6  0006               	pop		; remove dummy address from shadow register refresh
  2963  000DC8                     
  2964                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  2965  000DC8  A4F2               	btfss	242,2,c	;volatile
  2966  000DCA  EFE9  F006         	goto	i2u60_41
  2967  000DCE  EFEB  F006         	goto	i2u60_40
  2968  000DD2                     i2u60_41:
  2969  000DD2  EFF0  F006         	goto	i2l40
  2970  000DD6                     i2u60_40:
  2971  000DD6                     
  2972                           ;main.c: 26:         TMR0L = 0x63;
  2973  000DD6  0E63               	movlw	99
  2974  000DD8  6ED6               	movwf	214,c	;volatile
  2975  000DDA                     
  2976                           ;main.c: 27:         le_entrada();
  2977  000DDA  ECB8  F001         	call	_le_entrada	;wreg free
  2978  000DDE                     
  2979                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  2980  000DDE  94F2               	bcf	242,2,c	;volatile
  2981  000DE0                     i2l40:
  2982  000DE0  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2983  000DE2  0011               	retfie		f
  2984  000DE4                     __end_of_int_handler:
  2985                           	opt callstack 0
  2986                           
  2987 ;; *************** function _le_entrada *****************
  2988 ;; Defined at:
  2989 ;;		line 12 in file "keyboard.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3003 ;;      Params:         0       0       0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_int_handler
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text17
  3017  000370                     __ptext17:
  3018                           	opt callstack 0
  3019  000370                     _le_entrada:
  3020                           	opt callstack 23
  3021  000370                     
  3022                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  3023  000370  8E81               	bsf	129,7,c	;volatile
  3024                           
  3025                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  3026  000372  B007               	btfsc	_botoes_ant^0,0,c
  3027  000374  EFBE  F001         	goto	i2u30_41
  3028  000378  EFC0  F001         	goto	i2u30_40
  3029  00037C                     i2u30_41:
  3030  00037C  EFC7  F001         	goto	i2l1162
  3031  000380                     i2u30_40:
  3032  000380  B481               	btfsc	129,2,c	;volatile
  3033  000382  EFC5  F001         	goto	i2u31_41
  3034  000386  EFC7  F001         	goto	i2u31_40
  3035  00038A                     i2u31_41:
  3036  00038A  EFCF  F001         	goto	i2l113
  3037  00038E                     i2u31_40:
  3038  00038E                     i2l1162:
  3039  00038E  0E32               	movlw	50
  3040  000390  6406               	cpfsgt	_cont_u^0,c
  3041  000392  EFCD  F001         	goto	i2u32_41
  3042  000396  EFCF  F001         	goto	i2u32_40
  3043  00039A                     i2u32_41:
  3044  00039A  EFD5  F001         	goto	i2l111
  3045  00039E                     i2u32_40:
  3046  00039E                     i2l113:
  3047                           
  3048                           ;keyboard.c: 15:         botoes.U = 1;
  3049  00039E  8008               	bsf	_botoes^0,0,c
  3050                           
  3051                           ;keyboard.c: 16:         botoes_ant.U = 1;
  3052  0003A0  8007               	bsf	_botoes_ant^0,0,c
  3053  0003A2                     i2l1164:
  3054                           
  3055                           ;keyboard.c: 17:         cont_u = 0;
  3056  0003A2  0E00               	movlw	0
  3057  0003A4  6E06               	movwf	_cont_u^0,c
  3058                           
  3059                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  3060  0003A6  EFEF  F001         	goto	i2l1174
  3061  0003AA                     i2l111:
  3062  0003AA  A007               	btfss	_botoes_ant^0,0,c
  3063  0003AC  EFDA  F001         	goto	i2u33_41
  3064  0003B0  EFDC  F001         	goto	i2u33_40
  3065  0003B4                     i2u33_41:
  3066  0003B4  EFE7  F001         	goto	i2l117
  3067  0003B8                     i2u33_40:
  3068  0003B8  B481               	btfsc	129,2,c	;volatile
  3069  0003BA  EFE1  F001         	goto	i2u34_41
  3070  0003BE  EFE3  F001         	goto	i2u34_40
  3071  0003C2                     i2u34_41:
  3072  0003C2  EFE7  F001         	goto	i2l117
  3073  0003C6                     i2u34_40:
  3074  0003C6                     
  3075                           ;keyboard.c: 19:         botoes.U = 0;
  3076  0003C6  9008               	bcf	_botoes^0,0,c
  3077                           
  3078                           ;keyboard.c: 20:         botoes_ant.U = 0;
  3079  0003C8  9007               	bcf	_botoes_ant^0,0,c
  3080  0003CA  EFD1  F001         	goto	i2l1164
  3081  0003CE                     i2l117:
  3082  0003CE  A481               	btfss	129,2,c	;volatile
  3083  0003D0  EFEC  F001         	goto	i2u35_41
  3084  0003D4  EFEE  F001         	goto	i2u35_40
  3085  0003D8                     i2u35_41:
  3086  0003D8  EFEF  F001         	goto	i2l1174
  3087  0003DC                     i2u35_40:
  3088  0003DC  2A06               	incf	_cont_u^0,f,c
  3089  0003DE                     i2l1174:
  3090                           
  3091                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  3092  0003DE  9E81               	bcf	129,7,c	;volatile
  3093  0003E0                     
  3094                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  3095  0003E0  8C81               	bsf	129,6,c	;volatile
  3096  0003E2                     
  3097                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  3098  0003E2  B407               	btfsc	_botoes_ant^0,2,c
  3099  0003E4  EFF6  F001         	goto	i2u36_41
  3100  0003E8  EFF8  F001         	goto	i2u36_40
  3101  0003EC                     i2u36_41:
  3102  0003EC  EFFF  F001         	goto	i2l1182
  3103  0003F0                     i2u36_40:
  3104  0003F0  B281               	btfsc	129,1,c	;volatile
  3105  0003F2  EFFD  F001         	goto	i2u37_41
  3106  0003F6  EFFF  F001         	goto	i2u37_40
  3107  0003FA                     i2u37_41:
  3108  0003FA  EF07  F002         	goto	i2l122
  3109  0003FE                     i2u37_40:
  3110  0003FE                     i2l1182:
  3111  0003FE  0E32               	movlw	50
  3112  000400  6404               	cpfsgt	_cont_l^0,c
  3113  000402  EF05  F002         	goto	i2u38_41
  3114  000406  EF07  F002         	goto	i2u38_40
  3115  00040A                     i2u38_41:
  3116  00040A  EF0D  F002         	goto	i2l120
  3117  00040E                     i2u38_40:
  3118  00040E                     i2l122:
  3119                           
  3120                           ;keyboard.c: 27:         botoes.L = 1;
  3121  00040E  8408               	bsf	_botoes^0,2,c
  3122                           
  3123                           ;keyboard.c: 28:         botoes_ant.L = 1;
  3124  000410  8407               	bsf	_botoes_ant^0,2,c
  3125  000412                     i2l1184:
  3126                           
  3127                           ;keyboard.c: 29:         cont_l = 0;
  3128  000412  0E00               	movlw	0
  3129  000414  6E04               	movwf	_cont_l^0,c
  3130                           
  3131                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  3132  000416  EF27  F002         	goto	i2l1194
  3133  00041A                     i2l120:
  3134  00041A  A407               	btfss	_botoes_ant^0,2,c
  3135  00041C  EF12  F002         	goto	i2u39_41
  3136  000420  EF14  F002         	goto	i2u39_40
  3137  000424                     i2u39_41:
  3138  000424  EF1F  F002         	goto	i2l126
  3139  000428                     i2u39_40:
  3140  000428  B281               	btfsc	129,1,c	;volatile
  3141  00042A  EF19  F002         	goto	i2u40_41
  3142  00042E  EF1B  F002         	goto	i2u40_40
  3143  000432                     i2u40_41:
  3144  000432  EF1F  F002         	goto	i2l126
  3145  000436                     i2u40_40:
  3146  000436                     
  3147                           ;keyboard.c: 31:         botoes.L = 0;
  3148  000436  9408               	bcf	_botoes^0,2,c
  3149                           
  3150                           ;keyboard.c: 32:         botoes_ant.L = 0;
  3151  000438  9407               	bcf	_botoes_ant^0,2,c
  3152  00043A  EF09  F002         	goto	i2l1184
  3153  00043E                     i2l126:
  3154  00043E  A281               	btfss	129,1,c	;volatile
  3155  000440  EF24  F002         	goto	i2u41_41
  3156  000444  EF26  F002         	goto	i2u41_40
  3157  000448                     i2u41_41:
  3158  000448  EF27  F002         	goto	i2l1194
  3159  00044C                     i2u41_40:
  3160  00044C  2A04               	incf	_cont_l^0,f,c
  3161  00044E                     i2l1194:
  3162                           
  3163                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  3164  00044E  B607               	btfsc	_botoes_ant^0,3,c
  3165  000450  EF2C  F002         	goto	i2u42_41
  3166  000454  EF2E  F002         	goto	i2u42_40
  3167  000458                     i2u42_41:
  3168  000458  EF35  F002         	goto	i2l1198
  3169  00045C                     i2u42_40:
  3170  00045C  B681               	btfsc	129,3,c	;volatile
  3171  00045E  EF33  F002         	goto	i2u43_41
  3172  000462  EF35  F002         	goto	i2u43_40
  3173  000466                     i2u43_41:
  3174  000466  EF3D  F002         	goto	i2l131
  3175  00046A                     i2u43_40:
  3176  00046A                     i2l1198:
  3177  00046A  0E32               	movlw	50
  3178  00046C  6403               	cpfsgt	_cont_r^0,c
  3179  00046E  EF3B  F002         	goto	i2u44_41
  3180  000472  EF3D  F002         	goto	i2u44_40
  3181  000476                     i2u44_41:
  3182  000476  EF43  F002         	goto	i2l129
  3183  00047A                     i2u44_40:
  3184  00047A                     i2l131:
  3185                           
  3186                           ;keyboard.c: 37:         botoes.R = 1;
  3187  00047A  8608               	bsf	_botoes^0,3,c
  3188                           
  3189                           ;keyboard.c: 38:         botoes_ant.R = 1;
  3190  00047C  8607               	bsf	_botoes_ant^0,3,c
  3191  00047E                     i2l1200:
  3192                           
  3193                           ;keyboard.c: 39:         cont_r = 0;
  3194  00047E  0E00               	movlw	0
  3195  000480  6E03               	movwf	_cont_r^0,c
  3196                           
  3197                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  3198  000482  EF5D  F002         	goto	i2l1210
  3199  000486                     i2l129:
  3200  000486  A607               	btfss	_botoes_ant^0,3,c
  3201  000488  EF48  F002         	goto	i2u45_41
  3202  00048C  EF4A  F002         	goto	i2u45_40
  3203  000490                     i2u45_41:
  3204  000490  EF55  F002         	goto	i2l135
  3205  000494                     i2u45_40:
  3206  000494  B681               	btfsc	129,3,c	;volatile
  3207  000496  EF4F  F002         	goto	i2u46_41
  3208  00049A  EF51  F002         	goto	i2u46_40
  3209  00049E                     i2u46_41:
  3210  00049E  EF55  F002         	goto	i2l135
  3211  0004A2                     i2u46_40:
  3212  0004A2                     
  3213                           ;keyboard.c: 41:         botoes.R = 0;
  3214  0004A2  9608               	bcf	_botoes^0,3,c
  3215                           
  3216                           ;keyboard.c: 42:         botoes_ant.R = 0;
  3217  0004A4  9607               	bcf	_botoes_ant^0,3,c
  3218  0004A6  EF3F  F002         	goto	i2l1200
  3219  0004AA                     i2l135:
  3220  0004AA  A681               	btfss	129,3,c	;volatile
  3221  0004AC  EF5A  F002         	goto	i2u47_41
  3222  0004B0  EF5C  F002         	goto	i2u47_40
  3223  0004B4                     i2u47_41:
  3224  0004B4  EF5D  F002         	goto	i2l1210
  3225  0004B8                     i2u47_40:
  3226  0004B8  2A03               	incf	_cont_r^0,f,c
  3227  0004BA                     i2l1210:
  3228                           
  3229                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  3230  0004BA  9C81               	bcf	129,6,c	;volatile
  3231  0004BC                     
  3232                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  3233  0004BC  8A81               	bsf	129,5,c	;volatile
  3234  0004BE                     
  3235                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  3236  0004BE  B207               	btfsc	_botoes_ant^0,1,c
  3237  0004C0  EF64  F002         	goto	i2u48_41
  3238  0004C4  EF66  F002         	goto	i2u48_40
  3239  0004C8                     i2u48_41:
  3240  0004C8  EF6D  F002         	goto	i2l1218
  3241  0004CC                     i2u48_40:
  3242  0004CC  B481               	btfsc	129,2,c	;volatile
  3243  0004CE  EF6B  F002         	goto	i2u49_41
  3244  0004D2  EF6D  F002         	goto	i2u49_40
  3245  0004D6                     i2u49_41:
  3246  0004D6  EF75  F002         	goto	i2l140
  3247  0004DA                     i2u49_40:
  3248  0004DA                     i2l1218:
  3249  0004DA  0E32               	movlw	50
  3250  0004DC  6405               	cpfsgt	_cont_d^0,c
  3251  0004DE  EF73  F002         	goto	i2u50_41
  3252  0004E2  EF75  F002         	goto	i2u50_40
  3253  0004E6                     i2u50_41:
  3254  0004E6  EF7B  F002         	goto	i2l138
  3255  0004EA                     i2u50_40:
  3256  0004EA                     i2l140:
  3257                           
  3258                           ;keyboard.c: 49:         botoes.D = 1;
  3259  0004EA  8208               	bsf	_botoes^0,1,c
  3260                           
  3261                           ;keyboard.c: 50:         botoes_ant.D = 1;
  3262  0004EC  8207               	bsf	_botoes_ant^0,1,c
  3263  0004EE                     i2l1220:
  3264                           
  3265                           ;keyboard.c: 51:         cont_d = 0;
  3266  0004EE  0E00               	movlw	0
  3267  0004F0  6E05               	movwf	_cont_d^0,c
  3268                           
  3269                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  3270  0004F2  EF95  F002         	goto	i2l1230
  3271  0004F6                     i2l138:
  3272  0004F6  A207               	btfss	_botoes_ant^0,1,c
  3273  0004F8  EF80  F002         	goto	i2u51_41
  3274  0004FC  EF82  F002         	goto	i2u51_40
  3275  000500                     i2u51_41:
  3276  000500  EF8D  F002         	goto	i2l144
  3277  000504                     i2u51_40:
  3278  000504  B481               	btfsc	129,2,c	;volatile
  3279  000506  EF87  F002         	goto	i2u52_41
  3280  00050A  EF89  F002         	goto	i2u52_40
  3281  00050E                     i2u52_41:
  3282  00050E  EF8D  F002         	goto	i2l144
  3283  000512                     i2u52_40:
  3284  000512                     
  3285                           ;keyboard.c: 53:         botoes.D = 0;
  3286  000512  9208               	bcf	_botoes^0,1,c
  3287                           
  3288                           ;keyboard.c: 54:         botoes_ant.D = 0;
  3289  000514  9207               	bcf	_botoes_ant^0,1,c
  3290  000516  EF77  F002         	goto	i2l1220
  3291  00051A                     i2l144:
  3292  00051A  A481               	btfss	129,2,c	;volatile
  3293  00051C  EF92  F002         	goto	i2u53_41
  3294  000520  EF94  F002         	goto	i2u53_40
  3295  000524                     i2u53_41:
  3296  000524  EF95  F002         	goto	i2l1230
  3297  000528                     i2u53_40:
  3298  000528  2A05               	incf	_cont_d^0,f,c
  3299  00052A                     i2l1230:
  3300                           
  3301                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  3302  00052A  9A81               	bcf	129,5,c	;volatile
  3303  00052C                     
  3304                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  3305  00052C  8881               	bsf	129,4,c	;volatile
  3306  00052E                     
  3307                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  3308  00052E  A281               	btfss	129,1,c	;volatile
  3309  000530  D002               	bra	i2u54_45
  3310  000532  8808               	bsf	_botoes^0,4,c
  3311  000534  D001               	bra	i2u54_47
  3312  000536                     i2u54_45:
  3313  000536  9808               	bcf	_botoes^0,4,c
  3314  000538                     i2u54_47:
  3315  000538                     
  3316                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  3317  000538  A681               	btfss	129,3,c	;volatile
  3318  00053A  D002               	bra	i2u55_45
  3319  00053C  8A08               	bsf	_botoes^0,5,c
  3320  00053E  D001               	bra	i2u55_47
  3321  000540                     i2u55_45:
  3322  000540  9A08               	bcf	_botoes^0,5,c
  3323  000542                     i2u55_47:
  3324  000542                     
  3325                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  3326  000542  9881               	bcf	129,4,c	;volatile
  3327  000544  0012               	return		;funcret
  3328  000546                     __end_of_le_entrada:
  3329                           	opt callstack 0
  3330                           
  3331                           	psect	rparam
  3332  0000                     
  3333                           	psect	temp
  3334  000070                     btemp:
  3335                           	opt callstack 0
  3336  000070                     	ds	1
  3337  0000                     int$flags	set	btemp
  3338  0000                     wtemp8	set	btemp+1
  3339  0000                     ttemp5	set	btemp+1
  3340  0000                     ttemp6	set	btemp+4
  3341  0000                     ttemp7	set	btemp+8
  3342                           tosu	equ	0xFFF
  3343                           tosh	equ	0xFFE
  3344                           tosl	equ	0xFFD
  3345                           stkptr	equ	0xFFC
  3346                           pclatu	equ	0xFFB
  3347                           pclath	equ	0xFFA
  3348                           pcl	equ	0xFF9
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           prodh	equ	0xFF4
  3354                           prodl	equ	0xFF3
  3355                           indf0	equ	0xFEF
  3356                           postinc0	equ	0xFEE
  3357                           postdec0	equ	0xFED
  3358                           preinc0	equ	0xFEC
  3359                           plusw0	equ	0xFEB
  3360                           fsr0h	equ	0xFEA
  3361                           fsr0l	equ	0xFE9
  3362                           wreg	equ	0xFE8
  3363                           indf1	equ	0xFE7
  3364                           postinc1	equ	0xFE6
  3365                           postdec1	equ	0xFE5
  3366                           preinc1	equ	0xFE4
  3367                           plusw1	equ	0xFE3
  3368                           fsr1h	equ	0xFE2
  3369                           fsr1l	equ	0xFE1
  3370                           bsr	equ	0xFE0
  3371                           indf2	equ	0xFDF
  3372                           postinc2	equ	0xFDE
  3373                           postdec2	equ	0xFDD
  3374                           preinc2	equ	0xFDC
  3375                           plusw2	equ	0xFDB
  3376                           fsr2h	equ	0xFDA
  3377                           fsr2l	equ	0xFD9
  3378                           status	equ	0xFD8


Data Sizes:
    Strings     265
    Constant    0
    Data        3
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     36     111
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->_print_mat
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48445
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   44037
                                             34 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8774
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                                9     7      2    8887
                                             25 COMRAM     9     7      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    8730
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    8730
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8730
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    3744
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4888
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     24      6F       1       88.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      15        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 16 18:50:36 2020

                              _x 006F                                _y 0001  
         ?_display_onoff_control 004C                               l60 0AA6  
                             l45 0B9C                               l54 0DC4  
                             l63 0D56                               l57 081A  
                             l73 08D6                               l81 0740  
                             l76 0B2A                               l69 08D6  
                             l94 0982                               _op 0002  
                    creditos@lcd 0062                      __CFG_OSC$HS 000000  
                            l210 036E                              l220 05BA  
                            l213 0BFC                              l207 0358  
                            l216 0C0A                              l224 0658  
                            l190 0C76                              l174 0984  
                            l176 0A14                              l193 0CD6  
                            l187 0C68                              l904 0D16  
                            u610 082C                              u611 0828  
                            u620 0882                              u700 05D8  
                            u621 087E                              u701 05D4  
                            u630 08A4                              u710 061E  
                            u631 08A0                              u711 061A  
                            u640 08C6                              u800 01F4  
                            u720 062E                              u641 08C2  
                            u801 01F0                              u721 062A  
                            u650 0732                              u810 0204  
                            u730 0658                              u651 072E  
                            u811 0200                              u731 0654  
                            u660 0962                              u820 026A  
                            u740 00B8                              u900 09A0  
                            u661 095E                              u821 0266  
                            u741 00B4                              u901 099C  
                            u670 0982                              u830 027A  
                            u750 00F2                              u910 09C0  
                            u671 097E                              u831 0276  
                            u751 00EE                              u911 09BC  
                            u680 0D16                              u840 02D8  
                            u760 0108                              u920 09E2  
                            u681 0D12                              u841 02D4  
                            u761 0104                              u921 09DE  
                            u850 02EA                              u770 0118  
                            u690 05C8                              u930 0A04  
                            u851 02E6                              u771 0114  
                            u691 05C4                              u931 0A00  
                            u860 02FC                              u780 017E  
                            u861 02F8                              u781 017A  
                            u870 0366                              u790 018E  
                            u871 0362                              u791 018A  
                            u880 0C0A                              u881 0C06  
                            u890 0C76                              u947 0852  
                            u891 0C72                              u957 0D40  
                            u967 0776                              u977 07AE  
                            u987 0804                              u997 0AD8  
                    finaliza@lcd 0062                              _lcd 006D  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0049                     __CFG_WDT$OFF 000000  
                           l1400 08A4                             l1410 08B4  
                           l1412 08C6                             l1500 061E  
                           l1430 06AA                             l1422 065A  
                           l1502 062E                             l1360 0D90  
                           l1440 06F8                             l1432 06D6  
                           l1424 0678                             l1600 0BA0  
                           l1520 0042                             l1504 0642  
                           l1512 064A                             l1362 0D9A  
                           l1370 0D3A                             l1450 073C  
                           l1442 0702                             l1434 06DA  
                           l1426 0696                             l1610 0CC8  
                           l1602 0BF0                             l1530 00F2  
                           l1522 0056                             l1514 0012  
                           l1506 0644                             l1364 0DAA  
                           l1620 078C                             l1612 0742  
                           l1372 0D4A                             l1380 083C  
                           l1444 070C                             l1436 06E4  
                           l1428 06A0                             l1460 08F4  
                           l1452 08D8                             l1604 0C0C  
                           l1540 013E                             l1532 00FA  
                           l1524 0076                             l1516 001A  
                           l1630 080E                             l1622 07A8  
                           l1614 0760                             l1366 0D18  
                           l1382 084C                             l1374 081C  
                           l1446 0716                             l1438 06EE  
                           l1470 0946                             l1606 0C5C  
                           l1550 018E                             l1542 0140  
                           l1534 0108                             l1526 0086  
                           l1518 002E                             l1640 0A60  
                           l1632 0A1A                             l1624 07B8  
                           l1616 0770                             l1368 0D22  
                           l1384 085C                             l1376 082C  
                           l1448 0732                             l1472 0962  
                           l1608 0C78                             l1552 01B2  
                           l1560 01E6                             l1544 0164  
                           l1536 0118                             l1528 00B8  
                           l1480 0546                             l1642 0A8A  
                           l1634 0A38                             l1650 0AD2  
                           l1626 07C4                             l1618 0780  
                           l1378 0838                             l1386 0870  
                           l1474 0966                             l1466 08FC  
                           l1458 08E0                             l1570 022C  
                           l1562 01F4                             l1554 01B4  
                           l1538 013C                             l1546 0170  
                           l1490 05EC                             l1482 0596  
                           l1644 0A9A                             l1636 0A44  
                           l1652 0AE2                             l1628 07FE  
                           l1388 0882                             l1468 0942  
                           l1476 0CD8                             l1580 029E  
                           l1572 0250                             l1564 0204  
                           l1556 01B6                             l1548 017E  
                           l1492 05EE                             l1484 05AA  
                           l1660 0984                             l1638 0A54  
                           l1654 0AEE                             l1646 0AA8  
                           l1398 0892                             l1478 0CE8  
                           l1590 02D8                             l1582 02A0  
                           l1566 0228                             l1574 025C  
                           l1558 01DA                             l1494 05F0  
                           l1486 05C8                             l1670 09D0  
                           l1662 0990                             l1656 0B0E  
                           l1648 0AC6                             l1592 02EA  
                           l1584 02A2                             l1576 026A  
                           l1568 022A                             l1496 0604  
                           l1488 05D8                             l1672 09E2  
                           l1664 09A0                             l1680 0B44  
                           l1658 0B1E                             l1594 02FC  
                           l1578 027A                             l1498 0610  
                           l1674 09F2                             l1666 09B0  
                           l1690 0B7A                             l1682 0B46  
                           l1596 034C                             l1588 02CA  
                           l1676 0A04                             l1668 09C0  
                           l1692 0B8E                             l1684 0B48  
                           l1598 0366                             l1694 0B90  
                           l1686 0B4A                             l1678 0B2C  
                           l1688 0B62                             STR_1 7FCE  
                           STR_2 7FEE                             STR_3 7EF6  
                           STR_4 7EF6                             STR_5 7FBE  
                           STR_6 7EF6                             STR_7 7EF6  
                           STR_8 7EF6                             STR_9 7F28  
                           u1007 0B14                             u1017 0A4A  
                           u1027 0A90                             u1037 0DA0  
                           u1047 0DBA                             i2l40 0DE0  
                           _main 0B2C                             _menu 0546  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 0070  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E            function_set@num_lines 004F  
                   print_mat@lcd 0058                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 004C  
                          ?_main 0049                            ?_menu 0062  
                          STR_10 7EF5                            STR_11 7EF5  
                          STR_12 7EF5                            STR_20 7F9E  
                          STR_21 7F4A                            STR_13 7F39  
                          STR_22 7F7D                            STR_14 7F17  
                          STR_23 7F5B                            STR_15 7F06  
                          STR_16 7EF5                            STR_24 7F6C  
                          STR_17 7FDE                            STR_18 7F8E  
                          STR_19 7FAE                            _T0CON 000FD5  
                          i2l111 03AA                            i2l120 041A  
                          i2l113 039E                            i2l122 040E  
                          i2l131 047A                            i2l140 04EA  
                          i2l117 03CE                            i2l126 043E  
                          i2l135 04AA                            i2l144 051A  
                          i2l129 0486                            i2l138 04F6  
                          i2l147 0544                            _TMR0L 000FD6  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0049                  __end_of_lcd_cmd 0D58  
                __end_of_goto_XY 08D8                            _jogar 0012  
                          _pulso 0D90                            tablat 000FF5  
                          ttemp5 0071                            ttemp6 0074  
                          ttemp7 0078                            status 000FD8  
                          wtemp8 0071                  __initialization 0D58  
                   __end_of_main 0BA0                     __end_of_menu 065A  
                         ??_main 006D                           ??_menu 0064  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         ?_jogar 0062                           ?_pulso 0049  
                         i2l1200 047E                           i2l1202 0494  
                         i2l1210 04BA                           i2l1220 04EE  
                         i2l1212 04BC                           i2l1204 04A2  
                         i2l1222 0504                           i2l1230 052A  
                         i2l1214 04BE                           i2l1310 0DDA  
                         i2l1232 052C                           i2l1224 0512  
                         i2l1216 04CC                           i2l1208 04B8  
                         i2l1160 0380                           i2l1312 0DDE  
                         i2l1234 052E                           i2l1218 04DA  
                         i2l1162 038E                           i2l1306 0DC8  
                         i2l1236 0538                           i2l1228 0528  
                         i2l1180 03F0                           i2l1172 03DC  
                         i2l1164 03A2                           i2l1308 0DD6  
                         i2l1238 0542                           i2l1182 03FE  
                         i2l1166 03B8                           i2l1174 03DE  
                         i2l1158 0370                           i2l1192 044C  
                         i2l1184 0412                           i2l1176 03E0  
                         i2l1168 03C6                           i2l1186 0428  
                         i2l1194 044E                           i2l1178 03E2  
                         i2l1196 045C                           i2l1188 0436  
                         i2l1198 046A                 __end_of_creditos 0C78  
               __end_of_finaliza 0CD8                      goto_XY@temp 0057  
           __size_of_gerenciador 0096                           _cont_d 0005  
                         _cont_l 0004                           _cont_r 0003  
                         _cont_u 0006                           _botoes 0008  
                         clear_0 0D7C                    ?_function_set 004C  
                      ??_lcd_cmd 004F                           _strcpy 0CD8  
                      ??_goto_XY 0054                     __pdataCOMRAM 006D  
                   __mediumconst 7EF4                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
       display_onoff_control@lcd 004C                       __accesstop 0080  
        __end_of__initialization 0D82                    ___rparam_used 000001  
        ??_display_onoff_control 0051                   __pcstackCOMRAM 0049  
                  __end_of_jogar 0370                   gerenciador@lcd 006B  
                  __end_of_pulso 0DC6                   ??_function_set 0051  
                        ??_jogar 0064             __size_of_int_handler 0DDC  
                        ??_pulso 004B                          ?_strcpy 0049  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 004F  
                        i2u30_40 0380                          i2u30_41 037C  
                        i2u31_40 038E                          i2u31_41 038A  
                        i2u40_40 0436                          i2u32_40 039E  
                        i2u40_41 0432                          i2u32_41 039A  
                        i2u41_40 044C                          i2u33_40 03B8  
                        i2u41_41 0448                          i2u33_41 03B4  
                        i2u50_40 04EA                          i2u42_40 045C  
                        i2u34_40 03C6                          i2u50_41 04E6  
                        i2u42_41 0458                          i2u34_41 03C2  
                        i2u51_40 0504                          i2u43_40 046A  
                        i2u35_40 03DC                          i2u51_41 0500  
                        i2u43_41 0466                          i2u35_41 03D8  
                        i2u52_40 0512                          i2u44_40 047A  
                        i2u36_40 03F0                          i2u60_40 0DD6  
                        i2u52_41 050E                          i2u44_41 0476  
                        i2u36_41 03EC                          i2u60_41 0DD2  
                        i2u53_40 0528                          i2u45_40 0494  
                        i2u37_40 03FE                          i2u53_41 0524  
                        i2u45_41 0490                          i2u37_41 03FA  
                        i2u46_40 04A2                          i2u38_40 040E  
                        i2u46_41 049E                          i2u38_41 040A  
                        i2u54_45 0536                          i2u54_47 0538  
                        i2u47_40 04B8                          i2u39_40 0428  
                        i2u47_41 04B4                          i2u39_41 0424  
                        i2u55_45 0540                          i2u55_47 0542  
                        i2u48_40 04CC                          i2u48_41 04C8  
                        i2u49_40 04DA                          i2u49_41 04D6  
                      ?_creditos 0062                       _le_entrada 0370  
                      ?_finaliza 0062                       _botoes_ant 0007  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 004F                          __Lparam 0000  
                        __pcinit 0D58                          __ramtop 0600  
                  instrucoes@lcd 0062                          __ptext0 0B2C  
                        __ptext1 0984                          __ptext2 0546  
                        __ptext3 0012                          __ptext4 0BA0  
                        __ptext5 0C78                          __ptext6 0C0C  
                        __ptext7 0CD8                          __ptext8 08D8  
                        __ptext9 065A                          _lcd_cmd 0D18  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 081C                       ??_creditos 0064  
                     ??_finaliza 0064                   __pintcode_body 0DC6  
           end_of_initialization 0D82                       _instrucoes 0BA0  
                        menu@lcd 0062             __end_of_function_set 081C  
                  __Lmediumconst 7EF4                          int_func 0DC6  
              __end_of_print_mat 0984                          postinc0 000FEE  
                        postinc2 000FDE                          strcpy@d 004F  
                        strcpy@s 004D                        _PORTBbits 000F81  
                     lcd_cmd@lcd 004C                      ?_le_entrada 0049  
                  ??_gerenciador 006D   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 0AA8                       _write_char 065A  
                  __pidataCOMRAM 0DE4                   __end_of_strcpy 0D18  
            start_initialization 0D58                      ?_instrucoes 0062  
                     jogar@bateu 0069                   _entry_mode_set 0AA8  
                     goto_XY@lcd 0050              __size_of_le_entrada 01D6  
            __end_of_gerenciador 0A1A                         ??_strcpy 004D  
                    __pbssCOMRAM 0001                    ??_int_handler 0049  
          __size_of_function_set 00DA                __size_of_creditos 006C  
              __size_of_finaliza 0060           __end_of_entry_mode_set 0B2C  
                      __pintcode 0008                    __pmediumconst 7EF4  
                    ?_write_char 0049              __size_of_instrucoes 006C  
                       ?_lcd_cmd 004C                     _function_set 0742  
                       ?_goto_XY 0050                   __size_of_jogar 035E  
                 __size_of_pulso 0036              __end_of_int_handler 0DE4  
                ?_entry_mode_set 004C                      _gerenciador 0984  
   entry_mode_set@move_direction 004E                        _print_mat 08D8  
display_onoff_control@display_on 004E       display_onoff_control@blink 0050  
                    write_char@c 004B                       print_mat@i 0060  
                     print_mat@j 005E                     ??_le_entrada 0049  
            __size_of_write_char 00E8                         __Hrparam 0000  
                       __Lrparam 0000                entry_mode_set@lcd 004C  
                     ?_print_mat 0058               __end_of_le_entrada 0546  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 081C  
                       __ptext11 0D18                         __ptext12 0742  
                       __ptext13 0AA8                         __ptext14 0A1A  
                       __ptext15 0D90                         __ptext17 0370  
                       _creditos 0C0C                         _finaliza 0C78  
                   ??_instrucoes 0064                       strcpy@dest 0049  
                       _mat_disp 0009                    __size_of_main 0074  
                  __size_of_menu 0114                         int$flags 0070  
                       lcd_cmd@a 004E            _display_onoff_control 0A1A  
             __end_of_instrucoes 0C0C                       _INTCONbits 000FF2  
                       jogar@lcd 0062                         goto_XY@a 0056  
                       goto_XY@x 0052                         goto_XY@y 0053  
                       goto_XY@z 0055                         intlevel2 0000  
                      strcpy@src 004B          function_set@data_lenght 004E  
                    ??_print_mat 005A                     ??_write_char 004C  
                       pulso@lcd 0049                 ??_entry_mode_set 0050  
          function_set@char_font 0050               __end_of_write_char 0742  
                   ?_gerenciador 006B  
