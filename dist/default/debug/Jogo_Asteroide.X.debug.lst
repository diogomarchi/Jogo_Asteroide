

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 10 14:38:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000B1E                     __pidataCOMRAM:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for instrucoes@F3089
    78  000B1E  32                 	db	50
    79  000B1F  2E                 	db	46
    80  000B20  45                 	db	69
    81  000B21  53                 	db	83
    82  000B22  43                 	db	67
    83  000B23  41                 	db	65
    84  000B24  50                 	db	80
    85  000B25  45                 	db	69
    86  000B26  20                 	db	32
    87  000B27  56                 	db	86
    88  000B28  4F                 	db	79
    89  000B29  4C                 	db	76
    90  000B2A  54                 	db	84
    91  000B2B  41                 	db	65
    92  000B2C  00                 	db	0
    93  000B2D  00                 	db	0
    94                           
    95                           ;initializer for instrucoes@F3086
    96  000B2E  4E                 	db	78
    97  000B2F  41                 	db	65
    98  000B30  56                 	db	86
    99  000B31  45                 	db	69
   100  000B32  00                 	db	0
   101  000B33  00                 	db	0
   102  000B34  00                 	db	0
   103  000B35  00                 	db	0
   104  000B36  00                 	db	0
   105  000B37  00                 	db	0
   106  000B38  00                 	db	0
   107  000B39  00                 	db	0
   108  000B3A  00                 	db	0
   109  000B3B  00                 	db	0
   110  000B3C  00                 	db	0
   111  000B3D  00                 	db	0
   112                           
   113                           ;initializer for instrucoes@F3083
   114  000B3E  31                 	db	49
   115  000B3F  2E                 	db	46
   116  000B40  53                 	db	83
   117  000B41  45                 	db	69
   118  000B42  54                 	db	84
   119  000B43  41                 	db	65
   120  000B44  53                 	db	83
   121  000B45  20                 	db	32
   122  000B46  4D                 	db	77
   123  000B47  4F                 	db	79
   124  000B48  56                 	db	86
   125  000B49  45                 	db	69
   126  000B4A  4D                 	db	77
   127  000B4B  20                 	db	32
   128  000B4C  41                 	db	65
   129  000B4D  00                 	db	0
   130                           
   131                           ;initializer for creditos@F3059
   132  000B4E  32                 	db	50
   133  000B4F  2E                 	db	46
   134  000B50  47                 	db	71
   135  000B51  45                 	db	69
   136  000B52  4F                 	db	79
   137  000B53  52                 	db	82
   138  000B54  47                 	db	71
   139  000B55  45                 	db	69
   140  000B56  20                 	db	32
   141  000B57  4E                 	db	78
   142  000B58  41                 	db	65
   143  000B59  52                 	db	82
   144  000B5A  44                 	db	68
   145  000B5B  45                 	db	69
   146  000B5C  53                 	db	83
   147  000B5D  00                 	db	0
   148                           
   149                           ;initializer for creditos@F3056
   150  000B5E  31                 	db	49
   151  000B5F  2E                 	db	46
   152  000B60  44                 	db	68
   153  000B61  49                 	db	73
   154  000B62  4F                 	db	79
   155  000B63  47                 	db	71
   156  000B64  4F                 	db	79
   157  000B65  20                 	db	32
   158  000B66  4D                 	db	77
   159  000B67  41                 	db	65
   160  000B68  52                 	db	82
   161  000B69  43                 	db	67
   162  000B6A  48                 	db	72
   163  000B6B  49                 	db	73
   164  000B6C  00                 	db	0
   165  000B6D  00                 	db	0
   166                           
   167                           ;initializer for _controle
   168  000B6E  01                 	db	1
   169                           
   170                           	psect	idataBANK0
   171  000D0E                     __pidataBANK0:
   172                           	opt callstack 0
   173                           
   174                           ;initializer for menu@F3101
   175  000D0E  31                 	db	49
   176  000D0F  2E                 	db	46
   177  000D10  4A                 	db	74
   178  000D11  4F                 	db	79
   179  000D12  47                 	db	71
   180  000D13  41                 	db	65
   181  000D14  52                 	db	82
   182  000D15  00                 	db	0
   183  000D16  00                 	db	0
   184  000D17  00                 	db	0
   185  000D18  00                 	db	0
   186  000D19  00                 	db	0
   187  000D1A  00                 	db	0
   188  000D1B  00                 	db	0
   189  000D1C  00                 	db	0
   190  000D1D  00                 	db	0
   191                           
   192                           ;initializer for instrucoes@F3092
   193  000D1E  50                 	db	80
   194  000D1F  52                 	db	82
   195  000D20  4F                 	db	79
   196  000D21  20                 	db	32
   197  000D22  4D                 	db	77
   198  000D23  45                 	db	69
   199  000D24  4E                 	db	78
   200  000D25  55                 	db	85
   201  000D26  00                 	db	0
   202  000D27  00                 	db	0
   203  000D28  00                 	db	0
   204  000D29  00                 	db	0
   205  000D2A  00                 	db	0
   206  000D2B  00                 	db	0
   207  000D2C  00                 	db	0
   208  000D2D  00                 	db	0
   209                           
   210                           	psect	idataBANK1
   211  000CDE                     __pidataBANK1:
   212                           	opt callstack 0
   213                           
   214                           ;initializer for menu@F3110
   215  000CDE  34                 	db	52
   216  000CDF  2E                 	db	46
   217  000CE0  46                 	db	70
   218  000CE1  49                 	db	73
   219  000CE2  4E                 	db	78
   220  000CE3  41                 	db	65
   221  000CE4  4C                 	db	76
   222  000CE5  49                 	db	73
   223  000CE6  5A                 	db	90
   224  000CE7  41                 	db	65
   225  000CE8  52                 	db	82
   226  000CE9  00                 	db	0
   227  000CEA  00                 	db	0
   228  000CEB  00                 	db	0
   229  000CEC  00                 	db	0
   230  000CED  00                 	db	0
   231                           
   232                           ;initializer for menu@F3107
   233  000CEE  33                 	db	51
   234  000CEF  2E                 	db	46
   235  000CF0  43                 	db	67
   236  000CF1  52                 	db	82
   237  000CF2  45                 	db	69
   238  000CF3  44                 	db	68
   239  000CF4  49                 	db	73
   240  000CF5  54                 	db	84
   241  000CF6  4F                 	db	79
   242  000CF7  53                 	db	83
   243  000CF8  00                 	db	0
   244  000CF9  00                 	db	0
   245  000CFA  00                 	db	0
   246  000CFB  00                 	db	0
   247  000CFC  00                 	db	0
   248  000CFD  00                 	db	0
   249                           
   250                           ;initializer for menu@F3104
   251  000CFE  32                 	db	50
   252  000CFF  2E                 	db	46
   253  000D00  49                 	db	73
   254  000D01  4E                 	db	78
   255  000D02  53                 	db	83
   256  000D03  54                 	db	84
   257  000D04  52                 	db	82
   258  000D05  55                 	db	85
   259  000D06  43                 	db	67
   260  000D07  4F                 	db	79
   261  000D08  45                 	db	69
   262  000D09  53                 	db	83
   263  000D0A  00                 	db	0
   264  000D0B  00                 	db	0
   265  000D0C  00                 	db	0
   266  000D0D  00                 	db	0
   267                           
   268                           	psect	nvCOMRAM
   269  00006B                     __pnvCOMRAM:
   270                           	opt callstack 0
   271  00006B                     _lcd:
   272                           	opt callstack 0
   273  00006B                     	ds	2
   274  0000                     _TMR0	set	4054
   275  0000                     _T0CONbits	set	4053
   276  0000                     _TRISD	set	3989
   277  0000                     _ADCON1	set	4033
   278  0000                     _PORTB	set	3969
   279  0000                     _TRISB	set	3987
   280  0000                     _CMCON	set	4020
   281  0000                     _PORTBbits	set	3969
   282  0000                     _INTCONbits	set	4082
   283  0000                     _PORTD	set	3971
   284                           
   285                           ; #config settings
   286  0000                     
   287                           	psect	cinit
   288  000AB0                     __pcinit:
   289                           	opt callstack 0
   290  000AB0                     start_initialization:
   291                           	opt callstack 0
   292  000AB0                     __initialization:
   293                           	opt callstack 0
   294                           
   295                           ; Initialize objects allocated to BANK1 (48 bytes)
   296                           ; load TBLPTR registers with __pidataBANK1
   297  000AB0  0EDE               	movlw	low __pidataBANK1
   298  000AB2  6EF6               	movwf	tblptrl,c
   299  000AB4  0E0C               	movlw	high __pidataBANK1
   300  000AB6  6EF7               	movwf	tblptrh,c
   301  000AB8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   302  000ABA  6EF8               	movwf	tblptru,c
   303  000ABC  EE01  F000         	lfsr	0,__pdataBANK1
   304  000AC0  EE10 F030          	lfsr	1,48
   305  000AC4                     copy_data0:
   306  000AC4  0009               	tblrd		*+
   307  000AC6  CFF5 FFEE          	movff	tablat,postinc0
   308  000ACA  50E5               	movf	postdec1,w,c
   309  000ACC  50E1               	movf	fsr1l,w,c
   310  000ACE  E1FA               	bnz	copy_data0
   311                           
   312                           ; Initialize objects allocated to BANK0 (32 bytes)
   313                           ; load TBLPTR registers with __pidataBANK0
   314  000AD0  0E0E               	movlw	low __pidataBANK0
   315  000AD2  6EF6               	movwf	tblptrl,c
   316  000AD4  0E0D               	movlw	high __pidataBANK0
   317  000AD6  6EF7               	movwf	tblptrh,c
   318  000AD8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   319  000ADA  6EF8               	movwf	tblptru,c
   320  000ADC  EE00  F0DF         	lfsr	0,__pdataBANK0
   321  000AE0  EE10 F020          	lfsr	1,32
   322  000AE4                     copy_data1:
   323  000AE4  0009               	tblrd		*+
   324  000AE6  CFF5 FFEE          	movff	tablat,postinc0
   325  000AEA  50E5               	movf	postdec1,w,c
   326  000AEC  50E1               	movf	fsr1l,w,c
   327  000AEE  E1FA               	bnz	copy_data1
   328                           
   329                           ; Initialize objects allocated to COMRAM (81 bytes)
   330                           ; load TBLPTR registers with __pidataCOMRAM
   331  000AF0  0E1E               	movlw	low __pidataCOMRAM
   332  000AF2  6EF6               	movwf	tblptrl,c
   333  000AF4  0E0B               	movlw	high __pidataCOMRAM
   334  000AF6  6EF7               	movwf	tblptrh,c
   335  000AF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   336  000AFA  6EF8               	movwf	tblptru,c
   337  000AFC  EE00  F001         	lfsr	0,__pdataCOMRAM
   338  000B00  EE10 F051          	lfsr	1,81
   339  000B04                     copy_data2:
   340  000B04  0009               	tblrd		*+
   341  000B06  CFF5 FFEE          	movff	tablat,postinc0
   342  000B0A  50E5               	movf	postdec1,w,c
   343  000B0C  50E1               	movf	fsr1l,w,c
   344  000B0E  E1FA               	bnz	copy_data2
   345  000B10                     end_of_initialization:
   346                           	opt callstack 0
   347  000B10                     __end_of__initialization:
   348                           	opt callstack 0
   349  000B10  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   350  000B12  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   351  000B14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   352  000B16  6EF8               	movwf	tblptru,c
   353  000B18  0100               	movlb	0
   354  000B1A  EF71  F003         	goto	_main	;jump to C main() function
   355                           
   356                           	psect	dataCOMRAM
   357  000001                     __pdataCOMRAM:
   358                           	opt callstack 0
   359  000001                     instrucoes@F3089:
   360                           	opt callstack 0
   361  000001                     	ds	16
   362  000011                     instrucoes@F3086:
   363                           	opt callstack 0
   364  000011                     	ds	16
   365  000021                     instrucoes@F3083:
   366                           	opt callstack 0
   367  000021                     	ds	16
   368  000031                     creditos@F3059:
   369                           	opt callstack 0
   370  000031                     	ds	16
   371  000041                     creditos@F3056:
   372                           	opt callstack 0
   373  000041                     	ds	16
   374  000051                     _controle:
   375                           	opt callstack 0
   376  000051                     	ds	1
   377                           
   378                           	psect	dataBANK0
   379  0000DF                     __pdataBANK0:
   380                           	opt callstack 0
   381  0000DF                     menu@F3101:
   382                           	opt callstack 0
   383  0000DF                     	ds	16
   384  0000EF                     instrucoes@F3092:
   385                           	opt callstack 0
   386  0000EF                     	ds	16
   387                           
   388                           	psect	dataBANK1
   389  000100                     __pdataBANK1:
   390                           	opt callstack 0
   391  000100                     menu@F3110:
   392                           	opt callstack 0
   393  000100                     	ds	16
   394  000110                     menu@F3107:
   395                           	opt callstack 0
   396  000110                     	ds	16
   397  000120                     menu@F3104:
   398                           	opt callstack 0
   399  000120                     	ds	16
   400                           
   401                           	psect	cstackBANK0
   402  000080                     __pcstackBANK0:
   403                           	opt callstack 0
   404  000080                     ??_function_set:
   405  000080                     ??_display_onoff_control:
   406  000080                     goto_XY@lcd:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x0
   410  000080                     	ds	2
   411  000082                     goto_XY@x:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x2
   415  000082                     	ds	1
   416  000083                     goto_XY@y:
   417                           	opt callstack 0
   418                           
   419                           ; 1 bytes @ 0x3
   420  000083                     	ds	1
   421  000084                     goto_XY@z:
   422                           	opt callstack 0
   423                           
   424                           ; 1 bytes @ 0x4
   425  000084                     	ds	1
   426  000085                     goto_XY@a:
   427                           	opt callstack 0
   428                           
   429                           ; 1 bytes @ 0x5
   430  000085                     	ds	1
   431  000086                     goto_XY@temp:
   432                           	opt callstack 0
   433                           
   434                           ; 1 bytes @ 0x6
   435  000086                     	ds	1
   436  000087                     menu@lcd:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x7
   440  000087                     	ds	2
   441  000089                     ??_menu:
   442                           
   443                           ; 1 bytes @ 0x9
   444  000089                     	ds	2
   445  00008B                     menu@palavra:
   446                           	opt callstack 0
   447                           
   448                           ; 16 bytes @ 0xB
   449  00008B                     	ds	16
   450  00009B                     menu@palavra2:
   451                           	opt callstack 0
   452                           
   453                           ; 16 bytes @ 0x1B
   454  00009B                     	ds	16
   455  0000AB                     menu@palavra3:
   456                           	opt callstack 0
   457                           
   458                           ; 16 bytes @ 0x2B
   459  0000AB                     	ds	16
   460  0000BB                     menu@palavra4:
   461                           	opt callstack 0
   462                           
   463                           ; 16 bytes @ 0x3B
   464  0000BB                     	ds	16
   465  0000CB                     menu@tamanho:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x4B
   469  0000CB                     	ds	2
   470  0000CD                     menu@tamanho2:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0x4D
   474  0000CD                     	ds	2
   475  0000CF                     menu@tamanho3:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x4F
   479  0000CF                     	ds	2
   480  0000D1                     menu@tamanho4:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0x51
   484  0000D1                     	ds	4
   485  0000D5                     menu@i:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x55
   489  0000D5                     	ds	2
   490  0000D7                     menu@i_360:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x57
   494  0000D7                     	ds	2
   495  0000D9                     menu@i_361:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x59
   499  0000D9                     	ds	2
   500  0000DB                     menu@i_362:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x5B
   504  0000DB                     	ds	2
   505  0000DD                     ??_main:
   506                           
   507                           ; 1 bytes @ 0x5D
   508  0000DD                     	ds	2
   509                           
   510                           	psect	cstackCOMRAM
   511  000052                     __pcstackCOMRAM:
   512                           	opt callstack 0
   513  000052                     i2pulso@lcd:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x0
   517  000052                     	ds	2
   518  000054                     ??i2_pulso:
   519                           
   520                           ; 1 bytes @ 0x2
   521  000054                     	ds	1
   522  000055                     i2lcd_cmd@lcd:
   523                           	opt callstack 0
   524  000055                     i2write_char@lcd:
   525                           	opt callstack 0
   526  000055                     i2clear_display@lcd:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x3
   530  000055                     	ds	2
   531  000057                     ??i2_clear_display:
   532  000057                     i2lcd_cmd@a:
   533                           	opt callstack 0
   534  000057                     i2write_char@c:
   535                           	opt callstack 0
   536                           
   537                           ; 1 bytes @ 0x5
   538  000057                     	ds	1
   539  000058                     ??i2_lcd_cmd:
   540  000058                     ??i2_write_char:
   541                           
   542                           ; 1 bytes @ 0x6
   543  000058                     	ds	1
   544  000059                     i2goto_XY@lcd:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x7
   548  000059                     	ds	2
   549  00005B                     i2goto_XY@x:
   550                           	opt callstack 0
   551                           
   552                           ; 1 bytes @ 0x9
   553  00005B                     	ds	1
   554  00005C                     i2goto_XY@y:
   555                           	opt callstack 0
   556                           
   557                           ; 1 bytes @ 0xA
   558  00005C                     	ds	1
   559  00005D                     ??i2_goto_XY:
   560                           
   561                           ; 1 bytes @ 0xB
   562  00005D                     	ds	1
   563  00005E                     i2goto_XY@z:
   564                           	opt callstack 0
   565                           
   566                           ; 1 bytes @ 0xC
   567  00005E                     	ds	1
   568  00005F                     i2goto_XY@a:
   569                           	opt callstack 0
   570                           
   571                           ; 1 bytes @ 0xD
   572  00005F                     	ds	1
   573  000060                     i2goto_XY@temp:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0xE
   577  000060                     	ds	1
   578  000061                     ??_int_handler:
   579                           
   580                           ; 1 bytes @ 0xF
   581  000061                     	ds	2
   582  000063                     ?_strlen:
   583                           	opt callstack 0
   584  000063                     pulso@lcd:
   585                           	opt callstack 0
   586  000063                     strlen@s:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x11
   590  000063                     	ds	2
   591  000065                     ??_pulso:
   592  000065                     strlen@a:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x13
   596  000065                     	ds	1
   597  000066                     function_set@lcd:
   598                           	opt callstack 0
   599  000066                     display_onoff_control@lcd:
   600                           	opt callstack 0
   601  000066                     lcd_cmd@lcd:
   602                           	opt callstack 0
   603  000066                     entry_mode_set@lcd:
   604                           	opt callstack 0
   605  000066                     write_char@lcd:
   606                           	opt callstack 0
   607  000066                     clear_display@lcd:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x14
   611  000066                     	ds	2
   612  000068                     ??_clear_display:
   613  000068                     function_set@data_lenght:
   614                           	opt callstack 0
   615  000068                     display_onoff_control@display_on:
   616                           	opt callstack 0
   617  000068                     lcd_cmd@a:
   618                           	opt callstack 0
   619  000068                     entry_mode_set@move_direction:
   620                           	opt callstack 0
   621  000068                     write_char@c:
   622                           	opt callstack 0
   623                           
   624                           ; 1 bytes @ 0x16
   625  000068                     	ds	1
   626  000069                     ??_write_char:
   627  000069                     ??_lcd_cmd:
   628  000069                     function_set@num_lines:
   629                           	opt callstack 0
   630  000069                     display_onoff_control@cursor_on:
   631                           	opt callstack 0
   632  000069                     entry_mode_set@display_shift:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x17
   636  000069                     	ds	1
   637  00006A                     ??_entry_mode_set:
   638  00006A                     ??_goto_XY:
   639  00006A                     function_set@char_font:
   640                           	opt callstack 0
   641  00006A                     display_onoff_control@blink:
   642                           	opt callstack 0
   643                           
   644                           ; 1 bytes @ 0x18
   645  00006A                     	ds	1
   646                           
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 37 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   666 ;;      Params:         0       0       0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0       0       0
   668 ;;      Temps:          0       2       0       0       0       0       0
   669 ;;      Totals:         0       2       0       0       0       0       0
   670 ;;Total ram usage:        2 bytes
   671 ;; Hardware stack levels required when called:    9
   672 ;; This function calls:
   673 ;;		_display_onoff_control
   674 ;;		_entry_mode_set
   675 ;;		_function_set
   676 ;;		_menu
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text0
   683  0006E2                     __ptext0:
   684                           	opt callstack 0
   685  0006E2                     _main:
   686                           	opt callstack 22
   687  0006E2                     
   688                           ;main.c: 38:     CMCON = 0x07;
   689  0006E2  0E07               	movlw	7
   690  0006E4  6EB4               	movwf	180,c	;volatile
   691  0006E6                     
   692                           ;main.c: 39:     INTCONbits.PEIE = 0x01;
   693  0006E6  8CF2               	bsf	242,6,c	;volatile
   694  0006E8                     
   695                           ;main.c: 40:     INTCONbits.T0IE = 0x01;
   696  0006E8  8AF2               	bsf	242,5,c	;volatile
   697                           
   698                           ;main.c: 42:     TMR0 = 0x6C;
   699  0006EA  0E00               	movlw	0
   700  0006EC  6ED7               	movwf	215,c	;volatile
   701  0006EE  0E6C               	movlw	108
   702  0006F0  6ED6               	movwf	214,c	;volatile
   703                           
   704                           ;main.c: 43:     TRISB = 0xF0;
   705  0006F2  0EF0               	movlw	240
   706  0006F4  6E93               	movwf	147,c	;volatile
   707                           
   708                           ;main.c: 44:     PORTB = 0xF0;
   709  0006F6  0EF0               	movlw	240
   710  0006F8  6E81               	movwf	129,c	;volatile
   711                           
   712                           ;main.c: 45:     ADCON1 = 0x0F;
   713  0006FA  0E0F               	movlw	15
   714  0006FC  6EC1               	movwf	193,c	;volatile
   715                           
   716                           ;main.c: 46:     TRISD = 0x00;
   717  0006FE  0E00               	movlw	0
   718  000700  6E95               	movwf	149,c	;volatile
   719  000702                     
   720                           ;main.c: 47:     INTCONbits.GIE = 1;
   721  000702  8EF2               	bsf	242,7,c	;volatile
   722  000704                     
   723                           ;main.c: 49:     lcd = &PORTD;
   724  000704  0E83               	movlw	131
   725  000706  6E6B               	movwf	_lcd^0,c
   726  000708  0E0F               	movlw	15
   727  00070A  6E6C               	movwf	(_lcd+1)^0,c
   728  00070C                     
   729                           ;main.c: 51:     function_set(lcd, 0, 1, 0);
   730  00070C  C06B  F066         	movff	_lcd,function_set@lcd
   731  000710  C06C  F067         	movff	_lcd+1,function_set@lcd+1
   732  000714  0E00               	movlw	0
   733  000716  6E68               	movwf	function_set@data_lenght^0,c
   734  000718  0E01               	movlw	1
   735  00071A  6E69               	movwf	function_set@num_lines^0,c
   736  00071C  0E00               	movlw	0
   737  00071E  6E6A               	movwf	function_set@char_font^0,c
   738  000720  EC42  F002         	call	_function_set	;wreg free
   739  000724                     
   740                           ;main.c: 52:     display_onoff_control(lcd, 1, 1, 0);
   741  000724  C06B  F066         	movff	_lcd,display_onoff_control@lcd
   742  000728  C06C  F067         	movff	_lcd+1,display_onoff_control@lcd+1
   743  00072C  0E01               	movlw	1
   744  00072E  6E68               	movwf	display_onoff_control@display_on^0,c
   745  000730  0E01               	movlw	1
   746  000732  6E69               	movwf	display_onoff_control@cursor_on^0,c
   747  000734  0E00               	movlw	0
   748  000736  6E6A               	movwf	display_onoff_control@blink^0,c
   749  000738  EC58  F004         	call	_display_onoff_control	;wreg free
   750  00073C                     
   751                           ;main.c: 53:     entry_mode_set(lcd, 1,0);
   752  00073C  C06B  F066         	movff	_lcd,entry_mode_set@lcd
   753  000740  C06C  F067         	movff	_lcd+1,entry_mode_set@lcd+1
   754  000744  0E01               	movlw	1
   755  000746  6E68               	movwf	entry_mode_set@move_direction^0,c
   756  000748  0E00               	movlw	0
   757  00074A  6E69               	movwf	entry_mode_set@display_shift^0,c
   758  00074C  ECA2  F004         	call	_entry_mode_set	;wreg free
   759  000750                     
   760                           ;main.c: 54:     T0CONbits.TMR0ON = 1;
   761  000750  8ED5               	bsf	213,7,c	;volatile
   762  000752                     
   763                           ;main.c: 55:     menu(lcd);
   764  000752  C06B  F087         	movff	_lcd,menu@lcd
   765  000756  C06C  F088         	movff	_lcd+1,menu@lcd+1
   766  00075A  EC09  F000         	call	_menu	;wreg free
   767  00075E                     
   768                           ;main.c: 56:      _delay((unsigned long)((1000)*(16000000/4000.0)));
   769  00075E  0E15               	movlw	21
   770  000760  0100               	movlb	0	; () banked
   771  000762  6FDE               	movwf	(??_main+1)& (0+255),b
   772  000764  0E4B               	movlw	75
   773  000766  6FDD               	movwf	??_main& (0+255),b
   774  000768  0EBE               	movlw	190
   775  00076A                     u1337:
   776  00076A  2EE8               	decfsz	wreg,f,c
   777  00076C  D7FE               	bra	u1337
   778  00076E  2FDD               	decfsz	??_main& (0+255),f,b
   779  000770  D7FC               	bra	u1337
   780  000772  2FDE               	decfsz	(??_main+1)& (0+255),f,b
   781  000774  D7FA               	bra	u1337
   782  000776  F000               	nop	
   783  000778                     l47:
   784  000778  EFBC  F003         	goto	l47
   785  00077C  EF07  F000         	goto	start
   786  000780                     __end_of_main:
   787                           	opt callstack 0
   788                           
   789 ;; *************** function _menu *****************
   790 ;; Defined at:
   791 ;;		line 113 in file "funcionamento.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  lcd             2    7[BANK0 ] PTR struct .
   794 ;;		 -> NULL(0), PORTD(1), 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  i               2   91[BANK0 ] int 
   797 ;;  i               2   89[BANK0 ] int 
   798 ;;  i               2   87[BANK0 ] int 
   799 ;;  i               2   85[BANK0 ] int 
   800 ;;  palavra4       16   59[BANK0 ] unsigned char [16]
   801 ;;  palavra3       16   43[BANK0 ] unsigned char [16]
   802 ;;  palavra2       16   27[BANK0 ] unsigned char [16]
   803 ;;  palavra        16   11[BANK0 ] unsigned char [16]
   804 ;;  opcao           2    0        int 
   805 ;;  tamanho4        2   81[BANK0 ] int 
   806 ;;  tamanho3        2   79[BANK0 ] int 
   807 ;;  tamanho2        2   77[BANK0 ] int 
   808 ;;  tamanho         2   75[BANK0 ] int 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   818 ;;      Params:         0       2       0       0       0       0       0
   819 ;;      Locals:         0      82       0       0       0       0       0
   820 ;;      Temps:          0       2       0       0       0       0       0
   821 ;;      Totals:         0      86       0       0       0       0       0
   822 ;;Total ram usage:       86 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    8
   825 ;; This function calls:
   826 ;;		_clear_display
   827 ;;		_goto_XY
   828 ;;		_strlen
   829 ;;		_write_char
   830 ;; This function is called by:
   831 ;;		_main
   832 ;;		_creditos
   833 ;;		_instrucoes
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text1
   838  000012                     __ptext1:
   839                           	opt callstack 0
   840  000012                     _menu:
   841                           	opt callstack 22
   842  000012                     
   843                           ;funcionamento.c: 114:     char palavra[16] = "1.JOGAR";
   844  000012  EE20  F0DF         	lfsr	2,menu@F3101
   845  000016  EE10  F08B         	lfsr	1,menu@palavra
   846  00001A  0E0F               	movlw	15
   847  00001C                     u1051:
   848  00001C  CFDB FFE3          	movff	plusw2,plusw1
   849  000020  06E8               	decf	wreg,f,c
   850  000022  E2FC               	bc	u1051
   851  000024                     
   852                           ;funcionamento.c: 115:     int tamanho = (int)strlen(palavra);
   853  000024  0E8B               	movlw	low menu@palavra
   854  000026  6E63               	movwf	strlen@s^0,c
   855  000028  0E00               	movlw	high menu@palavra
   856  00002A  6E64               	movwf	(strlen@s+1)^0,c
   857  00002C  EC3A  F006         	call	_strlen	;wreg free
   858  000030  C063  F0CB         	movff	?_strlen,menu@tamanho
   859  000034  C064  F0CC         	movff	?_strlen+1,menu@tamanho+1
   860  000038                     
   861                           ;funcionamento.c: 117:     char palavra2[16] = "2.INSTRUCOES";
   862  000038  EE21  F020         	lfsr	2,menu@F3104
   863  00003C  EE10  F09B         	lfsr	1,menu@palavra2
   864  000040  0E0F               	movlw	15
   865  000042                     u1061:
   866  000042  CFDB FFE3          	movff	plusw2,plusw1
   867  000046  06E8               	decf	wreg,f,c
   868  000048  E2FC               	bc	u1061
   869                           
   870                           ;funcionamento.c: 118:     int tamanho2 = (int)strlen(palavra2);
   871  00004A  0E9B               	movlw	low menu@palavra2
   872  00004C  6E63               	movwf	strlen@s^0,c
   873  00004E  0E00               	movlw	high menu@palavra2
   874  000050  6E64               	movwf	(strlen@s+1)^0,c
   875  000052  EC3A  F006         	call	_strlen	;wreg free
   876  000056  C063  F0CD         	movff	?_strlen,menu@tamanho2
   877  00005A  C064  F0CE         	movff	?_strlen+1,menu@tamanho2+1
   878  00005E                     
   879                           ;funcionamento.c: 120:     char palavra3[16] = "3.CREDITOS";
   880  00005E  EE21  F010         	lfsr	2,menu@F3107
   881  000062  EE10  F0AB         	lfsr	1,menu@palavra3
   882  000066  0E0F               	movlw	15
   883  000068                     u1071:
   884  000068  CFDB FFE3          	movff	plusw2,plusw1
   885  00006C  06E8               	decf	wreg,f,c
   886  00006E  E2FC               	bc	u1071
   887  000070                     
   888                           ;funcionamento.c: 121:     int tamanho3 = (int)strlen(palavra3);
   889  000070  0EAB               	movlw	low menu@palavra3
   890  000072  6E63               	movwf	strlen@s^0,c
   891  000074  0E00               	movlw	high menu@palavra3
   892  000076  6E64               	movwf	(strlen@s+1)^0,c
   893  000078  EC3A  F006         	call	_strlen	;wreg free
   894  00007C  C063  F0CF         	movff	?_strlen,menu@tamanho3
   895  000080  C064  F0D0         	movff	?_strlen+1,menu@tamanho3+1
   896                           
   897                           ;funcionamento.c: 123:     char palavra4[16] = "4.FINALIZAR";
   898  000084  EE21  F000         	lfsr	2,menu@F3110
   899  000088  EE10  F0BB         	lfsr	1,menu@palavra4
   900  00008C  0E0F               	movlw	15
   901  00008E                     u1081:
   902  00008E  CFDB FFE3          	movff	plusw2,plusw1
   903  000092  06E8               	decf	wreg,f,c
   904  000094  E2FC               	bc	u1081
   905  000096                     
   906                           ;funcionamento.c: 124:     int tamanho4 = (int)strlen(palavra4);
   907  000096  0EBB               	movlw	low menu@palavra4
   908  000098  6E63               	movwf	strlen@s^0,c
   909  00009A  0E00               	movlw	high menu@palavra4
   910  00009C  6E64               	movwf	(strlen@s+1)^0,c
   911  00009E  EC3A  F006         	call	_strlen	;wreg free
   912  0000A2  C063  F0D1         	movff	?_strlen,menu@tamanho4
   913  0000A6  C064  F0D2         	movff	?_strlen+1,menu@tamanho4+1
   914  0000AA                     
   915                           ;funcionamento.c: 126:     goto_XY(lcd, 1, 1);
   916  0000AA  C087  F080         	movff	menu@lcd,goto_XY@lcd
   917  0000AE  C088  F081         	movff	menu@lcd+1,goto_XY@lcd+1
   918  0000B2  0E01               	movlw	1
   919  0000B4  0100               	movlb	0	; () banked
   920  0000B6  6F82               	movwf	goto_XY@x& (0+255),b
   921  0000B8  0E01               	movlw	1
   922  0000BA  6F83               	movwf	goto_XY@y& (0+255),b
   923  0000BC  ECB4  F002         	call	_goto_XY	;wreg free
   924  0000C0                     
   925                           ;funcionamento.c: 127:     for(int i = 0; i < tamanho; i ++)
   926  0000C0  0E00               	movlw	0
   927  0000C2  0100               	movlb	0	; () banked
   928  0000C4  6FD6               	movwf	(menu@i+1)& (0+255),b
   929  0000C6  0E00               	movlw	0
   930  0000C8  6FD5               	movwf	menu@i& (0+255),b
   931  0000CA  EF78  F000         	goto	l2180
   932  0000CE                     l2176:
   933                           
   934                           ; BSR set to: 0
   935                           ;funcionamento.c: 128:         write_char(lcd, palavra[i]);
   936  0000CE  C087  F066         	movff	menu@lcd,write_char@lcd
   937  0000D2  C088  F067         	movff	menu@lcd+1,write_char@lcd+1
   938  0000D6  0E8B               	movlw	low menu@palavra
   939  0000D8  25D5               	addwf	menu@i& (0+255),w,b
   940  0000DA  6ED9               	movwf	fsr2l,c
   941  0000DC  0E00               	movlw	high menu@palavra
   942  0000DE  21D6               	addwfc	(menu@i+1)& (0+255),w,b
   943  0000E0  6EDA               	movwf	fsr2h,c
   944  0000E2  50DF               	movf	indf2,w,c
   945  0000E4  6E68               	movwf	write_char@c^0,c
   946  0000E6  ECC0  F003         	call	_write_char	;wreg free
   947  0000EA  0100               	movlb	0	; () banked
   948  0000EC  4BD5               	infsnz	menu@i& (0+255),f,b
   949  0000EE  2BD6               	incf	(menu@i+1)& (0+255),f,b
   950  0000F0                     l2180:
   951                           
   952                           ; BSR set to: 0
   953  0000F0  51CB               	movf	menu@tamanho& (0+255),w,b
   954  0000F2  5DD5               	subwf	menu@i& (0+255),w,b
   955  0000F4  51D6               	movf	(menu@i+1)& (0+255),w,b
   956  0000F6  0A80               	xorlw	128
   957  0000F8  6F89               	movwf	??_menu& (0+255),b
   958  0000FA  51CC               	movf	(menu@tamanho+1)& (0+255),w,b
   959  0000FC  0A80               	xorlw	128
   960  0000FE  5989               	subwfb	??_menu& (0+255),w,b
   961  000100  A0D8               	btfss	status,0,c
   962  000102  EF85  F000         	goto	u1091
   963  000106  EF87  F000         	goto	u1090
   964  00010A                     u1091:
   965  00010A  EF67  F000         	goto	l2176
   966  00010E                     u1090:
   967  00010E                     
   968                           ; BSR set to: 0
   969                           ;funcionamento.c: 130:     goto_XY(lcd, 2, 1);
   970  00010E  C087  F080         	movff	menu@lcd,goto_XY@lcd
   971  000112  C088  F081         	movff	menu@lcd+1,goto_XY@lcd+1
   972  000116  0E02               	movlw	2
   973  000118  6F82               	movwf	goto_XY@x& (0+255),b
   974  00011A  0E01               	movlw	1
   975  00011C  6F83               	movwf	goto_XY@y& (0+255),b
   976  00011E  ECB4  F002         	call	_goto_XY	;wreg free
   977  000122                     
   978                           ;funcionamento.c: 131:     for(int i = 0; i < tamanho2; i ++)
   979  000122  0E00               	movlw	0
   980  000124  0100               	movlb	0	; () banked
   981  000126  6FD8               	movwf	(menu@i_360+1)& (0+255),b
   982  000128  0E00               	movlw	0
   983  00012A  6FD7               	movwf	menu@i_360& (0+255),b
   984  00012C  EFA9  F000         	goto	l2190
   985  000130                     l2186:
   986                           
   987                           ; BSR set to: 0
   988                           ;funcionamento.c: 132:         write_char(lcd, palavra2[i]);
   989  000130  C087  F066         	movff	menu@lcd,write_char@lcd
   990  000134  C088  F067         	movff	menu@lcd+1,write_char@lcd+1
   991  000138  0E9B               	movlw	low menu@palavra2
   992  00013A  25D7               	addwf	menu@i_360& (0+255),w,b
   993  00013C  6ED9               	movwf	fsr2l,c
   994  00013E  0E00               	movlw	high menu@palavra2
   995  000140  21D8               	addwfc	(menu@i_360+1)& (0+255),w,b
   996  000142  6EDA               	movwf	fsr2h,c
   997  000144  50DF               	movf	indf2,w,c
   998  000146  6E68               	movwf	write_char@c^0,c
   999  000148  ECC0  F003         	call	_write_char	;wreg free
  1000  00014C  0100               	movlb	0	; () banked
  1001  00014E  4BD7               	infsnz	menu@i_360& (0+255),f,b
  1002  000150  2BD8               	incf	(menu@i_360+1)& (0+255),f,b
  1003  000152                     l2190:
  1004                           
  1005                           ; BSR set to: 0
  1006  000152  51CD               	movf	menu@tamanho2& (0+255),w,b
  1007  000154  5DD7               	subwf	menu@i_360& (0+255),w,b
  1008  000156  51D8               	movf	(menu@i_360+1)& (0+255),w,b
  1009  000158  0A80               	xorlw	128
  1010  00015A  6F89               	movwf	??_menu& (0+255),b
  1011  00015C  51CE               	movf	(menu@tamanho2+1)& (0+255),w,b
  1012  00015E  0A80               	xorlw	128
  1013  000160  5989               	subwfb	??_menu& (0+255),w,b
  1014  000162  A0D8               	btfss	status,0,c
  1015  000164  EFB6  F000         	goto	u1101
  1016  000168  EFB8  F000         	goto	u1100
  1017  00016C                     u1101:
  1018  00016C  EF98  F000         	goto	l2186
  1019  000170                     u1100:
  1020  000170                     
  1021                           ; BSR set to: 0
  1022                           ;funcionamento.c: 134:     goto_XY(lcd, 3, 1);
  1023  000170  C087  F080         	movff	menu@lcd,goto_XY@lcd
  1024  000174  C088  F081         	movff	menu@lcd+1,goto_XY@lcd+1
  1025  000178  0E03               	movlw	3
  1026  00017A  6F82               	movwf	goto_XY@x& (0+255),b
  1027  00017C  0E01               	movlw	1
  1028  00017E  6F83               	movwf	goto_XY@y& (0+255),b
  1029  000180  ECB4  F002         	call	_goto_XY	;wreg free
  1030  000184                     
  1031                           ;funcionamento.c: 135:     for(int i = 0; i < tamanho3; i ++)
  1032  000184  0E00               	movlw	0
  1033  000186  0100               	movlb	0	; () banked
  1034  000188  6FDA               	movwf	(menu@i_361+1)& (0+255),b
  1035  00018A  0E00               	movlw	0
  1036  00018C  6FD9               	movwf	menu@i_361& (0+255),b
  1037  00018E  EFDA  F000         	goto	l2200
  1038  000192                     l2196:
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;funcionamento.c: 136:         write_char(lcd, palavra3[i]);
  1042  000192  C087  F066         	movff	menu@lcd,write_char@lcd
  1043  000196  C088  F067         	movff	menu@lcd+1,write_char@lcd+1
  1044  00019A  0EAB               	movlw	low menu@palavra3
  1045  00019C  25D9               	addwf	menu@i_361& (0+255),w,b
  1046  00019E  6ED9               	movwf	fsr2l,c
  1047  0001A0  0E00               	movlw	high menu@palavra3
  1048  0001A2  21DA               	addwfc	(menu@i_361+1)& (0+255),w,b
  1049  0001A4  6EDA               	movwf	fsr2h,c
  1050  0001A6  50DF               	movf	indf2,w,c
  1051  0001A8  6E68               	movwf	write_char@c^0,c
  1052  0001AA  ECC0  F003         	call	_write_char	;wreg free
  1053  0001AE  0100               	movlb	0	; () banked
  1054  0001B0  4BD9               	infsnz	menu@i_361& (0+255),f,b
  1055  0001B2  2BDA               	incf	(menu@i_361+1)& (0+255),f,b
  1056  0001B4                     l2200:
  1057                           
  1058                           ; BSR set to: 0
  1059  0001B4  51CF               	movf	menu@tamanho3& (0+255),w,b
  1060  0001B6  5DD9               	subwf	menu@i_361& (0+255),w,b
  1061  0001B8  51DA               	movf	(menu@i_361+1)& (0+255),w,b
  1062  0001BA  0A80               	xorlw	128
  1063  0001BC  6F89               	movwf	??_menu& (0+255),b
  1064  0001BE  51D0               	movf	(menu@tamanho3+1)& (0+255),w,b
  1065  0001C0  0A80               	xorlw	128
  1066  0001C2  5989               	subwfb	??_menu& (0+255),w,b
  1067  0001C4  A0D8               	btfss	status,0,c
  1068  0001C6  EFE7  F000         	goto	u1111
  1069  0001CA  EFE9  F000         	goto	u1110
  1070  0001CE                     u1111:
  1071  0001CE  EFC9  F000         	goto	l2196
  1072  0001D2                     u1110:
  1073  0001D2                     
  1074                           ; BSR set to: 0
  1075                           ;funcionamento.c: 138:     goto_XY(lcd, 4, 1);
  1076  0001D2  C087  F080         	movff	menu@lcd,goto_XY@lcd
  1077  0001D6  C088  F081         	movff	menu@lcd+1,goto_XY@lcd+1
  1078  0001DA  0E04               	movlw	4
  1079  0001DC  6F82               	movwf	goto_XY@x& (0+255),b
  1080  0001DE  0E01               	movlw	1
  1081  0001E0  6F83               	movwf	goto_XY@y& (0+255),b
  1082  0001E2  ECB4  F002         	call	_goto_XY	;wreg free
  1083  0001E6                     
  1084                           ;funcionamento.c: 139:     for(int i = 0; i < tamanho4; i ++)
  1085  0001E6  0E00               	movlw	0
  1086  0001E8  0100               	movlb	0	; () banked
  1087  0001EA  6FDC               	movwf	(menu@i_362+1)& (0+255),b
  1088  0001EC  0E00               	movlw	0
  1089  0001EE  6FDB               	movwf	menu@i_362& (0+255),b
  1090  0001F0  EF0B  F001         	goto	l2210
  1091  0001F4                     l2206:
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;funcionamento.c: 140:         write_char(lcd, palavra4[i]);
  1095  0001F4  C087  F066         	movff	menu@lcd,write_char@lcd
  1096  0001F8  C088  F067         	movff	menu@lcd+1,write_char@lcd+1
  1097  0001FC  0EBB               	movlw	low menu@palavra4
  1098  0001FE  25DB               	addwf	menu@i_362& (0+255),w,b
  1099  000200  6ED9               	movwf	fsr2l,c
  1100  000202  0E00               	movlw	high menu@palavra4
  1101  000204  21DC               	addwfc	(menu@i_362+1)& (0+255),w,b
  1102  000206  6EDA               	movwf	fsr2h,c
  1103  000208  50DF               	movf	indf2,w,c
  1104  00020A  6E68               	movwf	write_char@c^0,c
  1105  00020C  ECC0  F003         	call	_write_char	;wreg free
  1106  000210  0100               	movlb	0	; () banked
  1107  000212  4BDB               	infsnz	menu@i_362& (0+255),f,b
  1108  000214  2BDC               	incf	(menu@i_362+1)& (0+255),f,b
  1109  000216                     l2210:
  1110                           
  1111                           ; BSR set to: 0
  1112  000216  51D1               	movf	menu@tamanho4& (0+255),w,b
  1113  000218  5DDB               	subwf	menu@i_362& (0+255),w,b
  1114  00021A  51DC               	movf	(menu@i_362+1)& (0+255),w,b
  1115  00021C  0A80               	xorlw	128
  1116  00021E  6F89               	movwf	??_menu& (0+255),b
  1117  000220  51D2               	movf	(menu@tamanho4+1)& (0+255),w,b
  1118  000222  0A80               	xorlw	128
  1119  000224  5989               	subwfb	??_menu& (0+255),w,b
  1120  000226  A0D8               	btfss	status,0,c
  1121  000228  EF18  F001         	goto	u1121
  1122  00022C  EF1A  F001         	goto	u1120
  1123  000230                     u1121:
  1124  000230  EFFA  F000         	goto	l2206
  1125  000234                     u1120:
  1126  000234                     
  1127                           ; BSR set to: 0
  1128                           ;funcionamento.c: 147:     switch(opcao){
  1129  000234  EF24  F001         	goto	l2224
  1130  000238                     l2214:
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;funcionamento.c: 149:             clear_display(lcd);
  1134  000238  C087  F066         	movff	menu@lcd,clear_display@lcd
  1135  00023C  C088  F067         	movff	menu@lcd+1,clear_display@lcd+1
  1136  000240  ECE4  F004         	call	_clear_display	;wreg free
  1137                           
  1138                           ;funcionamento.c: 151:             break;
  1139  000244  EF42  F001         	goto	l146
  1140  000248                     l2224:
  1141                           
  1142                           ; BSR set to: 0
  1143  000248  0E00               	movlw	0
  1144  00024A  6F89               	movwf	??_menu& (0+255),b
  1145  00024C  0E00               	movlw	0
  1146  00024E  6F8A               	movwf	(??_menu+1)& (0+255),b
  1147                           
  1148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1149                           ; Switch size 1, requested type "simple"
  1150                           ; Number of cases is 1, Range of values is 0 to 0
  1151                           ; switch strategies available:
  1152                           ; Name         Instructions Cycles
  1153                           ; simple_byte            4     3 (average)
  1154                           ;	Chosen strategy is simple_byte
  1155  000250  518A               	movf	(??_menu+1)& (0+255),w,b
  1156  000252  0A00               	xorlw	0	; case 0
  1157  000254  B4D8               	btfsc	status,2,c
  1158  000256  EF2F  F001         	goto	l2432
  1159  00025A  EF42  F001         	goto	l146
  1160  00025E                     l2432:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ; Switch size 1, requested type "simple"
  1164                           ; Number of cases is 4, Range of values is 1 to 4
  1165                           ; switch strategies available:
  1166                           ; Name         Instructions Cycles
  1167                           ; simple_byte           13     7 (average)
  1168                           ;	Chosen strategy is simple_byte
  1169  00025E  5189               	movf	??_menu& (0+255),w,b
  1170  000260  0A01               	xorlw	1	; case 1
  1171  000262  B4D8               	btfsc	status,2,c
  1172  000264  EF1C  F001         	goto	l2214
  1173  000268  0A03               	xorlw	3	; case 2
  1174  00026A  B4D8               	btfsc	status,2,c
  1175  00026C  EF1C  F001         	goto	l2214
  1176  000270  0A01               	xorlw	1	; case 3
  1177  000272  B4D8               	btfsc	status,2,c
  1178  000274  EF1C  F001         	goto	l2214
  1179  000278  0A07               	xorlw	7	; case 4
  1180  00027A  B4D8               	btfsc	status,2,c
  1181  00027C  EF1C  F001         	goto	l2214
  1182  000280  EF42  F001         	goto	l146
  1183  000284                     l146:
  1184  000284  0012               	return		;funcret
  1185  000286                     __end_of_menu:
  1186                           	opt callstack 0
  1187                           
  1188 ;; *************** function _write_char *****************
  1189 ;; Defined at:
  1190 ;;		line 137 in file "lcd.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  lcd             2   20[COMRAM] PTR struct .
  1193 ;;		 -> NULL(0), PORTD(1), 
  1194 ;;  c               1   22[COMRAM] unsigned char 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1206 ;;      Params:         3       0       0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0
  1208 ;;      Temps:          1       0       0       0       0       0       0
  1209 ;;      Totals:         4       0       0       0       0       0       0
  1210 ;;Total ram usage:        4 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    6
  1213 ;; This function calls:
  1214 ;;		_pulso
  1215 ;; This function is called by:
  1216 ;;		_menu
  1217 ;;		_creditos
  1218 ;;		_jogar
  1219 ;;		_instrucoes
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text2
  1224  000780                     __ptext2:
  1225                           	opt callstack 0
  1226  000780                     _write_char:
  1227                           	opt callstack 23
  1228  000780                     
  1229                           ;lcd.c: 138:     lcd->E = 0;
  1230  000780  C066  FFD9         	movff	write_char@lcd,fsr2l
  1231  000784  C067  FFDA         	movff	write_char@lcd+1,fsr2h
  1232  000788  94DF               	bcf	indf2,2,c
  1233                           
  1234                           ;lcd.c: 139:     lcd->RS = 1;
  1235  00078A  C066  FFD9         	movff	write_char@lcd,fsr2l
  1236  00078E  C067  FFDA         	movff	write_char@lcd+1,fsr2h
  1237  000792  80DF               	bsf	indf2,0,c
  1238                           
  1239                           ;lcd.c: 140:     lcd->R_W = 0;
  1240  000794  C066  FFD9         	movff	write_char@lcd,fsr2l
  1241  000798  C067  FFDA         	movff	write_char@lcd+1,fsr2h
  1242  00079C  92DF               	bcf	indf2,1,c
  1243  00079E                     
  1244                           ;lcd.c: 143:     lcd->data = (c>>4);
  1245  00079E  C068  F069         	movff	write_char@c,??_write_char
  1246  0007A2  3A69               	swapf	??_write_char^0,f,c
  1247  0007A4  0E0F               	movlw	15
  1248  0007A6  1669               	andwf	??_write_char^0,f,c
  1249  0007A8  C066  FFD9         	movff	write_char@lcd,fsr2l
  1250  0007AC  C067  FFDA         	movff	write_char@lcd+1,fsr2h
  1251  0007B0  3A69               	swapf	??_write_char^0,f,c
  1252  0007B2  50DF               	movf	indf2,w,c
  1253  0007B4  1869               	xorwf	??_write_char^0,w,c
  1254  0007B6  0B0F               	andlw	-241
  1255  0007B8  1869               	xorwf	??_write_char^0,w,c
  1256  0007BA  6EDF               	movwf	indf2,c
  1257  0007BC                     
  1258                           ;lcd.c: 144:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1259  0007BC  0E06               	movlw	6
  1260  0007BE  6E69               	movwf	??_write_char^0,c
  1261  0007C0  0E30               	movlw	48
  1262  0007C2                     u1347:
  1263  0007C2  2EE8               	decfsz	wreg,f,c
  1264  0007C4  D7FE               	bra	u1347
  1265  0007C6  2E69               	decfsz	??_write_char^0,f,c
  1266  0007C8  D7FC               	bra	u1347
  1267  0007CA  D000               	nop2	
  1268  0007CC                     
  1269                           ;lcd.c: 146:     pulso(lcd);
  1270  0007CC  C066  F063         	movff	write_char@lcd,pulso@lcd
  1271  0007D0  C067  F064         	movff	write_char@lcd+1,pulso@lcd+1
  1272  0007D4  ECB8  F005         	call	_pulso	;wreg free
  1273  0007D8                     
  1274                           ;lcd.c: 149:     lcd->data = (c);
  1275  0007D8  C068  F069         	movff	write_char@c,??_write_char
  1276  0007DC  C066  FFD9         	movff	write_char@lcd,fsr2l
  1277  0007E0  C067  FFDA         	movff	write_char@lcd+1,fsr2h
  1278  0007E4  3A69               	swapf	??_write_char^0,f,c
  1279  0007E6  50DF               	movf	indf2,w,c
  1280  0007E8  1869               	xorwf	??_write_char^0,w,c
  1281  0007EA  0B0F               	andlw	-241
  1282  0007EC  1869               	xorwf	??_write_char^0,w,c
  1283  0007EE  6EDF               	movwf	indf2,c
  1284  0007F0                     
  1285                           ;lcd.c: 150:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1286  0007F0  0E06               	movlw	6
  1287  0007F2  6E69               	movwf	??_write_char^0,c
  1288  0007F4  0E30               	movlw	48
  1289  0007F6                     u1357:
  1290  0007F6  2EE8               	decfsz	wreg,f,c
  1291  0007F8  D7FE               	bra	u1357
  1292  0007FA  2E69               	decfsz	??_write_char^0,f,c
  1293  0007FC  D7FC               	bra	u1357
  1294  0007FE  D000               	nop2	
  1295  000800                     
  1296                           ;lcd.c: 152:     pulso(lcd);
  1297  000800  C066  F063         	movff	write_char@lcd,pulso@lcd
  1298  000804  C067  F064         	movff	write_char@lcd+1,pulso@lcd+1
  1299  000808  ECB8  F005         	call	_pulso	;wreg free
  1300                           
  1301                           ;lcd.c: 153:     lcd->RS = 0;
  1302  00080C  C066  FFD9         	movff	write_char@lcd,fsr2l
  1303  000810  C067  FFDA         	movff	write_char@lcd+1,fsr2h
  1304  000814  90DF               	bcf	indf2,0,c
  1305  000816  0012               	return		;funcret
  1306  000818                     __end_of_write_char:
  1307                           	opt callstack 0
  1308                           
  1309 ;; *************** function _strlen *****************
  1310 ;; Defined at:
  1311 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  s               2   17[COMRAM] PTR const unsigned char 
  1314 ;;		 -> menu@palavra4(16), menu@palavra3(16), menu@palavra2(16), menu@palavra(16), 
  1315 ;;		 -> instrucoes@palavra4(16), instrucoes@palavra3(16), instrucoes@palavra2(16), instrucoes@palavra(16), 
  1316 ;;		 -> creditos@palavra2(16), creditos@palavra(16), 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  a               2   19[COMRAM] PTR const unsigned char 
  1319 ;;		 -> menu@palavra4(16), menu@palavra3(16), menu@palavra2(16), menu@palavra(16), 
  1320 ;;		 -> instrucoes@palavra4(16), instrucoes@palavra3(16), instrucoes@palavra2(16), instrucoes@palavra(16), 
  1321 ;;		 -> creditos@palavra2(16), creditos@palavra(16), 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2   17[COMRAM] unsigned int 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1331 ;;      Params:         2       0       0       0       0       0       0
  1332 ;;      Locals:         2       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0
  1334 ;;      Totals:         4       0       0       0       0       0       0
  1335 ;;Total ram usage:        4 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    5
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_menu
  1342 ;;		_creditos
  1343 ;;		_instrucoes
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text3
  1348  000C74                     __ptext3:
  1349                           	opt callstack 0
  1350  000C74                     _strlen:
  1351                           	opt callstack 24
  1352  000C74  C063  F065         	movff	strlen@s,strlen@a
  1353  000C78  C064  F066         	movff	strlen@s+1,strlen@a+1
  1354  000C7C  EF42  F006         	goto	l1482
  1355  000C80                     l1480:
  1356  000C80  4A63               	infsnz	strlen@s^0,f,c
  1357  000C82  2A64               	incf	(strlen@s+1)^0,f,c
  1358  000C84                     l1482:
  1359  000C84  C063  FFD9         	movff	strlen@s,fsr2l
  1360  000C88  C064  FFDA         	movff	strlen@s+1,fsr2h
  1361  000C8C  50DF               	movf	indf2,w,c
  1362  000C8E  A4D8               	btfss	status,2,c
  1363  000C90  EF4C  F006         	goto	u511
  1364  000C94  EF4E  F006         	goto	u510
  1365  000C98                     u511:
  1366  000C98  EF40  F006         	goto	l1480
  1367  000C9C                     u510:
  1368  000C9C  5065               	movf	strlen@a^0,w,c
  1369  000C9E  5C63               	subwf	strlen@s^0,w,c
  1370  000CA0  6E63               	movwf	?_strlen^0,c
  1371  000CA2  5066               	movf	(strlen@a+1)^0,w,c
  1372  000CA4  5864               	subwfb	(strlen@s+1)^0,w,c
  1373  000CA6  6E64               	movwf	(?_strlen+1)^0,c
  1374  000CA8  0012               	return		;funcret
  1375  000CAA                     __end_of_strlen:
  1376                           	opt callstack 0
  1377                           
  1378 ;; *************** function _goto_XY *****************
  1379 ;; Defined at:
  1380 ;;		line 79 in file "lcd.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  lcd             2    0[BANK0 ] PTR struct .
  1383 ;;		 -> NULL(0), PORTD(1), 
  1384 ;;  x               1    2[BANK0 ] unsigned char 
  1385 ;;  y               1    3[BANK0 ] unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  temp            1    6[BANK0 ] unsigned char 
  1388 ;;  a               1    5[BANK0 ] unsigned char 
  1389 ;;  z               1    4[BANK0 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1399 ;;      Params:         0       4       0       0       0       0       0
  1400 ;;      Locals:         0       3       0       0       0       0       0
  1401 ;;      Temps:          1       0       0       0       0       0       0
  1402 ;;      Totals:         1       7       0       0       0       0       0
  1403 ;;Total ram usage:        8 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    7
  1406 ;; This function calls:
  1407 ;;		_lcd_cmd
  1408 ;; This function is called by:
  1409 ;;		_menu
  1410 ;;		_creditos
  1411 ;;		_jogar
  1412 ;;		_instrucoes
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text4
  1417  000568                     __ptext4:
  1418                           	opt callstack 0
  1419  000568                     _goto_XY:
  1420                           	opt callstack 22
  1421  000568                     
  1422                           ;lcd.c: 80:     unsigned char temp,z,a;;lcd.c: 81:     if(x == 1)
  1423  000568  0100               	movlb	0	; () banked
  1424  00056A  0582               	decf	goto_XY@x& (0+255),w,b
  1425  00056C  A4D8               	btfss	status,2,c
  1426  00056E  EFBB  F002         	goto	u1011
  1427  000572  EFBD  F002         	goto	u1010
  1428  000576                     u1011:
  1429  000576  EFDF  F002         	goto	l2048
  1430  00057A                     u1010:
  1431  00057A                     
  1432                           ; BSR set to: 0
  1433                           ;lcd.c: 82:     {;lcd.c: 83:        temp = 0x80 + y - 1;
  1434  00057A  5183               	movf	goto_XY@y& (0+255),w,b
  1435  00057C  0F7F               	addlw	127
  1436  00057E  6F86               	movwf	goto_XY@temp& (0+255),b
  1437                           
  1438                           ;lcd.c: 84:        z = temp>>4;
  1439  000580  3986               	swapf	goto_XY@temp& (0+255),w,b
  1440  000582  0B0F               	andlw	15
  1441  000584  6F84               	movwf	goto_XY@z& (0+255),b
  1442  000586                     l2040:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;lcd.c: 85:        a = temp;
  1446  000586  C086  F085         	movff	goto_XY@temp,goto_XY@a
  1447  00058A                     
  1448                           ; BSR set to: 0
  1449                           ;lcd.c: 86:        lcd_cmd(lcd, z);
  1450  00058A  C080  F066         	movff	goto_XY@lcd,lcd_cmd@lcd
  1451  00058E  C081  F067         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1452  000592  C084  F068         	movff	goto_XY@z,lcd_cmd@a
  1453  000596  ECFA  F005         	call	_lcd_cmd	;wreg free
  1454  00059A                     
  1455                           ;lcd.c: 87:        _delay((unsigned long)((1)*(16000000/4000.0)));
  1456  00059A  0E06               	movlw	6
  1457  00059C  6E6A               	movwf	??_goto_XY^0,c
  1458  00059E  0E30               	movlw	48
  1459  0005A0                     u1367:
  1460  0005A0  2EE8               	decfsz	wreg,f,c
  1461  0005A2  D7FE               	bra	u1367
  1462  0005A4  2E6A               	decfsz	??_goto_XY^0,f,c
  1463  0005A6  D7FC               	bra	u1367
  1464  0005A8  D000               	nop2	
  1465  0005AA                     
  1466                           ;lcd.c: 88:        lcd_cmd(lcd, a);
  1467  0005AA  C080  F066         	movff	goto_XY@lcd,lcd_cmd@lcd
  1468  0005AE  C081  F067         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1469  0005B2  C085  F068         	movff	goto_XY@a,lcd_cmd@a
  1470  0005B6  ECFA  F005         	call	_lcd_cmd	;wreg free
  1471                           
  1472                           ;lcd.c: 89:     }
  1473  0005BA  EF12  F003         	goto	l170
  1474  0005BE                     l2048:
  1475                           
  1476                           ; BSR set to: 0
  1477  0005BE  0E02               	movlw	2
  1478  0005C0  1982               	xorwf	goto_XY@x& (0+255),w,b
  1479  0005C2  A4D8               	btfss	status,2,c
  1480  0005C4  EFE6  F002         	goto	u1021
  1481  0005C8  EFE8  F002         	goto	u1020
  1482  0005CC                     u1021:
  1483  0005CC  EFF0  F002         	goto	l2060
  1484  0005D0                     u1020:
  1485  0005D0                     
  1486                           ; BSR set to: 0
  1487                           ;lcd.c: 91:     {;lcd.c: 92:        temp = 0xC0 + y - 1;
  1488  0005D0  5183               	movf	goto_XY@y& (0+255),w,b
  1489  0005D2  0FBF               	addlw	191
  1490  0005D4  6F86               	movwf	goto_XY@temp& (0+255),b
  1491                           
  1492                           ;lcd.c: 93:        z = temp>>4;
  1493  0005D6  3986               	swapf	goto_XY@temp& (0+255),w,b
  1494  0005D8  0B0F               	andlw	15
  1495  0005DA  6F84               	movwf	goto_XY@z& (0+255),b
  1496  0005DC  EFC3  F002         	goto	l2040
  1497  0005E0                     l2060:
  1498                           
  1499                           ; BSR set to: 0
  1500  0005E0  0E03               	movlw	3
  1501  0005E2  1982               	xorwf	goto_XY@x& (0+255),w,b
  1502  0005E4  A4D8               	btfss	status,2,c
  1503  0005E6  EFF7  F002         	goto	u1031
  1504  0005EA  EFF9  F002         	goto	u1030
  1505  0005EE                     u1031:
  1506  0005EE  EF01  F003         	goto	l2072
  1507  0005F2                     u1030:
  1508  0005F2                     
  1509                           ; BSR set to: 0
  1510                           ;lcd.c: 100:     {;lcd.c: 101:        temp = 0x90 + y - 1;
  1511  0005F2  5183               	movf	goto_XY@y& (0+255),w,b
  1512  0005F4  0F8F               	addlw	143
  1513  0005F6  6F86               	movwf	goto_XY@temp& (0+255),b
  1514                           
  1515                           ;lcd.c: 102:        z = temp>>4;
  1516  0005F8  3986               	swapf	goto_XY@temp& (0+255),w,b
  1517  0005FA  0B0F               	andlw	15
  1518  0005FC  6F84               	movwf	goto_XY@z& (0+255),b
  1519  0005FE  EFC3  F002         	goto	l2040
  1520  000602                     l2072:
  1521                           
  1522                           ; BSR set to: 0
  1523  000602  0E04               	movlw	4
  1524  000604  1982               	xorwf	goto_XY@x& (0+255),w,b
  1525  000606  A4D8               	btfss	status,2,c
  1526  000608  EF08  F003         	goto	u1041
  1527  00060C  EF0A  F003         	goto	u1040
  1528  000610                     u1041:
  1529  000610  EF12  F003         	goto	l166
  1530  000614                     u1040:
  1531  000614                     
  1532                           ; BSR set to: 0
  1533                           ;lcd.c: 109:     {;lcd.c: 110:        temp = 0xD0 + y - 1;
  1534  000614  5183               	movf	goto_XY@y& (0+255),w,b
  1535  000616  0FCF               	addlw	207
  1536  000618  6F86               	movwf	goto_XY@temp& (0+255),b
  1537                           
  1538                           ;lcd.c: 111:        z = temp>>4;
  1539  00061A  3986               	swapf	goto_XY@temp& (0+255),w,b
  1540  00061C  0B0F               	andlw	15
  1541  00061E  6F84               	movwf	goto_XY@z& (0+255),b
  1542  000620  EFC3  F002         	goto	l2040
  1543  000624                     l166:
  1544  000624                     l170:
  1545  000624  0012               	return		;funcret
  1546  000626                     __end_of_goto_XY:
  1547                           	opt callstack 0
  1548                           
  1549 ;; *************** function _lcd_cmd *****************
  1550 ;; Defined at:
  1551 ;;		line 68 in file "lcd.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  lcd             2   20[COMRAM] PTR struct .
  1554 ;;		 -> NULL(0), PORTD(1), 
  1555 ;;  a               1   22[COMRAM] unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1567 ;;      Params:         3       0       0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0
  1569 ;;      Temps:          1       0       0       0       0       0       0
  1570 ;;      Totals:         4       0       0       0       0       0       0
  1571 ;;Total ram usage:        4 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    6
  1574 ;; This function calls:
  1575 ;;		_pulso
  1576 ;; This function is called by:
  1577 ;;		_goto_XY
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text5
  1582  000BF4                     __ptext5:
  1583                           	opt callstack 0
  1584  000BF4                     _lcd_cmd:
  1585                           	opt callstack 22
  1586  000BF4                     
  1587                           ;lcd.c: 69:     lcd->RS = 0;
  1588  000BF4  C066  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1589  000BF8  C067  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1590  000BFC  90DF               	bcf	indf2,0,c
  1591  000BFE                     
  1592                           ;lcd.c: 70:     lcd->data = (a);
  1593  000BFE  C068  F069         	movff	lcd_cmd@a,??_lcd_cmd
  1594  000C02  C066  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1595  000C06  C067  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1596  000C0A  3A69               	swapf	??_lcd_cmd^0,f,c
  1597  000C0C  50DF               	movf	indf2,w,c
  1598  000C0E  1869               	xorwf	??_lcd_cmd^0,w,c
  1599  000C10  0B0F               	andlw	-241
  1600  000C12  1869               	xorwf	??_lcd_cmd^0,w,c
  1601  000C14  6EDF               	movwf	indf2,c
  1602  000C16                     
  1603                           ;lcd.c: 71:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1604  000C16  0E06               	movlw	6
  1605  000C18  6E69               	movwf	??_lcd_cmd^0,c
  1606  000C1A  0E30               	movlw	48
  1607  000C1C                     u1377:
  1608  000C1C  2EE8               	decfsz	wreg,f,c
  1609  000C1E  D7FE               	bra	u1377
  1610  000C20  2E69               	decfsz	??_lcd_cmd^0,f,c
  1611  000C22  D7FC               	bra	u1377
  1612  000C24  D000               	nop2	
  1613  000C26                     
  1614                           ;lcd.c: 73:     pulso(lcd);
  1615  000C26  C066  F063         	movff	lcd_cmd@lcd,pulso@lcd
  1616  000C2A  C067  F064         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  1617  000C2E  ECB8  F005         	call	_pulso	;wreg free
  1618  000C32  0012               	return		;funcret
  1619  000C34                     __end_of_lcd_cmd:
  1620                           	opt callstack 0
  1621                           
  1622 ;; *************** function _clear_display *****************
  1623 ;; Defined at:
  1624 ;;		line 156 in file "lcd.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  lcd             2   20[COMRAM] PTR struct .
  1627 ;;		 -> NULL(0), PORTD(1), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1639 ;;      Params:         2       0       0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0       0       0
  1641 ;;      Temps:          1       0       0       0       0       0       0
  1642 ;;      Totals:         3       0       0       0       0       0       0
  1643 ;;Total ram usage:        3 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    6
  1646 ;; This function calls:
  1647 ;;		_pulso
  1648 ;; This function is called by:
  1649 ;;		_menu
  1650 ;;		_creditos
  1651 ;;		_instrucoes
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text6
  1656  0009C8                     __ptext6:
  1657                           	opt callstack 0
  1658  0009C8                     _clear_display:
  1659                           	opt callstack 23
  1660  0009C8                     
  1661                           ;lcd.c: 157:     lcd->E = 0;
  1662  0009C8  C066  FFD9         	movff	clear_display@lcd,fsr2l
  1663  0009CC  C067  FFDA         	movff	clear_display@lcd+1,fsr2h
  1664  0009D0  94DF               	bcf	indf2,2,c
  1665                           
  1666                           ;lcd.c: 158:     lcd->RS = 0;
  1667  0009D2  C066  FFD9         	movff	clear_display@lcd,fsr2l
  1668  0009D6  C067  FFDA         	movff	clear_display@lcd+1,fsr2h
  1669  0009DA  90DF               	bcf	indf2,0,c
  1670                           
  1671                           ;lcd.c: 159:     lcd->R_W = 0;
  1672  0009DC  C066  FFD9         	movff	clear_display@lcd,fsr2l
  1673  0009E0  C067  FFDA         	movff	clear_display@lcd+1,fsr2h
  1674  0009E4  92DF               	bcf	indf2,1,c
  1675  0009E6                     
  1676                           ;lcd.c: 162:     lcd->data = 0x0;
  1677  0009E6  C066  FFD9         	movff	clear_display@lcd,fsr2l
  1678  0009EA  C067  FFDA         	movff	clear_display@lcd+1,fsr2h
  1679  0009EE  0E0F               	movlw	-241
  1680  0009F0  16DF               	andwf	indf2,f,c
  1681  0009F2                     
  1682                           ;lcd.c: 163:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1683  0009F2  0E06               	movlw	6
  1684  0009F4  6E68               	movwf	??_clear_display^0,c
  1685  0009F6  0E30               	movlw	48
  1686  0009F8                     u1387:
  1687  0009F8  2EE8               	decfsz	wreg,f,c
  1688  0009FA  D7FE               	bra	u1387
  1689  0009FC  2E68               	decfsz	??_clear_display^0,f,c
  1690  0009FE  D7FC               	bra	u1387
  1691  000A00  D000               	nop2	
  1692  000A02                     
  1693                           ;lcd.c: 165:     pulso(lcd);
  1694  000A02  C066  F063         	movff	clear_display@lcd,pulso@lcd
  1695  000A06  C067  F064         	movff	clear_display@lcd+1,pulso@lcd+1
  1696  000A0A  ECB8  F005         	call	_pulso	;wreg free
  1697  000A0E                     
  1698                           ;lcd.c: 168:     lcd->data = 0x1;
  1699  000A0E  C066  FFD9         	movff	clear_display@lcd,fsr2l
  1700  000A12  C067  FFDA         	movff	clear_display@lcd+1,fsr2h
  1701  000A16  50DF               	movf	indf2,w,c
  1702  000A18  0B0F               	andlw	-241
  1703  000A1A  0910               	iorlw	16
  1704  000A1C  6EDF               	movwf	indf2,c
  1705  000A1E                     
  1706                           ;lcd.c: 169:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1707  000A1E  0E06               	movlw	6
  1708  000A20  6E68               	movwf	??_clear_display^0,c
  1709  000A22  0E30               	movlw	48
  1710  000A24                     u1397:
  1711  000A24  2EE8               	decfsz	wreg,f,c
  1712  000A26  D7FE               	bra	u1397
  1713  000A28  2E68               	decfsz	??_clear_display^0,f,c
  1714  000A2A  D7FC               	bra	u1397
  1715  000A2C  D000               	nop2	
  1716  000A2E                     
  1717                           ;lcd.c: 171:     pulso(lcd);
  1718  000A2E  C066  F063         	movff	clear_display@lcd,pulso@lcd
  1719  000A32  C067  F064         	movff	clear_display@lcd+1,pulso@lcd+1
  1720  000A36  ECB8  F005         	call	_pulso	;wreg free
  1721  000A3A  0012               	return		;funcret
  1722  000A3C                     __end_of_clear_display:
  1723                           	opt callstack 0
  1724                           
  1725 ;; *************** function _function_set *****************
  1726 ;; Defined at:
  1727 ;;		line 22 in file "lcd.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  lcd             2   20[COMRAM] PTR struct .
  1730 ;;		 -> NULL(0), PORTD(1), 
  1731 ;;  data_lenght     1   22[COMRAM] unsigned char 
  1732 ;;  num_lines       1   23[COMRAM] unsigned char 
  1733 ;;  char_font       1   24[COMRAM] unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1745 ;;      Params:         5       0       0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0
  1747 ;;      Temps:          0       3       0       0       0       0       0
  1748 ;;      Totals:         5       3       0       0       0       0       0
  1749 ;;Total ram usage:        8 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    6
  1752 ;; This function calls:
  1753 ;;		_pulso
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text7
  1760  000484                     __ptext7:
  1761                           	opt callstack 0
  1762  000484                     _function_set:
  1763                           	opt callstack 24
  1764  000484                     
  1765                           ;lcd.c: 22: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 23:         
      +                          char num_lines, char char_font){;lcd.c: 24:     lcd->E = 0;
  1766  000484  C066  FFD9         	movff	function_set@lcd,fsr2l
  1767  000488  C067  FFDA         	movff	function_set@lcd+1,fsr2h
  1768  00048C  94DF               	bcf	indf2,2,c
  1769                           
  1770                           ;lcd.c: 25:     lcd->RS = 0;
  1771  00048E  C066  FFD9         	movff	function_set@lcd,fsr2l
  1772  000492  C067  FFDA         	movff	function_set@lcd+1,fsr2h
  1773  000496  90DF               	bcf	indf2,0,c
  1774                           
  1775                           ;lcd.c: 26:     lcd->R_W = 0;
  1776  000498  C066  FFD9         	movff	function_set@lcd,fsr2l
  1777  00049C  C067  FFDA         	movff	function_set@lcd+1,fsr2h
  1778  0004A0  92DF               	bcf	indf2,1,c
  1779  0004A2                     
  1780                           ;lcd.c: 29:     lcd->data = 0x02;
  1781  0004A2  C066  FFD9         	movff	function_set@lcd,fsr2l
  1782  0004A6  C067  FFDA         	movff	function_set@lcd+1,fsr2h
  1783  0004AA  50DF               	movf	indf2,w,c
  1784  0004AC  0B0F               	andlw	-241
  1785  0004AE  0920               	iorlw	32
  1786  0004B0  6EDF               	movwf	indf2,c
  1787  0004B2                     
  1788                           ;lcd.c: 30:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1789  0004B2  0E06               	movlw	6
  1790  0004B4  0100               	movlb	0	; () banked
  1791  0004B6  6F80               	movwf	??_function_set& (0+255),b
  1792  0004B8  0E30               	movlw	48
  1793  0004BA                     u1407:
  1794  0004BA  2EE8               	decfsz	wreg,f,c
  1795  0004BC  D7FE               	bra	u1407
  1796  0004BE  2F80               	decfsz	??_function_set& (0+255),f,b
  1797  0004C0  D7FC               	bra	u1407
  1798  0004C2  F000               	nop	
  1799  0004C4                     
  1800                           ;lcd.c: 32:     pulso(lcd);
  1801  0004C4  C066  F063         	movff	function_set@lcd,pulso@lcd
  1802  0004C8  C067  F064         	movff	function_set@lcd+1,pulso@lcd+1
  1803  0004CC  ECB8  F005         	call	_pulso	;wreg free
  1804  0004D0                     
  1805                           ;lcd.c: 35:     lcd->data = 0x02|data_lenght;
  1806  0004D0  C068  F080         	movff	function_set@data_lenght,??_function_set
  1807  0004D4  0E02               	movlw	2
  1808  0004D6  0100               	movlb	0	; () banked
  1809  0004D8  1380               	iorwf	??_function_set& (0+255),f,b
  1810  0004DA  C066  FFD9         	movff	function_set@lcd,fsr2l
  1811  0004DE  C067  FFDA         	movff	function_set@lcd+1,fsr2h
  1812  0004E2  3B80               	swapf	??_function_set& (0+255),f,b
  1813  0004E4  50DF               	movf	indf2,w,c
  1814  0004E6  1980               	xorwf	??_function_set& (0+255),w,b
  1815  0004E8  0B0F               	andlw	-241
  1816  0004EA  1980               	xorwf	??_function_set& (0+255),w,b
  1817  0004EC  6EDF               	movwf	indf2,c
  1818  0004EE                     
  1819                           ; BSR set to: 0
  1820                           ;lcd.c: 36:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1821  0004EE  0E06               	movlw	6
  1822  0004F0  0100               	movlb	0	; () banked
  1823  0004F2  6F80               	movwf	??_function_set& (0+255),b
  1824  0004F4  0E30               	movlw	48
  1825  0004F6                     u1417:
  1826  0004F6  2EE8               	decfsz	wreg,f,c
  1827  0004F8  D7FE               	bra	u1417
  1828  0004FA  2F80               	decfsz	??_function_set& (0+255),f,b
  1829  0004FC  D7FC               	bra	u1417
  1830  0004FE  F000               	nop	
  1831  000500                     
  1832                           ;lcd.c: 38:     pulso(lcd);
  1833  000500  C066  F063         	movff	function_set@lcd,pulso@lcd
  1834  000504  C067  F064         	movff	function_set@lcd+1,pulso@lcd+1
  1835  000508  ECB8  F005         	call	_pulso	;wreg free
  1836  00050C                     
  1837                           ;lcd.c: 42:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  1838  00050C  C066  FFD9         	movff	function_set@lcd,fsr2l
  1839  000510  C067  FFDA         	movff	function_set@lcd+1,fsr2h
  1840  000514  38DF               	swapf	indf2,w,c
  1841  000516  0B0F               	andlw	15
  1842  000518  0100               	movlb	0	; () banked
  1843  00051A  6F80               	movwf	??_function_set& (0+255),b
  1844  00051C  C06A  F081         	movff	function_set@char_font,??_function_set+1
  1845  000520  90D8               	bcf	status,0,c
  1846  000522  3781               	rlcf	(??_function_set+1)& (0+255),f,b
  1847  000524  90D8               	bcf	status,0,c
  1848  000526  3781               	rlcf	(??_function_set+1)& (0+255),f,b
  1849  000528  3869               	swapf	function_set@num_lines^0,w,c
  1850  00052A  42E8               	rrncf	wreg,f,c
  1851  00052C  0BF8               	andlw	248
  1852  00052E  1181               	iorwf	(??_function_set+1)& (0+255),w,b
  1853  000530  1180               	iorwf	??_function_set& (0+255),w,b
  1854  000532  6F82               	movwf	(??_function_set+2)& (0+255),b
  1855  000534  C066  FFD9         	movff	function_set@lcd,fsr2l
  1856  000538  C067  FFDA         	movff	function_set@lcd+1,fsr2h
  1857  00053C  3B82               	swapf	(??_function_set+2)& (0+255),f,b
  1858  00053E  50DF               	movf	indf2,w,c
  1859  000540  1982               	xorwf	(??_function_set+2)& (0+255),w,b
  1860  000542  0B0F               	andlw	-241
  1861  000544  1982               	xorwf	(??_function_set+2)& (0+255),w,b
  1862  000546  6EDF               	movwf	indf2,c
  1863  000548                     
  1864                           ; BSR set to: 0
  1865                           ;lcd.c: 43:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1866  000548  0E06               	movlw	6
  1867  00054A  0100               	movlb	0	; () banked
  1868  00054C  6F80               	movwf	??_function_set& (0+255),b
  1869  00054E  0E30               	movlw	48
  1870  000550                     u1427:
  1871  000550  2EE8               	decfsz	wreg,f,c
  1872  000552  D7FE               	bra	u1427
  1873  000554  2F80               	decfsz	??_function_set& (0+255),f,b
  1874  000556  D7FC               	bra	u1427
  1875  000558  F000               	nop	
  1876  00055A                     
  1877                           ;lcd.c: 45:     pulso(lcd);
  1878  00055A  C066  F063         	movff	function_set@lcd,pulso@lcd
  1879  00055E  C067  F064         	movff	function_set@lcd+1,pulso@lcd+1
  1880  000562  ECB8  F005         	call	_pulso	;wreg free
  1881  000566  0012               	return		;funcret
  1882  000568                     __end_of_function_set:
  1883                           	opt callstack 0
  1884                           
  1885 ;; *************** function _entry_mode_set *****************
  1886 ;; Defined at:
  1887 ;;		line 120 in file "lcd.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  lcd             2   20[COMRAM] PTR struct .
  1890 ;;		 -> NULL(0), PORTD(1), 
  1891 ;;  move_directi    1   22[COMRAM] unsigned char 
  1892 ;;  display_shif    1   23[COMRAM] unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1904 ;;      Params:         4       0       0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0
  1906 ;;      Temps:          1       0       0       0       0       0       0
  1907 ;;      Totals:         5       0       0       0       0       0       0
  1908 ;;Total ram usage:        5 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    6
  1911 ;; This function calls:
  1912 ;;		_pulso
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text8
  1919  000944                     __ptext8:
  1920                           	opt callstack 0
  1921  000944                     _entry_mode_set:
  1922                           	opt callstack 24
  1923  000944                     
  1924                           ;lcd.c: 121:     lcd->E = 0;
  1925  000944  C066  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1926  000948  C067  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1927  00094C  94DF               	bcf	indf2,2,c
  1928                           
  1929                           ;lcd.c: 122:     lcd->RS = 0;
  1930  00094E  C066  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1931  000952  C067  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1932  000956  90DF               	bcf	indf2,0,c
  1933                           
  1934                           ;lcd.c: 123:     lcd->R_W = 0;
  1935  000958  C066  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1936  00095C  C067  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1937  000960  92DF               	bcf	indf2,1,c
  1938  000962                     
  1939                           ;lcd.c: 125:     lcd->data = 0x00;
  1940  000962  C066  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1941  000966  C067  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1942  00096A  0E0F               	movlw	-241
  1943  00096C  16DF               	andwf	indf2,f,c
  1944  00096E                     
  1945                           ;lcd.c: 126:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1946  00096E  0E06               	movlw	6
  1947  000970  6E6A               	movwf	??_entry_mode_set^0,c
  1948  000972  0E30               	movlw	48
  1949  000974                     u1437:
  1950  000974  2EE8               	decfsz	wreg,f,c
  1951  000976  D7FE               	bra	u1437
  1952  000978  2E6A               	decfsz	??_entry_mode_set^0,f,c
  1953  00097A  D7FC               	bra	u1437
  1954  00097C  D000               	nop2	
  1955  00097E                     
  1956                           ;lcd.c: 128:     pulso(lcd);
  1957  00097E  C066  F063         	movff	entry_mode_set@lcd,pulso@lcd
  1958  000982  C067  F064         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1959  000986  ECB8  F005         	call	_pulso	;wreg free
  1960  00098A                     
  1961                           ;lcd.c: 131:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  1962  00098A  5068               	movf	entry_mode_set@move_direction^0,w,c
  1963  00098C  2468               	addwf	entry_mode_set@move_direction^0,w,c
  1964  00098E  1069               	iorwf	entry_mode_set@display_shift^0,w,c
  1965  000990  6E6A               	movwf	??_entry_mode_set^0,c
  1966  000992  0E04               	movlw	4
  1967  000994  126A               	iorwf	??_entry_mode_set^0,f,c
  1968  000996  C066  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1969  00099A  C067  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1970  00099E  3A6A               	swapf	??_entry_mode_set^0,f,c
  1971  0009A0  50DF               	movf	indf2,w,c
  1972  0009A2  186A               	xorwf	??_entry_mode_set^0,w,c
  1973  0009A4  0B0F               	andlw	-241
  1974  0009A6  186A               	xorwf	??_entry_mode_set^0,w,c
  1975  0009A8  6EDF               	movwf	indf2,c
  1976  0009AA                     
  1977                           ;lcd.c: 132:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1978  0009AA  0E06               	movlw	6
  1979  0009AC  6E6A               	movwf	??_entry_mode_set^0,c
  1980  0009AE  0E30               	movlw	48
  1981  0009B0                     u1447:
  1982  0009B0  2EE8               	decfsz	wreg,f,c
  1983  0009B2  D7FE               	bra	u1447
  1984  0009B4  2E6A               	decfsz	??_entry_mode_set^0,f,c
  1985  0009B6  D7FC               	bra	u1447
  1986  0009B8  D000               	nop2	
  1987  0009BA                     
  1988                           ;lcd.c: 134:     pulso(lcd);
  1989  0009BA  C066  F063         	movff	entry_mode_set@lcd,pulso@lcd
  1990  0009BE  C067  F064         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1991  0009C2  ECB8  F005         	call	_pulso	;wreg free
  1992  0009C6  0012               	return		;funcret
  1993  0009C8                     __end_of_entry_mode_set:
  1994                           	opt callstack 0
  1995                           
  1996 ;; *************** function _display_onoff_control *****************
  1997 ;; Defined at:
  1998 ;;		line 48 in file "lcd.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  lcd             2   20[COMRAM] PTR struct .
  2001 ;;		 -> NULL(0), PORTD(1), 
  2002 ;;  display_on      1   22[COMRAM] unsigned char 
  2003 ;;  cursor_on       1   23[COMRAM] unsigned char 
  2004 ;;  blink           1   24[COMRAM] unsigned char 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2016 ;;      Params:         5       0       0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0
  2018 ;;      Temps:          0       2       0       0       0       0       0
  2019 ;;      Totals:         5       2       0       0       0       0       0
  2020 ;;Total ram usage:        7 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    6
  2023 ;; This function calls:
  2024 ;;		_pulso
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text9
  2031  0008B0                     __ptext9:
  2032                           	opt callstack 0
  2033  0008B0                     _display_onoff_control:
  2034                           	opt callstack 24
  2035  0008B0                     
  2036                           ;lcd.c: 48: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 49: 
      +                                  char cursor_on, char blink){;lcd.c: 50:     lcd->E = 0;
  2037  0008B0  C066  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2038  0008B4  C067  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2039  0008B8  94DF               	bcf	indf2,2,c
  2040                           
  2041                           ;lcd.c: 51:     lcd->RS = 0;
  2042  0008BA  C066  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2043  0008BE  C067  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2044  0008C2  90DF               	bcf	indf2,0,c
  2045                           
  2046                           ;lcd.c: 52:     lcd->R_W = 0;
  2047  0008C4  C066  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2048  0008C8  C067  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2049  0008CC  92DF               	bcf	indf2,1,c
  2050  0008CE                     
  2051                           ;lcd.c: 55:     lcd->data = 0x00;
  2052  0008CE  C066  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2053  0008D2  C067  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2054  0008D6  0E0F               	movlw	-241
  2055  0008D8  16DF               	andwf	indf2,f,c
  2056  0008DA                     
  2057                           ;lcd.c: 56:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2058  0008DA  0E06               	movlw	6
  2059  0008DC  0100               	movlb	0	; () banked
  2060  0008DE  6F80               	movwf	??_display_onoff_control& (0+255),b
  2061  0008E0  0E30               	movlw	48
  2062  0008E2                     u1457:
  2063  0008E2  2EE8               	decfsz	wreg,f,c
  2064  0008E4  D7FE               	bra	u1457
  2065  0008E6  2F80               	decfsz	??_display_onoff_control& (0+255),f,b
  2066  0008E8  D7FC               	bra	u1457
  2067  0008EA  F000               	nop	
  2068  0008EC                     
  2069                           ;lcd.c: 58:     pulso(lcd);
  2070  0008EC  C066  F063         	movff	display_onoff_control@lcd,pulso@lcd
  2071  0008F0  C067  F064         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2072  0008F4  ECB8  F005         	call	_pulso	;wreg free
  2073  0008F8                     
  2074                           ;lcd.c: 62:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  2075  0008F8  90D8               	bcf	status,0,c
  2076  0008FA  3469               	rlcf	display_onoff_control@cursor_on^0,w,c
  2077  0008FC  0100               	movlb	0	; () banked
  2078  0008FE  6F80               	movwf	??_display_onoff_control& (0+255),b
  2079  000900  4468               	rlncf	display_onoff_control@display_on^0,w,c
  2080  000902  46E8               	rlncf	wreg,f,c
  2081  000904  0BFC               	andlw	252
  2082  000906  1180               	iorwf	??_display_onoff_control& (0+255),w,b
  2083  000908  106A               	iorwf	display_onoff_control@blink^0,w,c
  2084  00090A  6F81               	movwf	(??_display_onoff_control+1)& (0+255),b
  2085  00090C  0E08               	movlw	8
  2086  00090E  1381               	iorwf	(??_display_onoff_control+1)& (0+255),f,b
  2087  000910  C066  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2088  000914  C067  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2089  000918  3B81               	swapf	(??_display_onoff_control+1)& (0+255),f,b
  2090  00091A  50DF               	movf	indf2,w,c
  2091  00091C  1981               	xorwf	(??_display_onoff_control+1)& (0+255),w,b
  2092  00091E  0B0F               	andlw	-241
  2093  000920  1981               	xorwf	(??_display_onoff_control+1)& (0+255),w,b
  2094  000922  6EDF               	movwf	indf2,c
  2095  000924                     
  2096                           ; BSR set to: 0
  2097                           ;lcd.c: 63:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2098  000924  0E06               	movlw	6
  2099  000926  0100               	movlb	0	; () banked
  2100  000928  6F80               	movwf	??_display_onoff_control& (0+255),b
  2101  00092A  0E30               	movlw	48
  2102  00092C                     u1467:
  2103  00092C  2EE8               	decfsz	wreg,f,c
  2104  00092E  D7FE               	bra	u1467
  2105  000930  2F80               	decfsz	??_display_onoff_control& (0+255),f,b
  2106  000932  D7FC               	bra	u1467
  2107  000934  F000               	nop	
  2108  000936                     
  2109                           ;lcd.c: 65:     pulso(lcd);
  2110  000936  C066  F063         	movff	display_onoff_control@lcd,pulso@lcd
  2111  00093A  C067  F064         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2112  00093E  ECB8  F005         	call	_pulso	;wreg free
  2113  000942  0012               	return		;funcret
  2114  000944                     __end_of_display_onoff_control:
  2115                           	opt callstack 0
  2116                           
  2117 ;; *************** function _pulso *****************
  2118 ;; Defined at:
  2119 ;;		line 11 in file "lcd.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  lcd             2   17[COMRAM] PTR struct .
  2122 ;;		 -> NULL(0), PORTD(1), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr2l, fsr2h, status,2
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2134 ;;      Params:         2       0       0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0
  2136 ;;      Temps:          1       0       0       0       0       0       0
  2137 ;;      Totals:         3       0       0       0       0       0       0
  2138 ;;Total ram usage:        3 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    5
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_function_set
  2145 ;;		_display_onoff_control
  2146 ;;		_lcd_cmd
  2147 ;;		_entry_mode_set
  2148 ;;		_write_char
  2149 ;;		_clear_display
  2150 ;;		_return_home
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text10
  2155  000B70                     __ptext10:
  2156                           	opt callstack 0
  2157  000B70                     _pulso:
  2158                           	opt callstack 23
  2159  000B70                     
  2160                           ;lcd.c: 13:     lcd->E = 1;
  2161  000B70  C063  FFD9         	movff	pulso@lcd,fsr2l
  2162  000B74  C064  FFDA         	movff	pulso@lcd+1,fsr2h
  2163  000B78  84DF               	bsf	indf2,2,c
  2164  000B7A                     
  2165                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2166  000B7A  0E06               	movlw	6
  2167  000B7C  6E65               	movwf	??_pulso^0,c
  2168  000B7E  0E30               	movlw	48
  2169  000B80                     u1477:
  2170  000B80  2EE8               	decfsz	wreg,f,c
  2171  000B82  D7FE               	bra	u1477
  2172  000B84  2E65               	decfsz	??_pulso^0,f,c
  2173  000B86  D7FC               	bra	u1477
  2174  000B88  D000               	nop2	
  2175  000B8A                     
  2176                           ;lcd.c: 17:     lcd->E = 0;
  2177  000B8A  C063  FFD9         	movff	pulso@lcd,fsr2l
  2178  000B8E  C064  FFDA         	movff	pulso@lcd+1,fsr2h
  2179  000B92  94DF               	bcf	indf2,2,c
  2180                           
  2181                           ;lcd.c: 18:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2182  000B94  0E1A               	movlw	26
  2183  000B96  6E65               	movwf	??_pulso^0,c
  2184  000B98  0EF8               	movlw	248
  2185  000B9A                     u1487:
  2186  000B9A  2EE8               	decfsz	wreg,f,c
  2187  000B9C  D7FE               	bra	u1487
  2188  000B9E  2E65               	decfsz	??_pulso^0,f,c
  2189  000BA0  D7FC               	bra	u1487
  2190  000BA2  D000               	nop2	
  2191  000BA4                     
  2192                           ;lcd.c: 19:     lcd->data = 0x00;
  2193  000BA4  C063  FFD9         	movff	pulso@lcd,fsr2l
  2194  000BA8  C064  FFDA         	movff	pulso@lcd+1,fsr2h
  2195  000BAC  0E0F               	movlw	-241
  2196  000BAE  16DF               	andwf	indf2,f,c
  2197  000BB0  0012               	return		;funcret
  2198  000BB2                     __end_of_pulso:
  2199                           	opt callstack 0
  2200                           
  2201 ;; *************** function _int_handler *****************
  2202 ;; Defined at:
  2203 ;;		line 24 in file "main.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2217 ;;      Params:         0       0       0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0
  2219 ;;      Temps:          2       0       0       0       0       0       0
  2220 ;;      Totals:         2       0       0       0       0       0       0
  2221 ;;Total ram usage:        2 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    4
  2224 ;; This function calls:
  2225 ;;		_le_entrada
  2226 ;; This function is called by:
  2227 ;;		Interrupt level 2
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	intcode
  2232  000008                     __pintcode:
  2233                           	opt callstack 0
  2234  000008                     _int_handler:
  2235                           	opt callstack 22
  2236                           
  2237                           ;incstack = 0
  2238  000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2239  00000A  ED55  F006         	call	int_func,f	;refresh shadow registers
  2240                           
  2241                           	psect	intcode_body
  2242  000CAA                     __pintcode_body:
  2243                           	opt callstack 22
  2244  000CAA                     int_func:
  2245                           	opt callstack 22
  2246  000CAA  0006               	pop		; remove dummy address from shadow register refresh
  2247  000CAC  CFD9 F061          	movff	fsr2l,??_int_handler
  2248  000CB0  CFDA F062          	movff	fsr2h,??_int_handler+1
  2249  000CB4                     
  2250                           ;main.c: 27:      if(INTCONbits.TMR0IF == 1){
  2251  000CB4  A4F2               	btfss	242,2,c	;volatile
  2252  000CB6  EF5F  F006         	goto	i2u80_41
  2253  000CBA  EF61  F006         	goto	i2u80_40
  2254  000CBE                     i2u80_41:
  2255  000CBE  EF69  F006         	goto	i2l42
  2256  000CC2                     i2u80_40:
  2257  000CC2                     
  2258                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  2259  000CC2  94F2               	bcf	242,2,c	;volatile
  2260  000CC4                     
  2261                           ;main.c: 29:         TMR0 = 0x6C;
  2262  000CC4  0E00               	movlw	0
  2263  000CC6  6ED7               	movwf	215,c	;volatile
  2264  000CC8  0E6C               	movlw	108
  2265  000CCA  6ED6               	movwf	214,c	;volatile
  2266  000CCC                     
  2267                           ;main.c: 30:         le_entrada();
  2268  000CCC  EC43  F001         	call	_le_entrada	;wreg free
  2269  000CD0                     
  2270                           ;main.c: 31:         PORTBbits.RB0 = 0x01;
  2271  000CD0  8081               	bsf	129,0,c	;volatile
  2272  000CD2                     i2l42:
  2273  000CD2  C062  FFDA         	movff	??_int_handler+1,fsr2h
  2274  000CD6  C061  FFD9         	movff	??_int_handler,fsr2l
  2275  000CDA  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2276  000CDC  0011               	retfie		f
  2277  000CDE                     __end_of_int_handler:
  2278                           	opt callstack 0
  2279                           
  2280 ;; *************** function _le_entrada *****************
  2281 ;; Defined at:
  2282 ;;		line 6 in file "keyboard.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2296 ;;      Params:         0       0       0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		i2_clear_display
  2305 ;;		i2_goto_XY
  2306 ;;		i2_write_char
  2307 ;; This function is called by:
  2308 ;;		_int_handler
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text12
  2313  000286                     __ptext12:
  2314                           	opt callstack 0
  2315  000286                     _le_entrada:
  2316                           	opt callstack 22
  2317  000286                     
  2318                           ;keyboard.c: 7:     clear_display(lcd);
  2319  000286  C06B  F055         	movff	_lcd,i2clear_display@lcd
  2320  00028A  C06C  F056         	movff	_lcd+1,i2clear_display@lcd+1
  2321  00028E  EC1E  F005         	call	i2_clear_display	;wreg free
  2322  000292                     
  2323                           ;keyboard.c: 8:     if(PORTBbits.RB0 && controle == 1){
  2324  000292  A081               	btfss	129,0,c	;volatile
  2325  000294  EF4E  F001         	goto	i2u60_41
  2326  000298  EF50  F001         	goto	i2u60_40
  2327  00029C                     i2u60_41:
  2328  00029C  EF9B  F001         	goto	i2l1658
  2329  0002A0                     i2u60_40:
  2330  0002A0  0451               	decf	_controle^0,w,c
  2331  0002A2  A4D8               	btfss	status,2,c
  2332  0002A4  EF56  F001         	goto	i2u61_41
  2333  0002A8  EF58  F001         	goto	i2u61_40
  2334  0002AC                     i2u61_41:
  2335  0002AC  EF9B  F001         	goto	i2l1658
  2336  0002B0                     i2u61_40:
  2337  0002B0                     
  2338                           ;keyboard.c: 9:         PORTBbits.RB0 = 0x00;
  2339  0002B0  9081               	bcf	129,0,c	;volatile
  2340                           
  2341                           ;keyboard.c: 10:         PORTBbits.RB1 = 0x01;
  2342  0002B2  8281               	bsf	129,1,c	;volatile
  2343                           
  2344                           ;keyboard.c: 11:         PORTBbits.RB2 = 0x01;
  2345  0002B4  8481               	bsf	129,2,c	;volatile
  2346  0002B6                     
  2347                           ;keyboard.c: 12:         controle = 2;
  2348  0002B6  0E02               	movlw	2
  2349  0002B8  6E51               	movwf	_controle^0,c
  2350  0002BA                     
  2351                           ;keyboard.c: 13:         if(PORTBbits.RB5 == 0){
  2352  0002BA  BA81               	btfsc	129,5,c	;volatile
  2353  0002BC  EF62  F001         	goto	i2u62_41
  2354  0002C0  EF64  F001         	goto	i2u62_40
  2355  0002C4                     i2u62_41:
  2356  0002C4  EF7C  F001         	goto	i2l1654
  2357  0002C8                     i2u62_40:
  2358  0002C8                     
  2359                           ;keyboard.c: 14:             goto_XY(lcd,3,1);
  2360  0002C8  C06B  F059         	movff	_lcd,i2goto_XY@lcd
  2361  0002CC  C06C  F05A         	movff	_lcd+1,i2goto_XY@lcd+1
  2362  0002D0  0E03               	movlw	3
  2363  0002D2  6E5B               	movwf	i2goto_XY@x^0,c
  2364  0002D4  0E01               	movlw	1
  2365  0002D6  6E5C               	movwf	i2goto_XY@y^0,c
  2366  0002D8  EC13  F003         	call	i2_goto_XY	;wreg free
  2367                           
  2368                           ;keyboard.c: 15:             write_char(lcd,'<');
  2369  0002DC  C06B  F055         	movff	_lcd,i2write_char@lcd
  2370  0002E0  C06C  F056         	movff	_lcd+1,i2write_char@lcd+1
  2371  0002E4  0E3C               	movlw	60
  2372  0002E6  6E57               	movwf	i2write_char@c^0,c
  2373  0002E8  EC0C  F004         	call	i2_write_char	;wreg free
  2374                           
  2375                           ;keyboard.c: 17:             clear_display(lcd);
  2376  0002EC  C06B  F055         	movff	_lcd,i2clear_display@lcd
  2377  0002F0  C06C  F056         	movff	_lcd+1,i2clear_display@lcd+1
  2378  0002F4  EC1E  F005         	call	i2_clear_display	;wreg free
  2379  0002F8                     i2l1654:
  2380                           
  2381                           ;keyboard.c: 19:         if(PORTBbits.RB7 == 0){
  2382  0002F8  BE81               	btfsc	129,7,c	;volatile
  2383  0002FA  EF81  F001         	goto	i2u63_41
  2384  0002FE  EF83  F001         	goto	i2u63_40
  2385  000302                     i2u63_41:
  2386  000302  EF9B  F001         	goto	i2l1658
  2387  000306                     i2u63_40:
  2388  000306                     
  2389                           ;keyboard.c: 20:             goto_XY(lcd,3,1);
  2390  000306  C06B  F059         	movff	_lcd,i2goto_XY@lcd
  2391  00030A  C06C  F05A         	movff	_lcd+1,i2goto_XY@lcd+1
  2392  00030E  0E03               	movlw	3
  2393  000310  6E5B               	movwf	i2goto_XY@x^0,c
  2394  000312  0E01               	movlw	1
  2395  000314  6E5C               	movwf	i2goto_XY@y^0,c
  2396  000316  EC13  F003         	call	i2_goto_XY	;wreg free
  2397                           
  2398                           ;keyboard.c: 21:             write_char(lcd,'E');
  2399  00031A  C06B  F055         	movff	_lcd,i2write_char@lcd
  2400  00031E  C06C  F056         	movff	_lcd+1,i2write_char@lcd+1
  2401  000322  0E45               	movlw	69
  2402  000324  6E57               	movwf	i2write_char@c^0,c
  2403  000326  EC0C  F004         	call	i2_write_char	;wreg free
  2404                           
  2405                           ;keyboard.c: 23:             clear_display(lcd);
  2406  00032A  C06B  F055         	movff	_lcd,i2clear_display@lcd
  2407  00032E  C06C  F056         	movff	_lcd+1,i2clear_display@lcd+1
  2408  000332  EC1E  F005         	call	i2_clear_display	;wreg free
  2409  000336                     i2l1658:
  2410                           
  2411                           ;keyboard.c: 26:     if(PORTBbits.RB1 && controle == 2){
  2412  000336  A281               	btfss	129,1,c	;volatile
  2413  000338  EFA0  F001         	goto	i2u64_41
  2414  00033C  EFA2  F001         	goto	i2u64_40
  2415  000340                     i2u64_41:
  2416  000340  EFEE  F001         	goto	i2l1674
  2417  000344                     i2u64_40:
  2418  000344  0E02               	movlw	2
  2419  000346  1851               	xorwf	_controle^0,w,c
  2420  000348  A4D8               	btfss	status,2,c
  2421  00034A  EFA9  F001         	goto	i2u65_41
  2422  00034E  EFAB  F001         	goto	i2u65_40
  2423  000352                     i2u65_41:
  2424  000352  EFEE  F001         	goto	i2l1674
  2425  000356                     i2u65_40:
  2426  000356                     
  2427                           ;keyboard.c: 27:         PORTBbits.RB0 = 0x01;
  2428  000356  8081               	bsf	129,0,c	;volatile
  2429                           
  2430                           ;keyboard.c: 28:         PORTBbits.RB1 = 0x00;
  2431  000358  9281               	bcf	129,1,c	;volatile
  2432                           
  2433                           ;keyboard.c: 29:         PORTBbits.RB2 = 0x01;
  2434  00035A  8481               	bsf	129,2,c	;volatile
  2435  00035C                     
  2436                           ;keyboard.c: 30:         controle = 3;
  2437  00035C  0E03               	movlw	3
  2438  00035E  6E51               	movwf	_controle^0,c
  2439  000360                     
  2440                           ;keyboard.c: 31:         if(PORTBbits.RB4 == 0){
  2441  000360  B881               	btfsc	129,4,c	;volatile
  2442  000362  EFB5  F001         	goto	i2u66_41
  2443  000366  EFB7  F001         	goto	i2u66_40
  2444  00036A                     i2u66_41:
  2445  00036A  EFCF  F001         	goto	i2l1670
  2446  00036E                     i2u66_40:
  2447  00036E                     
  2448                           ;keyboard.c: 32:             goto_XY(lcd,3,1);
  2449  00036E  C06B  F059         	movff	_lcd,i2goto_XY@lcd
  2450  000372  C06C  F05A         	movff	_lcd+1,i2goto_XY@lcd+1
  2451  000376  0E03               	movlw	3
  2452  000378  6E5B               	movwf	i2goto_XY@x^0,c
  2453  00037A  0E01               	movlw	1
  2454  00037C  6E5C               	movwf	i2goto_XY@y^0,c
  2455  00037E  EC13  F003         	call	i2_goto_XY	;wreg free
  2456                           
  2457                           ;keyboard.c: 33:             write_char(lcd,'C');
  2458  000382  C06B  F055         	movff	_lcd,i2write_char@lcd
  2459  000386  C06C  F056         	movff	_lcd+1,i2write_char@lcd+1
  2460  00038A  0E43               	movlw	67
  2461  00038C  6E57               	movwf	i2write_char@c^0,c
  2462  00038E  EC0C  F004         	call	i2_write_char	;wreg free
  2463                           
  2464                           ;keyboard.c: 35:             clear_display(lcd);
  2465  000392  C06B  F055         	movff	_lcd,i2clear_display@lcd
  2466  000396  C06C  F056         	movff	_lcd+1,i2clear_display@lcd+1
  2467  00039A  EC1E  F005         	call	i2_clear_display	;wreg free
  2468  00039E                     i2l1670:
  2469                           
  2470                           ;keyboard.c: 37:         if(PORTBbits.RB6 == 0){
  2471  00039E  BC81               	btfsc	129,6,c	;volatile
  2472  0003A0  EFD4  F001         	goto	i2u67_41
  2473  0003A4  EFD6  F001         	goto	i2u67_40
  2474  0003A8                     i2u67_41:
  2475  0003A8  EFEE  F001         	goto	i2l1674
  2476  0003AC                     i2u67_40:
  2477  0003AC                     
  2478                           ;keyboard.c: 38:             goto_XY(lcd,3,1);
  2479  0003AC  C06B  F059         	movff	_lcd,i2goto_XY@lcd
  2480  0003B0  C06C  F05A         	movff	_lcd+1,i2goto_XY@lcd+1
  2481  0003B4  0E03               	movlw	3
  2482  0003B6  6E5B               	movwf	i2goto_XY@x^0,c
  2483  0003B8  0E01               	movlw	1
  2484  0003BA  6E5C               	movwf	i2goto_XY@y^0,c
  2485  0003BC  EC13  F003         	call	i2_goto_XY	;wreg free
  2486                           
  2487                           ;keyboard.c: 39:             write_char(lcd,'B');
  2488  0003C0  C06B  F055         	movff	_lcd,i2write_char@lcd
  2489  0003C4  C06C  F056         	movff	_lcd+1,i2write_char@lcd+1
  2490  0003C8  0E42               	movlw	66
  2491  0003CA  6E57               	movwf	i2write_char@c^0,c
  2492  0003CC  EC0C  F004         	call	i2_write_char	;wreg free
  2493                           
  2494                           ;keyboard.c: 41:             clear_display(lcd);
  2495  0003D0  C06B  F055         	movff	_lcd,i2clear_display@lcd
  2496  0003D4  C06C  F056         	movff	_lcd+1,i2clear_display@lcd+1
  2497  0003D8  EC1E  F005         	call	i2_clear_display	;wreg free
  2498  0003DC                     i2l1674:
  2499                           
  2500                           ;keyboard.c: 44:     if(PORTBbits.RB2 && controle == 3){
  2501  0003DC  A481               	btfss	129,2,c	;volatile
  2502  0003DE  EFF3  F001         	goto	i2u68_41
  2503  0003E2  EFF5  F001         	goto	i2u68_40
  2504  0003E6                     i2u68_41:
  2505  0003E6  EF41  F002         	goto	i2l206
  2506  0003EA                     i2u68_40:
  2507  0003EA  0E03               	movlw	3
  2508  0003EC  1851               	xorwf	_controle^0,w,c
  2509  0003EE  A4D8               	btfss	status,2,c
  2510  0003F0  EFFC  F001         	goto	i2u69_41
  2511  0003F4  EFFE  F001         	goto	i2u69_40
  2512  0003F8                     i2u69_41:
  2513  0003F8  EF41  F002         	goto	i2l206
  2514  0003FC                     i2u69_40:
  2515  0003FC                     
  2516                           ;keyboard.c: 45:         PORTBbits.RB0 = 0x01;
  2517  0003FC  8081               	bsf	129,0,c	;volatile
  2518                           
  2519                           ;keyboard.c: 46:         PORTBbits.RB1 = 0x01;
  2520  0003FE  8281               	bsf	129,1,c	;volatile
  2521                           
  2522                           ;keyboard.c: 47:         PORTBbits.RB2 = 0x00;
  2523  000400  9481               	bcf	129,2,c	;volatile
  2524  000402                     
  2525                           ;keyboard.c: 48:         controle = 1;
  2526  000402  0E01               	movlw	1
  2527  000404  6E51               	movwf	_controle^0,c
  2528  000406                     
  2529                           ;keyboard.c: 49:         if(PORTBbits.RB5 == 0){
  2530  000406  BA81               	btfsc	129,5,c	;volatile
  2531  000408  EF08  F002         	goto	i2u70_41
  2532  00040C  EF0A  F002         	goto	i2u70_40
  2533  000410                     i2u70_41:
  2534  000410  EF22  F002         	goto	i2l1686
  2535  000414                     i2u70_40:
  2536  000414                     
  2537                           ;keyboard.c: 50:             goto_XY(lcd,3,1);
  2538  000414  C06B  F059         	movff	_lcd,i2goto_XY@lcd
  2539  000418  C06C  F05A         	movff	_lcd+1,i2goto_XY@lcd+1
  2540  00041C  0E03               	movlw	3
  2541  00041E  6E5B               	movwf	i2goto_XY@x^0,c
  2542  000420  0E01               	movlw	1
  2543  000422  6E5C               	movwf	i2goto_XY@y^0,c
  2544  000424  EC13  F003         	call	i2_goto_XY	;wreg free
  2545                           
  2546                           ;keyboard.c: 51:             write_char(lcd,'>');
  2547  000428  C06B  F055         	movff	_lcd,i2write_char@lcd
  2548  00042C  C06C  F056         	movff	_lcd+1,i2write_char@lcd+1
  2549  000430  0E3E               	movlw	62
  2550  000432  6E57               	movwf	i2write_char@c^0,c
  2551  000434  EC0C  F004         	call	i2_write_char	;wreg free
  2552                           
  2553                           ;keyboard.c: 53:             clear_display(lcd);
  2554  000438  C06B  F055         	movff	_lcd,i2clear_display@lcd
  2555  00043C  C06C  F056         	movff	_lcd+1,i2clear_display@lcd+1
  2556  000440  EC1E  F005         	call	i2_clear_display	;wreg free
  2557  000444                     i2l1686:
  2558                           
  2559                           ;keyboard.c: 55:         if(PORTBbits.RB7 == 0){
  2560  000444  BE81               	btfsc	129,7,c	;volatile
  2561  000446  EF27  F002         	goto	i2u71_41
  2562  00044A  EF29  F002         	goto	i2u71_40
  2563  00044E                     i2u71_41:
  2564  00044E  EF41  F002         	goto	i2l206
  2565  000452                     i2u71_40:
  2566  000452                     
  2567                           ;keyboard.c: 56:             goto_XY(lcd,3,1);
  2568  000452  C06B  F059         	movff	_lcd,i2goto_XY@lcd
  2569  000456  C06C  F05A         	movff	_lcd+1,i2goto_XY@lcd+1
  2570  00045A  0E03               	movlw	3
  2571  00045C  6E5B               	movwf	i2goto_XY@x^0,c
  2572  00045E  0E01               	movlw	1
  2573  000460  6E5C               	movwf	i2goto_XY@y^0,c
  2574  000462  EC13  F003         	call	i2_goto_XY	;wreg free
  2575                           
  2576                           ;keyboard.c: 57:             write_char(lcd,'S');
  2577  000466  C06B  F055         	movff	_lcd,i2write_char@lcd
  2578  00046A  C06C  F056         	movff	_lcd+1,i2write_char@lcd+1
  2579  00046E  0E53               	movlw	83
  2580  000470  6E57               	movwf	i2write_char@c^0,c
  2581  000472  EC0C  F004         	call	i2_write_char	;wreg free
  2582                           
  2583                           ;keyboard.c: 59:             clear_display(lcd);
  2584  000476  C06B  F055         	movff	_lcd,i2clear_display@lcd
  2585  00047A  C06C  F056         	movff	_lcd+1,i2clear_display@lcd+1
  2586  00047E  EC1E  F005         	call	i2_clear_display	;wreg free
  2587  000482                     i2l206:
  2588  000482  0012               	return		;funcret
  2589  000484                     __end_of_le_entrada:
  2590                           	opt callstack 0
  2591                           
  2592 ;; *************** function i2_write_char *****************
  2593 ;; Defined at:
  2594 ;;		line 137 in file "lcd.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  lcd             2    3[COMRAM] PTR struct .
  2597 ;;		 -> NULL(0), PORTD(1), 
  2598 ;;  c               1    5[COMRAM] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2610 ;;      Params:         3       0       0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0
  2612 ;;      Temps:          1       0       0       0       0       0       0
  2613 ;;      Totals:         4       0       0       0       0       0       0
  2614 ;;Total ram usage:        4 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    1
  2617 ;; This function calls:
  2618 ;;		i2_pulso
  2619 ;; This function is called by:
  2620 ;;		_le_entrada
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text13
  2625  000818                     __ptext13:
  2626                           	opt callstack 0
  2627  000818                     i2_write_char:
  2628                           	opt callstack 23
  2629  000818                     
  2630                           ;lcd.c: 138:     lcd->E = 0;
  2631  000818  C055  FFD9         	movff	i2write_char@lcd,fsr2l
  2632  00081C  C056  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2633  000820  94DF               	bcf	indf2,2,c
  2634                           
  2635                           ;lcd.c: 139:     lcd->RS = 1;
  2636  000822  C055  FFD9         	movff	i2write_char@lcd,fsr2l
  2637  000826  C056  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2638  00082A  80DF               	bsf	indf2,0,c
  2639                           
  2640                           ;lcd.c: 140:     lcd->R_W = 0;
  2641  00082C  C055  FFD9         	movff	i2write_char@lcd,fsr2l
  2642  000830  C056  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2643  000834  92DF               	bcf	indf2,1,c
  2644  000836                     
  2645                           ;lcd.c: 143:     lcd->data = (c>>4);
  2646  000836  C057  F058         	movff	i2write_char@c,??i2_write_char
  2647  00083A  3A58               	swapf	??i2_write_char^0,f,c
  2648  00083C  0E0F               	movlw	15
  2649  00083E  1658               	andwf	??i2_write_char^0,f,c
  2650  000840  C055  FFD9         	movff	i2write_char@lcd,fsr2l
  2651  000844  C056  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2652  000848  3A58               	swapf	??i2_write_char^0,f,c
  2653  00084A  50DF               	movf	indf2,w,c
  2654  00084C  1858               	xorwf	??i2_write_char^0,w,c
  2655  00084E  0B0F               	andlw	-241
  2656  000850  1858               	xorwf	??i2_write_char^0,w,c
  2657  000852  6EDF               	movwf	indf2,c
  2658  000854                     
  2659                           ;lcd.c: 144:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2660  000854  0E06               	movlw	6
  2661  000856  6E58               	movwf	??i2_write_char^0,c
  2662  000858  0E30               	movlw	48
  2663  00085A                     i2u149_47:
  2664  00085A  2EE8               	decfsz	wreg,f,c
  2665  00085C  D7FE               	bra	i2u149_47
  2666  00085E  2E58               	decfsz	??i2_write_char^0,f,c
  2667  000860  D7FC               	bra	i2u149_47
  2668  000862  D000               	nop2	
  2669  000864                     
  2670                           ;lcd.c: 146:     pulso(lcd);
  2671  000864  C055  F052         	movff	i2write_char@lcd,i2pulso@lcd
  2672  000868  C056  F053         	movff	i2write_char@lcd+1,i2pulso@lcd+1
  2673  00086C  ECD9  F005         	call	i2_pulso	;wreg free
  2674  000870                     
  2675                           ;lcd.c: 149:     lcd->data = (c);
  2676  000870  C057  F058         	movff	i2write_char@c,??i2_write_char
  2677  000874  C055  FFD9         	movff	i2write_char@lcd,fsr2l
  2678  000878  C056  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2679  00087C  3A58               	swapf	??i2_write_char^0,f,c
  2680  00087E  50DF               	movf	indf2,w,c
  2681  000880  1858               	xorwf	??i2_write_char^0,w,c
  2682  000882  0B0F               	andlw	-241
  2683  000884  1858               	xorwf	??i2_write_char^0,w,c
  2684  000886  6EDF               	movwf	indf2,c
  2685  000888                     
  2686                           ;lcd.c: 150:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2687  000888  0E06               	movlw	6
  2688  00088A  6E58               	movwf	??i2_write_char^0,c
  2689  00088C  0E30               	movlw	48
  2690  00088E                     i2u150_47:
  2691  00088E  2EE8               	decfsz	wreg,f,c
  2692  000890  D7FE               	bra	i2u150_47
  2693  000892  2E58               	decfsz	??i2_write_char^0,f,c
  2694  000894  D7FC               	bra	i2u150_47
  2695  000896  D000               	nop2	
  2696  000898                     
  2697                           ;lcd.c: 152:     pulso(lcd);
  2698  000898  C055  F052         	movff	i2write_char@lcd,i2pulso@lcd
  2699  00089C  C056  F053         	movff	i2write_char@lcd+1,i2pulso@lcd+1
  2700  0008A0  ECD9  F005         	call	i2_pulso	;wreg free
  2701                           
  2702                           ;lcd.c: 153:     lcd->RS = 0;
  2703  0008A4  C055  FFD9         	movff	i2write_char@lcd,fsr2l
  2704  0008A8  C056  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2705  0008AC  90DF               	bcf	indf2,0,c
  2706  0008AE  0012               	return		;funcret
  2707  0008B0                     __end_ofi2_write_char:
  2708                           	opt callstack 0
  2709                           
  2710 ;; *************** function i2_goto_XY *****************
  2711 ;; Defined at:
  2712 ;;		line 79 in file "lcd.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  lcd             2    7[COMRAM] PTR struct .
  2715 ;;		 -> NULL(0), PORTD(1), 
  2716 ;;  x               1    9[COMRAM] unsigned char 
  2717 ;;  y               1   10[COMRAM] unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  goto_XY         1   14[COMRAM] unsigned char 
  2720 ;;  goto_XY         1   13[COMRAM] unsigned char 
  2721 ;;  goto_XY         1   12[COMRAM] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2731 ;;      Params:         4       0       0       0       0       0       0
  2732 ;;      Locals:         3       0       0       0       0       0       0
  2733 ;;      Temps:          1       0       0       0       0       0       0
  2734 ;;      Totals:         8       0       0       0       0       0       0
  2735 ;;Total ram usage:        8 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    2
  2738 ;; This function calls:
  2739 ;;		i2_lcd_cmd
  2740 ;; This function is called by:
  2741 ;;		_le_entrada
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text14
  2746  000626                     __ptext14:
  2747                           	opt callstack 0
  2748  000626                     i2_goto_XY:
  2749                           	opt callstack 22
  2750  000626                     
  2751                           ;lcd.c: 80:     unsigned char temp,z,a;;lcd.c: 81:     if(x == 1)
  2752  000626  045B               	decf	i2goto_XY@x^0,w,c
  2753  000628  A4D8               	btfss	status,2,c
  2754  00062A  EF19  F003         	goto	i2u56_41
  2755  00062E  EF1B  F003         	goto	i2u56_40
  2756  000632                     i2u56_41:
  2757  000632  EF3D  F003         	goto	i2l1576
  2758  000636                     i2u56_40:
  2759  000636                     
  2760                           ;lcd.c: 82:     {;lcd.c: 83:        temp = 0x80 + y - 1;
  2761  000636  505C               	movf	i2goto_XY@y^0,w,c
  2762  000638  0F7F               	addlw	127
  2763  00063A  6E60               	movwf	i2goto_XY@temp^0,c
  2764                           
  2765                           ;lcd.c: 84:        z = temp>>4;
  2766  00063C  3860               	swapf	i2goto_XY@temp^0,w,c
  2767  00063E  0B0F               	andlw	15
  2768  000640  6E5E               	movwf	i2goto_XY@z^0,c
  2769  000642                     i2l1568:
  2770                           
  2771                           ;lcd.c: 85:        a = temp;
  2772  000642  C060  F05F         	movff	i2goto_XY@temp,i2goto_XY@a
  2773  000646                     
  2774                           ;lcd.c: 86:        lcd_cmd(lcd, z);
  2775  000646  C059  F055         	movff	i2goto_XY@lcd,i2lcd_cmd@lcd
  2776  00064A  C05A  F056         	movff	i2goto_XY@lcd+1,i2lcd_cmd@lcd+1
  2777  00064E  C05E  F057         	movff	i2goto_XY@z,i2lcd_cmd@a
  2778  000652  EC1A  F006         	call	i2_lcd_cmd	;wreg free
  2779  000656                     
  2780                           ;lcd.c: 87:        _delay((unsigned long)((1)*(16000000/4000.0)));
  2781  000656  0E06               	movlw	6
  2782  000658  6E5D               	movwf	??i2_goto_XY^0,c
  2783  00065A  0E30               	movlw	48
  2784  00065C                     i2u151_47:
  2785  00065C  2EE8               	decfsz	wreg,f,c
  2786  00065E  D7FE               	bra	i2u151_47
  2787  000660  2E5D               	decfsz	??i2_goto_XY^0,f,c
  2788  000662  D7FC               	bra	i2u151_47
  2789  000664  D000               	nop2	
  2790  000666                     
  2791                           ;lcd.c: 88:        lcd_cmd(lcd, a);
  2792  000666  C059  F055         	movff	i2goto_XY@lcd,i2lcd_cmd@lcd
  2793  00066A  C05A  F056         	movff	i2goto_XY@lcd+1,i2lcd_cmd@lcd+1
  2794  00066E  C05F  F057         	movff	i2goto_XY@a,i2lcd_cmd@a
  2795  000672  EC1A  F006         	call	i2_lcd_cmd	;wreg free
  2796                           
  2797                           ;lcd.c: 89:     }
  2798  000676  EF70  F003         	goto	i2l170
  2799  00067A                     i2l1576:
  2800  00067A  0E02               	movlw	2
  2801  00067C  185B               	xorwf	i2goto_XY@x^0,w,c
  2802  00067E  A4D8               	btfss	status,2,c
  2803  000680  EF44  F003         	goto	i2u57_41
  2804  000684  EF46  F003         	goto	i2u57_40
  2805  000688                     i2u57_41:
  2806  000688  EF4E  F003         	goto	i2l1588
  2807  00068C                     i2u57_40:
  2808  00068C                     
  2809                           ;lcd.c: 91:     {;lcd.c: 92:        temp = 0xC0 + y - 1;
  2810  00068C  505C               	movf	i2goto_XY@y^0,w,c
  2811  00068E  0FBF               	addlw	191
  2812  000690  6E60               	movwf	i2goto_XY@temp^0,c
  2813                           
  2814                           ;lcd.c: 93:        z = temp>>4;
  2815  000692  3860               	swapf	i2goto_XY@temp^0,w,c
  2816  000694  0B0F               	andlw	15
  2817  000696  6E5E               	movwf	i2goto_XY@z^0,c
  2818  000698  EF21  F003         	goto	i2l1568
  2819  00069C                     i2l1588:
  2820  00069C  0E03               	movlw	3
  2821  00069E  185B               	xorwf	i2goto_XY@x^0,w,c
  2822  0006A0  A4D8               	btfss	status,2,c
  2823  0006A2  EF55  F003         	goto	i2u58_41
  2824  0006A6  EF57  F003         	goto	i2u58_40
  2825  0006AA                     i2u58_41:
  2826  0006AA  EF5F  F003         	goto	i2l1600
  2827  0006AE                     i2u58_40:
  2828  0006AE                     
  2829                           ;lcd.c: 100:     {;lcd.c: 101:        temp = 0x90 + y - 1;
  2830  0006AE  505C               	movf	i2goto_XY@y^0,w,c
  2831  0006B0  0F8F               	addlw	143
  2832  0006B2  6E60               	movwf	i2goto_XY@temp^0,c
  2833                           
  2834                           ;lcd.c: 102:        z = temp>>4;
  2835  0006B4  3860               	swapf	i2goto_XY@temp^0,w,c
  2836  0006B6  0B0F               	andlw	15
  2837  0006B8  6E5E               	movwf	i2goto_XY@z^0,c
  2838  0006BA  EF21  F003         	goto	i2l1568
  2839  0006BE                     i2l1600:
  2840  0006BE  0E04               	movlw	4
  2841  0006C0  185B               	xorwf	i2goto_XY@x^0,w,c
  2842  0006C2  A4D8               	btfss	status,2,c
  2843  0006C4  EF66  F003         	goto	i2u59_41
  2844  0006C8  EF68  F003         	goto	i2u59_40
  2845  0006CC                     i2u59_41:
  2846  0006CC  EF70  F003         	goto	i2l166
  2847  0006D0                     i2u59_40:
  2848  0006D0                     
  2849                           ;lcd.c: 109:     {;lcd.c: 110:        temp = 0xD0 + y - 1;
  2850  0006D0  505C               	movf	i2goto_XY@y^0,w,c
  2851  0006D2  0FCF               	addlw	207
  2852  0006D4  6E60               	movwf	i2goto_XY@temp^0,c
  2853                           
  2854                           ;lcd.c: 111:        z = temp>>4;
  2855  0006D6  3860               	swapf	i2goto_XY@temp^0,w,c
  2856  0006D8  0B0F               	andlw	15
  2857  0006DA  6E5E               	movwf	i2goto_XY@z^0,c
  2858  0006DC  EF21  F003         	goto	i2l1568
  2859  0006E0                     i2l166:
  2860  0006E0                     i2l170:
  2861  0006E0  0012               	return		;funcret
  2862  0006E2                     __end_ofi2_goto_XY:
  2863                           	opt callstack 0
  2864                           
  2865 ;; *************** function i2_lcd_cmd *****************
  2866 ;; Defined at:
  2867 ;;		line 68 in file "lcd.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  lcd             2    3[COMRAM] PTR struct .
  2870 ;;		 -> NULL(0), PORTD(1), 
  2871 ;;  a               1    5[COMRAM] unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2883 ;;      Params:         3       0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0
  2885 ;;      Temps:          1       0       0       0       0       0       0
  2886 ;;      Totals:         4       0       0       0       0       0       0
  2887 ;;Total ram usage:        4 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    1
  2890 ;; This function calls:
  2891 ;;		i2_pulso
  2892 ;; This function is called by:
  2893 ;;		i2_goto_XY
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text15
  2898  000C34                     __ptext15:
  2899                           	opt callstack 0
  2900  000C34                     i2_lcd_cmd:
  2901                           	opt callstack 22
  2902  000C34                     
  2903                           ;lcd.c: 69:     lcd->RS = 0;
  2904  000C34  C055  FFD9         	movff	i2lcd_cmd@lcd,fsr2l
  2905  000C38  C056  FFDA         	movff	i2lcd_cmd@lcd+1,fsr2h
  2906  000C3C  90DF               	bcf	indf2,0,c
  2907  000C3E                     
  2908                           ;lcd.c: 70:     lcd->data = (a);
  2909  000C3E  C057  F058         	movff	i2lcd_cmd@a,??i2_lcd_cmd
  2910  000C42  C055  FFD9         	movff	i2lcd_cmd@lcd,fsr2l
  2911  000C46  C056  FFDA         	movff	i2lcd_cmd@lcd+1,fsr2h
  2912  000C4A  3A58               	swapf	??i2_lcd_cmd^0,f,c
  2913  000C4C  50DF               	movf	indf2,w,c
  2914  000C4E  1858               	xorwf	??i2_lcd_cmd^0,w,c
  2915  000C50  0B0F               	andlw	-241
  2916  000C52  1858               	xorwf	??i2_lcd_cmd^0,w,c
  2917  000C54  6EDF               	movwf	indf2,c
  2918  000C56                     
  2919                           ;lcd.c: 71:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2920  000C56  0E06               	movlw	6
  2921  000C58  6E58               	movwf	??i2_lcd_cmd^0,c
  2922  000C5A  0E30               	movlw	48
  2923  000C5C                     i2u152_47:
  2924  000C5C  2EE8               	decfsz	wreg,f,c
  2925  000C5E  D7FE               	bra	i2u152_47
  2926  000C60  2E58               	decfsz	??i2_lcd_cmd^0,f,c
  2927  000C62  D7FC               	bra	i2u152_47
  2928  000C64  D000               	nop2	
  2929  000C66                     
  2930                           ;lcd.c: 73:     pulso(lcd);
  2931  000C66  C055  F052         	movff	i2lcd_cmd@lcd,i2pulso@lcd
  2932  000C6A  C056  F053         	movff	i2lcd_cmd@lcd+1,i2pulso@lcd+1
  2933  000C6E  ECD9  F005         	call	i2_pulso	;wreg free
  2934  000C72  0012               	return		;funcret
  2935  000C74                     __end_ofi2_lcd_cmd:
  2936                           	opt callstack 0
  2937                           
  2938 ;; *************** function i2_clear_display *****************
  2939 ;; Defined at:
  2940 ;;		line 156 in file "lcd.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  lcd             2    3[COMRAM] PTR struct .
  2943 ;;		 -> NULL(0), PORTD(1), 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2955 ;;      Params:         2       0       0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0
  2957 ;;      Temps:          1       0       0       0       0       0       0
  2958 ;;      Totals:         3       0       0       0       0       0       0
  2959 ;;Total ram usage:        3 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    1
  2962 ;; This function calls:
  2963 ;;		i2_pulso
  2964 ;; This function is called by:
  2965 ;;		_le_entrada
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text16
  2970  000A3C                     __ptext16:
  2971                           	opt callstack 0
  2972  000A3C                     i2_clear_display:
  2973                           	opt callstack 23
  2974  000A3C                     
  2975                           ;lcd.c: 157:     lcd->E = 0;
  2976  000A3C  C055  FFD9         	movff	i2clear_display@lcd,fsr2l
  2977  000A40  C056  FFDA         	movff	i2clear_display@lcd+1,fsr2h
  2978  000A44  94DF               	bcf	indf2,2,c
  2979                           
  2980                           ;lcd.c: 158:     lcd->RS = 0;
  2981  000A46  C055  FFD9         	movff	i2clear_display@lcd,fsr2l
  2982  000A4A  C056  FFDA         	movff	i2clear_display@lcd+1,fsr2h
  2983  000A4E  90DF               	bcf	indf2,0,c
  2984                           
  2985                           ;lcd.c: 159:     lcd->R_W = 0;
  2986  000A50  C055  FFD9         	movff	i2clear_display@lcd,fsr2l
  2987  000A54  C056  FFDA         	movff	i2clear_display@lcd+1,fsr2h
  2988  000A58  92DF               	bcf	indf2,1,c
  2989  000A5A                     
  2990                           ;lcd.c: 162:     lcd->data = 0x0;
  2991  000A5A  C055  FFD9         	movff	i2clear_display@lcd,fsr2l
  2992  000A5E  C056  FFDA         	movff	i2clear_display@lcd+1,fsr2h
  2993  000A62  0E0F               	movlw	-241
  2994  000A64  16DF               	andwf	indf2,f,c
  2995  000A66                     
  2996                           ;lcd.c: 163:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2997  000A66  0E06               	movlw	6
  2998  000A68  6E57               	movwf	??i2_clear_display^0,c
  2999  000A6A  0E30               	movlw	48
  3000  000A6C                     i2u153_47:
  3001  000A6C  2EE8               	decfsz	wreg,f,c
  3002  000A6E  D7FE               	bra	i2u153_47
  3003  000A70  2E57               	decfsz	??i2_clear_display^0,f,c
  3004  000A72  D7FC               	bra	i2u153_47
  3005  000A74  D000               	nop2	
  3006  000A76                     
  3007                           ;lcd.c: 165:     pulso(lcd);
  3008  000A76  C055  F052         	movff	i2clear_display@lcd,i2pulso@lcd
  3009  000A7A  C056  F053         	movff	i2clear_display@lcd+1,i2pulso@lcd+1
  3010  000A7E  ECD9  F005         	call	i2_pulso	;wreg free
  3011  000A82                     
  3012                           ;lcd.c: 168:     lcd->data = 0x1;
  3013  000A82  C055  FFD9         	movff	i2clear_display@lcd,fsr2l
  3014  000A86  C056  FFDA         	movff	i2clear_display@lcd+1,fsr2h
  3015  000A8A  50DF               	movf	indf2,w,c
  3016  000A8C  0B0F               	andlw	-241
  3017  000A8E  0910               	iorlw	16
  3018  000A90  6EDF               	movwf	indf2,c
  3019  000A92                     
  3020                           ;lcd.c: 169:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3021  000A92  0E06               	movlw	6
  3022  000A94  6E57               	movwf	??i2_clear_display^0,c
  3023  000A96  0E30               	movlw	48
  3024  000A98                     i2u154_47:
  3025  000A98  2EE8               	decfsz	wreg,f,c
  3026  000A9A  D7FE               	bra	i2u154_47
  3027  000A9C  2E57               	decfsz	??i2_clear_display^0,f,c
  3028  000A9E  D7FC               	bra	i2u154_47
  3029  000AA0  D000               	nop2	
  3030  000AA2                     
  3031                           ;lcd.c: 171:     pulso(lcd);
  3032  000AA2  C055  F052         	movff	i2clear_display@lcd,i2pulso@lcd
  3033  000AA6  C056  F053         	movff	i2clear_display@lcd+1,i2pulso@lcd+1
  3034  000AAA  ECD9  F005         	call	i2_pulso	;wreg free
  3035  000AAE  0012               	return		;funcret
  3036  000AB0                     __end_ofi2_clear_display:
  3037                           	opt callstack 0
  3038                           
  3039 ;; *************** function i2_pulso *****************
  3040 ;; Defined at:
  3041 ;;		line 11 in file "lcd.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  lcd             2    0[COMRAM] PTR struct .
  3044 ;;		 -> NULL(0), PORTD(1), 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr2l, fsr2h, status,2
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3056 ;;      Params:         2       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0
  3058 ;;      Temps:          1       0       0       0       0       0       0
  3059 ;;      Totals:         3       0       0       0       0       0       0
  3060 ;;Total ram usage:        3 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		i2_lcd_cmd
  3066 ;;		i2_write_char
  3067 ;;		i2_clear_display
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text17
  3072  000BB2                     __ptext17:
  3073                           	opt callstack 0
  3074  000BB2                     i2_pulso:
  3075                           	opt callstack 23
  3076  000BB2                     
  3077                           ;lcd.c: 13:     lcd->E = 1;
  3078  000BB2  C052  FFD9         	movff	i2pulso@lcd,fsr2l
  3079  000BB6  C053  FFDA         	movff	i2pulso@lcd+1,fsr2h
  3080  000BBA  84DF               	bsf	indf2,2,c
  3081  000BBC                     
  3082                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3083  000BBC  0E06               	movlw	6
  3084  000BBE  6E54               	movwf	??i2_pulso^0,c
  3085  000BC0  0E30               	movlw	48
  3086  000BC2                     i2u155_47:
  3087  000BC2  2EE8               	decfsz	wreg,f,c
  3088  000BC4  D7FE               	bra	i2u155_47
  3089  000BC6  2E54               	decfsz	??i2_pulso^0,f,c
  3090  000BC8  D7FC               	bra	i2u155_47
  3091  000BCA  D000               	nop2	
  3092  000BCC                     
  3093                           ;lcd.c: 17:     lcd->E = 0;
  3094  000BCC  C052  FFD9         	movff	i2pulso@lcd,fsr2l
  3095  000BD0  C053  FFDA         	movff	i2pulso@lcd+1,fsr2h
  3096  000BD4  94DF               	bcf	indf2,2,c
  3097                           
  3098                           ;lcd.c: 18:     _delay((unsigned long)((5)*(16000000/4000.0)));
  3099  000BD6  0E1A               	movlw	26
  3100  000BD8  6E54               	movwf	??i2_pulso^0,c
  3101  000BDA  0EF8               	movlw	248
  3102  000BDC                     i2u156_47:
  3103  000BDC  2EE8               	decfsz	wreg,f,c
  3104  000BDE  D7FE               	bra	i2u156_47
  3105  000BE0  2E54               	decfsz	??i2_pulso^0,f,c
  3106  000BE2  D7FC               	bra	i2u156_47
  3107  000BE4  D000               	nop2	
  3108  000BE6                     
  3109                           ;lcd.c: 19:     lcd->data = 0x00;
  3110  000BE6  C052  FFD9         	movff	i2pulso@lcd,fsr2l
  3111  000BEA  C053  FFDA         	movff	i2pulso@lcd+1,fsr2h
  3112  000BEE  0E0F               	movlw	-241
  3113  000BF0  16DF               	andwf	indf2,f,c
  3114  000BF2  0012               	return		;funcret
  3115  000BF4                     __end_ofi2_pulso:
  3116                           	opt callstack 0
  3117  0000                     
  3118                           	psect	rparam
  3119  0000                     
  3120                           	psect	temp
  3121  00006D                     btemp:
  3122                           	opt callstack 0
  3123  00006D                     	ds	1
  3124  0000                     int$flags	set	btemp
  3125  0000                     wtemp8	set	btemp+1
  3126  0000                     ttemp5	set	btemp+1
  3127  0000                     ttemp6	set	btemp+4
  3128  0000                     ttemp7	set	btemp+8
  3129                           tosu	equ	0xFFF
  3130                           tosh	equ	0xFFE
  3131                           tosl	equ	0xFFD
  3132                           stkptr	equ	0xFFC
  3133                           pclatu	equ	0xFFB
  3134                           pclath	equ	0xFFA
  3135                           pcl	equ	0xFF9
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           prodh	equ	0xFF4
  3141                           prodl	equ	0xFF3
  3142                           indf0	equ	0xFEF
  3143                           postinc0	equ	0xFEE
  3144                           postdec0	equ	0xFED
  3145                           preinc0	equ	0xFEC
  3146                           plusw0	equ	0xFEB
  3147                           fsr0h	equ	0xFEA
  3148                           fsr0l	equ	0xFE9
  3149                           wreg	equ	0xFE8
  3150                           indf1	equ	0xFE7
  3151                           postinc1	equ	0xFE6
  3152                           postdec1	equ	0xFE5
  3153                           preinc1	equ	0xFE4
  3154                           plusw1	equ	0xFE3
  3155                           fsr1h	equ	0xFE2
  3156                           fsr1l	equ	0xFE1
  3157                           bsr	equ	0xFE0
  3158                           indf2	equ	0xFDF
  3159                           postinc2	equ	0xFDE
  3160                           postdec2	equ	0xFDD
  3161                           preinc2	equ	0xFDC
  3162                           plusw2	equ	0xFDB
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        161
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     108
    BANK0           128     95     127
    BANK1           256      0      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> menu@palavra4(BANK0[16]), menu@palavra3(BANK0[16]), menu@palavra2(BANK0[16]), menu@palavra(BANK0[16]), 
		 -> instrucoes@palavra4(COMRAM[16]), instrucoes@palavra3(COMRAM[16]), instrucoes@palavra2(COMRAM[16]), instrucoes@palavra(COMRAM[16]), 
		 -> creditos@palavra2(COMRAM[16]), creditos@palavra(COMRAM[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> menu@palavra4(BANK0[16]), menu@palavra3(BANK0[16]), menu@palavra2(BANK0[16]), menu@palavra(BANK0[16]), 
		 -> instrucoes@palavra4(COMRAM[16]), instrucoes@palavra3(COMRAM[16]), instrucoes@palavra2(COMRAM[16]), instrucoes@palavra(COMRAM[16]), 
		 -> creditos@palavra2(COMRAM[16]), creditos@palavra(COMRAM[16]), 

    clear_display@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_display_onoff_control
    _main->_entry_mode_set
    _main->_function_set
    _menu->_goto_XY
    _write_char->_pulso
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _clear_display->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    _le_entrada->i2_goto_XY
    i2_write_char->i2_pulso
    i2_goto_XY->i2_lcd_cmd
    i2_lcd_cmd->i2_pulso
    i2_clear_display->i2_pulso

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_goto_XY

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23862
                                             93 BANK0      2     2      0
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                86    84      2   17821
                                              7 BANK0     86    84      2
                      _clear_display
                            _goto_XY
                             _strlen
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           4     1      3    4663
                                             20 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     850
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _goto_XY                                              8     4      4    8445
                                             24 COMRAM     1     1      0
                                              0 BANK0      7     3      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              4     1      3    2917
                                             20 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (2) _clear_display                                        3     1      2    2495
                                             20 COMRAM     3     1      2
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    2116
                                             20 COMRAM     5     0      5
                                              0 BANK0      3     3      0
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1902
                                             20 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    2023
                                             20 COMRAM     5     0      5
                                              0 BANK0      2     2      0
                              _pulso
 ---------------------------------------------------------------------------------
 (3) _pulso                                                3     1      2    1353
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _int_handler                                          2     2      0    3144
                                             15 COMRAM     2     2      0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (6) _le_entrada                                           0     0      0    3144
                    i2_clear_display
                          i2_goto_XY
                       i2_write_char
 ---------------------------------------------------------------------------------
 (7) i2_write_char                                         4     1      3     728
                                              3 COMRAM     4     1      3
                            i2_pulso
 ---------------------------------------------------------------------------------
 (7) i2_goto_XY                                            8     4      4    1884
                                              7 COMRAM     8     4      4
                          i2_lcd_cmd
 ---------------------------------------------------------------------------------
 (8) i2_lcd_cmd                                            4     1      3     700
                                              3 COMRAM     4     1      3
                            i2_pulso
 ---------------------------------------------------------------------------------
 (7) i2_clear_display                                      3     1      2     532
                                              3 COMRAM     3     1      2
                            i2_pulso
 ---------------------------------------------------------------------------------
 (8) i2_pulso                                              3     1      2     196
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _menu
     _clear_display
       _pulso
     _goto_XY
       _lcd_cmd
         _pulso
     _strlen
     _write_char
       _pulso

 _int_handler (ROOT)
   _le_entrada
     i2_clear_display
       i2_pulso
     i2_goto_XY
       i2_lcd_cmd
         i2_pulso
     i2_write_char
       i2_pulso

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      30       7       18.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5F      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     19      6C       1       85.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      15        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 10 14:38:39 2020

         ?_display_onoff_control 0066                               l47 0778  
                             l48 0778                      __CFG_OSC$HS 000000  
                            l151 0BB0                              l160 0C32  
                            l154 0566                              l170 0624  
                            l146 0284                              l157 0942  
                            l173 09C6                              l166 0624  
                            l176 0816                              l179 0A3A  
                            l886 0CA8                              u510 0C9C  
                            u511 0C98                              _lcd 006B  
                            wreg 000FE8                    write_char@lcd 0066  
                  creditos@F3056 0041                    creditos@F3059 0031  
                   __CFG_WDT$OFF 000000                             l2020 0B70  
                           l2100 09E6                             l2022 0B7A  
                           l2110 0A2E                             l2102 09F2  
                           l2030 0BFE                             l2024 0B8A  
                           l2120 04D0                             l2112 0484  
                           l2104 0A02                             l2032 0C16  
                           l2040 0586                             l2200 01B4  
                           l2026 0BA4                             l2130 055A  
                           l2122 04EE                             l2114 04A2  
                           l2106 0A0E                             l2034 0C26  
                           l2050 05D0                             l2042 058A  
                           l2210 0216                             l2202 01D2  
                           l2140 08F8                             l2132 08B0  
                           l2124 0500                             l2116 04B2  
                           l2108 0A1E                             l2028 0BF4  
                           l2060 05E0                             l2044 059A  
                           l2036 0568                             l2212 0234  
                           l2204 01E6                             l2142 0924  
                           l2134 08CE                             l2150 096E  
                           l2126 050C                             l2118 04C4  
                           l2062 05F2                             l2046 05AA  
                           l2038 057A                             l2214 0238  
                           l2206 01F4                             l2230 06E2  
                           l2144 0936                             l2136 08DA  
                           l2152 097E                             l2128 0548  
                           l2072 0602                             l2048 05BE  
                           l2224 0248                             l2208 0210  
                           l2160 0012                             l2240 070C  
                           l2232 06E6                             l2138 08EC  
                           l2154 098A                             l2146 0944  
                           l2074 0614                             l2090 07CC  
                           l2170 0096                             l2162 0024  
                           l2250 075E                             l2242 0724  
                           l2234 06E8                             l2156 09AA  
                           l2148 0962                             l2092 07D8  
                           l2084 0780                             l2180 00F0  
                           l2172 00AA                             l2164 0038  
                           l2244 073C                             l2236 0702  
                           l2158 09BA                             l2094 07F0  
                           l2086 079E                             l2190 0152  
                           l2182 010E                             l2174 00C0  
                           l2166 005E                             l2246 0750  
                           l2238 0704                             l1480 0C80  
                           l2096 0800                             l2088 07BC  
                           l2432 025E                             l2192 0170  
                           l2184 0122                             l2176 00CE  
                           l2168 0070                             l2248 0752  
                           l2098 09C8                             l1482 0C84  
                           l2194 0184                             l2186 0130  
                           l2178 00EA                             l1484 0C9C  
                           l2196 0192                             l2188 014C  
                           l1478 0C74                             l2198 01AE  
                           u1010 057A                             u1011 0576  
                           u1020 05D0                             u1100 0170  
                           u1021 05CC                             u1101 016C  
                           u1030 05F2                             u1110 01D2  
                           u1031 05EE                             u1111 01CE  
                           u1040 0614                             u1120 0234  
                           u1041 0610                             u1121 0230  
                           u1051 001C                             u1061 0042  
                           u1071 0068                             u1081 008E  
                           u1090 010E                             u1091 010A  
                           u1407 04BA                             u1417 04F6  
                           u1337 076A                             u1427 0550  
                           u1347 07C2                             u1437 0974  
                           u1357 07F6                             u1447 09B0  
                           u1367 05A0                             u1457 08E2  
                           u1377 0C1C                             u1467 092C  
                           u1387 09F8                             u1477 0B80  
                           u1397 0A24                             u1487 0B9A  
                           i2l42 0CD2                             _TMR0 000FD6  
                           _main 06E2                             _menu 0012  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 006D               i2clear_display@lcd 0055  
                           start 000E            function_set@num_lines 0069  
                __end_ofi2_pulso 0BF4                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                       i2lcd_cmd@a 0057  
                i2_clear_display 0A3C                  function_set@lcd 0066  
                          ?_main 0052                            ?_menu 0087  
                          _CMCON 000FB4                            i2l206 0482  
                          i2l151 0BF2                            i2l160 0C72  
                          i2l170 06E0                            i2l166 06E0  
                          i2l176 08AE                            i2l179 0AAE  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0052                  __end_of_lcd_cmd 0C34  
                     i2goto_XY@a 005F                       i2goto_XY@x 005B  
                     i2goto_XY@y 005C                       i2goto_XY@z 005E  
                __end_of_goto_XY 0626                            _pulso 0B70  
                          menu@i 00D5                            tablat 000FF5  
           __end_ofi2_write_char 08B0                            plusw1 000FE3  
                          plusw2 000FDB                            ttemp5 006E  
                          ttemp6 0071                            ttemp7 0075  
                          status 000FD8                            wtemp8 006E  
                __initialization 0AB0                     __end_of_main 0780  
                   __end_of_menu 0286               __size_ofi2_lcd_cmd 0040  
             __size_ofi2_goto_XY 00BC                       i2pulso@lcd 0052  
                         ??_main 00DD                           ??_menu 0089  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         ?_pulso 0063                           i2l1600 06BE  
                         i2l1602 06D0                           i2l1460 0BE6  
                         i2l1620 0870                           i2l1612 0818  
                         i2l1454 0BB2                           i2l1630 0A66  
                         i2l1470 0C34                           i2l1622 0888  
                         i2l1614 0836                           i2l1456 0BBC  
                         i2l1632 0A76                           i2l1472 0C3E  
                         i2l1624 0898                           i2l1616 0854  
                         i2l1640 0286                           i2l1458 0BCC  
                         i2l1634 0A82                           i2l1626 0A3C  
                         i2l1474 0C56                           i2l1570 0646  
                         i2l1618 0864                           i2l1650 02BA  
                         i2l1642 0292                           i2l1810 0CC2  
                         i2l1636 0A92                           i2l1628 0A5A  
                         i2l1476 0C66                           i2l1572 0656  
                         i2l1564 0626                           i2l1660 0344  
                         i2l1652 02C8                           i2l1644 02A0  
                         i2l1812 0CC4                           i2l1638 0AA2  
                         i2l1590 06AE                           i2l1574 0666  
                         i2l1566 0636                           i2l1670 039E  
                         i2l1662 0356                           i2l1654 02F8  
                         i2l1646 02B0                           i2l1814 0CCC  
                         i2l1568 0642                           i2l1576 067A  
                         i2l1680 0402                           i2l1672 03AC  
                         i2l1664 035C                           i2l1656 0306  
                         i2l1648 02B6                           i2l1816 0CD0  
                         i2l1808 0CB4                           i2l1578 068C  
                         i2l1682 0406                           i2l1666 0360  
                         i2l1674 03DC                           i2l1658 0336  
                         i2l1588 069C                           i2l1684 0414  
                         i2l1676 03EA                           i2l1668 036E  
                         i2l1686 0444                           i2l1678 03FC  
                         i2l1688 0452                        ??i2_pulso 0054  
                    menu@palavra 008B            __end_of_clear_display 0A3C  
                    menu@tamanho 00CB          __end_ofi2_clear_display 0AB0  
                    goto_XY@temp 0086                    ?_function_set 0066  
                      ??_lcd_cmd 0069                           _strlen 0C74  
                      ??_goto_XY 006A                     __pdataCOMRAM 0001  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                __end_ofi2_lcd_cmd 0C74  
       display_onoff_control@lcd 0066                __end_ofi2_goto_XY 06E2  
                     __accesstop 0080          __end_of__initialization 0B10  
                  ___rparam_used 000001          ??_display_onoff_control 0080  
                 __pcstackCOMRAM 0052                     __pidataBANK0 0D0E  
                   __pidataBANK1 0CDE                    __end_of_pulso 0BB2  
                 ??_function_set 0080            __size_ofi2_write_char 0098  
                   i2lcd_cmd@lcd 0055             __size_of_int_handler 0CD6  
                        ??_pulso 0065                       __pnvCOMRAM 006B  
               ?i2_clear_display 0055                     i2_write_char 0818  
                        ?_strlen 0063                    i2write_char@c 0057  
    entry_mode_set@display_shift 0069                          i2u60_40 02A0  
                        i2u60_41 029C                          i2u61_40 02B0  
                        i2u61_41 02AC                          i2u70_40 0414  
                        i2u62_40 02C8                          i2u70_41 0410  
                        i2u62_41 02C4                          i2u71_40 0452  
                        i2u63_40 0306                          i2u71_41 044E  
                        i2u63_41 0302                          i2u56_40 0636  
                        i2u64_40 0344                          i2u80_40 0CC2  
                        i2u56_41 0632                          i2u64_41 0340  
                        i2u80_41 0CBE                          i2u57_40 068C  
                        i2u65_40 0356                          i2u57_41 0688  
                        i2u65_41 0352                          i2u58_40 06AE  
                        i2u66_40 036E                          i2u58_41 06AA  
                        i2u66_41 036A                          i2u59_40 06D0  
                        i2u67_40 03AC                          i2u59_41 06CC  
                        i2u67_41 03A8                          i2u68_40 03EA  
                        i2u68_41 03E6                          i2u69_40 03FC  
                        i2u69_41 03F8                     menu@palavra2 009B  
                   menu@palavra3 00AB                     menu@palavra4 00BB  
                     _le_entrada 0286                     menu@tamanho2 00CD  
                   menu@tamanho3 00CF                     menu@tamanho4 00D1  
                        i2_pulso 0BB2          __size_of_entry_mode_set 0084  
                        __Hparam 0000   display_onoff_control@cursor_on 0069  
                        __Lparam 0000                     i2goto_XY@lcd 0059  
                        __pcinit 0AB0                          __ramtop 0600  
                        __ptext0 06E2                          __ptext1 0012  
                        __ptext2 0780                          __ptext3 0C74  
                        __ptext4 0568                          __ptext5 0BF4  
                        __ptext6 09C8                          __ptext7 0484  
                        __ptext8 0944                          __ptext9 08B0  
                        _lcd_cmd 0BF4                        _T0CONbits 000FD5  
                __size_of_strlen 0036                          _goto_XY 0568  
                 __pintcode_body 0CAA             end_of_initialization 0B10  
                        menu@lcd 0087                  i2write_char@lcd 0055  
           __end_of_function_set 0568                    __Lmediumconst 0000  
                        int_func 0CAA                          postdec1 000FE5  
                        postinc0 000FEE                          strlen@a 0065  
                        strlen@s 0063                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0066                      ?_le_entrada 0052  
                      i2_lcd_cmd 0C34                        i2_goto_XY 0626  
 __size_of_display_onoff_control 0094    __end_of_display_onoff_control 0944  
                     _write_char 0780                    __pidataCOMRAM 0B1E  
         __size_of_clear_display 0074                   __end_of_strlen 0CAA  
            start_initialization 0AB0                       ?i2_lcd_cmd 0055  
                     ?i2_goto_XY 0059                   _entry_mode_set 0944  
                     goto_XY@lcd 0080                      __pdataBANK0 00DF  
                    __pdataBANK1 0100              __size_of_le_entrada 01FE  
                       ??_strlen 0065                    ??_int_handler 0061  
                  __pcstackBANK0 0080            __size_of_function_set 00E4  
                instrucoes@F3083 0021                  instrucoes@F3092 00EF  
                instrucoes@F3086 0011                  instrucoes@F3089 0001  
                       ?i2_pulso 0052           __end_of_entry_mode_set 09C8  
                  _clear_display 09C8                        __pintcode 0008  
                    ?_write_char 0066         __size_ofi2_clear_display 0074  
                       ?_lcd_cmd 0066                     _function_set 0484  
                       ?_goto_XY 0080                 clear_display@lcd 0066  
                 __size_of_pulso 0042              __end_of_int_handler 0CDE  
                ?_entry_mode_set 0066                      ??i2_lcd_cmd 0058  
                 ?_clear_display 0066                      ??i2_goto_XY 005D  
                       i2u150_47 088E                         i2u151_47 065C  
                       i2u152_47 0C5C                         i2u153_47 0A6C  
                       i2u154_47 0A98                         i2u155_47 0BC2  
                       i2u156_47 0BDC                         i2u149_47 085A  
   entry_mode_set@move_direction 0068  display_onoff_control@display_on 0068  
     display_onoff_control@blink 006A                      write_char@c 0068  
                      menu@F3101 00DF                        menu@F3110 0100  
                      menu@F3104 0120                        menu@F3107 0110  
                   ??_le_entrada 0061                        copy_data0 0AC4  
                      copy_data1 0AE4                        copy_data2 0B04  
            __size_of_write_char 0098                        menu@i_360 00D7  
                      menu@i_361 00D9                        menu@i_362 00DB  
               __size_ofi2_pulso 0042                         __Hrparam 0000  
                       __Lrparam 0000                    i2goto_XY@temp 0060  
              entry_mode_set@lcd 0066               __end_of_le_entrada 0484  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BE  
              ??i2_clear_display 0057                      _int_handler 0008  
                       __ptext10 0B70                         __ptext12 0286  
                       __ptext13 0818                         __ptext14 0626  
                       __ptext15 0C34                         __ptext16 0A3C  
                       __ptext17 0BB2                         _controle 0051  
                ??_clear_display 0068                    __size_of_main 009E  
                  __size_of_menu 0274                         int$flags 006D  
                       lcd_cmd@a 0068                    ?i2_write_char 0055  
          _display_onoff_control 08B0                       _INTCONbits 000FF2  
                       goto_XY@a 0085                         goto_XY@x 0082  
                       goto_XY@y 0083                         goto_XY@z 0084  
                       intlevel2 0000          function_set@data_lenght 0068  
                 ??i2_write_char 0058                     ??_write_char 0069  
                       pulso@lcd 0063                 ??_entry_mode_set 006A  
          function_set@char_font 006A               __end_of_write_char 0818  
