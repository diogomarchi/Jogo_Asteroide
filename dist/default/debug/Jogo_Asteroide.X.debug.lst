

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun 14 21:51:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  00129A                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for instrucoes@F3104
    80  00129A  32                 	db	50
    81  00129B  2E                 	db	46
    82  00129C  45                 	db	69
    83  00129D  53                 	db	83
    84  00129E  43                 	db	67
    85  00129F  41                 	db	65
    86  0012A0  50                 	db	80
    87  0012A1  45                 	db	69
    88  0012A2  20                 	db	32
    89  0012A3  56                 	db	86
    90  0012A4  4F                 	db	79
    91  0012A5  4C                 	db	76
    92  0012A6  54                 	db	84
    93  0012A7  41                 	db	65
    94  0012A8  00                 	db	0
    95  0012A9  00                 	db	0
    96                           
    97                           ;initializer for instrucoes@F3101
    98  0012AA  4E                 	db	78
    99  0012AB  41                 	db	65
   100  0012AC  56                 	db	86
   101  0012AD  45                 	db	69
   102  0012AE  00                 	db	0
   103  0012AF  00                 	db	0
   104  0012B0  00                 	db	0
   105  0012B1  00                 	db	0
   106  0012B2  00                 	db	0
   107  0012B3  00                 	db	0
   108  0012B4  00                 	db	0
   109  0012B5  00                 	db	0
   110  0012B6  00                 	db	0
   111  0012B7  00                 	db	0
   112  0012B8  00                 	db	0
   113  0012B9  00                 	db	0
   114                           
   115                           ;initializer for instrucoes@F3098
   116  0012BA  31                 	db	49
   117  0012BB  2E                 	db	46
   118  0012BC  53                 	db	83
   119  0012BD  45                 	db	69
   120  0012BE  54                 	db	84
   121  0012BF  41                 	db	65
   122  0012C0  53                 	db	83
   123  0012C1  20                 	db	32
   124  0012C2  4D                 	db	77
   125  0012C3  4F                 	db	79
   126  0012C4  56                 	db	86
   127  0012C5  45                 	db	69
   128  0012C6  4D                 	db	77
   129  0012C7  20                 	db	32
   130  0012C8  41                 	db	65
   131  0012C9  00                 	db	0
   132                           
   133                           ;initializer for _lcd
   134  0012CA  83                 	db	131
   135  0012CB  0F                 	db	15
   136                           
   137                           	psect	idataBANK0
   138  0012FC                     __pidataBANK0:
   139                           	opt callstack 0
   140                           
   141                           ;initializer for instrucoes@F3107
   142  0012FC  50                 	db	80
   143  0012FD  52                 	db	82
   144  0012FE  4F                 	db	79
   145  0012FF  20                 	db	32
   146  001300  4D                 	db	77
   147  001301  45                 	db	69
   148  001302  4E                 	db	78
   149  001303  55                 	db	85
   150  001304  00                 	db	0
   151  001305  00                 	db	0
   152  001306  00                 	db	0
   153  001307  00                 	db	0
   154  001308  00                 	db	0
   155  001309  00                 	db	0
   156  00130A  00                 	db	0
   157  00130B  00                 	db	0
   158  0000                     _PORTBbits	set	3969
   159  0000                     _T0CONbits	set	4053
   160  0000                     _T0CON	set	4053
   161  0000                     _TRISD	set	3989
   162  0000                     _PORTB	set	3969
   163  0000                     _TRISB	set	3987
   164  0000                     _ADCON1	set	4033
   165  0000                     _TMR0L	set	4054
   166  0000                     _INTCONbits	set	4082
   167  0000                     _PORTD	set	3971
   168                           
   169                           	psect	smallconst
   170  000600                     __psmallconst:
   171                           	opt callstack 0
   172  000600  00                 	db	0
   173  000601                     STR_5:
   174  000601  31                 	db	49	;'1'
   175  000602  2E                 	db	46
   176  000603  4A                 	db	74	;'J'
   177  000604  4F                 	db	79	;'O'
   178  000605  47                 	db	71	;'G'
   179  000606  41                 	db	65	;'A'
   180  000607  52                 	db	82	;'R'
   181  000608  2E                 	db	46
   182  000609  2E                 	db	46
   183  00060A  2E                 	db	46
   184  00060B  2E                 	db	46
   185  00060C  2E                 	db	46
   186  00060D  2E                 	db	46
   187  00060E  2E                 	db	46
   188  00060F  2E                 	db	46
   189  000610  2E                 	db	46
   190  000611  00                 	db	0
   191  000612                     STR_7:
   192  000612  33                 	db	51	;'3'
   193  000613  2E                 	db	46
   194  000614  43                 	db	67	;'C'
   195  000615  52                 	db	82	;'R'
   196  000616  45                 	db	69	;'E'
   197  000617  44                 	db	68	;'D'
   198  000618  49                 	db	73	;'I'
   199  000619  54                 	db	84	;'T'
   200  00061A  4F                 	db	79	;'O'
   201  00061B  53                 	db	83	;'S'
   202  00061C  2E                 	db	46
   203  00061D  2E                 	db	46
   204  00061E  2E                 	db	46
   205  00061F  2E                 	db	46
   206  000620  2E                 	db	46
   207  000621  2E                 	db	46
   208  000622  00                 	db	0
   209  000623                     STR_8:
   210  000623  34                 	db	52	;'4'
   211  000624  2E                 	db	46
   212  000625  46                 	db	70	;'F'
   213  000626  49                 	db	73	;'I'
   214  000627  4E                 	db	78	;'N'
   215  000628  41                 	db	65	;'A'
   216  000629  4C                 	db	76	;'L'
   217  00062A  49                 	db	73	;'I'
   218  00062B  5A                 	db	90	;'Z'
   219  00062C  41                 	db	65	;'A'
   220  00062D  52                 	db	82	;'R'
   221  00062E  2E                 	db	46
   222  00062F  2E                 	db	46
   223  000630  2E                 	db	46
   224  000631  2E                 	db	46
   225  000632  2E                 	db	46
   226  000633  00                 	db	0
   227  000634                     STR_6:
   228  000634  32                 	db	50	;'2'
   229  000635  2E                 	db	46
   230  000636  49                 	db	73	;'I'
   231  000637  4E                 	db	78	;'N'
   232  000638  53                 	db	83	;'S'
   233  000639  54                 	db	84	;'T'
   234  00063A  52                 	db	82	;'R'
   235  00063B  55                 	db	85	;'U'
   236  00063C  43                 	db	67	;'C'
   237  00063D  4F                 	db	79	;'O'
   238  00063E  45                 	db	69	;'E'
   239  00063F  53                 	db	83	;'S'
   240  000640  2E                 	db	46
   241  000641  2E                 	db	46
   242  000642  2E                 	db	46
   243  000643  2E                 	db	46
   244  000644  00                 	db	0
   245  000645                     STR_3:
   246  000645  20                 	db	32
   247  000646  20                 	db	32
   248  000647  20                 	db	32
   249  000648  20                 	db	32
   250  000649  20                 	db	32
   251  00064A  20                 	db	32
   252  00064B  20                 	db	32
   253  00064C  20                 	db	32
   254  00064D  20                 	db	32
   255  00064E  20                 	db	32
   256  00064F  20                 	db	32
   257  000650  20                 	db	32
   258  000651  20                 	db	32
   259  000652  20                 	db	32
   260  000653  20                 	db	32
   261  000654  00                 	db	0
   262  000655                     STR_1:
   263  000655  31                 	db	49	;'1'
   264  000656  2E                 	db	46
   265  000657  44                 	db	68	;'D'
   266  000658  49                 	db	73	;'I'
   267  000659  4F                 	db	79	;'O'
   268  00065A  47                 	db	71	;'G'
   269  00065B  4F                 	db	79	;'O'
   270  00065C  20                 	db	32
   271  00065D  4D                 	db	77	;'M'
   272  00065E  41                 	db	65	;'A'
   273  00065F  52                 	db	82	;'R'
   274  000660  43                 	db	67	;'C'
   275  000661  48                 	db	72	;'H'
   276  000662  49                 	db	73	;'I'
   277  000663  2E                 	db	46
   278  000664  00                 	db	0
   279  000665                     STR_2:
   280  000665  32                 	db	50	;'2'
   281  000666  2E                 	db	46
   282  000667  47                 	db	71	;'G'
   283  000668  45                 	db	69	;'E'
   284  000669  4F                 	db	79	;'O'
   285  00066A  52                 	db	82	;'R'
   286  00066B  47                 	db	71	;'G'
   287  00066C  45                 	db	69	;'E'
   288  00066D  20                 	db	32
   289  00066E  4E                 	db	78	;'N'
   290  00066F  41                 	db	65	;'A'
   291  000670  52                 	db	82	;'R'
   292  000671  44                 	db	68	;'D'
   293  000672  45                 	db	69	;'E'
   294  000673  53                 	db	83	;'S'
   295  000674  00                 	db	0
   296  0000                     
   297                           ; #config settings
   298  000675  00                 	db	0	; dummy byte at the end
   299  0000                     
   300                           	psect	cinit
   301  0010CA                     __pcinit:
   302                           	opt callstack 0
   303  0010CA                     start_initialization:
   304                           	opt callstack 0
   305  0010CA                     __initialization:
   306                           	opt callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK0 (16 bytes)
   309                           ; load TBLPTR registers with __pidataBANK0
   310  0010CA  0EFC               	movlw	low __pidataBANK0
   311  0010CC  6EF6               	movwf	tblptrl,c
   312  0010CE  0E12               	movlw	high __pidataBANK0
   313  0010D0  6EF7               	movwf	tblptrh,c
   314  0010D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   315  0010D4  6EF8               	movwf	tblptru,c
   316  0010D6  EE00  F0C0         	lfsr	0,__pdataBANK0
   317  0010DA  EE10 F010          	lfsr	1,16
   318  0010DE                     copy_data0:
   319  0010DE  0009               	tblrd		*+
   320  0010E0  CFF5 FFEE          	movff	tablat,postinc0
   321  0010E4  50E5               	movf	postdec1,w,c
   322  0010E6  50E1               	movf	fsr1l,w,c
   323  0010E8  E1FA               	bnz	copy_data0
   324                           
   325                           ; Initialize objects allocated to COMRAM (50 bytes)
   326                           ; load TBLPTR registers with __pidataCOMRAM
   327  0010EA  0E9A               	movlw	low __pidataCOMRAM
   328  0010EC  6EF6               	movwf	tblptrl,c
   329  0010EE  0E12               	movlw	high __pidataCOMRAM
   330  0010F0  6EF7               	movwf	tblptrh,c
   331  0010F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   332  0010F4  6EF8               	movwf	tblptru,c
   333  0010F6  EE00  F001         	lfsr	0,__pdataCOMRAM
   334  0010FA  EE10 F032          	lfsr	1,50
   335  0010FE                     copy_data1:
   336  0010FE  0009               	tblrd		*+
   337  001100  CFF5 FFEE          	movff	tablat,postinc0
   338  001104  50E5               	movf	postdec1,w,c
   339  001106  50E1               	movf	fsr1l,w,c
   340  001108  E1FA               	bnz	copy_data1
   341                           
   342                           ; Clear objects allocated to BANK0 (64 bytes)
   343  00110A  EE00  F080         	lfsr	0,__pbssBANK0
   344  00110E  0E40               	movlw	64
   345  001110                     clear_0:
   346  001110  6AEE               	clrf	postinc0,c
   347  001112  06E8               	decf	wreg,f,c
   348  001114  E1FD               	bnz	clear_0
   349                           
   350                           ; Clear objects allocated to COMRAM (7 bytes)
   351  001116  EE00  F05D         	lfsr	0,__pbssCOMRAM
   352  00111A  0E07               	movlw	7
   353  00111C                     clear_1:
   354  00111C  6AEE               	clrf	postinc0,c
   355  00111E  06E8               	decf	wreg,f,c
   356  001120  E1FD               	bnz	clear_1
   357  001122                     end_of_initialization:
   358                           	opt callstack 0
   359  001122                     __end_of__initialization:
   360                           	opt callstack 0
   361  001122  9064               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   362  001124  9264               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   363  001126  0E00               	movlw	low (__Lsmallconst shr (0+16))
   364  001128  6EF8               	movwf	tblptru,c
   365  00112A  0E06               	movlw	high __Lsmallconst
   366  00112C  6EF7               	movwf	tblptrh,c
   367  00112E  0100               	movlb	0
   368  001130  EFF5  F007         	goto	_main	;jump to C main() function
   369                           
   370                           	psect	bssCOMRAM
   371  00005D                     __pbssCOMRAM:
   372                           	opt callstack 0
   373  00005D                     _op:
   374                           	opt callstack 0
   375  00005D                     	ds	1
   376  00005E                     _cont_r:
   377                           	opt callstack 0
   378  00005E                     	ds	1
   379  00005F                     _cont_l:
   380                           	opt callstack 0
   381  00005F                     	ds	1
   382  000060                     _cont_d:
   383                           	opt callstack 0
   384  000060                     	ds	1
   385  000061                     _cont_u:
   386                           	opt callstack 0
   387  000061                     	ds	1
   388  000062                     _botoes_ant:
   389                           	opt callstack 0
   390  000062                     	ds	1
   391  000063                     _botoes:
   392                           	opt callstack 0
   393  000063                     	ds	1
   394                           
   395                           	psect	dataCOMRAM
   396  000001                     __pdataCOMRAM:
   397                           	opt callstack 0
   398  000001                     instrucoes@F3104:
   399                           	opt callstack 0
   400  000001                     	ds	16
   401  000011                     instrucoes@F3101:
   402                           	opt callstack 0
   403  000011                     	ds	16
   404  000021                     instrucoes@F3098:
   405                           	opt callstack 0
   406  000021                     	ds	16
   407  000031                     _lcd:
   408                           	opt callstack 0
   409  000031                     	ds	2
   410                           
   411                           	psect	bssBANK0
   412  000080                     __pbssBANK0:
   413                           	opt callstack 0
   414  000080                     _mat_disp:
   415                           	opt callstack 0
   416  000080                     	ds	64
   417                           
   418                           	psect	dataBANK0
   419  0000C0                     __pdataBANK0:
   420                           	opt callstack 0
   421  0000C0                     instrucoes@F3107:
   422                           	opt callstack 0
   423  0000C0                     	ds	16
   424                           
   425                           	psect	cstackBANK0
   426  0000D0                     __pcstackBANK0:
   427                           	opt callstack 0
   428  0000D0                     print_mat@lcd:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x0
   432  0000D0                     	ds	2
   433  0000D2                     ??_print_mat:
   434                           
   435                           ; 1 bytes @ 0x2
   436  0000D2                     	ds	4
   437  0000D6                     print_mat@j:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x6
   441  0000D6                     	ds	2
   442  0000D8                     print_mat@i:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x8
   446  0000D8                     	ds	2
   447  0000DA                     creditos@lcd:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0xA
   451  0000DA                     	ds	2
   452  0000DC                     gerenciador@lcd:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0xC
   456  0000DC                     	ds	2
   457                           
   458                           	psect	cstackCOMRAM
   459  000033                     __pcstackCOMRAM:
   460                           	opt callstack 0
   461  000033                     i2pulso@lcd:
   462                           	opt callstack 0
   463  000033                     i2write_char@lcd:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x0
   467  000033                     	ds	2
   468  000035                     ??i2_pulso:
   469  000035                     i2write_char@c:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x2
   473  000035                     	ds	1
   474  000036                     ??i2_write_char:
   475  000036                     i2lcd_cmd@lcd:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x3
   479  000036                     	ds	2
   480  000038                     i2lcd_cmd@a:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x5
   484  000038                     	ds	1
   485  000039                     ??i2_lcd_cmd:
   486                           
   487                           ; 1 bytes @ 0x6
   488  000039                     	ds	1
   489  00003A                     i2goto_XY@lcd:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x7
   493  00003A                     	ds	2
   494  00003C                     i2goto_XY@x:
   495                           	opt callstack 0
   496                           
   497                           ; 1 bytes @ 0x9
   498  00003C                     	ds	1
   499  00003D                     i2goto_XY@y:
   500                           	opt callstack 0
   501                           
   502                           ; 1 bytes @ 0xA
   503  00003D                     	ds	1
   504  00003E                     ??i2_goto_XY:
   505                           
   506                           ; 1 bytes @ 0xB
   507  00003E                     	ds	1
   508  00003F                     i2goto_XY@z:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0xC
   512  00003F                     	ds	1
   513  000040                     i2goto_XY@a:
   514                           	opt callstack 0
   515                           
   516                           ; 1 bytes @ 0xD
   517  000040                     	ds	1
   518  000041                     i2goto_XY@temp:
   519                           	opt callstack 0
   520                           
   521                           ; 1 bytes @ 0xE
   522  000041                     	ds	1
   523  000042                     i2print_mat@lcd:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0xF
   527  000042                     	ds	2
   528  000044                     ??i2_print_mat:
   529                           
   530                           ; 1 bytes @ 0x11
   531  000044                     	ds	4
   532  000048                     i2print_mat@j:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x15
   536  000048                     	ds	2
   537  00004A                     i2print_mat@i:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x17
   541  00004A                     	ds	2
   542  00004C                     ??_int_handler:
   543                           
   544                           ; 1 bytes @ 0x19
   545  00004C                     	ds	2
   546  00004E                     pulso@lcd:
   547                           	opt callstack 0
   548  00004E                     write_char@lcd:
   549                           	opt callstack 0
   550  00004E                     strcpy@dest:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x1B
   554  00004E                     	ds	2
   555  000050                     ??_pulso:
   556  000050                     write_char@c:
   557                           	opt callstack 0
   558  000050                     strcpy@src:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x1D
   562  000050                     	ds	1
   563  000051                     ??_write_char:
   564  000051                     function_set@lcd:
   565                           	opt callstack 0
   566  000051                     display_onoff_control@lcd:
   567                           	opt callstack 0
   568  000051                     lcd_cmd@lcd:
   569                           	opt callstack 0
   570  000051                     entry_mode_set@lcd:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x1E
   574  000051                     	ds	1
   575  000052                     strcpy@s:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x1F
   579  000052                     	ds	1
   580  000053                     function_set@data_lenght:
   581                           	opt callstack 0
   582  000053                     display_onoff_control@display_on:
   583                           	opt callstack 0
   584  000053                     lcd_cmd@a:
   585                           	opt callstack 0
   586  000053                     entry_mode_set@move_direction:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x20
   590  000053                     	ds	1
   591  000054                     ??_lcd_cmd:
   592  000054                     function_set@num_lines:
   593                           	opt callstack 0
   594  000054                     display_onoff_control@cursor_on:
   595                           	opt callstack 0
   596  000054                     entry_mode_set@display_shift:
   597                           	opt callstack 0
   598  000054                     strcpy@d:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x21
   602  000054                     	ds	1
   603  000055                     ??_entry_mode_set:
   604  000055                     function_set@char_font:
   605                           	opt callstack 0
   606  000055                     display_onoff_control@blink:
   607                           	opt callstack 0
   608  000055                     goto_XY@lcd:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x22
   612  000055                     	ds	1
   613  000056                     ??_function_set:
   614  000056                     ??_display_onoff_control:
   615  000056                     menu@lcd:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x23
   619  000056                     	ds	1
   620  000057                     goto_XY@x:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0x24
   624  000057                     	ds	1
   625  000058                     goto_XY@y:
   626                           	opt callstack 0
   627                           
   628                           ; 1 bytes @ 0x25
   629  000058                     	ds	1
   630  000059                     ??_goto_XY:
   631                           
   632                           ; 1 bytes @ 0x26
   633  000059                     	ds	1
   634  00005A                     goto_XY@z:
   635                           	opt callstack 0
   636                           
   637                           ; 1 bytes @ 0x27
   638  00005A                     	ds	1
   639  00005B                     goto_XY@a:
   640                           	opt callstack 0
   641                           
   642                           ; 1 bytes @ 0x28
   643  00005B                     	ds	1
   644  00005C                     goto_XY@temp:
   645                           	opt callstack 0
   646                           
   647                           ; 1 bytes @ 0x29
   648  00005C                     	ds	1
   649  00005D                     
   650                           ; 1 bytes @ 0x2A
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 34 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   670 ;;      Params:         0       0       0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0
   673 ;;      Totals:         0       0       0       0       0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels required when called:   11
   676 ;; This function calls:
   677 ;;		_display_onoff_control
   678 ;;		_entry_mode_set
   679 ;;		_function_set
   680 ;;		_gerenciador
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text0
   687  000FEA                     __ptext0:
   688                           	opt callstack 0
   689  000FEA                     _main:
   690                           	opt callstack 20
   691  000FEA                     
   692                           ;main.c: 36:     ADCON1 = 0x0F;
   693  000FEA  0E0F               	movlw	15
   694  000FEC  6EC1               	movwf	193,c	;volatile
   695                           
   696                           ;main.c: 41:     TRISB = 0x0F;
   697  000FEE  0E0F               	movlw	15
   698  000FF0  6E93               	movwf	147,c	;volatile
   699                           
   700                           ;main.c: 44:     PORTB = 0x00;
   701  000FF2  0E00               	movlw	0
   702  000FF4  6E81               	movwf	129,c	;volatile
   703                           
   704                           ;main.c: 47:     TRISD = 0x00;
   705  000FF6  0E00               	movlw	0
   706  000FF8  6E95               	movwf	149,c	;volatile
   707                           
   708                           ;main.c: 50:     T0CON = 0x47;
   709  000FFA  0E47               	movlw	71
   710  000FFC  6ED5               	movwf	213,c	;volatile
   711                           
   712                           ;main.c: 53:     TMR0L = 0x63;
   713  000FFE  0E63               	movlw	99
   714  001000  6ED6               	movwf	214,c	;volatile
   715  001002                     
   716                           ;main.c: 56:     INTCONbits.TMR0IF = 0;
   717  001002  94F2               	bcf	242,2,c	;volatile
   718  001004                     
   719                           ;main.c: 57:     INTCONbits.TMR0IE = 1;
   720  001004  8AF2               	bsf	242,5,c	;volatile
   721  001006                     
   722                           ;main.c: 58:     INTCONbits.GIE = 1;
   723  001006  8EF2               	bsf	242,7,c	;volatile
   724  001008                     
   725                           ;main.c: 60:     function_set(lcd, 0, 1, 0);
   726  001008  C031  F051         	movff	_lcd,function_set@lcd
   727  00100C  C032  F052         	movff	_lcd+1,function_set@lcd+1
   728  001010  0E00               	movlw	0
   729  001012  6E53               	movwf	function_set@data_lenght^0,c
   730  001014  0E01               	movlw	1
   731  001016  6E54               	movwf	function_set@num_lines^0,c
   732  001018  0E00               	movlw	0
   733  00101A  6E55               	movwf	function_set@char_font^0,c
   734  00101C  EC8C  F005         	call	_function_set	;wreg free
   735  001020                     
   736                           ;main.c: 61:     display_onoff_control(lcd, 1, 1, 0);
   737  001020  C031  F051         	movff	_lcd,display_onoff_control@lcd
   738  001024  C032  F052         	movff	_lcd+1,display_onoff_control@lcd+1
   739  001028  0E01               	movlw	1
   740  00102A  6E53               	movwf	display_onoff_control@display_on^0,c
   741  00102C  0E01               	movlw	1
   742  00102E  6E54               	movwf	display_onoff_control@cursor_on^0,c
   743  001030  0E00               	movlw	0
   744  001032  6E55               	movwf	display_onoff_control@blink^0,c
   745  001034  EC6C  F007         	call	_display_onoff_control	;wreg free
   746  001038                     
   747                           ;main.c: 62:     entry_mode_set(lcd, 1,0);
   748  001038  C031  F051         	movff	_lcd,entry_mode_set@lcd
   749  00103C  C032  F052         	movff	_lcd+1,entry_mode_set@lcd+1
   750  001040  0E01               	movlw	1
   751  001042  6E53               	movwf	entry_mode_set@move_direction^0,c
   752  001044  0E00               	movlw	0
   753  001046  6E54               	movwf	entry_mode_set@display_shift^0,c
   754  001048  ECB3  F007         	call	_entry_mode_set	;wreg free
   755  00104C                     
   756                           ;main.c: 64:     T0CONbits.TMR0ON = 1;
   757  00104C  8ED5               	bsf	213,7,c	;volatile
   758  00104E                     
   759                           ;main.c: 66:     gerenciador(lcd);
   760  00104E  C031  F0DC         	movff	_lcd,gerenciador@lcd
   761  001052  C032  F0DD         	movff	_lcd+1,gerenciador@lcd+1
   762  001056  EC66  F009         	call	_gerenciador	;wreg free
   763  00105A  EF07  F000         	goto	start
   764  00105E                     __end_of_main:
   765                           	opt callstack 0
   766                           
   767 ;; *************** function _gerenciador *****************
   768 ;; Defined at:
   769 ;;		line 15 in file "task_manager.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  lcd             2   12[BANK0 ] PTR struct .
   772 ;;		 -> PORTD(1), 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   784 ;;      Params:         0       2       0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0
   787 ;;      Totals:         0       2       0       0       0       0       0
   788 ;;Total ram usage:        2 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:   10
   791 ;; This function calls:
   792 ;;		_creditos
   793 ;;		_menu
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text1
   800  0012CC                     __ptext1:
   801                           	opt callstack 0
   802  0012CC                     _gerenciador:
   803                           	opt callstack 20
   804  0012CC                     l176:
   805  0012CC                     
   806                           ;task_manager.c: 17:         menu(lcd);
   807  0012CC  C0DC  F056         	movff	gerenciador@lcd,menu@lcd
   808  0012D0  C0DD  F057         	movff	gerenciador@lcd+1,menu@lcd+1
   809  0012D4  EC26  F004         	call	_menu	;wreg free
   810  0012D8                     
   811                           ;task_manager.c: 19:         if(op==2) creditos(lcd);
   812  0012D8  0E02               	movlw	2
   813  0012DA  185D               	xorwf	_op^0,w,c
   814  0012DC  A4D8               	btfss	status,2,c
   815  0012DE  EF73  F009         	goto	u1141
   816  0012E2  EF75  F009         	goto	u1140
   817  0012E6                     u1141:
   818  0012E6  EF66  F009         	goto	l176
   819  0012EA                     u1140:
   820  0012EA  C0DC  F0DA         	movff	gerenciador@lcd,creditos@lcd
   821  0012EE  C0DD  F0DB         	movff	gerenciador@lcd+1,creditos@lcd+1
   822  0012F2  EC2F  F008         	call	_creditos	;wreg free
   823  0012F6  EF66  F009         	goto	l176
   824  0012FA  0012               	return		;funcret
   825  0012FC                     __end_of_gerenciador:
   826                           	opt callstack 0
   827                           
   828 ;; *************** function _menu *****************
   829 ;; Defined at:
   830 ;;		line 109 in file "task_manager.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  lcd             2   35[COMRAM] PTR struct .
   833 ;;		 -> PORTD(1), 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      unsigned char 
   838 ;; Registers used:
   839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   845 ;;      Params:         2       0       0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0
   848 ;;      Totals:         2       0       0       0       0       0       0
   849 ;;Total ram usage:        2 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    6
   852 ;; This function calls:
   853 ;;		_strcpy
   854 ;; This function is called by:
   855 ;;		_gerenciador
   856 ;;		_instrucoes
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text2
   861  00084C                     __ptext2:
   862                           	opt callstack 0
   863  00084C                     _menu:
   864                           	opt callstack 23
   865  00084C                     
   866                           ;task_manager.c: 110:     strcpy(mat_disp[0], "1.JOGAR.........");
   867  00084C  0E80               	movlw	low _mat_disp
   868  00084E  6E4E               	movwf	strcpy@dest^0,c
   869  000850  0E00               	movlw	high _mat_disp
   870  000852  6E4F               	movwf	(strcpy@dest+1)^0,c
   871  000854  0E01               	movlw	low STR_5
   872  000856  6E50               	movwf	strcpy@src^0,c
   873  000858  0E06               	movlw	high STR_5
   874  00085A  6E51               	movwf	(strcpy@src+1)^0,c
   875  00085C  EC9A  F008         	call	_strcpy	;wreg free
   876                           
   877                           ;task_manager.c: 111:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   878  000860  0E90               	movlw	low (_mat_disp+16)
   879  000862  6E4E               	movwf	strcpy@dest^0,c
   880  000864  0E00               	movlw	high (_mat_disp+16)
   881  000866  6E4F               	movwf	(strcpy@dest+1)^0,c
   882  000868  0E34               	movlw	low STR_6
   883  00086A  6E50               	movwf	strcpy@src^0,c
   884  00086C  0E06               	movlw	high STR_6
   885  00086E  6E51               	movwf	(strcpy@src+1)^0,c
   886  000870  EC9A  F008         	call	_strcpy	;wreg free
   887                           
   888                           ;task_manager.c: 112:     strcpy(mat_disp[2], "3.CREDITOS......");
   889  000874  0EA0               	movlw	low (_mat_disp+32)
   890  000876  6E4E               	movwf	strcpy@dest^0,c
   891  000878  0E00               	movlw	high (_mat_disp+32)
   892  00087A  6E4F               	movwf	(strcpy@dest+1)^0,c
   893  00087C  0E12               	movlw	low STR_7
   894  00087E  6E50               	movwf	strcpy@src^0,c
   895  000880  0E06               	movlw	high STR_7
   896  000882  6E51               	movwf	(strcpy@src+1)^0,c
   897  000884  EC9A  F008         	call	_strcpy	;wreg free
   898                           
   899                           ;task_manager.c: 113:     strcpy(mat_disp[3], "4.FINALIZAR.....");
   900  000888  0EB0               	movlw	low (_mat_disp+48)
   901  00088A  6E4E               	movwf	strcpy@dest^0,c
   902  00088C  0E00               	movlw	high (_mat_disp+48)
   903  00088E  6E4F               	movwf	(strcpy@dest+1)^0,c
   904  000890  0E23               	movlw	low STR_8
   905  000892  6E50               	movwf	strcpy@src^0,c
   906  000894  0E06               	movlw	high STR_8
   907  000896  6E51               	movwf	(strcpy@src+1)^0,c
   908  000898  EC9A  F008         	call	_strcpy	;wreg free
   909  00089C                     l1636:
   910                           
   911                           ;task_manager.c: 116:     mat_disp[op][15] = '<';
   912  00089C  505D               	movf	_op^0,w,c
   913  00089E  0D10               	mullw	16
   914  0008A0  0E8F               	movlw	low (_mat_disp+15)
   915  0008A2  24F3               	addwf	243,w,c
   916  0008A4  6ED9               	movwf	fsr2l,c
   917  0008A6  0E00               	movlw	high (_mat_disp+15)
   918  0008A8  20F4               	addwfc	prodh,w,c
   919  0008AA  6EDA               	movwf	fsr2h,c
   920  0008AC  0E3C               	movlw	60
   921  0008AE  6EDF               	movwf	indf2,c
   922                           
   923                           ;task_manager.c: 119:     while(!botoes.Enter){
   924  0008B0  EF9C  F004         	goto	l1660
   925  0008B4                     l232:
   926                           
   927                           ;task_manager.c: 120:         if((botoes.U) && (op > 0)){
   928  0008B4  A063               	btfss	_botoes^0,0,c
   929  0008B6  EF5F  F004         	goto	u741
   930  0008BA  EF61  F004         	goto	u740
   931  0008BE                     u741:
   932  0008BE  EF7F  F004         	goto	l1648
   933  0008C2                     u740:
   934  0008C2  505D               	movf	_op^0,w,c
   935  0008C4  B4D8               	btfsc	status,2,c
   936  0008C6  EF67  F004         	goto	u751
   937  0008CA  EF69  F004         	goto	u750
   938  0008CE                     u751:
   939  0008CE  EF7F  F004         	goto	l1648
   940  0008D2                     u750:
   941  0008D2                     
   942                           ;task_manager.c: 121:             mat_disp[op][15] = '.';
   943  0008D2  505D               	movf	_op^0,w,c
   944  0008D4  0D10               	mullw	16
   945  0008D6  0E8F               	movlw	low (_mat_disp+15)
   946  0008D8  24F3               	addwf	243,w,c
   947  0008DA  6ED9               	movwf	fsr2l,c
   948  0008DC  0E00               	movlw	high (_mat_disp+15)
   949  0008DE  20F4               	addwfc	prodh,w,c
   950  0008E0  6EDA               	movwf	fsr2h,c
   951  0008E2  0E2E               	movlw	46
   952  0008E4  6EDF               	movwf	indf2,c
   953  0008E6                     
   954                           ;task_manager.c: 122:             op--;
   955  0008E6  065D               	decf	_op^0,f,c
   956  0008E8                     
   957                           ;task_manager.c: 123:             botoes.U = 0;
   958  0008E8  9063               	bcf	_botoes^0,0,c
   959  0008EA                     
   960                           ;task_manager.c: 124:             mat_disp[op][15] = '<';
   961  0008EA  505D               	movf	_op^0,w,c
   962  0008EC  0D10               	mullw	16
   963  0008EE  0E8F               	movlw	low (_mat_disp+15)
   964  0008F0  24F3               	addwf	243,w,c
   965  0008F2  6ED9               	movwf	fsr2l,c
   966  0008F4  0E00               	movlw	high (_mat_disp+15)
   967  0008F6  20F4               	addwfc	prodh,w,c
   968  0008F8  6EDA               	movwf	fsr2h,c
   969  0008FA  0E3C               	movlw	60
   970  0008FC  6EDF               	movwf	indf2,c
   971  0008FE                     l1648:
   972                           
   973                           ;task_manager.c: 127:         if((botoes.D) && (op < 3)){
   974  0008FE  A263               	btfss	_botoes^0,1,c
   975  000900  EF84  F004         	goto	u761
   976  000904  EF86  F004         	goto	u760
   977  000908                     u761:
   978  000908  EF9C  F004         	goto	l1660
   979  00090C                     u760:
   980  00090C  0E03               	movlw	3
   981  00090E  605D               	cpfslt	_op^0,c
   982  000910  EF8C  F004         	goto	u771
   983  000914  EF8E  F004         	goto	u770
   984  000918                     u771:
   985  000918  EF9C  F004         	goto	l1660
   986  00091C                     u770:
   987  00091C                     
   988                           ;task_manager.c: 128:             mat_disp[op][15] = '.';
   989  00091C  505D               	movf	_op^0,w,c
   990  00091E  0D10               	mullw	16
   991  000920  0E8F               	movlw	low (_mat_disp+15)
   992  000922  24F3               	addwf	243,w,c
   993  000924  6ED9               	movwf	fsr2l,c
   994  000926  0E00               	movlw	high (_mat_disp+15)
   995  000928  20F4               	addwfc	prodh,w,c
   996  00092A  6EDA               	movwf	fsr2h,c
   997  00092C  0E2E               	movlw	46
   998  00092E  6EDF               	movwf	indf2,c
   999  000930                     
  1000                           ;task_manager.c: 129:             op++;
  1001  000930  2A5D               	incf	_op^0,f,c
  1002  000932                     
  1003                           ;task_manager.c: 130:             botoes.D = 0;
  1004  000932  9263               	bcf	_botoes^0,1,c
  1005  000934  EF4E  F004         	goto	l1636
  1006  000938                     l1660:
  1007                           
  1008                           ;task_manager.c: 119:     while(!botoes.Enter){
  1009  000938  A863               	btfss	_botoes^0,4,c
  1010  00093A  EFA1  F004         	goto	u781
  1011  00093E  EFA3  F004         	goto	u780
  1012  000942                     u781:
  1013  000942  EF5A  F004         	goto	l232
  1014  000946                     u780:
  1015  000946  0012               	return		;funcret
  1016  000948                     __end_of_menu:
  1017                           	opt callstack 0
  1018                           
  1019 ;; *************** function _creditos *****************
  1020 ;; Defined at:
  1021 ;;		line 25 in file "task_manager.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  lcd             2   10[BANK0 ] PTR struct .
  1024 ;;		 -> PORTD(1), 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         0       2       0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:         0       2       0       0       0       0       0
  1040 ;;Total ram usage:        2 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    9
  1043 ;; This function calls:
  1044 ;;		_print_mat
  1045 ;;		_strcpy
  1046 ;; This function is called by:
  1047 ;;		_gerenciador
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text3
  1052  00105E                     __ptext3:
  1053                           	opt callstack 0
  1054  00105E                     _creditos:
  1055                           	opt callstack 20
  1056  00105E                     
  1057                           ;task_manager.c: 27:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  1058  00105E  0E80               	movlw	low _mat_disp
  1059  001060  6E4E               	movwf	strcpy@dest^0,c
  1060  001062  0E00               	movlw	high _mat_disp
  1061  001064  6E4F               	movwf	(strcpy@dest+1)^0,c
  1062  001066  0E55               	movlw	low STR_1
  1063  001068  6E50               	movwf	strcpy@src^0,c
  1064  00106A  0E06               	movlw	high STR_1
  1065  00106C  6E51               	movwf	(strcpy@src+1)^0,c
  1066  00106E  EC9A  F008         	call	_strcpy	;wreg free
  1067                           
  1068                           ;task_manager.c: 28:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  1069  001072  0E90               	movlw	low (_mat_disp+16)
  1070  001074  6E4E               	movwf	strcpy@dest^0,c
  1071  001076  0E00               	movlw	high (_mat_disp+16)
  1072  001078  6E4F               	movwf	(strcpy@dest+1)^0,c
  1073  00107A  0E65               	movlw	low STR_2
  1074  00107C  6E50               	movwf	strcpy@src^0,c
  1075  00107E  0E06               	movlw	high STR_2
  1076  001080  6E51               	movwf	(strcpy@src+1)^0,c
  1077  001082  EC9A  F008         	call	_strcpy	;wreg free
  1078                           
  1079                           ;task_manager.c: 29:     strcpy(mat_disp[2], "               ");
  1080  001086  0EA0               	movlw	low (_mat_disp+32)
  1081  001088  6E4E               	movwf	strcpy@dest^0,c
  1082  00108A  0E00               	movlw	high (_mat_disp+32)
  1083  00108C  6E4F               	movwf	(strcpy@dest+1)^0,c
  1084  00108E  0E45               	movlw	low STR_3
  1085  001090  6E50               	movwf	strcpy@src^0,c
  1086  001092  0E06               	movlw	high STR_3
  1087  001094  6E51               	movwf	(strcpy@src+1)^0,c
  1088  001096  EC9A  F008         	call	_strcpy	;wreg free
  1089                           
  1090                           ;task_manager.c: 30:     strcpy(mat_disp[3], "               ");
  1091  00109A  0EB0               	movlw	low (_mat_disp+48)
  1092  00109C  6E4E               	movwf	strcpy@dest^0,c
  1093  00109E  0E00               	movlw	high (_mat_disp+48)
  1094  0010A0  6E4F               	movwf	(strcpy@dest+1)^0,c
  1095  0010A2  0E45               	movlw	low STR_3
  1096  0010A4  6E50               	movwf	strcpy@src^0,c
  1097  0010A6  0E06               	movlw	high STR_3
  1098  0010A8  6E51               	movwf	(strcpy@src+1)^0,c
  1099  0010AA  EC9A  F008         	call	_strcpy	;wreg free
  1100  0010AE                     
  1101                           ;task_manager.c: 31:     print_mat(lcd);
  1102  0010AE  C0DA  F0D0         	movff	creditos@lcd,print_mat@lcd
  1103  0010B2  C0DB  F0D1         	movff	creditos@lcd+1,print_mat@lcd+1
  1104  0010B6  EC13  F007         	call	_print_mat	;wreg free
  1105  0010BA                     l183:
  1106  0010BA  AA63               	btfss	_botoes^0,5,c
  1107  0010BC  EF62  F008         	goto	u1131
  1108  0010C0  EF64  F008         	goto	u1130
  1109  0010C4                     u1131:
  1110  0010C4  EF5D  F008         	goto	l183
  1111  0010C8                     u1130:
  1112  0010C8  0012               	return		;funcret
  1113  0010CA                     __end_of_creditos:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _strcpy *****************
  1117 ;; Defined at:
  1118 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  dest            2   27[COMRAM] PTR unsigned char 
  1121 ;;		 -> mat_disp(64), 
  1122 ;;  src             2   29[COMRAM] PTR const unsigned char 
  1123 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1124 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  d               2   33[COMRAM] PTR unsigned char 
  1127 ;;		 -> mat_disp(64), 
  1128 ;;  s               2   31[COMRAM] PTR const unsigned char 
  1129 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1130 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   27[COMRAM] PTR unsigned char 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         4       0       0       0       0       0       0
  1141 ;;      Locals:         4       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0
  1143 ;;      Totals:         8       0       0       0       0       0       0
  1144 ;;Total ram usage:        8 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    5
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_creditos
  1151 ;;		_menu
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text4
  1156  001134                     __ptext4:
  1157                           	opt callstack 0
  1158  001134                     _strcpy:
  1159                           	opt callstack 23
  1160  001134  C050  F052         	movff	strcpy@src,strcpy@s
  1161  001138  C051  F053         	movff	strcpy@src+1,strcpy@s+1
  1162  00113C  C04E  F054         	movff	strcpy@dest,strcpy@d
  1163  001140  C04F  F055         	movff	strcpy@dest+1,strcpy@d+1
  1164  001144                     l1624:
  1165  001144  C052  FFF6         	movff	strcpy@s,tblptrl
  1166  001148  C053  FFF7         	movff	strcpy@s+1,tblptrh
  1167  00114C  4A52               	infsnz	strcpy@s^0,f,c
  1168  00114E  2A53               	incf	(strcpy@s+1)^0,f,c
  1169  001150                     	if	0	;tblptru may be non-zero
  1170  001150                     	endif
  1171  001150                     	if	0	;tblptru may be non-zero
  1172  001150                     	endif
  1173  001150  C054  FFD9         	movff	strcpy@d,fsr2l
  1174  001154  C055  FFDA         	movff	strcpy@d+1,fsr2h
  1175  001158  4A54               	infsnz	strcpy@d^0,f,c
  1176  00115A  2A55               	incf	(strcpy@d+1)^0,f,c
  1177  00115C  0008               	tblrd		*
  1178  00115E  CFF5 FFDF          	movff	tablat,indf2
  1179  001162  50DF               	movf	indf2,w,c
  1180  001164  A4D8               	btfss	status,2,c
  1181  001166  EFB7  F008         	goto	u731
  1182  00116A  EFB9  F008         	goto	u730
  1183  00116E                     u731:
  1184  00116E  EFA2  F008         	goto	l1624
  1185  001172                     u730:
  1186  001172  0012               	return		;funcret
  1187  001174                     __end_of_strcpy:
  1188                           	opt callstack 0
  1189                           
  1190 ;; *************** function _print_mat *****************
  1191 ;; Defined at:
  1192 ;;		line 199 in file "lcd.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  lcd             2    0[BANK0 ] PTR struct .
  1195 ;;		 -> PORTD(1), 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  j               2    6[BANK0 ] int 
  1198 ;;  i               2    8[BANK0 ] int 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1208 ;;      Params:         0       2       0       0       0       0       0
  1209 ;;      Locals:         0       4       0       0       0       0       0
  1210 ;;      Temps:          0       4       0       0       0       0       0
  1211 ;;      Totals:         0      10       0       0       0       0       0
  1212 ;;Total ram usage:       10 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    8
  1215 ;; This function calls:
  1216 ;;		_goto_XY
  1217 ;;		_write_char
  1218 ;; This function is called by:
  1219 ;;		_creditos
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text5
  1224  000E26                     __ptext5:
  1225                           	opt callstack 0
  1226  000E26                     _print_mat:
  1227                           	opt callstack 20
  1228  000E26                     
  1229                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  1230  000E26  0E00               	movlw	0
  1231  000E28  0100               	movlb	0	; () banked
  1232  000E2A  6FD9               	movwf	(print_mat@i+1)& (0+255),b
  1233  000E2C  0E00               	movlw	0
  1234  000E2E  6FD8               	movwf	print_mat@i& (0+255),b
  1235  000E30                     l2102:
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  1239  000E30  C0D0  F055         	movff	print_mat@lcd,goto_XY@lcd
  1240  000E34  C0D1  F056         	movff	print_mat@lcd+1,goto_XY@lcd+1
  1241  000E38  29D8               	incf	print_mat@i& (0+255),w,b
  1242  000E3A  6E57               	movwf	goto_XY@x^0,c
  1243  000E3C  0E01               	movlw	1
  1244  000E3E  6E58               	movwf	goto_XY@y^0,c
  1245  000E40  ECF9  F005         	call	_goto_XY	;wreg free
  1246  000E44                     
  1247                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  1248  000E44  0E00               	movlw	0
  1249  000E46  0100               	movlb	0	; () banked
  1250  000E48  6FD7               	movwf	(print_mat@j+1)& (0+255),b
  1251  000E4A  0E00               	movlw	0
  1252  000E4C  6FD6               	movwf	print_mat@j& (0+255),b
  1253  000E4E                     l2110:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  1257  000E4E  C0D0  F04E         	movff	print_mat@lcd,write_char@lcd
  1258  000E52  C0D1  F04F         	movff	print_mat@lcd+1,write_char@lcd+1
  1259  000E56  C0D8  F0D2         	movff	print_mat@i,??_print_mat
  1260  000E5A  C0D9  F0D3         	movff	print_mat@i+1,??_print_mat+1
  1261  000E5E  3BD2               	swapf	??_print_mat& (0+255),f,b
  1262  000E60  3BD3               	swapf	(??_print_mat+1)& (0+255),f,b
  1263  000E62  0EF0               	movlw	240
  1264  000E64  17D3               	andwf	(??_print_mat+1)& (0+255),f,b
  1265  000E66  51D2               	movf	??_print_mat& (0+255),w,b
  1266  000E68  0B0F               	andlw	15
  1267  000E6A  13D3               	iorwf	(??_print_mat+1)& (0+255),f,b
  1268  000E6C  0EF0               	movlw	240
  1269  000E6E  17D2               	andwf	??_print_mat& (0+255),f,b
  1270  000E70  0E80               	movlw	low _mat_disp
  1271  000E72  6FD4               	movwf	(??_print_mat+2)& (0+255),b
  1272  000E74  0E00               	movlw	high _mat_disp
  1273  000E76  6FD5               	movwf	(??_print_mat+3)& (0+255),b
  1274  000E78  51D2               	movf	??_print_mat& (0+255),w,b
  1275  000E7A  27D4               	addwf	(??_print_mat+2)& (0+255),f,b
  1276  000E7C  51D3               	movf	(??_print_mat+1)& (0+255),w,b
  1277  000E7E  23D5               	addwfc	(??_print_mat+3)& (0+255),f,b
  1278  000E80  51D6               	movf	print_mat@j& (0+255),w,b
  1279  000E82  25D4               	addwf	(??_print_mat+2)& (0+255),w,b
  1280  000E84  6ED9               	movwf	fsr2l,c
  1281  000E86  51D7               	movf	(print_mat@j+1)& (0+255),w,b
  1282  000E88  21D5               	addwfc	(??_print_mat+3)& (0+255),w,b
  1283  000E8A  6EDA               	movwf	fsr2h,c
  1284  000E8C  50DF               	movf	indf2,w,c
  1285  000E8E  6E50               	movwf	write_char@c^0,c
  1286  000E90  ECA4  F004         	call	_write_char	;wreg free
  1287  000E94  0100               	movlb	0	; () banked
  1288  000E96  4BD6               	infsnz	print_mat@j& (0+255),f,b
  1289  000E98  2BD7               	incf	(print_mat@j+1)& (0+255),f,b
  1290  000E9A                     
  1291                           ; BSR set to: 0
  1292  000E9A  BFD7               	btfsc	(print_mat@j+1)& (0+255),7,b
  1293  000E9C  EF59  F007         	goto	u1111
  1294  000EA0  51D7               	movf	(print_mat@j+1)& (0+255),w,b
  1295  000EA2  E109               	bnz	u1110
  1296  000EA4  0E10               	movlw	16
  1297  000EA6  5DD6               	subwf	print_mat@j& (0+255),w,b
  1298  000EA8  A0D8               	btfss	status,0,c
  1299  000EAA  EF59  F007         	goto	u1111
  1300  000EAE  EF5B  F007         	goto	u1110
  1301  000EB2                     u1111:
  1302  000EB2  EF27  F007         	goto	l2110
  1303  000EB6                     u1110:
  1304  000EB6                     
  1305                           ; BSR set to: 0
  1306                           ;lcd.c: 204:     }
  1307  000EB6  4BD8               	infsnz	print_mat@i& (0+255),f,b
  1308  000EB8  2BD9               	incf	(print_mat@i+1)& (0+255),f,b
  1309  000EBA                     
  1310                           ; BSR set to: 0
  1311  000EBA  BFD9               	btfsc	(print_mat@i+1)& (0+255),7,b
  1312  000EBC  EF69  F007         	goto	u1121
  1313  000EC0  51D9               	movf	(print_mat@i+1)& (0+255),w,b
  1314  000EC2  E109               	bnz	u1120
  1315  000EC4  0E04               	movlw	4
  1316  000EC6  5DD8               	subwf	print_mat@i& (0+255),w,b
  1317  000EC8  A0D8               	btfss	status,0,c
  1318  000ECA  EF69  F007         	goto	u1121
  1319  000ECE  EF6B  F007         	goto	u1120
  1320  000ED2                     u1121:
  1321  000ED2  EF18  F007         	goto	l2102
  1322  000ED6                     u1120:
  1323  000ED6                     
  1324                           ; BSR set to: 0
  1325  000ED6  0012               	return		;funcret
  1326  000ED8                     __end_of_print_mat:
  1327                           	opt callstack 0
  1328                           
  1329 ;; *************** function _write_char *****************
  1330 ;; Defined at:
  1331 ;;		line 133 in file "lcd.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  lcd             2   27[COMRAM] PTR struct .
  1334 ;;		 -> PORTD(1), 
  1335 ;;  c               1   29[COMRAM] unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1347 ;;      Params:         3       0       0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0
  1349 ;;      Temps:          1       0       0       0       0       0       0
  1350 ;;      Totals:         4       0       0       0       0       0       0
  1351 ;;Total ram usage:        4 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    5
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_print_mat
  1358 ;;		_jogar
  1359 ;;		_instrucoes
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text6
  1364  000948                     __ptext6:
  1365                           	opt callstack 0
  1366  000948                     _write_char:
  1367                           	opt callstack 22
  1368  000948                     
  1369                           ;lcd.c: 134:     lcd->E = 0;
  1370  000948  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1371  00094C  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1372  000950  94DF               	bcf	indf2,2,c
  1373                           
  1374                           ;lcd.c: 135:     lcd->RS = 1;
  1375  000952  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1376  000956  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1377  00095A  80DF               	bsf	indf2,0,c
  1378                           
  1379                           ;lcd.c: 136:     lcd->R_W = 0;
  1380  00095C  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1381  000960  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1382  000964  92DF               	bcf	indf2,1,c
  1383  000966                     
  1384                           ;lcd.c: 139:     lcd->data = (c>>4);
  1385  000966  C050  F051         	movff	write_char@c,??_write_char
  1386  00096A  3A51               	swapf	??_write_char^0,f,c
  1387  00096C  0E0F               	movlw	15
  1388  00096E  1651               	andwf	??_write_char^0,f,c
  1389  000970  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1390  000974  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1391  000978  3A51               	swapf	??_write_char^0,f,c
  1392  00097A  50DF               	movf	indf2,w,c
  1393  00097C  1851               	xorwf	??_write_char^0,w,c
  1394  00097E  0B0F               	andlw	-241
  1395  000980  1851               	xorwf	??_write_char^0,w,c
  1396  000982  6EDF               	movwf	indf2,c
  1397  000984                     
  1398                           ;lcd.c: 140:     lcd->E = 1;
  1399  000984  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1400  000988  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1401  00098C  84DF               	bsf	indf2,2,c
  1402  00098E                     
  1403                           ;lcd.c: 141:     lcd->E = 0;
  1404  00098E  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1405  000992  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1406  000996  94DF               	bcf	indf2,2,c
  1407  000998                     
  1408                           ;lcd.c: 144:     lcd->data = (c);
  1409  000998  C050  F051         	movff	write_char@c,??_write_char
  1410  00099C  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1411  0009A0  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1412  0009A4  3A51               	swapf	??_write_char^0,f,c
  1413  0009A6  50DF               	movf	indf2,w,c
  1414  0009A8  1851               	xorwf	??_write_char^0,w,c
  1415  0009AA  0B0F               	andlw	-241
  1416  0009AC  1851               	xorwf	??_write_char^0,w,c
  1417  0009AE  6EDF               	movwf	indf2,c
  1418                           
  1419                           ;lcd.c: 145:     lcd->E = 1;
  1420  0009B0  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1421  0009B4  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1422  0009B8  84DF               	bsf	indf2,2,c
  1423                           
  1424                           ;lcd.c: 146:     lcd->E = 0;
  1425  0009BA  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1426  0009BE  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1427  0009C2  94DF               	bcf	indf2,2,c
  1428  0009C4                     
  1429                           ;lcd.c: 149:     TRISD = 0xF0;
  1430  0009C4  0EF0               	movlw	240
  1431  0009C6  6E95               	movwf	149,c	;volatile
  1432  0009C8                     
  1433                           ;lcd.c: 150:     lcd->RS = 0;
  1434  0009C8  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1435  0009CC  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1436  0009D0  90DF               	bcf	indf2,0,c
  1437  0009D2                     
  1438                           ;lcd.c: 151:     lcd->R_W = 1;
  1439  0009D2  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1440  0009D6  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1441  0009DA  82DF               	bsf	indf2,1,c
  1442  0009DC                     l2082:
  1443                           
  1444                           ;lcd.c: 153:        lcd->E = 1;
  1445  0009DC  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1446  0009E0  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1447  0009E4  84DF               	bsf	indf2,2,c
  1448  0009E6                     
  1449                           ;lcd.c: 154:        lcd->E = 0;
  1450  0009E6  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1451  0009EA  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1452  0009EE  94DF               	bcf	indf2,2,c
  1453  0009F0                     
  1454                           ;lcd.c: 155:        lcd->E = 1;
  1455  0009F0  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1456  0009F4  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1457  0009F8  84DF               	bsf	indf2,2,c
  1458  0009FA                     
  1459                           ;lcd.c: 156:        lcd->E = 0;
  1460  0009FA  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1461  0009FE  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1462  000A02  94DF               	bcf	indf2,2,c
  1463  000A04                     
  1464                           ;lcd.c: 157:     } while(lcd->data&0x08);
  1465  000A04  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1466  000A08  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1467  000A0C  38DF               	swapf	indf2,w,c
  1468  000A0E  0B0F               	andlw	15
  1469  000A10  6E51               	movwf	??_write_char^0,c
  1470  000A12  B651               	btfsc	??_write_char^0,3,c
  1471  000A14  EF0E  F005         	goto	u1101
  1472  000A18  EF10  F005         	goto	u1100
  1473  000A1C                     u1101:
  1474  000A1C  EFEE  F004         	goto	l2082
  1475  000A20                     u1100:
  1476  000A20                     
  1477                           ;lcd.c: 158:     lcd->R_W = 0;
  1478  000A20  C04E  FFD9         	movff	write_char@lcd,fsr2l
  1479  000A24  C04F  FFDA         	movff	write_char@lcd+1,fsr2h
  1480  000A28  92DF               	bcf	indf2,1,c
  1481  000A2A                     
  1482                           ;lcd.c: 159:     TRISD = 0x00;
  1483  000A2A  0E00               	movlw	0
  1484  000A2C  6E95               	movwf	149,c	;volatile
  1485  000A2E  0012               	return		;funcret
  1486  000A30                     __end_of_write_char:
  1487                           	opt callstack 0
  1488                           
  1489 ;; *************** function _goto_XY *****************
  1490 ;; Defined at:
  1491 ;;		line 76 in file "lcd.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  lcd             2   34[COMRAM] PTR struct .
  1494 ;;		 -> PORTD(1), 
  1495 ;;  x               1   36[COMRAM] unsigned char 
  1496 ;;  y               1   37[COMRAM] unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  temp            1   41[COMRAM] unsigned char 
  1499 ;;  a               1   40[COMRAM] unsigned char 
  1500 ;;  z               1   39[COMRAM] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1510 ;;      Params:         4       0       0       0       0       0       0
  1511 ;;      Locals:         3       0       0       0       0       0       0
  1512 ;;      Temps:          1       0       0       0       0       0       0
  1513 ;;      Totals:         8       0       0       0       0       0       0
  1514 ;;Total ram usage:        8 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    7
  1517 ;; This function calls:
  1518 ;;		_lcd_cmd
  1519 ;; This function is called by:
  1520 ;;		_print_mat
  1521 ;;		_jogar
  1522 ;;		_instrucoes
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text7
  1527  000BF2                     __ptext7:
  1528                           	opt callstack 0
  1529  000BF2                     _goto_XY:
  1530                           	opt callstack 20
  1531  000BF2                     
  1532                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  1533  000BF2  0457               	decf	goto_XY@x^0,w,c
  1534  000BF4  A4D8               	btfss	status,2,c
  1535  000BF6  EFFF  F005         	goto	u1061
  1536  000BFA  EF01  F006         	goto	u1060
  1537  000BFE                     u1061:
  1538  000BFE  EF23  F006         	goto	l2030
  1539  000C02                     u1060:
  1540  000C02                     
  1541                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  1542  000C02  5058               	movf	goto_XY@y^0,w,c
  1543  000C04  0F7F               	addlw	127
  1544  000C06  6E5C               	movwf	goto_XY@temp^0,c
  1545                           
  1546                           ;lcd.c: 81:        z = temp>>4;
  1547  000C08  385C               	swapf	goto_XY@temp^0,w,c
  1548  000C0A  0B0F               	andlw	15
  1549  000C0C  6E5A               	movwf	goto_XY@z^0,c
  1550  000C0E                     l2022:
  1551                           
  1552                           ;lcd.c: 82:        a = temp;
  1553  000C0E  C05C  F05B         	movff	goto_XY@temp,goto_XY@a
  1554  000C12                     
  1555                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  1556  000C12  C055  F051         	movff	goto_XY@lcd,lcd_cmd@lcd
  1557  000C16  C056  F052         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1558  000C1A  C05A  F053         	movff	goto_XY@z,lcd_cmd@a
  1559  000C1E  ECBA  F008         	call	_lcd_cmd	;wreg free
  1560  000C22                     
  1561                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  1562  000C22  0E06               	movlw	6
  1563  000C24  6E59               	movwf	??_goto_XY^0,c
  1564  000C26  0E30               	movlw	48
  1565  000C28                     u1317:
  1566  000C28  2EE8               	decfsz	wreg,f,c
  1567  000C2A  D7FE               	bra	u1317
  1568  000C2C  2E59               	decfsz	??_goto_XY^0,f,c
  1569  000C2E  D7FC               	bra	u1317
  1570  000C30  D000               	nop2	
  1571  000C32                     
  1572                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  1573  000C32  C055  F051         	movff	goto_XY@lcd,lcd_cmd@lcd
  1574  000C36  C056  F052         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1575  000C3A  C05B  F053         	movff	goto_XY@a,lcd_cmd@a
  1576  000C3E  ECBA  F008         	call	_lcd_cmd	;wreg free
  1577                           
  1578                           ;lcd.c: 86:     }
  1579  000C42  EF56  F006         	goto	l75
  1580  000C46                     l2030:
  1581  000C46  0E02               	movlw	2
  1582  000C48  1857               	xorwf	goto_XY@x^0,w,c
  1583  000C4A  A4D8               	btfss	status,2,c
  1584  000C4C  EF2A  F006         	goto	u1071
  1585  000C50  EF2C  F006         	goto	u1070
  1586  000C54                     u1071:
  1587  000C54  EF34  F006         	goto	l2042
  1588  000C58                     u1070:
  1589  000C58                     
  1590                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  1591  000C58  5058               	movf	goto_XY@y^0,w,c
  1592  000C5A  0FBF               	addlw	191
  1593  000C5C  6E5C               	movwf	goto_XY@temp^0,c
  1594                           
  1595                           ;lcd.c: 90:        z = temp>>4;
  1596  000C5E  385C               	swapf	goto_XY@temp^0,w,c
  1597  000C60  0B0F               	andlw	15
  1598  000C62  6E5A               	movwf	goto_XY@z^0,c
  1599  000C64  EF07  F006         	goto	l2022
  1600  000C68                     l2042:
  1601  000C68  0E03               	movlw	3
  1602  000C6A  1857               	xorwf	goto_XY@x^0,w,c
  1603  000C6C  A4D8               	btfss	status,2,c
  1604  000C6E  EF3B  F006         	goto	u1081
  1605  000C72  EF3D  F006         	goto	u1080
  1606  000C76                     u1081:
  1607  000C76  EF45  F006         	goto	l2054
  1608  000C7A                     u1080:
  1609  000C7A                     
  1610                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  1611  000C7A  5058               	movf	goto_XY@y^0,w,c
  1612  000C7C  0F8F               	addlw	143
  1613  000C7E  6E5C               	movwf	goto_XY@temp^0,c
  1614                           
  1615                           ;lcd.c: 99:        z = temp>>4;
  1616  000C80  385C               	swapf	goto_XY@temp^0,w,c
  1617  000C82  0B0F               	andlw	15
  1618  000C84  6E5A               	movwf	goto_XY@z^0,c
  1619  000C86  EF07  F006         	goto	l2022
  1620  000C8A                     l2054:
  1621  000C8A  0E04               	movlw	4
  1622  000C8C  1857               	xorwf	goto_XY@x^0,w,c
  1623  000C8E  A4D8               	btfss	status,2,c
  1624  000C90  EF4C  F006         	goto	u1091
  1625  000C94  EF4E  F006         	goto	u1090
  1626  000C98                     u1091:
  1627  000C98  EF56  F006         	goto	l71
  1628  000C9C                     u1090:
  1629  000C9C                     
  1630                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  1631  000C9C  5058               	movf	goto_XY@y^0,w,c
  1632  000C9E  0FCF               	addlw	207
  1633  000CA0  6E5C               	movwf	goto_XY@temp^0,c
  1634                           
  1635                           ;lcd.c: 108:        z = temp>>4;
  1636  000CA2  385C               	swapf	goto_XY@temp^0,w,c
  1637  000CA4  0B0F               	andlw	15
  1638  000CA6  6E5A               	movwf	goto_XY@z^0,c
  1639  000CA8  EF07  F006         	goto	l2022
  1640  000CAC                     l71:
  1641  000CAC                     l75:
  1642  000CAC  0012               	return		;funcret
  1643  000CAE                     __end_of_goto_XY:
  1644                           	opt callstack 0
  1645                           
  1646 ;; *************** function _lcd_cmd *****************
  1647 ;; Defined at:
  1648 ;;		line 67 in file "lcd.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  lcd             2   30[COMRAM] PTR struct .
  1651 ;;		 -> PORTD(1), 
  1652 ;;  a               1   32[COMRAM] unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1664 ;;      Params:         3       0       0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0
  1666 ;;      Temps:          1       0       0       0       0       0       0
  1667 ;;      Totals:         4       0       0       0       0       0       0
  1668 ;;Total ram usage:        4 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    6
  1671 ;; This function calls:
  1672 ;;		_pulso
  1673 ;; This function is called by:
  1674 ;;		_goto_XY
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text8
  1679  001174                     __ptext8:
  1680                           	opt callstack 0
  1681  001174                     _lcd_cmd:
  1682                           	opt callstack 20
  1683  001174                     
  1684                           ;lcd.c: 68:     lcd->RS = 0;
  1685  001174  C051  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1686  001178  C052  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1687  00117C  90DF               	bcf	indf2,0,c
  1688  00117E                     
  1689                           ;lcd.c: 69:     lcd->data = (a);
  1690  00117E  C053  F054         	movff	lcd_cmd@a,??_lcd_cmd
  1691  001182  C051  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1692  001186  C052  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1693  00118A  3A54               	swapf	??_lcd_cmd^0,f,c
  1694  00118C  50DF               	movf	indf2,w,c
  1695  00118E  1854               	xorwf	??_lcd_cmd^0,w,c
  1696  001190  0B0F               	andlw	-241
  1697  001192  1854               	xorwf	??_lcd_cmd^0,w,c
  1698  001194  6EDF               	movwf	indf2,c
  1699  001196                     
  1700                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1701  001196  0E06               	movlw	6
  1702  001198  6E54               	movwf	??_lcd_cmd^0,c
  1703  00119A  0E30               	movlw	48
  1704  00119C                     u1327:
  1705  00119C  2EE8               	decfsz	wreg,f,c
  1706  00119E  D7FE               	bra	u1327
  1707  0011A0  2E54               	decfsz	??_lcd_cmd^0,f,c
  1708  0011A2  D7FC               	bra	u1327
  1709  0011A4  D000               	nop2	
  1710  0011A6                     
  1711                           ;lcd.c: 72:     pulso(lcd);
  1712  0011A6  C051  F04E         	movff	lcd_cmd@lcd,pulso@lcd
  1713  0011AA  C052  F04F         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  1714  0011AE  EC17  F009         	call	_pulso	;wreg free
  1715  0011B2  0012               	return		;funcret
  1716  0011B4                     __end_of_lcd_cmd:
  1717                           	opt callstack 0
  1718                           
  1719 ;; *************** function _function_set *****************
  1720 ;; Defined at:
  1721 ;;		line 21 in file "lcd.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  lcd             2   30[COMRAM] PTR struct .
  1724 ;;		 -> PORTD(1), 
  1725 ;;  data_lenght     1   32[COMRAM] unsigned char 
  1726 ;;  num_lines       1   33[COMRAM] unsigned char 
  1727 ;;  char_font       1   34[COMRAM] unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1739 ;;      Params:         5       0       0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0
  1741 ;;      Temps:          3       0       0       0       0       0       0
  1742 ;;      Totals:         8       0       0       0       0       0       0
  1743 ;;Total ram usage:        8 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    6
  1746 ;; This function calls:
  1747 ;;		_pulso
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text9
  1754  000B18                     __ptext9:
  1755                           	opt callstack 0
  1756  000B18                     _function_set:
  1757                           	opt callstack 24
  1758  000B18                     
  1759                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  1760  000B18  C051  FFD9         	movff	function_set@lcd,fsr2l
  1761  000B1C  C052  FFDA         	movff	function_set@lcd+1,fsr2h
  1762  000B20  94DF               	bcf	indf2,2,c
  1763                           
  1764                           ;lcd.c: 24:     lcd->RS = 0;
  1765  000B22  C051  FFD9         	movff	function_set@lcd,fsr2l
  1766  000B26  C052  FFDA         	movff	function_set@lcd+1,fsr2h
  1767  000B2A  90DF               	bcf	indf2,0,c
  1768                           
  1769                           ;lcd.c: 25:     lcd->R_W = 0;
  1770  000B2C  C051  FFD9         	movff	function_set@lcd,fsr2l
  1771  000B30  C052  FFDA         	movff	function_set@lcd+1,fsr2h
  1772  000B34  92DF               	bcf	indf2,1,c
  1773  000B36                     
  1774                           ;lcd.c: 28:     lcd->data = 0x02;
  1775  000B36  C051  FFD9         	movff	function_set@lcd,fsr2l
  1776  000B3A  C052  FFDA         	movff	function_set@lcd+1,fsr2h
  1777  000B3E  50DF               	movf	indf2,w,c
  1778  000B40  0B0F               	andlw	-241
  1779  000B42  0920               	iorlw	32
  1780  000B44  6EDF               	movwf	indf2,c
  1781  000B46                     
  1782                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1783  000B46  0E06               	movlw	6
  1784  000B48  6E56               	movwf	??_function_set^0,c
  1785  000B4A  0E30               	movlw	48
  1786  000B4C                     u1337:
  1787  000B4C  2EE8               	decfsz	wreg,f,c
  1788  000B4E  D7FE               	bra	u1337
  1789  000B50  2E56               	decfsz	??_function_set^0,f,c
  1790  000B52  D7FC               	bra	u1337
  1791  000B54  D000               	nop2	
  1792  000B56                     
  1793                           ;lcd.c: 31:     pulso(lcd);
  1794  000B56  C051  F04E         	movff	function_set@lcd,pulso@lcd
  1795  000B5A  C052  F04F         	movff	function_set@lcd+1,pulso@lcd+1
  1796  000B5E  EC17  F009         	call	_pulso	;wreg free
  1797  000B62                     
  1798                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  1799  000B62  C053  F056         	movff	function_set@data_lenght,??_function_set
  1800  000B66  0E02               	movlw	2
  1801  000B68  1256               	iorwf	??_function_set^0,f,c
  1802  000B6A  C051  FFD9         	movff	function_set@lcd,fsr2l
  1803  000B6E  C052  FFDA         	movff	function_set@lcd+1,fsr2h
  1804  000B72  3A56               	swapf	??_function_set^0,f,c
  1805  000B74  50DF               	movf	indf2,w,c
  1806  000B76  1856               	xorwf	??_function_set^0,w,c
  1807  000B78  0B0F               	andlw	-241
  1808  000B7A  1856               	xorwf	??_function_set^0,w,c
  1809  000B7C  6EDF               	movwf	indf2,c
  1810  000B7E                     
  1811                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1812  000B7E  0E06               	movlw	6
  1813  000B80  6E56               	movwf	??_function_set^0,c
  1814  000B82  0E30               	movlw	48
  1815  000B84                     u1347:
  1816  000B84  2EE8               	decfsz	wreg,f,c
  1817  000B86  D7FE               	bra	u1347
  1818  000B88  2E56               	decfsz	??_function_set^0,f,c
  1819  000B8A  D7FC               	bra	u1347
  1820  000B8C  D000               	nop2	
  1821  000B8E                     
  1822                           ;lcd.c: 37:     pulso(lcd);
  1823  000B8E  C051  F04E         	movff	function_set@lcd,pulso@lcd
  1824  000B92  C052  F04F         	movff	function_set@lcd+1,pulso@lcd+1
  1825  000B96  EC17  F009         	call	_pulso	;wreg free
  1826  000B9A                     
  1827                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  1828  000B9A  C051  FFD9         	movff	function_set@lcd,fsr2l
  1829  000B9E  C052  FFDA         	movff	function_set@lcd+1,fsr2h
  1830  000BA2  38DF               	swapf	indf2,w,c
  1831  000BA4  0B0F               	andlw	15
  1832  000BA6  6E56               	movwf	??_function_set^0,c
  1833  000BA8  C055  F057         	movff	function_set@char_font,??_function_set+1
  1834  000BAC  90D8               	bcf	status,0,c
  1835  000BAE  3657               	rlcf	(??_function_set+1)^0,f,c
  1836  000BB0  90D8               	bcf	status,0,c
  1837  000BB2  3657               	rlcf	(??_function_set+1)^0,f,c
  1838  000BB4  3854               	swapf	function_set@num_lines^0,w,c
  1839  000BB6  42E8               	rrncf	wreg,f,c
  1840  000BB8  0BF8               	andlw	248
  1841  000BBA  1057               	iorwf	(??_function_set+1)^0,w,c
  1842  000BBC  1056               	iorwf	??_function_set^0,w,c
  1843  000BBE  6E58               	movwf	(??_function_set+2)^0,c
  1844  000BC0  C051  FFD9         	movff	function_set@lcd,fsr2l
  1845  000BC4  C052  FFDA         	movff	function_set@lcd+1,fsr2h
  1846  000BC8  3A58               	swapf	(??_function_set+2)^0,f,c
  1847  000BCA  50DF               	movf	indf2,w,c
  1848  000BCC  1858               	xorwf	(??_function_set+2)^0,w,c
  1849  000BCE  0B0F               	andlw	-241
  1850  000BD0  1858               	xorwf	(??_function_set+2)^0,w,c
  1851  000BD2  6EDF               	movwf	indf2,c
  1852  000BD4                     
  1853                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1854  000BD4  0E06               	movlw	6
  1855  000BD6  6E56               	movwf	??_function_set^0,c
  1856  000BD8  0E30               	movlw	48
  1857  000BDA                     u1357:
  1858  000BDA  2EE8               	decfsz	wreg,f,c
  1859  000BDC  D7FE               	bra	u1357
  1860  000BDE  2E56               	decfsz	??_function_set^0,f,c
  1861  000BE0  D7FC               	bra	u1357
  1862  000BE2  D000               	nop2	
  1863  000BE4                     
  1864                           ;lcd.c: 44:     pulso(lcd);
  1865  000BE4  C051  F04E         	movff	function_set@lcd,pulso@lcd
  1866  000BE8  C052  F04F         	movff	function_set@lcd+1,pulso@lcd+1
  1867  000BEC  EC17  F009         	call	_pulso	;wreg free
  1868  000BF0  0012               	return		;funcret
  1869  000BF2                     __end_of_function_set:
  1870                           	opt callstack 0
  1871                           
  1872 ;; *************** function _entry_mode_set *****************
  1873 ;; Defined at:
  1874 ;;		line 116 in file "lcd.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  lcd             2   30[COMRAM] PTR struct .
  1877 ;;		 -> PORTD(1), 
  1878 ;;  move_directi    1   32[COMRAM] unsigned char 
  1879 ;;  display_shif    1   33[COMRAM] unsigned char 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1891 ;;      Params:         4       0       0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0
  1893 ;;      Temps:          1       0       0       0       0       0       0
  1894 ;;      Totals:         5       0       0       0       0       0       0
  1895 ;;Total ram usage:        5 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    6
  1898 ;; This function calls:
  1899 ;;		_pulso
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text10
  1906  000F66                     __ptext10:
  1907                           	opt callstack 0
  1908  000F66                     _entry_mode_set:
  1909                           	opt callstack 24
  1910  000F66                     
  1911                           ;lcd.c: 117:     lcd->E = 0;
  1912  000F66  C051  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1913  000F6A  C052  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1914  000F6E  94DF               	bcf	indf2,2,c
  1915                           
  1916                           ;lcd.c: 118:     lcd->RS = 0;
  1917  000F70  C051  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1918  000F74  C052  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1919  000F78  90DF               	bcf	indf2,0,c
  1920                           
  1921                           ;lcd.c: 119:     lcd->R_W = 0;
  1922  000F7A  C051  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1923  000F7E  C052  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1924  000F82  92DF               	bcf	indf2,1,c
  1925  000F84                     
  1926                           ;lcd.c: 121:     lcd->data = 0x00;
  1927  000F84  C051  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1928  000F88  C052  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1929  000F8C  0E0F               	movlw	-241
  1930  000F8E  16DF               	andwf	indf2,f,c
  1931  000F90                     
  1932                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1933  000F90  0E06               	movlw	6
  1934  000F92  6E55               	movwf	??_entry_mode_set^0,c
  1935  000F94  0E30               	movlw	48
  1936  000F96                     u1367:
  1937  000F96  2EE8               	decfsz	wreg,f,c
  1938  000F98  D7FE               	bra	u1367
  1939  000F9A  2E55               	decfsz	??_entry_mode_set^0,f,c
  1940  000F9C  D7FC               	bra	u1367
  1941  000F9E  D000               	nop2	
  1942  000FA0                     
  1943                           ;lcd.c: 124:     pulso(lcd);
  1944  000FA0  C051  F04E         	movff	entry_mode_set@lcd,pulso@lcd
  1945  000FA4  C052  F04F         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1946  000FA8  EC17  F009         	call	_pulso	;wreg free
  1947  000FAC                     
  1948                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  1949  000FAC  5053               	movf	entry_mode_set@move_direction^0,w,c
  1950  000FAE  2453               	addwf	entry_mode_set@move_direction^0,w,c
  1951  000FB0  1054               	iorwf	entry_mode_set@display_shift^0,w,c
  1952  000FB2  6E55               	movwf	??_entry_mode_set^0,c
  1953  000FB4  0E04               	movlw	4
  1954  000FB6  1255               	iorwf	??_entry_mode_set^0,f,c
  1955  000FB8  C051  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1956  000FBC  C052  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1957  000FC0  3A55               	swapf	??_entry_mode_set^0,f,c
  1958  000FC2  50DF               	movf	indf2,w,c
  1959  000FC4  1855               	xorwf	??_entry_mode_set^0,w,c
  1960  000FC6  0B0F               	andlw	-241
  1961  000FC8  1855               	xorwf	??_entry_mode_set^0,w,c
  1962  000FCA  6EDF               	movwf	indf2,c
  1963  000FCC                     
  1964                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1965  000FCC  0E06               	movlw	6
  1966  000FCE  6E55               	movwf	??_entry_mode_set^0,c
  1967  000FD0  0E30               	movlw	48
  1968  000FD2                     u1377:
  1969  000FD2  2EE8               	decfsz	wreg,f,c
  1970  000FD4  D7FE               	bra	u1377
  1971  000FD6  2E55               	decfsz	??_entry_mode_set^0,f,c
  1972  000FD8  D7FC               	bra	u1377
  1973  000FDA  D000               	nop2	
  1974  000FDC                     
  1975                           ;lcd.c: 130:     pulso(lcd);
  1976  000FDC  C051  F04E         	movff	entry_mode_set@lcd,pulso@lcd
  1977  000FE0  C052  F04F         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1978  000FE4  EC17  F009         	call	_pulso	;wreg free
  1979  000FE8  0012               	return		;funcret
  1980  000FEA                     __end_of_entry_mode_set:
  1981                           	opt callstack 0
  1982                           
  1983 ;; *************** function _display_onoff_control *****************
  1984 ;; Defined at:
  1985 ;;		line 47 in file "lcd.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  lcd             2   30[COMRAM] PTR struct .
  1988 ;;		 -> PORTD(1), 
  1989 ;;  display_on      1   32[COMRAM] unsigned char 
  1990 ;;  cursor_on       1   33[COMRAM] unsigned char 
  1991 ;;  blink           1   34[COMRAM] unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         5       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          2       0       0       0       0       0       0
  2006 ;;      Totals:         7       0       0       0       0       0       0
  2007 ;;Total ram usage:        7 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    6
  2010 ;; This function calls:
  2011 ;;		_pulso
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text11
  2018  000ED8                     __ptext11:
  2019                           	opt callstack 0
  2020  000ED8                     _display_onoff_control:
  2021                           	opt callstack 24
  2022  000ED8                     
  2023                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  2024  000ED8  C051  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2025  000EDC  C052  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2026  000EE0  94DF               	bcf	indf2,2,c
  2027                           
  2028                           ;lcd.c: 50:     lcd->RS = 0;
  2029  000EE2  C051  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2030  000EE6  C052  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2031  000EEA  90DF               	bcf	indf2,0,c
  2032                           
  2033                           ;lcd.c: 51:     lcd->R_W = 0;
  2034  000EEC  C051  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2035  000EF0  C052  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2036  000EF4  92DF               	bcf	indf2,1,c
  2037  000EF6                     
  2038                           ;lcd.c: 54:     lcd->data = 0x00;
  2039  000EF6  C051  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2040  000EFA  C052  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2041  000EFE  0E0F               	movlw	-241
  2042  000F00  16DF               	andwf	indf2,f,c
  2043  000F02                     
  2044                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2045  000F02  0E06               	movlw	6
  2046  000F04  6E56               	movwf	??_display_onoff_control^0,c
  2047  000F06  0E30               	movlw	48
  2048  000F08                     u1387:
  2049  000F08  2EE8               	decfsz	wreg,f,c
  2050  000F0A  D7FE               	bra	u1387
  2051  000F0C  2E56               	decfsz	??_display_onoff_control^0,f,c
  2052  000F0E  D7FC               	bra	u1387
  2053  000F10  D000               	nop2	
  2054  000F12                     
  2055                           ;lcd.c: 57:     pulso(lcd);
  2056  000F12  C051  F04E         	movff	display_onoff_control@lcd,pulso@lcd
  2057  000F16  C052  F04F         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2058  000F1A  EC17  F009         	call	_pulso	;wreg free
  2059  000F1E                     
  2060                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  2061  000F1E  90D8               	bcf	status,0,c
  2062  000F20  3454               	rlcf	display_onoff_control@cursor_on^0,w,c
  2063  000F22  6E56               	movwf	??_display_onoff_control^0,c
  2064  000F24  4453               	rlncf	display_onoff_control@display_on^0,w,c
  2065  000F26  46E8               	rlncf	wreg,f,c
  2066  000F28  0BFC               	andlw	252
  2067  000F2A  1056               	iorwf	??_display_onoff_control^0,w,c
  2068  000F2C  1055               	iorwf	display_onoff_control@blink^0,w,c
  2069  000F2E  6E57               	movwf	(??_display_onoff_control+1)^0,c
  2070  000F30  0E08               	movlw	8
  2071  000F32  1257               	iorwf	(??_display_onoff_control+1)^0,f,c
  2072  000F34  C051  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2073  000F38  C052  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2074  000F3C  3A57               	swapf	(??_display_onoff_control+1)^0,f,c
  2075  000F3E  50DF               	movf	indf2,w,c
  2076  000F40  1857               	xorwf	(??_display_onoff_control+1)^0,w,c
  2077  000F42  0B0F               	andlw	-241
  2078  000F44  1857               	xorwf	(??_display_onoff_control+1)^0,w,c
  2079  000F46  6EDF               	movwf	indf2,c
  2080  000F48                     
  2081                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2082  000F48  0E06               	movlw	6
  2083  000F4A  6E56               	movwf	??_display_onoff_control^0,c
  2084  000F4C  0E30               	movlw	48
  2085  000F4E                     u1397:
  2086  000F4E  2EE8               	decfsz	wreg,f,c
  2087  000F50  D7FE               	bra	u1397
  2088  000F52  2E56               	decfsz	??_display_onoff_control^0,f,c
  2089  000F54  D7FC               	bra	u1397
  2090  000F56  D000               	nop2	
  2091  000F58                     
  2092                           ;lcd.c: 64:     pulso(lcd);
  2093  000F58  C051  F04E         	movff	display_onoff_control@lcd,pulso@lcd
  2094  000F5C  C052  F04F         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2095  000F60  EC17  F009         	call	_pulso	;wreg free
  2096  000F64  0012               	return		;funcret
  2097  000F66                     __end_of_display_onoff_control:
  2098                           	opt callstack 0
  2099                           
  2100 ;; *************** function _pulso *****************
  2101 ;; Defined at:
  2102 ;;		line 11 in file "lcd.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  lcd             2   27[COMRAM] PTR struct .
  2105 ;;		 -> PORTD(1), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr2l, fsr2h
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2117 ;;      Params:         2       0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0
  2119 ;;      Temps:          1       0       0       0       0       0       0
  2120 ;;      Totals:         3       0       0       0       0       0       0
  2121 ;;Total ram usage:        3 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    5
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_function_set
  2128 ;;		_display_onoff_control
  2129 ;;		_lcd_cmd
  2130 ;;		_entry_mode_set
  2131 ;;		_clear_display
  2132 ;;		_return_home
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text12
  2137  00122E                     __ptext12:
  2138                           	opt callstack 0
  2139  00122E                     _pulso:
  2140                           	opt callstack 20
  2141  00122E                     
  2142                           ;lcd.c: 13:     lcd->E = 1;
  2143  00122E  C04E  FFD9         	movff	pulso@lcd,fsr2l
  2144  001232  C04F  FFDA         	movff	pulso@lcd+1,fsr2h
  2145  001236  84DF               	bsf	indf2,2,c
  2146  001238                     
  2147                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2148  001238  0E06               	movlw	6
  2149  00123A  6E50               	movwf	??_pulso^0,c
  2150  00123C  0E30               	movlw	48
  2151  00123E                     u1407:
  2152  00123E  2EE8               	decfsz	wreg,f,c
  2153  001240  D7FE               	bra	u1407
  2154  001242  2E50               	decfsz	??_pulso^0,f,c
  2155  001244  D7FC               	bra	u1407
  2156  001246  D000               	nop2	
  2157  001248                     
  2158                           ;lcd.c: 17:     lcd->E = 0;
  2159  001248  C04E  FFD9         	movff	pulso@lcd,fsr2l
  2160  00124C  C04F  FFDA         	movff	pulso@lcd+1,fsr2h
  2161  001250  94DF               	bcf	indf2,2,c
  2162                           
  2163                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2164  001252  0E06               	movlw	6
  2165  001254  6E50               	movwf	??_pulso^0,c
  2166  001256  0E30               	movlw	48
  2167  001258                     u1417:
  2168  001258  2EE8               	decfsz	wreg,f,c
  2169  00125A  D7FE               	bra	u1417
  2170  00125C  2E50               	decfsz	??_pulso^0,f,c
  2171  00125E  D7FC               	bra	u1417
  2172  001260  D000               	nop2	
  2173  001262  0012               	return		;funcret
  2174  001264                     __end_of_pulso:
  2175                           	opt callstack 0
  2176                           
  2177 ;; *************** function _int_handler *****************
  2178 ;; Defined at:
  2179 ;;		line 24 in file "main.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2193 ;;      Params:         0       0       0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0       0       0
  2196 ;;      Totals:         2       0       0       0       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    4
  2200 ;; This function calls:
  2201 ;;		_le_entrada
  2202 ;;		i2_print_mat
  2203 ;; This function is called by:
  2204 ;;		Interrupt level 2
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	intcode
  2209  000008                     __pintcode:
  2210                           	opt callstack 0
  2211  000008                     _int_handler:
  2212                           	opt callstack 20
  2213                           
  2214                           ;incstack = 0
  2215  000008  8264               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2216  00000A  EDFA  F008         	call	int_func,f	;refresh shadow registers
  2217                           
  2218                           	psect	intcode_body
  2219  0011F4                     __pintcode_body:
  2220                           	opt callstack 20
  2221  0011F4                     int_func:
  2222                           	opt callstack 20
  2223  0011F4  0006               	pop		; remove dummy address from shadow register refresh
  2224  0011F6  CFD9 F04C          	movff	fsr2l,??_int_handler
  2225  0011FA  CFDA F04D          	movff	fsr2h,??_int_handler+1
  2226  0011FE                     
  2227                           ;main.c: 26:      if(INTCONbits.TMR0IF == 1){
  2228  0011FE  A4F2               	btfss	242,2,c	;volatile
  2229  001200  EF04  F009         	goto	i2u88_41
  2230  001204  EF06  F009         	goto	i2u88_40
  2231  001208                     i2u88_41:
  2232  001208  EF11  F009         	goto	i2l42
  2233  00120C                     i2u88_40:
  2234  00120C                     
  2235                           ;main.c: 27:         TMR0L = 0x63;
  2236  00120C  0E63               	movlw	99
  2237  00120E  6ED6               	movwf	214,c	;volatile
  2238  001210                     
  2239                           ;main.c: 28:         le_entrada();
  2240  001210  EC3B  F003         	call	_le_entrada	;wreg free
  2241  001214                     
  2242                           ;main.c: 29:         print_mat(lcd);
  2243  001214  C031  F042         	movff	_lcd,i2print_mat@lcd
  2244  001218  C032  F043         	movff	_lcd+1,i2print_mat@lcd+1
  2245  00121C  EC57  F006         	call	i2_print_mat	;wreg free
  2246  001220                     
  2247                           ;main.c: 30:         INTCONbits.TMR0IF = 0;
  2248  001220  94F2               	bcf	242,2,c	;volatile
  2249  001222                     i2l42:
  2250  001222  C04D  FFDA         	movff	??_int_handler+1,fsr2h
  2251  001226  C04C  FFD9         	movff	??_int_handler,fsr2l
  2252  00122A  9264               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2253  00122C  0011               	retfie		f
  2254  00122E                     __end_of_int_handler:
  2255                           	opt callstack 0
  2256                           
  2257 ;; *************** function i2_print_mat *****************
  2258 ;; Defined at:
  2259 ;;		line 199 in file "lcd.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  lcd             2   15[COMRAM] PTR struct .
  2262 ;;		 -> PORTD(1), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  print_mat       2   23[COMRAM] int 
  2265 ;;  print_mat       2   21[COMRAM] int 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         2       0       0       0       0       0       0
  2276 ;;      Locals:         4       0       0       0       0       0       0
  2277 ;;      Temps:          4       0       0       0       0       0       0
  2278 ;;      Totals:        10       0       0       0       0       0       0
  2279 ;;Total ram usage:       10 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    3
  2282 ;; This function calls:
  2283 ;;		i2_goto_XY
  2284 ;;		i2_write_char
  2285 ;; This function is called by:
  2286 ;;		_int_handler
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text14
  2291  000CAE                     __ptext14:
  2292                           	opt callstack 0
  2293  000CAE                     i2_print_mat:
  2294                           	opt callstack 20
  2295  000CAE                     
  2296                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  2297  000CAE  0E00               	movlw	0
  2298  000CB0  6E4B               	movwf	(i2print_mat@i+1)^0,c
  2299  000CB2  0E00               	movlw	0
  2300  000CB4  6E4A               	movwf	i2print_mat@i^0,c
  2301  000CB6                     i2l1814:
  2302  000CB6  BE4B               	btfsc	(i2print_mat@i+1)^0,7,c
  2303  000CB8  EF67  F006         	goto	i2u86_41
  2304  000CBC  504B               	movf	(i2print_mat@i+1)^0,w,c
  2305  000CBE  E109               	bnz	i2u86_40
  2306  000CC0  0E04               	movlw	4
  2307  000CC2  5C4A               	subwf	i2print_mat@i^0,w,c
  2308  000CC4  A0D8               	btfss	status,0,c
  2309  000CC6  EF67  F006         	goto	i2u86_41
  2310  000CCA  EF69  F006         	goto	i2u86_40
  2311  000CCE                     i2u86_41:
  2312  000CCE  EF6B  F006         	goto	i2l1818
  2313  000CD2                     i2u86_40:
  2314  000CD2  EFB4  F006         	goto	i2l96
  2315  000CD6                     i2l1818:
  2316                           
  2317                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  2318  000CD6  C042  F03A         	movff	i2print_mat@lcd,i2goto_XY@lcd
  2319  000CDA  C043  F03B         	movff	i2print_mat@lcd+1,i2goto_XY@lcd+1
  2320  000CDE  284A               	incf	i2print_mat@i^0,w,c
  2321  000CE0  6E3C               	movwf	i2goto_XY@x^0,c
  2322  000CE2  0E01               	movlw	1
  2323  000CE4  6E3D               	movwf	i2goto_XY@y^0,c
  2324  000CE6  ECB5  F006         	call	i2_goto_XY	;wreg free
  2325  000CEA                     
  2326                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  2327  000CEA  0E00               	movlw	0
  2328  000CEC  6E49               	movwf	(i2print_mat@j+1)^0,c
  2329  000CEE  0E00               	movlw	0
  2330  000CF0  6E48               	movwf	i2print_mat@j^0,c
  2331  000CF2                     i2l1822:
  2332  000CF2  BE49               	btfsc	(i2print_mat@j+1)^0,7,c
  2333  000CF4  EF85  F006         	goto	i2u87_41
  2334  000CF8  5049               	movf	(i2print_mat@j+1)^0,w,c
  2335  000CFA  E109               	bnz	i2u87_40
  2336  000CFC  0E10               	movlw	16
  2337  000CFE  5C48               	subwf	i2print_mat@j^0,w,c
  2338  000D00  A0D8               	btfss	status,0,c
  2339  000D02  EF85  F006         	goto	i2u87_41
  2340  000D06  EF87  F006         	goto	i2u87_40
  2341  000D0A                     i2u87_41:
  2342  000D0A  EF89  F006         	goto	i2l1826
  2343  000D0E                     i2u87_40:
  2344  000D0E  EFB0  F006         	goto	i2l1832
  2345  000D12                     i2l1826:
  2346                           
  2347                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  2348  000D12  C042  F033         	movff	i2print_mat@lcd,i2write_char@lcd
  2349  000D16  C043  F034         	movff	i2print_mat@lcd+1,i2write_char@lcd+1
  2350  000D1A  C04A  F044         	movff	i2print_mat@i,??i2_print_mat
  2351  000D1E  C04B  F045         	movff	i2print_mat@i+1,??i2_print_mat+1
  2352  000D22  3A44               	swapf	??i2_print_mat^0,f,c
  2353  000D24  3A45               	swapf	(??i2_print_mat+1)^0,f,c
  2354  000D26  0EF0               	movlw	240
  2355  000D28  1645               	andwf	(??i2_print_mat+1)^0,f,c
  2356  000D2A  5044               	movf	??i2_print_mat^0,w,c
  2357  000D2C  0B0F               	andlw	15
  2358  000D2E  1245               	iorwf	(??i2_print_mat+1)^0,f,c
  2359  000D30  0EF0               	movlw	240
  2360  000D32  1644               	andwf	??i2_print_mat^0,f,c
  2361  000D34  0E80               	movlw	low _mat_disp
  2362  000D36  6E46               	movwf	(??i2_print_mat+2)^0,c
  2363  000D38  0E00               	movlw	high _mat_disp
  2364  000D3A  6E47               	movwf	(??i2_print_mat+3)^0,c
  2365  000D3C  5044               	movf	??i2_print_mat^0,w,c
  2366  000D3E  2646               	addwf	(??i2_print_mat+2)^0,f,c
  2367  000D40  5045               	movf	(??i2_print_mat+1)^0,w,c
  2368  000D42  2247               	addwfc	(??i2_print_mat+3)^0,f,c
  2369  000D44  5048               	movf	i2print_mat@j^0,w,c
  2370  000D46  2446               	addwf	(??i2_print_mat+2)^0,w,c
  2371  000D48  6ED9               	movwf	fsr2l,c
  2372  000D4A  5049               	movf	(i2print_mat@j+1)^0,w,c
  2373  000D4C  2047               	addwfc	(??i2_print_mat+3)^0,w,c
  2374  000D4E  6EDA               	movwf	fsr2h,c
  2375  000D50  50DF               	movf	indf2,w,c
  2376  000D52  6E35               	movwf	i2write_char@c^0,c
  2377  000D54  EC18  F005         	call	i2_write_char	;wreg free
  2378  000D58  4A48               	infsnz	i2print_mat@j^0,f,c
  2379  000D5A  2A49               	incf	(i2print_mat@j+1)^0,f,c
  2380  000D5C  EF79  F006         	goto	i2l1822
  2381  000D60                     i2l1832:
  2382                           
  2383                           ;lcd.c: 204:     }
  2384  000D60  4A4A               	infsnz	i2print_mat@i^0,f,c
  2385  000D62  2A4B               	incf	(i2print_mat@i+1)^0,f,c
  2386  000D64  EF5B  F006         	goto	i2l1814
  2387  000D68                     i2l96:
  2388  000D68  0012               	return		;funcret
  2389  000D6A                     __end_ofi2_print_mat:
  2390                           	opt callstack 0
  2391                           
  2392 ;; *************** function i2_write_char *****************
  2393 ;; Defined at:
  2394 ;;		line 133 in file "lcd.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  lcd             2    0[COMRAM] PTR struct .
  2397 ;;		 -> PORTD(1), 
  2398 ;;  c               1    2[COMRAM] unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2410 ;;      Params:         3       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0
  2412 ;;      Temps:          1       0       0       0       0       0       0
  2413 ;;      Totals:         4       0       0       0       0       0       0
  2414 ;;Total ram usage:        4 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		i2_print_mat
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text15
  2424  000A30                     __ptext15:
  2425                           	opt callstack 0
  2426  000A30                     i2_write_char:
  2427                           	opt callstack 22
  2428  000A30                     
  2429                           ;lcd.c: 134:     lcd->E = 0;
  2430  000A30  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2431  000A34  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2432  000A38  94DF               	bcf	indf2,2,c
  2433                           
  2434                           ;lcd.c: 135:     lcd->RS = 1;
  2435  000A3A  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2436  000A3E  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2437  000A42  80DF               	bsf	indf2,0,c
  2438                           
  2439                           ;lcd.c: 136:     lcd->R_W = 0;
  2440  000A44  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2441  000A48  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2442  000A4C  92DF               	bcf	indf2,1,c
  2443  000A4E                     
  2444                           ;lcd.c: 139:     lcd->data = (c>>4);
  2445  000A4E  C035  F036         	movff	i2write_char@c,??i2_write_char
  2446  000A52  3A36               	swapf	??i2_write_char^0,f,c
  2447  000A54  0E0F               	movlw	15
  2448  000A56  1636               	andwf	??i2_write_char^0,f,c
  2449  000A58  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2450  000A5C  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2451  000A60  3A36               	swapf	??i2_write_char^0,f,c
  2452  000A62  50DF               	movf	indf2,w,c
  2453  000A64  1836               	xorwf	??i2_write_char^0,w,c
  2454  000A66  0B0F               	andlw	-241
  2455  000A68  1836               	xorwf	??i2_write_char^0,w,c
  2456  000A6A  6EDF               	movwf	indf2,c
  2457  000A6C                     
  2458                           ;lcd.c: 140:     lcd->E = 1;
  2459  000A6C  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2460  000A70  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2461  000A74  84DF               	bsf	indf2,2,c
  2462  000A76                     
  2463                           ;lcd.c: 141:     lcd->E = 0;
  2464  000A76  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2465  000A7A  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2466  000A7E  94DF               	bcf	indf2,2,c
  2467  000A80                     
  2468                           ;lcd.c: 144:     lcd->data = (c);
  2469  000A80  C035  F036         	movff	i2write_char@c,??i2_write_char
  2470  000A84  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2471  000A88  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2472  000A8C  3A36               	swapf	??i2_write_char^0,f,c
  2473  000A8E  50DF               	movf	indf2,w,c
  2474  000A90  1836               	xorwf	??i2_write_char^0,w,c
  2475  000A92  0B0F               	andlw	-241
  2476  000A94  1836               	xorwf	??i2_write_char^0,w,c
  2477  000A96  6EDF               	movwf	indf2,c
  2478                           
  2479                           ;lcd.c: 145:     lcd->E = 1;
  2480  000A98  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2481  000A9C  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2482  000AA0  84DF               	bsf	indf2,2,c
  2483                           
  2484                           ;lcd.c: 146:     lcd->E = 0;
  2485  000AA2  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2486  000AA6  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2487  000AAA  94DF               	bcf	indf2,2,c
  2488  000AAC                     
  2489                           ;lcd.c: 149:     TRISD = 0xF0;
  2490  000AAC  0EF0               	movlw	240
  2491  000AAE  6E95               	movwf	149,c	;volatile
  2492  000AB0                     
  2493                           ;lcd.c: 150:     lcd->RS = 0;
  2494  000AB0  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2495  000AB4  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2496  000AB8  90DF               	bcf	indf2,0,c
  2497  000ABA                     
  2498                           ;lcd.c: 151:     lcd->R_W = 1;
  2499  000ABA  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2500  000ABE  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2501  000AC2  82DF               	bsf	indf2,1,c
  2502  000AC4                     i2l1730:
  2503                           
  2504                           ;lcd.c: 153:        lcd->E = 1;
  2505  000AC4  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2506  000AC8  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2507  000ACC  84DF               	bsf	indf2,2,c
  2508  000ACE                     
  2509                           ;lcd.c: 154:        lcd->E = 0;
  2510  000ACE  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2511  000AD2  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2512  000AD6  94DF               	bcf	indf2,2,c
  2513  000AD8                     
  2514                           ;lcd.c: 155:        lcd->E = 1;
  2515  000AD8  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2516  000ADC  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2517  000AE0  84DF               	bsf	indf2,2,c
  2518  000AE2                     
  2519                           ;lcd.c: 156:        lcd->E = 0;
  2520  000AE2  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2521  000AE6  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2522  000AEA  94DF               	bcf	indf2,2,c
  2523  000AEC                     
  2524                           ;lcd.c: 157:     } while(lcd->data&0x08);
  2525  000AEC  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2526  000AF0  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2527  000AF4  38DF               	swapf	indf2,w,c
  2528  000AF6  0B0F               	andlw	15
  2529  000AF8  6E36               	movwf	??i2_write_char^0,c
  2530  000AFA  B636               	btfsc	??i2_write_char^0,3,c
  2531  000AFC  EF82  F005         	goto	i2u84_41
  2532  000B00  EF84  F005         	goto	i2u84_40
  2533  000B04                     i2u84_41:
  2534  000B04  EF62  F005         	goto	i2l1730
  2535  000B08                     i2u84_40:
  2536  000B08                     
  2537                           ;lcd.c: 158:     lcd->R_W = 0;
  2538  000B08  C033  FFD9         	movff	i2write_char@lcd,fsr2l
  2539  000B0C  C034  FFDA         	movff	i2write_char@lcd+1,fsr2h
  2540  000B10  92DF               	bcf	indf2,1,c
  2541  000B12                     
  2542                           ;lcd.c: 159:     TRISD = 0x00;
  2543  000B12  0E00               	movlw	0
  2544  000B14  6E95               	movwf	149,c	;volatile
  2545  000B16  0012               	return		;funcret
  2546  000B18                     __end_ofi2_write_char:
  2547                           	opt callstack 0
  2548                           
  2549 ;; *************** function i2_goto_XY *****************
  2550 ;; Defined at:
  2551 ;;		line 76 in file "lcd.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  lcd             2    7[COMRAM] PTR struct .
  2554 ;;		 -> PORTD(1), 
  2555 ;;  x               1    9[COMRAM] unsigned char 
  2556 ;;  y               1   10[COMRAM] unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  goto_XY         1   14[COMRAM] unsigned char 
  2559 ;;  goto_XY         1   13[COMRAM] unsigned char 
  2560 ;;  goto_XY         1   12[COMRAM] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2570 ;;      Params:         4       0       0       0       0       0       0
  2571 ;;      Locals:         3       0       0       0       0       0       0
  2572 ;;      Temps:          1       0       0       0       0       0       0
  2573 ;;      Totals:         8       0       0       0       0       0       0
  2574 ;;Total ram usage:        8 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    2
  2577 ;; This function calls:
  2578 ;;		i2_lcd_cmd
  2579 ;; This function is called by:
  2580 ;;		i2_print_mat
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text16
  2585  000D6A                     __ptext16:
  2586                           	opt callstack 0
  2587  000D6A                     i2_goto_XY:
  2588                           	opt callstack 20
  2589  000D6A                     
  2590                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  2591  000D6A  043C               	decf	i2goto_XY@x^0,w,c
  2592  000D6C  A4D8               	btfss	status,2,c
  2593  000D6E  EFBB  F006         	goto	i2u80_41
  2594  000D72  EFBD  F006         	goto	i2u80_40
  2595  000D76                     i2u80_41:
  2596  000D76  EFDF  F006         	goto	i2l1678
  2597  000D7A                     i2u80_40:
  2598  000D7A                     
  2599                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  2600  000D7A  503D               	movf	i2goto_XY@y^0,w,c
  2601  000D7C  0F7F               	addlw	127
  2602  000D7E  6E41               	movwf	i2goto_XY@temp^0,c
  2603                           
  2604                           ;lcd.c: 81:        z = temp>>4;
  2605  000D80  3841               	swapf	i2goto_XY@temp^0,w,c
  2606  000D82  0B0F               	andlw	15
  2607  000D84  6E3F               	movwf	i2goto_XY@z^0,c
  2608  000D86                     i2l1670:
  2609                           
  2610                           ;lcd.c: 82:        a = temp;
  2611  000D86  C041  F040         	movff	i2goto_XY@temp,i2goto_XY@a
  2612  000D8A                     
  2613                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  2614  000D8A  C03A  F036         	movff	i2goto_XY@lcd,i2lcd_cmd@lcd
  2615  000D8E  C03B  F037         	movff	i2goto_XY@lcd+1,i2lcd_cmd@lcd+1
  2616  000D92  C03F  F038         	movff	i2goto_XY@z,i2lcd_cmd@a
  2617  000D96  ECDA  F008         	call	i2_lcd_cmd	;wreg free
  2618  000D9A                     
  2619                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  2620  000D9A  0E06               	movlw	6
  2621  000D9C  6E3E               	movwf	??i2_goto_XY^0,c
  2622  000D9E  0E30               	movlw	48
  2623  000DA0                     i2u142_47:
  2624  000DA0  2EE8               	decfsz	wreg,f,c
  2625  000DA2  D7FE               	bra	i2u142_47
  2626  000DA4  2E3E               	decfsz	??i2_goto_XY^0,f,c
  2627  000DA6  D7FC               	bra	i2u142_47
  2628  000DA8  D000               	nop2	
  2629  000DAA                     
  2630                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  2631  000DAA  C03A  F036         	movff	i2goto_XY@lcd,i2lcd_cmd@lcd
  2632  000DAE  C03B  F037         	movff	i2goto_XY@lcd+1,i2lcd_cmd@lcd+1
  2633  000DB2  C040  F038         	movff	i2goto_XY@a,i2lcd_cmd@a
  2634  000DB6  ECDA  F008         	call	i2_lcd_cmd	;wreg free
  2635                           
  2636                           ;lcd.c: 86:     }
  2637  000DBA  EF12  F007         	goto	i2l75
  2638  000DBE                     i2l1678:
  2639  000DBE  0E02               	movlw	2
  2640  000DC0  183C               	xorwf	i2goto_XY@x^0,w,c
  2641  000DC2  A4D8               	btfss	status,2,c
  2642  000DC4  EFE6  F006         	goto	i2u81_41
  2643  000DC8  EFE8  F006         	goto	i2u81_40
  2644  000DCC                     i2u81_41:
  2645  000DCC  EFF0  F006         	goto	i2l1690
  2646  000DD0                     i2u81_40:
  2647  000DD0                     
  2648                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  2649  000DD0  503D               	movf	i2goto_XY@y^0,w,c
  2650  000DD2  0FBF               	addlw	191
  2651  000DD4  6E41               	movwf	i2goto_XY@temp^0,c
  2652                           
  2653                           ;lcd.c: 90:        z = temp>>4;
  2654  000DD6  3841               	swapf	i2goto_XY@temp^0,w,c
  2655  000DD8  0B0F               	andlw	15
  2656  000DDA  6E3F               	movwf	i2goto_XY@z^0,c
  2657  000DDC  EFC3  F006         	goto	i2l1670
  2658  000DE0                     i2l1690:
  2659  000DE0  0E03               	movlw	3
  2660  000DE2  183C               	xorwf	i2goto_XY@x^0,w,c
  2661  000DE4  A4D8               	btfss	status,2,c
  2662  000DE6  EFF7  F006         	goto	i2u82_41
  2663  000DEA  EFF9  F006         	goto	i2u82_40
  2664  000DEE                     i2u82_41:
  2665  000DEE  EF01  F007         	goto	i2l1702
  2666  000DF2                     i2u82_40:
  2667  000DF2                     
  2668                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  2669  000DF2  503D               	movf	i2goto_XY@y^0,w,c
  2670  000DF4  0F8F               	addlw	143
  2671  000DF6  6E41               	movwf	i2goto_XY@temp^0,c
  2672                           
  2673                           ;lcd.c: 99:        z = temp>>4;
  2674  000DF8  3841               	swapf	i2goto_XY@temp^0,w,c
  2675  000DFA  0B0F               	andlw	15
  2676  000DFC  6E3F               	movwf	i2goto_XY@z^0,c
  2677  000DFE  EFC3  F006         	goto	i2l1670
  2678  000E02                     i2l1702:
  2679  000E02  0E04               	movlw	4
  2680  000E04  183C               	xorwf	i2goto_XY@x^0,w,c
  2681  000E06  A4D8               	btfss	status,2,c
  2682  000E08  EF08  F007         	goto	i2u83_41
  2683  000E0C  EF0A  F007         	goto	i2u83_40
  2684  000E10                     i2u83_41:
  2685  000E10  EF12  F007         	goto	i2l71
  2686  000E14                     i2u83_40:
  2687  000E14                     
  2688                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  2689  000E14  503D               	movf	i2goto_XY@y^0,w,c
  2690  000E16  0FCF               	addlw	207
  2691  000E18  6E41               	movwf	i2goto_XY@temp^0,c
  2692                           
  2693                           ;lcd.c: 108:        z = temp>>4;
  2694  000E1A  3841               	swapf	i2goto_XY@temp^0,w,c
  2695  000E1C  0B0F               	andlw	15
  2696  000E1E  6E3F               	movwf	i2goto_XY@z^0,c
  2697  000E20  EFC3  F006         	goto	i2l1670
  2698  000E24                     i2l71:
  2699  000E24                     i2l75:
  2700  000E24  0012               	return		;funcret
  2701  000E26                     __end_ofi2_goto_XY:
  2702                           	opt callstack 0
  2703                           
  2704 ;; *************** function i2_lcd_cmd *****************
  2705 ;; Defined at:
  2706 ;;		line 67 in file "lcd.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  lcd             2    3[COMRAM] PTR struct .
  2709 ;;		 -> PORTD(1), 
  2710 ;;  a               1    5[COMRAM] unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         3       0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0
  2724 ;;      Temps:          1       0       0       0       0       0       0
  2725 ;;      Totals:         4       0       0       0       0       0       0
  2726 ;;Total ram usage:        4 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    1
  2729 ;; This function calls:
  2730 ;;		i2_pulso
  2731 ;; This function is called by:
  2732 ;;		i2_goto_XY
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text17
  2737  0011B4                     __ptext17:
  2738                           	opt callstack 0
  2739  0011B4                     i2_lcd_cmd:
  2740                           	opt callstack 20
  2741  0011B4                     
  2742                           ;lcd.c: 68:     lcd->RS = 0;
  2743  0011B4  C036  FFD9         	movff	i2lcd_cmd@lcd,fsr2l
  2744  0011B8  C037  FFDA         	movff	i2lcd_cmd@lcd+1,fsr2h
  2745  0011BC  90DF               	bcf	indf2,0,c
  2746  0011BE                     
  2747                           ;lcd.c: 69:     lcd->data = (a);
  2748  0011BE  C038  F039         	movff	i2lcd_cmd@a,??i2_lcd_cmd
  2749  0011C2  C036  FFD9         	movff	i2lcd_cmd@lcd,fsr2l
  2750  0011C6  C037  FFDA         	movff	i2lcd_cmd@lcd+1,fsr2h
  2751  0011CA  3A39               	swapf	??i2_lcd_cmd^0,f,c
  2752  0011CC  50DF               	movf	indf2,w,c
  2753  0011CE  1839               	xorwf	??i2_lcd_cmd^0,w,c
  2754  0011D0  0B0F               	andlw	-241
  2755  0011D2  1839               	xorwf	??i2_lcd_cmd^0,w,c
  2756  0011D4  6EDF               	movwf	indf2,c
  2757  0011D6                     
  2758                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2759  0011D6  0E06               	movlw	6
  2760  0011D8  6E39               	movwf	??i2_lcd_cmd^0,c
  2761  0011DA  0E30               	movlw	48
  2762  0011DC                     i2u143_47:
  2763  0011DC  2EE8               	decfsz	wreg,f,c
  2764  0011DE  D7FE               	bra	i2u143_47
  2765  0011E0  2E39               	decfsz	??i2_lcd_cmd^0,f,c
  2766  0011E2  D7FC               	bra	i2u143_47
  2767  0011E4  D000               	nop2	
  2768  0011E6                     
  2769                           ;lcd.c: 72:     pulso(lcd);
  2770  0011E6  C036  F033         	movff	i2lcd_cmd@lcd,i2pulso@lcd
  2771  0011EA  C037  F034         	movff	i2lcd_cmd@lcd+1,i2pulso@lcd+1
  2772  0011EE  EC32  F009         	call	i2_pulso	;wreg free
  2773  0011F2  0012               	return		;funcret
  2774  0011F4                     __end_ofi2_lcd_cmd:
  2775                           	opt callstack 0
  2776                           
  2777 ;; *************** function i2_pulso *****************
  2778 ;; Defined at:
  2779 ;;		line 11 in file "lcd.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  lcd             2    0[COMRAM] PTR struct .
  2782 ;;		 -> PORTD(1), 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr2l, fsr2h
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2794 ;;      Params:         2       0       0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0       0       0
  2797 ;;      Totals:         3       0       0       0       0       0       0
  2798 ;;Total ram usage:        3 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		i2_lcd_cmd
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text18
  2808  001264                     __ptext18:
  2809                           	opt callstack 0
  2810  001264                     i2_pulso:
  2811                           	opt callstack 20
  2812  001264                     
  2813                           ;lcd.c: 13:     lcd->E = 1;
  2814  001264  C033  FFD9         	movff	i2pulso@lcd,fsr2l
  2815  001268  C034  FFDA         	movff	i2pulso@lcd+1,fsr2h
  2816  00126C  84DF               	bsf	indf2,2,c
  2817  00126E                     
  2818                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2819  00126E  0E06               	movlw	6
  2820  001270  6E35               	movwf	??i2_pulso^0,c
  2821  001272  0E30               	movlw	48
  2822  001274                     i2u144_47:
  2823  001274  2EE8               	decfsz	wreg,f,c
  2824  001276  D7FE               	bra	i2u144_47
  2825  001278  2E35               	decfsz	??i2_pulso^0,f,c
  2826  00127A  D7FC               	bra	i2u144_47
  2827  00127C  D000               	nop2	
  2828  00127E                     
  2829                           ;lcd.c: 17:     lcd->E = 0;
  2830  00127E  C033  FFD9         	movff	i2pulso@lcd,fsr2l
  2831  001282  C034  FFDA         	movff	i2pulso@lcd+1,fsr2h
  2832  001286  94DF               	bcf	indf2,2,c
  2833                           
  2834                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2835  001288  0E06               	movlw	6
  2836  00128A  6E35               	movwf	??i2_pulso^0,c
  2837  00128C  0E30               	movlw	48
  2838  00128E                     i2u145_47:
  2839  00128E  2EE8               	decfsz	wreg,f,c
  2840  001290  D7FE               	bra	i2u145_47
  2841  001292  2E35               	decfsz	??i2_pulso^0,f,c
  2842  001294  D7FC               	bra	i2u145_47
  2843  001296  D000               	nop2	
  2844  001298  0012               	return		;funcret
  2845  00129A                     __end_ofi2_pulso:
  2846                           	opt callstack 0
  2847                           
  2848 ;; *************** function _le_entrada *****************
  2849 ;; Defined at:
  2850 ;;		line 12 in file "keyboard.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2864 ;;      Params:         0       0       0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_int_handler
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text19
  2878  000676                     __ptext19:
  2879                           	opt callstack 0
  2880  000676                     _le_entrada:
  2881                           	opt callstack 23
  2882  000676                     
  2883                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  2884  000676  8E81               	bsf	129,7,c	;volatile
  2885                           
  2886                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB1==1) || cont_u > 50){
  2887  000678  B062               	btfsc	_botoes_ant^0,0,c
  2888  00067A  EF41  F003         	goto	i2u20_41
  2889  00067E  EF43  F003         	goto	i2u20_40
  2890  000682                     i2u20_41:
  2891  000682  EF4A  F003         	goto	i2l1172
  2892  000686                     i2u20_40:
  2893  000686  B281               	btfsc	129,1,c	;volatile
  2894  000688  EF48  F003         	goto	i2u21_41
  2895  00068C  EF4A  F003         	goto	i2u21_40
  2896  000690                     i2u21_41:
  2897  000690  EF52  F003         	goto	i2l115
  2898  000694                     i2u21_40:
  2899  000694                     i2l1172:
  2900  000694  0E32               	movlw	50
  2901  000696  6461               	cpfsgt	_cont_u^0,c
  2902  000698  EF50  F003         	goto	i2u22_41
  2903  00069C  EF52  F003         	goto	i2u22_40
  2904  0006A0                     i2u22_41:
  2905  0006A0  EF58  F003         	goto	i2l113
  2906  0006A4                     i2u22_40:
  2907  0006A4                     i2l115:
  2908                           
  2909                           ;keyboard.c: 15:         botoes.U = 1;
  2910  0006A4  8063               	bsf	_botoes^0,0,c
  2911                           
  2912                           ;keyboard.c: 16:         botoes_ant.U = 1;
  2913  0006A6  8062               	bsf	_botoes_ant^0,0,c
  2914  0006A8                     i2l1174:
  2915                           
  2916                           ;keyboard.c: 17:         cont_u = 0;
  2917  0006A8  0E00               	movlw	0
  2918  0006AA  6E61               	movwf	_cont_u^0,c
  2919                           
  2920                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB1==0){
  2921  0006AC  EF72  F003         	goto	i2l1184
  2922  0006B0                     i2l113:
  2923  0006B0  A062               	btfss	_botoes_ant^0,0,c
  2924  0006B2  EF5D  F003         	goto	i2u23_41
  2925  0006B6  EF5F  F003         	goto	i2u23_40
  2926  0006BA                     i2u23_41:
  2927  0006BA  EF6A  F003         	goto	i2l119
  2928  0006BE                     i2u23_40:
  2929  0006BE  B281               	btfsc	129,1,c	;volatile
  2930  0006C0  EF64  F003         	goto	i2u24_41
  2931  0006C4  EF66  F003         	goto	i2u24_40
  2932  0006C8                     i2u24_41:
  2933  0006C8  EF6A  F003         	goto	i2l119
  2934  0006CC                     i2u24_40:
  2935  0006CC                     
  2936                           ;keyboard.c: 19:         botoes.U = 0;
  2937  0006CC  9063               	bcf	_botoes^0,0,c
  2938                           
  2939                           ;keyboard.c: 20:         botoes_ant.U = 0;
  2940  0006CE  9062               	bcf	_botoes_ant^0,0,c
  2941  0006D0  EF54  F003         	goto	i2l1174
  2942  0006D4                     i2l119:
  2943  0006D4  A281               	btfss	129,1,c	;volatile
  2944  0006D6  EF6F  F003         	goto	i2u25_41
  2945  0006DA  EF71  F003         	goto	i2u25_40
  2946  0006DE                     i2u25_41:
  2947  0006DE  EF72  F003         	goto	i2l1184
  2948  0006E2                     i2u25_40:
  2949  0006E2  2A61               	incf	_cont_u^0,f,c
  2950  0006E4                     i2l1184:
  2951                           
  2952                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  2953  0006E4  9E81               	bcf	129,7,c	;volatile
  2954  0006E6                     
  2955                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  2956  0006E6  8C81               	bsf	129,6,c	;volatile
  2957  0006E8                     
  2958                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB0==1) || cont_l > 50){
  2959  0006E8  B462               	btfsc	_botoes_ant^0,2,c
  2960  0006EA  EF79  F003         	goto	i2u26_41
  2961  0006EE  EF7B  F003         	goto	i2u26_40
  2962  0006F2                     i2u26_41:
  2963  0006F2  EF82  F003         	goto	i2l1192
  2964  0006F6                     i2u26_40:
  2965  0006F6  B081               	btfsc	129,0,c	;volatile
  2966  0006F8  EF80  F003         	goto	i2u27_41
  2967  0006FC  EF82  F003         	goto	i2u27_40
  2968  000700                     i2u27_41:
  2969  000700  EF8A  F003         	goto	i2l124
  2970  000704                     i2u27_40:
  2971  000704                     i2l1192:
  2972  000704  0E32               	movlw	50
  2973  000706  645F               	cpfsgt	_cont_l^0,c
  2974  000708  EF88  F003         	goto	i2u28_41
  2975  00070C  EF8A  F003         	goto	i2u28_40
  2976  000710                     i2u28_41:
  2977  000710  EF90  F003         	goto	i2l122
  2978  000714                     i2u28_40:
  2979  000714                     i2l124:
  2980                           
  2981                           ;keyboard.c: 27:         botoes.L = 1;
  2982  000714  8463               	bsf	_botoes^0,2,c
  2983                           
  2984                           ;keyboard.c: 28:         botoes_ant.L = 1;
  2985  000716  8462               	bsf	_botoes_ant^0,2,c
  2986  000718                     i2l1194:
  2987                           
  2988                           ;keyboard.c: 29:         cont_l = 0;
  2989  000718  0E00               	movlw	0
  2990  00071A  6E5F               	movwf	_cont_l^0,c
  2991                           
  2992                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB0==0){
  2993  00071C  EFAA  F003         	goto	i2l1204
  2994  000720                     i2l122:
  2995  000720  A462               	btfss	_botoes_ant^0,2,c
  2996  000722  EF95  F003         	goto	i2u29_41
  2997  000726  EF97  F003         	goto	i2u29_40
  2998  00072A                     i2u29_41:
  2999  00072A  EFA2  F003         	goto	i2l128
  3000  00072E                     i2u29_40:
  3001  00072E  B081               	btfsc	129,0,c	;volatile
  3002  000730  EF9C  F003         	goto	i2u30_41
  3003  000734  EF9E  F003         	goto	i2u30_40
  3004  000738                     i2u30_41:
  3005  000738  EFA2  F003         	goto	i2l128
  3006  00073C                     i2u30_40:
  3007  00073C                     
  3008                           ;keyboard.c: 31:         botoes.L = 0;
  3009  00073C  9463               	bcf	_botoes^0,2,c
  3010                           
  3011                           ;keyboard.c: 32:         botoes_ant.L = 0;
  3012  00073E  9462               	bcf	_botoes_ant^0,2,c
  3013  000740  EF8C  F003         	goto	i2l1194
  3014  000744                     i2l128:
  3015  000744  A281               	btfss	129,1,c	;volatile
  3016  000746  EFA7  F003         	goto	i2u31_41
  3017  00074A  EFA9  F003         	goto	i2u31_40
  3018  00074E                     i2u31_41:
  3019  00074E  EFAA  F003         	goto	i2l1204
  3020  000752                     i2u31_40:
  3021  000752  2A5F               	incf	_cont_l^0,f,c
  3022  000754                     i2l1204:
  3023                           
  3024                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB2==1) || cont_r > 50){
  3025  000754  B662               	btfsc	_botoes_ant^0,3,c
  3026  000756  EFAF  F003         	goto	i2u32_41
  3027  00075A  EFB1  F003         	goto	i2u32_40
  3028  00075E                     i2u32_41:
  3029  00075E  EFB8  F003         	goto	i2l1208
  3030  000762                     i2u32_40:
  3031  000762  B481               	btfsc	129,2,c	;volatile
  3032  000764  EFB6  F003         	goto	i2u33_41
  3033  000768  EFB8  F003         	goto	i2u33_40
  3034  00076C                     i2u33_41:
  3035  00076C  EFC0  F003         	goto	i2l133
  3036  000770                     i2u33_40:
  3037  000770                     i2l1208:
  3038  000770  0E32               	movlw	50
  3039  000772  645E               	cpfsgt	_cont_r^0,c
  3040  000774  EFBE  F003         	goto	i2u34_41
  3041  000778  EFC0  F003         	goto	i2u34_40
  3042  00077C                     i2u34_41:
  3043  00077C  EFC6  F003         	goto	i2l131
  3044  000780                     i2u34_40:
  3045  000780                     i2l133:
  3046                           
  3047                           ;keyboard.c: 37:         botoes.R = 1;
  3048  000780  8663               	bsf	_botoes^0,3,c
  3049                           
  3050                           ;keyboard.c: 38:         botoes_ant.R = 1;
  3051  000782  8662               	bsf	_botoes_ant^0,3,c
  3052  000784                     i2l1210:
  3053                           
  3054                           ;keyboard.c: 39:         cont_r = 0;
  3055  000784  0E00               	movlw	0
  3056  000786  6E5E               	movwf	_cont_r^0,c
  3057                           
  3058                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB2==0){
  3059  000788  EFE0  F003         	goto	i2l1220
  3060  00078C                     i2l131:
  3061  00078C  A662               	btfss	_botoes_ant^0,3,c
  3062  00078E  EFCB  F003         	goto	i2u35_41
  3063  000792  EFCD  F003         	goto	i2u35_40
  3064  000796                     i2u35_41:
  3065  000796  EFD8  F003         	goto	i2l137
  3066  00079A                     i2u35_40:
  3067  00079A  B481               	btfsc	129,2,c	;volatile
  3068  00079C  EFD2  F003         	goto	i2u36_41
  3069  0007A0  EFD4  F003         	goto	i2u36_40
  3070  0007A4                     i2u36_41:
  3071  0007A4  EFD8  F003         	goto	i2l137
  3072  0007A8                     i2u36_40:
  3073  0007A8                     
  3074                           ;keyboard.c: 41:         botoes.R = 0;
  3075  0007A8  9663               	bcf	_botoes^0,3,c
  3076                           
  3077                           ;keyboard.c: 42:         botoes_ant.R = 0;
  3078  0007AA  9662               	bcf	_botoes_ant^0,3,c
  3079  0007AC  EFC2  F003         	goto	i2l1210
  3080  0007B0                     i2l137:
  3081  0007B0  A481               	btfss	129,2,c	;volatile
  3082  0007B2  EFDD  F003         	goto	i2u37_41
  3083  0007B6  EFDF  F003         	goto	i2u37_40
  3084  0007BA                     i2u37_41:
  3085  0007BA  EFE0  F003         	goto	i2l1220
  3086  0007BE                     i2u37_40:
  3087  0007BE  2A5E               	incf	_cont_r^0,f,c
  3088  0007C0                     i2l1220:
  3089                           
  3090                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  3091  0007C0  9C81               	bcf	129,6,c	;volatile
  3092  0007C2                     
  3093                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  3094  0007C2  8A81               	bsf	129,5,c	;volatile
  3095  0007C4                     
  3096                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB1==1) || cont_d > 50){
  3097  0007C4  B262               	btfsc	_botoes_ant^0,1,c
  3098  0007C6  EFE7  F003         	goto	i2u38_41
  3099  0007CA  EFE9  F003         	goto	i2u38_40
  3100  0007CE                     i2u38_41:
  3101  0007CE  EFF0  F003         	goto	i2l1228
  3102  0007D2                     i2u38_40:
  3103  0007D2  B281               	btfsc	129,1,c	;volatile
  3104  0007D4  EFEE  F003         	goto	i2u39_41
  3105  0007D8  EFF0  F003         	goto	i2u39_40
  3106  0007DC                     i2u39_41:
  3107  0007DC  EFF8  F003         	goto	i2l142
  3108  0007E0                     i2u39_40:
  3109  0007E0                     i2l1228:
  3110  0007E0  0E32               	movlw	50
  3111  0007E2  6460               	cpfsgt	_cont_d^0,c
  3112  0007E4  EFF6  F003         	goto	i2u40_41
  3113  0007E8  EFF8  F003         	goto	i2u40_40
  3114  0007EC                     i2u40_41:
  3115  0007EC  EFFE  F003         	goto	i2l140
  3116  0007F0                     i2u40_40:
  3117  0007F0                     i2l142:
  3118                           
  3119                           ;keyboard.c: 49:         botoes.D = 1;
  3120  0007F0  8263               	bsf	_botoes^0,1,c
  3121                           
  3122                           ;keyboard.c: 50:         botoes_ant.D = 1;
  3123  0007F2  8262               	bsf	_botoes_ant^0,1,c
  3124  0007F4                     i2l1230:
  3125                           
  3126                           ;keyboard.c: 51:         cont_d = 0;
  3127  0007F4  0E00               	movlw	0
  3128  0007F6  6E60               	movwf	_cont_d^0,c
  3129                           
  3130                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB1==0){
  3131  0007F8  EF18  F004         	goto	i2l1240
  3132  0007FC                     i2l140:
  3133  0007FC  A262               	btfss	_botoes_ant^0,1,c
  3134  0007FE  EF03  F004         	goto	i2u41_41
  3135  000802  EF05  F004         	goto	i2u41_40
  3136  000806                     i2u41_41:
  3137  000806  EF10  F004         	goto	i2l146
  3138  00080A                     i2u41_40:
  3139  00080A  B281               	btfsc	129,1,c	;volatile
  3140  00080C  EF0A  F004         	goto	i2u42_41
  3141  000810  EF0C  F004         	goto	i2u42_40
  3142  000814                     i2u42_41:
  3143  000814  EF10  F004         	goto	i2l146
  3144  000818                     i2u42_40:
  3145  000818                     
  3146                           ;keyboard.c: 53:         botoes.D = 0;
  3147  000818  9263               	bcf	_botoes^0,1,c
  3148                           
  3149                           ;keyboard.c: 54:         botoes_ant.D = 0;
  3150  00081A  9262               	bcf	_botoes_ant^0,1,c
  3151  00081C  EFFA  F003         	goto	i2l1230
  3152  000820                     i2l146:
  3153  000820  A281               	btfss	129,1,c	;volatile
  3154  000822  EF15  F004         	goto	i2u43_41
  3155  000826  EF17  F004         	goto	i2u43_40
  3156  00082A                     i2u43_41:
  3157  00082A  EF18  F004         	goto	i2l1240
  3158  00082E                     i2u43_40:
  3159  00082E  2A60               	incf	_cont_d^0,f,c
  3160  000830                     i2l1240:
  3161                           
  3162                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  3163  000830  9A81               	bcf	129,5,c	;volatile
  3164  000832                     
  3165                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  3166  000832  8881               	bsf	129,4,c	;volatile
  3167  000834                     
  3168                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB0;
  3169  000834  A081               	btfss	129,0,c	;volatile
  3170  000836  D002               	bra	i2u44_45
  3171  000838  8863               	bsf	_botoes^0,4,c
  3172  00083A  D001               	bra	i2u44_47
  3173  00083C                     i2u44_45:
  3174  00083C  9863               	bcf	_botoes^0,4,c
  3175  00083E                     i2u44_47:
  3176  00083E                     
  3177                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB2;
  3178  00083E  A481               	btfss	129,2,c	;volatile
  3179  000840  D002               	bra	i2u45_45
  3180  000842  8A63               	bsf	_botoes^0,5,c
  3181  000844  D001               	bra	i2u45_47
  3182  000846                     i2u45_45:
  3183  000846  9A63               	bcf	_botoes^0,5,c
  3184  000848                     i2u45_47:
  3185  000848                     
  3186                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  3187  000848  9881               	bcf	129,4,c	;volatile
  3188  00084A  0012               	return		;funcret
  3189  00084C                     __end_of_le_entrada:
  3190                           	opt callstack 0
  3191                           
  3192                           	psect	rparam
  3193  0000                     
  3194                           	psect	temp
  3195  000064                     btemp:
  3196                           	opt callstack 0
  3197  000064                     	ds	1
  3198  0000                     int$flags	set	btemp
  3199  0000                     wtemp8	set	btemp+1
  3200  0000                     ttemp5	set	btemp+1
  3201  0000                     ttemp6	set	btemp+4
  3202  0000                     ttemp7	set	btemp+8
  3203                           tosu	equ	0xFFF
  3204                           tosh	equ	0xFFE
  3205                           tosl	equ	0xFFD
  3206                           stkptr	equ	0xFFC
  3207                           pclatu	equ	0xFFB
  3208                           pclath	equ	0xFFA
  3209                           pcl	equ	0xFF9
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           indf0	equ	0xFEF
  3217                           postinc0	equ	0xFEE
  3218                           postdec0	equ	0xFED
  3219                           preinc0	equ	0xFEC
  3220                           plusw0	equ	0xFEB
  3221                           fsr0h	equ	0xFEA
  3222                           fsr0l	equ	0xFE9
  3223                           wreg	equ	0xFE8
  3224                           indf1	equ	0xFE7
  3225                           postinc1	equ	0xFE6
  3226                           postdec1	equ	0xFE5
  3227                           preinc1	equ	0xFE4
  3228                           plusw1	equ	0xFE3
  3229                           fsr1h	equ	0xFE2
  3230                           fsr1l	equ	0xFE1
  3231                           bsr	equ	0xFE0
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           preinc2	equ	0xFDC
  3236                           plusw2	equ	0xFDB
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8


Data Sizes:
    Strings     116
    Constant    0
    Data        66
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      99
    BANK0           128     14      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _menu->_strcpy
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    _int_handler->i2_print_mat
    i2_print_mat->i2_goto_XY
    i2_goto_XY->i2_lcd_cmd
    i2_lcd_cmd->i2_pulso

Critical Paths under _main in BANK0

    _main->_gerenciador
    _gerenciador->_creditos
    _creditos->_print_mat

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16816
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   11408
                                             12 BANK0      2     0      2
                           _creditos
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    1464
                                             35 COMRAM     2     0      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    9792
                                             10 BANK0      2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    1312
                                             27 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    8359
                                              0 BANK0     10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3    2029
                                             27 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    5894
                                             34 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2706
                                             30 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1905
                                             30 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1691
                                             30 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1812
                                             30 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2    1142
                                             27 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          2     2      0    2066
                                             25 COMRAM     2     2      0
                         _le_entrada
                        i2_print_mat
 ---------------------------------------------------------------------------------
 (8) i2_print_mat                                         10     8      2    2066
                                             15 COMRAM    10     8      2
                          i2_goto_XY
                       i2_write_char
 ---------------------------------------------------------------------------------
 (9) i2_write_char                                         4     1      3     470
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (9) i2_goto_XY                                            8     4      4    1368
                                              7 COMRAM     8     4      4
                          i2_lcd_cmd
 ---------------------------------------------------------------------------------
 (10) i2_lcd_cmd                                           4     1      3     574
                                              3 COMRAM     4     1      3
                            i2_pulso
 ---------------------------------------------------------------------------------
 (11) i2_pulso                                             3     1      2      70
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _menu
       _strcpy

 _int_handler (ROOT)
   _le_entrada
   i2_print_mat
     i2_goto_XY
       i2_lcd_cmd
         i2_pulso
     i2_write_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      E      5E       5       73.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      63       1       78.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      15        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun 14 21:51:55 2020

         ?_display_onoff_control 0051                               l62 0F64  
                             l71 0CAC                               l47 105A  
                             l56 1262                               l65 11B2  
                             l59 0BF0                               l75 0CAC  
                             l83 0A2E                               l78 0FE8  
                             l96 0ED6                               _op 005D  
                    creditos@lcd 00DA                      __CFG_OSC$HS 000000  
                            l232 08B4                              l236 0946  
                            l183 10BA                              l176 12CC  
                            l186 10C8                              l916 1172  
                            u730 1172                              u731 116E  
                            u740 08C2                              u741 08BE  
                            u750 08D2                              u751 08CE  
                            u760 090C                              u761 0908  
                            u770 091C                              u771 0918  
                            u780 0946                              u781 0942  
                            _lcd 0031              __end_ofi2_print_mat 0D6A  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 004E                     __CFG_WDT$OFF 000000  
                           l2010 1174                             l2004 122E  
                           l2012 117E                             l2020 0C02  
                           l2006 1238                             l2014 1196  
                           l2022 0C0E                             l2030 0C46  
                           l2110 0E4E                             l2102 0E30  
                           l2008 1248                             l2016 11A6  
                           l2032 0C58                             l2024 0C12  
                           l2112 0E94                             l2104 0E44  
                           l2120 105E                             l2200 1008  
                           l2130 0B56                             l2042 0C68  
                           l2026 0C22                             l2018 0BF2  
                           l2114 0E9A                             l2122 10AE  
                           l2202 1020                             l2140 0BD4  
                           l2132 0B62                             l2124 0B18  
                           l2044 0C7A                             l2028 0C32  
                           l2116 0EB6                             l2204 1038  
                           l2150 0F12                             l2142 0BE4  
                           l2134 0B7E                             l2126 0B36  
                           l2054 0C8A                             l2070 0984  
                           l2118 0EBA                             l2206 104C  
                           l2152 0F1E                             l2144 0ED8  
                           l2160 0F84                             l2136 0B8E  
                           l2128 0B46                             l2056 0C9C  
                           l2080 09D2                             l2072 098E  
                           l2208 104E                             l2154 0F48  
                           l2146 0EF6                             l2170 0FDC  
                           l2162 0F90                             l2138 0B9A  
                           l2090 0A04                             l2082 09DC  
                           l2074 0998                             l2066 0948  
                           l2156 0F58                             l2148 0F02  
                           l2164 0FA0                             l2092 0A20  
                           l2084 09E6                             l2076 09C4  
                           l2068 0966                             l2172 12CC  
                           l2166 0FAC                             l2158 0F66  
                           l2094 0A2A                             l2086 09F0  
                           l2078 09C8                             l1622 1134  
                           l2174 12D8                             l2168 0FCC  
                           l2088 09FA                             l2096 0E26  
                           l1624 1144                             l1640 08D2  
                           l2176 12EA                             l2192 0FEA  
                           l1650 090C                             l1642 08E6  
                           l1634 084C                             l2194 1002  
                           l1652 091C                             l1644 08E8  
                           l1660 0938                             l1636 089C  
                           l2196 1004                             l1654 0930  
                           l1646 08EA                             l1638 08C2  
                           l2198 1006                             l1656 0932  
                           l1648 08FE                             STR_1 0655  
                           STR_2 0665                             STR_3 0645  
                           STR_4 0645                             STR_5 0601  
                           STR_6 0634                             STR_7 0612  
                           STR_8 0623                             u1100 0A20  
                           u1101 0A1C                             u1110 0EB6  
                           u1111 0EB2                             u1120 0ED6  
                           u1121 0ED2                             u1130 10C8  
                           u1131 10C4                             u1060 0C02  
                           u1140 12EA                             u1061 0BFE  
                           u1141 12E6                             u1070 0C58  
                           u1071 0C54                             u1080 0C7A  
                           u1081 0C76                             u1090 0C9C  
                           u1091 0C98                             u1317 0C28  
                           u1407 123E                             u1327 119C  
                           u1417 1258                             u1337 0B4C  
                           u1347 0B84                             u1357 0BDA  
                           u1367 0F96                             u1377 0FD2  
                           u1387 0F08                             u1397 0F4E  
                           i2l42 1222                             i2l71 0E24  
                           i2l56 1298                             i2l65 11F2  
                           i2l75 0E24                             i2l83 0B16  
                           i2l96 0D68                             _main 0FEA  
                           _menu 084C                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0064  
                           prodl 000FF3                             start 000E  
          function_set@num_lines 0054                     print_mat@lcd 00D0  
                __end_ofi2_pulso 129A                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                       i2lcd_cmd@a 0038  
                function_set@lcd 0051                            ?_main 0033  
                          ?_menu 0056                            _T0CON 000FD5  
                          i2l113 06B0                            i2l122 0720  
                          i2l131 078C                            i2l115 06A4  
                          i2l140 07FC                            i2l124 0714  
                          i2l133 0780                            i2l142 07F0  
                          i2l119 06D4                            i2l128 0744  
                          i2l137 07B0                            i2l146 0820  
                          i2l149 084A                            _TMR0L 000FD6  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0033                  __end_of_lcd_cmd 11B4  
                     i2goto_XY@a 0040                       i2goto_XY@x 003C  
                     i2goto_XY@y 003D                       i2goto_XY@z 003F  
                __end_of_goto_XY 0CAE                            _pulso 122E  
                          tablat 000FF5             __end_ofi2_write_char 0B18  
                          ttemp5 0065                            ttemp6 0068  
                          ttemp7 006C                            status 000FD8  
                          wtemp8 0065                  __initialization 10CA  
                   __end_of_main 105E                     __end_of_menu 0948  
             __size_ofi2_lcd_cmd 0040               __size_ofi2_goto_XY 00BC  
                    i2_print_mat 0CAE                       i2pulso@lcd 0033  
                         ??_main 005D                           ??_menu 0058  
                  __activetblptr 000001                           _ADCON1 000FC1  
                         ?_pulso 004E                           i2l1210 0784  
                         i2l1202 0752                           i2l1212 079A  
                         i2l1220 07C0                           i2l1204 0754  
                         i2l1230 07F4                           i2l1222 07C2  
                         i2l1214 07A8                           i2l1206 0762  
                         i2l1232 080A                           i2l1240 0830  
                         i2l1224 07C4                           i2l1208 0770  
                         i2l1242 0832                           i2l1234 0818  
                         i2l1226 07D2                           i2l1218 07BE  
                         i2l1170 0686                           i2l1244 0834  
                         i2l1228 07E0                           i2l1172 0694  
                         i2l1246 083E                           i2l1238 082E  
                         i2l1190 06F6                           i2l1182 06E2  
                         i2l1174 06A8                           i2l1248 0848  
                         i2l1192 0704                           i2l1176 06BE  
                         i2l1184 06E4                           i2l1168 0676  
                         i2l1194 0718                           i2l1186 06E6  
                         i2l1178 06CC                           i2l1196 072E  
                         i2l1188 06E8                           i2l1198 073C  
                         i2l1630 11D6                           i2l1702 0E02  
                         i2l1632 11E6                           i2l1704 0E14  
                         i2l1720 0A76                           i2l1626 11B4  
                         i2l1730 0AC4                           i2l1722 0A80  
                         i2l1714 0A30                           i2l1628 11BE  
                         i2l1740 0B08                           i2l1732 0ACE  
                         i2l1724 0AAC                           i2l1716 0A4E  
                         i2l1820 0CEA                           i2l1812 0CAE  
                         i2l1670 0D86                           i2l1742 0B12  
                         i2l1734 0AD8                           i2l1726 0AB0  
                         i2l1718 0A6C                           i2l1822 0CF2  
                         i2l1814 0CB6                           i2l1592 1264  
                         i2l1680 0DD0                           i2l1672 0D8A  
                         i2l1736 0AE2                           i2l1728 0ABA  
                         i2l1832 0D60                           i2l1840 1210  
                         i2l1594 126E                           i2l1690 0DE0  
                         i2l1674 0D9A                           i2l1666 0D6A  
                         i2l1738 0AEC                           i2l1826 0D12  
                         i2l1818 0CD6                           i2l1842 1214  
                         i2l1596 127E                           i2l1692 0DF2  
                         i2l1676 0DAA                           i2l1668 0D7A  
                         i2l1828 0D58                           i2l1844 1220  
                         i2l1836 11FE                           i2l1678 0DBE  
                         i2l1838 120C                        ??i2_pulso 0035  
               __end_of_creditos 10CA                      goto_XY@temp 005C  
           __size_of_gerenciador 0030                           _cont_d 0060  
                         _cont_l 005F                           _cont_r 005E  
                         _cont_u 0061                           _botoes 0063  
                         clear_0 1110                           clear_1 111C  
                  ?_function_set 0051                        ??_lcd_cmd 0054  
                         _strcpy 1134                        ??_goto_XY 0059  
                   __pdataCOMRAM 0001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                __end_ofi2_lcd_cmd 11F4  
       display_onoff_control@lcd 0051                __end_ofi2_goto_XY 0E26  
                     __accesstop 0080          __end_of__initialization 1122  
                  ___rparam_used 000001          ??_display_onoff_control 0056  
                 __pcstackCOMRAM 0033                     __pidataBANK0 12FC  
                 i2print_mat@lcd 0042                   gerenciador@lcd 00DC  
                  __end_of_pulso 1264                   ??_function_set 0056  
          __size_ofi2_write_char 00E8                     i2lcd_cmd@lcd 0036  
           __size_of_int_handler 1226                          ??_pulso 0050  
                     __pbssBANK0 0080                     i2_write_char 0A30  
                        ?_strcpy 004E                    i2write_char@c 0035  
             __size_of_print_mat 00B2      entry_mode_set@display_shift 0054  
                        i2u20_40 0686                          i2u20_41 0682  
                        i2u21_40 0694                          i2u21_41 0690  
                        i2u30_40 073C                          i2u22_40 06A4  
                        i2u30_41 0738                          i2u22_41 06A0  
                        i2u31_40 0752                          i2u23_40 06BE  
                        i2u31_41 074E                          i2u23_41 06BA  
                        i2u40_40 07F0                          i2u32_40 0762  
                        i2u24_40 06CC                          i2u40_41 07EC  
                        i2u32_41 075E                          i2u24_41 06C8  
                        i2u41_40 080A                          i2u33_40 0770  
                        i2u25_40 06E2                          i2u41_41 0806  
                        i2u33_41 076C                          i2u25_41 06DE  
                        i2u42_40 0818                          i2u34_40 0780  
                        i2u26_40 06F6                          i2u42_41 0814  
                        i2u34_41 077C                          i2u26_41 06F2  
                        i2u43_40 082E                          i2u35_40 079A  
                        i2u27_40 0704                          i2u43_41 082A  
                        i2u35_41 0796                          i2u27_41 0700  
                        i2u36_40 07A8                          i2u28_40 0714  
                        i2u36_41 07A4                          i2u28_41 0710  
                        i2u44_45 083C                          i2u44_47 083E  
                        i2u37_40 07BE                          i2u29_40 072E  
                        i2u37_41 07BA                          i2u29_41 072A  
                        i2u45_45 0846                          i2u45_47 0848  
                        i2u38_40 07D2                          i2u38_41 07CE  
                        i2u39_40 07E0                          i2u39_41 07DC  
                        i2u80_40 0D7A                          i2u80_41 0D76  
                        i2u81_40 0DD0                          i2u81_41 0DCC  
                        i2u82_40 0DF2                          i2u82_41 0DEE  
                        i2u83_40 0E14                          i2u83_41 0E10  
                        i2u84_40 0B08                          i2u84_41 0B04  
                        i2u86_40 0CD2                          i2u86_41 0CCE  
                        i2u87_40 0D0E                          i2u87_41 0D0A  
                        i2u88_40 120C                          i2u88_41 1208  
                      ?_creditos 00DA                       _le_entrada 0676  
                     _botoes_ant 0062                          i2_pulso 1264  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 0054                          __Lparam 0000  
                   i2goto_XY@lcd 003A                     __psmallconst 0600  
                   ?i2_print_mat 0042                          __pcinit 10CA  
                        __ramtop 0600                          __ptext0 0FEA  
                        __ptext1 12CC                          __ptext2 084C  
                        __ptext3 105E                          __ptext4 1134  
                        __ptext5 0E26                          __ptext6 0948  
                        __ptext7 0BF2                          __ptext8 1174  
                        __ptext9 0B18                          _lcd_cmd 1174  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 0BF2                       ??_creditos 005D  
                 __pintcode_body 11F4             end_of_initialization 1122  
                        menu@lcd 0056                  i2write_char@lcd 0033  
           __end_of_function_set 0BF2                          int_func 11F4  
              __end_of_print_mat 0ED8                          postdec1 000FE5  
                        postinc0 000FEE                          strcpy@d 0054  
                        strcpy@s 0052                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0051                      ?_le_entrada 0033  
                      i2_lcd_cmd 11B4                        i2_goto_XY 0D6A  
                  ??_gerenciador 005D   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 0F66                       _write_char 0948  
                  __pidataCOMRAM 129A                   __end_of_strcpy 1174  
            start_initialization 10CA                     i2print_mat@i 004A  
                   i2print_mat@j 0048                       ?i2_lcd_cmd 0036  
                     ?i2_goto_XY 003A                   _entry_mode_set 0F66  
                     goto_XY@lcd 0055                      __pdataBANK0 00C0  
            __size_of_le_entrada 01D6              __end_of_gerenciador 12FC  
                       ??_strcpy 0052             __size_ofi2_print_mat 00BC  
                    __pbssCOMRAM 005D                    ??_int_handler 004C  
                  __pcstackBANK0 00D0            __size_of_function_set 00DA  
                instrucoes@F3101 0011                  instrucoes@F3104 0001  
                instrucoes@F3107 00C0                  instrucoes@F3098 0021  
              __size_of_creditos 006C                         ?i2_pulso 0033  
         __end_of_entry_mode_set 0FEA                        __pintcode 0008  
                    ?_write_char 004E                         ?_lcd_cmd 0051  
                   _function_set 0B18                      __smallconst 0600  
                       ?_goto_XY 0055                   __size_of_pulso 0036  
            __end_of_int_handler 122E                  ?_entry_mode_set 0051  
                    ??i2_lcd_cmd 0039                      ??i2_goto_XY 003E  
                       i2u142_47 0DA0                         i2u143_47 11DC  
                       i2u144_47 1274                         i2u145_47 128E  
                    _gerenciador 12CC     entry_mode_set@move_direction 0053  
                      _print_mat 0E26  display_onoff_control@display_on 0053  
     display_onoff_control@blink 0055                      write_char@c 0050  
                     print_mat@i 00D8                       print_mat@j 00D6  
                   ??_le_entrada 0033                        copy_data0 10DE  
                      copy_data1 10FE              __size_of_write_char 00E8  
               __size_ofi2_pulso 0036                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0600  
                  i2goto_XY@temp 0041                entry_mode_set@lcd 0051  
                     ?_print_mat 00D0               __end_of_le_entrada 084C  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 0F66  
                       __ptext11 0ED8                         __ptext12 122E  
                       __ptext14 0CAE                         __ptext15 0A30  
                       __ptext16 0D6A                         __ptext17 11B4  
                       __ptext18 1264                         __ptext19 0676  
                       _creditos 105E                       strcpy@dest 004E  
                       _mat_disp 0080                    __size_of_main 0074  
                  __size_of_menu 00FC                         int$flags 0064  
                       lcd_cmd@a 0053                    ?i2_write_char 0033  
          _display_onoff_control 0ED8                       _INTCONbits 000FF2  
                       goto_XY@a 005B                         goto_XY@x 0057  
                       goto_XY@y 0058                         goto_XY@z 005A  
                       intlevel2 0000                        strcpy@src 0050  
        function_set@data_lenght 0053                    ??i2_print_mat 0044  
                 ??i2_write_char 0036                      ??_print_mat 00D2  
                   ??_write_char 0051                         pulso@lcd 004E  
               ??_entry_mode_set 0055            function_set@char_font 0055  
             __end_of_write_char 0A30                     ?_gerenciador 00DC  
