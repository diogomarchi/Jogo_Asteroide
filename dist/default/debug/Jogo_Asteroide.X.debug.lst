

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 15 21:52:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.10
    35                           ; Generated 31/07/2019 GMT
    36                           ; 
    37                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  0013A8                     __pidataCOMRAM:
    71                           	opt callstack 0
    72                           
    73                           ;initializer for _lcd
    74  0013A8  83                 	db	131
    75  0013A9  0F                 	db	15
    76                           
    77                           ;initializer for _x
    78  0013AA  01                 	db	1
    79  0000                     _PORTBbits	set	3969
    80  0000                     _T0CONbits	set	4053
    81  0000                     _T0CON	set	4053
    82  0000                     _TRISD	set	3989
    83  0000                     _PORTB	set	3969
    84  0000                     _TRISB	set	3987
    85  0000                     _ADCON1	set	4033
    86  0000                     _TMR0L	set	4054
    87  0000                     _INTCONbits	set	4082
    88  0000                     _PORTD	set	3971
    89                           
    90                           	psect	smallconst
    91  000600                     __psmallconst:
    92                           	opt callstack 0
    93  000600  00                 	db	0
    94  000601                     STR_10:
    95  000601  20                 	db	32
    96  000602  20                 	db	32
    97  000603  20                 	db	32
    98  000604  20                 	db	32
    99  000605  20                 	db	32
   100  000606  20                 	db	32
   101  000607  20                 	db	32
   102  000608  20                 	db	32
   103  000609  20                 	db	32
   104  00060A  20                 	db	32
   105  00060B  20                 	db	32
   106  00060C  20                 	db	32
   107  00060D  20                 	db	32
   108  00060E  20                 	db	32
   109  00060F  20                 	db	32
   110  000610  20                 	db	32
   111  000611  00                 	db	0
   112  000612                     STR_9:
   113  000612  20                 	db	32
   114  000613  20                 	db	32
   115  000614  20                 	db	32
   116  000615  20                 	db	32
   117  000616  20                 	db	32
   118  000617  20                 	db	32
   119  000618  20                 	db	32
   120  000619  53                 	db	83	;'S'
   121  00061A  43                 	db	67	;'C'
   122  00061B  4F                 	db	79	;'O'
   123  00061C  52                 	db	82	;'R'
   124  00061D  45                 	db	69	;'E'
   125  00061E  3A                 	db	58	;':'
   126  00061F  20                 	db	32
   127  000620  20                 	db	32
   128  000621  20                 	db	32
   129  000622  00                 	db	0
   130  000623                     STR_17:
   131  000623  31                 	db	49	;'1'
   132  000624  2E                 	db	46
   133  000625  4A                 	db	74	;'J'
   134  000626  4F                 	db	79	;'O'
   135  000627  47                 	db	71	;'G'
   136  000628  41                 	db	65	;'A'
   137  000629  52                 	db	82	;'R'
   138  00062A  2E                 	db	46
   139  00062B  2E                 	db	46
   140  00062C  2E                 	db	46
   141  00062D  2E                 	db	46
   142  00062E  2E                 	db	46
   143  00062F  2E                 	db	46
   144  000630  2E                 	db	46
   145  000631  2E                 	db	46
   146  000632  2E                 	db	46
   147  000633  00                 	db	0
   148  000634                     STR_19:
   149  000634  33                 	db	51	;'3'
   150  000635  2E                 	db	46
   151  000636  43                 	db	67	;'C'
   152  000637  52                 	db	82	;'R'
   153  000638  45                 	db	69	;'E'
   154  000639  44                 	db	68	;'D'
   155  00063A  49                 	db	73	;'I'
   156  00063B  54                 	db	84	;'T'
   157  00063C  4F                 	db	79	;'O'
   158  00063D  53                 	db	83	;'S'
   159  00063E  2E                 	db	46
   160  00063F  2E                 	db	46
   161  000640  2E                 	db	46
   162  000641  2E                 	db	46
   163  000642  2E                 	db	46
   164  000643  2E                 	db	46
   165  000644  00                 	db	0
   166  000645                     STR_20:
   167  000645  34                 	db	52	;'4'
   168  000646  2E                 	db	46
   169  000647  46                 	db	70	;'F'
   170  000648  49                 	db	73	;'I'
   171  000649  4E                 	db	78	;'N'
   172  00064A  41                 	db	65	;'A'
   173  00064B  4C                 	db	76	;'L'
   174  00064C  49                 	db	73	;'I'
   175  00064D  5A                 	db	90	;'Z'
   176  00064E  41                 	db	65	;'A'
   177  00064F  52                 	db	82	;'R'
   178  000650  2E                 	db	46
   179  000651  2E                 	db	46
   180  000652  2E                 	db	46
   181  000653  2E                 	db	46
   182  000654  2E                 	db	46
   183  000655  00                 	db	0
   184  000656                     STR_18:
   185  000656  32                 	db	50	;'2'
   186  000657  2E                 	db	46
   187  000658  49                 	db	73	;'I'
   188  000659  4E                 	db	78	;'N'
   189  00065A  53                 	db	83	;'S'
   190  00065B  54                 	db	84	;'T'
   191  00065C  52                 	db	82	;'R'
   192  00065D  55                 	db	85	;'U'
   193  00065E  43                 	db	67	;'C'
   194  00065F  4F                 	db	79	;'O'
   195  000660  45                 	db	69	;'E'
   196  000661  53                 	db	83	;'S'
   197  000662  2E                 	db	46
   198  000663  2E                 	db	46
   199  000664  2E                 	db	46
   200  000665  2E                 	db	46
   201  000666  00                 	db	0
   202  000667                     STR_14:
   203  000667  4E                 	db	78	;'N'
   204  000668  41                 	db	65	;'A'
   205  000669  56                 	db	86	;'V'
   206  00066A  45                 	db	69	;'E'
   207  00066B  20                 	db	32
   208  00066C  20                 	db	32
   209  00066D  20                 	db	32
   210  00066E  20                 	db	32
   211  00066F  20                 	db	32
   212  000670  20                 	db	32
   213  000671  20                 	db	32
   214  000672  20                 	db	32
   215  000673  20                 	db	32
   216  000674  20                 	db	32
   217  000675  20                 	db	32
   218  000676  00                 	db	0
   219  000677                     STR_16:
   220  000677  4D                 	db	77	;'M'
   221  000678  45                 	db	69	;'E'
   222  000679  4E                 	db	78	;'N'
   223  00067A  55                 	db	85	;'U'
   224  00067B  20                 	db	32
   225  00067C  20                 	db	32
   226  00067D  20                 	db	32
   227  00067E  20                 	db	32
   228  00067F  20                 	db	32
   229  000680  20                 	db	32
   230  000681  20                 	db	32
   231  000682  20                 	db	32
   232  000683  20                 	db	32
   233  000684  20                 	db	32
   234  000685  20                 	db	32
   235  000686  00                 	db	0
   236  000687                     STR_15:
   237  000687  32                 	db	50	;'2'
   238  000688  2E                 	db	46
   239  000689  45                 	db	69	;'E'
   240  00068A  53                 	db	83	;'S'
   241  00068B  43                 	db	67	;'C'
   242  00068C  41                 	db	65	;'A'
   243  00068D  50                 	db	80	;'P'
   244  00068E  45                 	db	69	;'E'
   245  00068F  20                 	db	32
   246  000690  56                 	db	86	;'V'
   247  000691  4F                 	db	79	;'O'
   248  000692  4C                 	db	76	;'L'
   249  000693  54                 	db	84	;'T'
   250  000694  41                 	db	65	;'A'
   251  000695  20                 	db	32
   252  000696  00                 	db	0
   253  000697                     STR_5:
   254  000697  48                 	db	72	;'H'
   255  000698  49                 	db	73	;'I'
   256  000699  42                 	db	66	;'B'
   257  00069A  45                 	db	69	;'E'
   258  00069B  52                 	db	82	;'R'
   259  00069C  4E                 	db	78	;'N'
   260  00069D  41                 	db	65	;'A'
   261  00069E  4E                 	db	78	;'N'
   262  00069F  44                 	db	68	;'D'
   263  0006A0  4F                 	db	79	;'O'
   264  0006A1  2E                 	db	46
   265  0006A2  2E                 	db	46
   266  0006A3  2E                 	db	46
   267  0006A4  2E                 	db	46
   268  0006A5  2E                 	db	46
   269  0006A6  00                 	db	0
   270  0006A7                     STR_1:
   271  0006A7  31                 	db	49	;'1'
   272  0006A8  2E                 	db	46
   273  0006A9  44                 	db	68	;'D'
   274  0006AA  49                 	db	73	;'I'
   275  0006AB  4F                 	db	79	;'O'
   276  0006AC  47                 	db	71	;'G'
   277  0006AD  4F                 	db	79	;'O'
   278  0006AE  20                 	db	32
   279  0006AF  4D                 	db	77	;'M'
   280  0006B0  41                 	db	65	;'A'
   281  0006B1  52                 	db	82	;'R'
   282  0006B2  43                 	db	67	;'C'
   283  0006B3  48                 	db	72	;'H'
   284  0006B4  49                 	db	73	;'I'
   285  0006B5  2E                 	db	46
   286  0006B6  00                 	db	0
   287  0006B7                     STR_13:
   288  0006B7  31                 	db	49	;'1'
   289  0006B8  2E                 	db	46
   290  0006B9  53                 	db	83	;'S'
   291  0006BA  45                 	db	69	;'E'
   292  0006BB  54                 	db	84	;'T'
   293  0006BC  41                 	db	65	;'A'
   294  0006BD  53                 	db	83	;'S'
   295  0006BE  20                 	db	32
   296  0006BF  4D                 	db	77	;'M'
   297  0006C0  4F                 	db	79	;'O'
   298  0006C1  56                 	db	86	;'V'
   299  0006C2  45                 	db	69	;'E'
   300  0006C3  4D                 	db	77	;'M'
   301  0006C4  20                 	db	32
   302  0006C5  41                 	db	65	;'A'
   303  0006C6  00                 	db	0
   304  0006C7                     STR_2:
   305  0006C7  32                 	db	50	;'2'
   306  0006C8  2E                 	db	46
   307  0006C9  47                 	db	71	;'G'
   308  0006CA  45                 	db	69	;'E'
   309  0006CB  4F                 	db	79	;'O'
   310  0006CC  52                 	db	82	;'R'
   311  0006CD  47                 	db	71	;'G'
   312  0006CE  45                 	db	69	;'E'
   313  0006CF  20                 	db	32
   314  0006D0  4E                 	db	78	;'N'
   315  0006D1  41                 	db	65	;'A'
   316  0006D2  52                 	db	82	;'R'
   317  0006D3  44                 	db	68	;'D'
   318  0006D4  45                 	db	69	;'E'
   319  0006D5  53                 	db	83	;'S'
   320  0006D6  00                 	db	0
   321  0000                     
   322                           ; #config settings
   323  0006D7  00                 	db	0	; dummy byte at the end
   324  0000                     
   325                           	psect	cinit
   326  001318                     __pcinit:
   327                           	opt callstack 0
   328  001318                     start_initialization:
   329                           	opt callstack 0
   330  001318                     __initialization:
   331                           	opt callstack 0
   332                           
   333                           ; Initialize objects allocated to COMRAM (3 bytes)
   334                           ; load TBLPTR registers with __pidataCOMRAM
   335  001318  0EA8               	movlw	low __pidataCOMRAM
   336  00131A  6EF6               	movwf	tblptrl,c
   337  00131C  0E13               	movlw	high __pidataCOMRAM
   338  00131E  6EF7               	movwf	tblptrh,c
   339  001320  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   340  001322  6EF8               	movwf	tblptru,c
   341  001324  0009               	tblrd		*+	;fetch initializer
   342  001326  CFF5 F06C          	movff	tablat,__pdataCOMRAM
   343  00132A  0009               	tblrd		*+	;fetch initializer
   344  00132C  CFF5 F06D          	movff	tablat,__pdataCOMRAM+1
   345  001330  0009               	tblrd		*+	;fetch initializer
   346  001332  CFF5 F06E          	movff	tablat,__pdataCOMRAM+2
   347                           
   348                           ; Clear objects allocated to COMRAM (72 bytes)
   349  001336  EE00  F001         	lfsr	0,__pbssCOMRAM
   350  00133A  0E48               	movlw	72
   351  00133C                     clear_0:
   352  00133C  6AEE               	clrf	postinc0,c
   353  00133E  06E8               	decf	wreg,f,c
   354  001340  E1FD               	bnz	clear_0
   355  001342                     end_of_initialization:
   356                           	opt callstack 0
   357  001342                     __end_of__initialization:
   358                           	opt callstack 0
   359  001342  906F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   360  001344  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   361  001346  0E00               	movlw	low (__Lsmallconst shr (0+16))
   362  001348  6EF8               	movwf	tblptru,c
   363  00134A  0E06               	movlw	high __Lsmallconst
   364  00134C  6EF7               	movwf	tblptrh,c
   365  00134E  0100               	movlb	0
   366  001350  EF70  F008         	goto	_main	;jump to C main() function
   367                           
   368                           	psect	bssCOMRAM
   369  000001                     __pbssCOMRAM:
   370                           	opt callstack 0
   371  000001                     _y:
   372                           	opt callstack 0
   373  000001                     	ds	1
   374  000002                     _op:
   375                           	opt callstack 0
   376  000002                     	ds	1
   377  000003                     _cont_r:
   378                           	opt callstack 0
   379  000003                     	ds	1
   380  000004                     _cont_l:
   381                           	opt callstack 0
   382  000004                     	ds	1
   383  000005                     _cont_d:
   384                           	opt callstack 0
   385  000005                     	ds	1
   386  000006                     _cont_u:
   387                           	opt callstack 0
   388  000006                     	ds	1
   389  000007                     _botoes_ant:
   390                           	opt callstack 0
   391  000007                     	ds	1
   392  000008                     _botoes:
   393                           	opt callstack 0
   394  000008                     	ds	1
   395  000009                     _mat_disp:
   396                           	opt callstack 0
   397  000009                     	ds	64
   398                           
   399                           	psect	dataCOMRAM
   400  00006C                     __pdataCOMRAM:
   401                           	opt callstack 0
   402  00006C                     _lcd:
   403                           	opt callstack 0
   404  00006C                     	ds	2
   405  00006E                     _x:
   406                           	opt callstack 0
   407  00006E                     	ds	1
   408                           
   409                           	psect	cstackCOMRAM
   410  000049                     __pcstackCOMRAM:
   411                           	opt callstack 0
   412  000049                     pulso@lcd:
   413                           	opt callstack 0
   414  000049                     write_char@lcd:
   415                           	opt callstack 0
   416  000049                     strcpy@dest:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x0
   420  000049                     	ds	2
   421  00004B                     ??_pulso:
   422  00004B                     write_char@c:
   423                           	opt callstack 0
   424  00004B                     strcpy@src:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  00004B                     	ds	1
   429  00004C                     ??_write_char:
   430  00004C                     function_set@lcd:
   431                           	opt callstack 0
   432  00004C                     display_onoff_control@lcd:
   433                           	opt callstack 0
   434  00004C                     lcd_cmd@lcd:
   435                           	opt callstack 0
   436  00004C                     entry_mode_set@lcd:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x3
   440  00004C                     	ds	1
   441  00004D                     strcpy@s:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445  00004D                     	ds	1
   446  00004E                     function_set@data_lenght:
   447                           	opt callstack 0
   448  00004E                     display_onoff_control@display_on:
   449                           	opt callstack 0
   450  00004E                     lcd_cmd@a:
   451                           	opt callstack 0
   452  00004E                     entry_mode_set@move_direction:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x5
   456  00004E                     	ds	1
   457  00004F                     ??_lcd_cmd:
   458  00004F                     function_set@num_lines:
   459                           	opt callstack 0
   460  00004F                     display_onoff_control@cursor_on:
   461                           	opt callstack 0
   462  00004F                     entry_mode_set@display_shift:
   463                           	opt callstack 0
   464  00004F                     strcpy@d:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x6
   468  00004F                     	ds	1
   469  000050                     ??_entry_mode_set:
   470  000050                     function_set@char_font:
   471                           	opt callstack 0
   472  000050                     display_onoff_control@blink:
   473                           	opt callstack 0
   474  000050                     goto_XY@lcd:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x7
   478  000050                     	ds	1
   479  000051                     ??_function_set:
   480  000051                     ??_display_onoff_control:
   481                           
   482                           ; 1 bytes @ 0x8
   483  000051                     	ds	1
   484  000052                     goto_XY@x:
   485                           	opt callstack 0
   486                           
   487                           ; 1 bytes @ 0x9
   488  000052                     	ds	1
   489  000053                     goto_XY@y:
   490                           	opt callstack 0
   491                           
   492                           ; 1 bytes @ 0xA
   493  000053                     	ds	1
   494  000054                     ??_goto_XY:
   495                           
   496                           ; 1 bytes @ 0xB
   497  000054                     	ds	1
   498  000055                     goto_XY@z:
   499                           	opt callstack 0
   500                           
   501                           ; 1 bytes @ 0xC
   502  000055                     	ds	1
   503  000056                     goto_XY@a:
   504                           	opt callstack 0
   505                           
   506                           ; 1 bytes @ 0xD
   507  000056                     	ds	1
   508  000057                     goto_XY@temp:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0xE
   512  000057                     	ds	1
   513  000058                     print_mat@lcd:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0xF
   517  000058                     	ds	2
   518  00005A                     ??_print_mat:
   519                           
   520                           ; 1 bytes @ 0x11
   521  00005A                     	ds	4
   522  00005E                     print_mat@j:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x15
   526  00005E                     	ds	2
   527  000060                     print_mat@i:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x17
   531  000060                     	ds	2
   532  000062                     creditos@lcd:
   533                           	opt callstack 0
   534  000062                     finaliza@lcd:
   535                           	opt callstack 0
   536  000062                     jogar@lcd:
   537                           	opt callstack 0
   538  000062                     instrucoes@lcd:
   539                           	opt callstack 0
   540  000062                     menu@lcd:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x19
   544  000062                     	ds	2
   545  000064                     ??_jogar:
   546  000064                     
   547                           ; 1 bytes @ 0x1B
   548  000064                     	ds	4
   549  000068                     jogar@bateu:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x1F
   553  000068                     	ds	2
   554  00006A                     gerenciador@lcd:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x21
   558  00006A                     	ds	2
   559  00006C                     
   560                           ; 1 bytes @ 0x23
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   563 ;;
   564 ;; *************** function _main *****************
   565 ;; Defined at:
   566 ;;		line 32 in file "main.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   580 ;;      Params:         0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels required when called:    8
   586 ;; This function calls:
   587 ;;		_display_onoff_control
   588 ;;		_entry_mode_set
   589 ;;		_function_set
   590 ;;		_gerenciador
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597  0010E0                     __ptext0:
   598                           	opt callstack 0
   599  0010E0                     _main:
   600                           	opt callstack 23
   601  0010E0                     
   602                           ;main.c: 34:     ADCON1 = 0x0F;
   603  0010E0  0E0F               	movlw	15
   604  0010E2  6EC1               	movwf	193,c	;volatile
   605                           
   606                           ;main.c: 39:     TRISB = 0x0F;
   607  0010E4  0E0F               	movlw	15
   608  0010E6  6E93               	movwf	147,c	;volatile
   609                           
   610                           ;main.c: 42:     PORTB = 0x00;
   611  0010E8  0E00               	movlw	0
   612  0010EA  6E81               	movwf	129,c	;volatile
   613                           
   614                           ;main.c: 45:     TRISD = 0x00;
   615  0010EC  0E00               	movlw	0
   616  0010EE  6E95               	movwf	149,c	;volatile
   617                           
   618                           ;main.c: 48:     T0CON = 0x47;
   619  0010F0  0E47               	movlw	71
   620  0010F2  6ED5               	movwf	213,c	;volatile
   621                           
   622                           ;main.c: 51:     TMR0L = 0x63;
   623  0010F4  0E63               	movlw	99
   624  0010F6  6ED6               	movwf	214,c	;volatile
   625  0010F8                     
   626                           ;main.c: 54:     INTCONbits.TMR0IF = 0;
   627  0010F8  94F2               	bcf	242,2,c	;volatile
   628  0010FA                     
   629                           ;main.c: 55:     INTCONbits.TMR0IE = 1;
   630  0010FA  8AF2               	bsf	242,5,c	;volatile
   631  0010FC                     
   632                           ;main.c: 56:     INTCONbits.GIE = 1;
   633  0010FC  8EF2               	bsf	242,7,c	;volatile
   634  0010FE                     
   635                           ;main.c: 58:     function_set(lcd, 0, 1, 0);
   636  0010FE  0E83               	movlw	131
   637  001100  6E4C               	movwf	function_set@lcd^0,c
   638  001102  0E0F               	movlw	15
   639  001104  6E4D               	movwf	(function_set@lcd+1)^0,c
   640  001106  0E00               	movlw	0
   641  001108  6E4E               	movwf	function_set@data_lenght^0,c
   642  00110A  0E01               	movlw	1
   643  00110C  6E4F               	movwf	function_set@num_lines^0,c
   644  00110E  0E00               	movlw	0
   645  001110  6E50               	movwf	function_set@char_font^0,c
   646  001112  EC7B  F006         	call	_function_set	;wreg free
   647  001116                     
   648                           ;main.c: 59:     display_onoff_control(lcd, 1, 1, 0);
   649  001116  0E83               	movlw	131
   650  001118  6E4C               	movwf	display_onoff_control@lcd^0,c
   651  00111A  0E0F               	movlw	15
   652  00111C  6E4D               	movwf	(display_onoff_control@lcd+1)^0,c
   653  00111E  0E01               	movlw	1
   654  001120  6E4E               	movwf	display_onoff_control@display_on^0,c
   655  001122  0E01               	movlw	1
   656  001124  6E4F               	movwf	display_onoff_control@cursor_on^0,c
   657  001126  0E00               	movlw	0
   658  001128  6E50               	movwf	display_onoff_control@blink^0,c
   659  00112A  ECE7  F007         	call	_display_onoff_control	;wreg free
   660  00112E                     
   661                           ;main.c: 60:     entry_mode_set(lcd, 1,0);
   662  00112E  0E83               	movlw	131
   663  001130  6E4C               	movwf	entry_mode_set@lcd^0,c
   664  001132  0E0F               	movlw	15
   665  001134  6E4D               	movwf	(entry_mode_set@lcd+1)^0,c
   666  001136  0E01               	movlw	1
   667  001138  6E4E               	movwf	entry_mode_set@move_direction^0,c
   668  00113A  0E00               	movlw	0
   669  00113C  6E4F               	movwf	entry_mode_set@display_shift^0,c
   670  00113E  EC2E  F008         	call	_entry_mode_set	;wreg free
   671  001142                     
   672                           ;main.c: 62:     T0CONbits.TMR0ON = 1;
   673  001142  8ED5               	bsf	213,7,c	;volatile
   674  001144                     
   675                           ;main.c: 64:     gerenciador(lcd);
   676  001144  0E83               	movlw	131
   677  001146  6E6A               	movwf	gerenciador@lcd^0,c
   678  001148  0E0F               	movlw	15
   679  00114A  6E6B               	movwf	(gerenciador@lcd+1)^0,c
   680  00114C  EC9C  F007         	call	_gerenciador	;wreg free
   681  001150  EF07  F000         	goto	start
   682  001154                     __end_of_main:
   683                           	opt callstack 0
   684                           
   685 ;; *************** function _gerenciador *****************
   686 ;; Defined at:
   687 ;;		line 15 in file "task_manager.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  lcd             2   33[COMRAM] PTR struct .
   690 ;;		 -> PORTD(1), 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   702 ;;      Params:         2       0       0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0
   705 ;;      Totals:         2       0       0       0       0       0       0
   706 ;;Total ram usage:        2 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    7
   709 ;; This function calls:
   710 ;;		_creditos
   711 ;;		_finaliza
   712 ;;		_instrucoes
   713 ;;		_jogar
   714 ;;		_menu
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text1
   721  000F38                     __ptext1:
   722                           	opt callstack 0
   723  000F38                     _gerenciador:
   724                           	opt callstack 23
   725  000F38                     l174:
   726  000F38                     
   727                           ;task_manager.c: 17:         menu(lcd);
   728  000F38  C06A  F062         	movff	gerenciador@lcd,menu@lcd
   729  000F3C  C06B  F063         	movff	gerenciador@lcd+1,menu@lcd+1
   730  000F40  EC7D  F005         	call	_menu	;wreg free
   731  000F44                     
   732                           ;task_manager.c: 18:         if(op == 0) jogar(lcd);
   733  000F44  5002               	movf	_op^0,w,c
   734  000F46  A4D8               	btfss	status,2,c
   735  000F48  EFA8  F007         	goto	u821
   736  000F4C  EFAA  F007         	goto	u820
   737  000F50                     u821:
   738  000F50  EFB2  F007         	goto	l1626
   739  000F54                     u820:
   740  000F54  C06A  F062         	movff	gerenciador@lcd,jogar@lcd
   741  000F58  C06B  F063         	movff	gerenciador@lcd+1,jogar@lcd+1
   742  000F5C  EC6C  F003         	call	_jogar	;wreg free
   743  000F60  EF9C  F007         	goto	l174
   744  000F64                     l1626:
   745  000F64  0402               	decf	_op^0,w,c
   746  000F66  A4D8               	btfss	status,2,c
   747  000F68  EFB8  F007         	goto	u831
   748  000F6C  EFBA  F007         	goto	u830
   749  000F70                     u831:
   750  000F70  EFC2  F007         	goto	l1630
   751  000F74                     u830:
   752  000F74  C06A  F062         	movff	gerenciador@lcd,instrucoes@lcd
   753  000F78  C06B  F063         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   754  000F7C  ECAA  F008         	call	_instrucoes	;wreg free
   755  000F80  EF9C  F007         	goto	l174
   756  000F84                     l1630:
   757  000F84  0E02               	movlw	2
   758  000F86  1802               	xorwf	_op^0,w,c
   759  000F88  A4D8               	btfss	status,2,c
   760  000F8A  EFC9  F007         	goto	u841
   761  000F8E  EFCB  F007         	goto	u840
   762  000F92                     u841:
   763  000F92  EFD3  F007         	goto	l1634
   764  000F96                     u840:
   765  000F96  C06A  F062         	movff	gerenciador@lcd,creditos@lcd
   766  000F9A  C06B  F063         	movff	gerenciador@lcd+1,creditos@lcd+1
   767  000F9E  EC16  F009         	call	_creditos	;wreg free
   768  000FA2  EF9C  F007         	goto	l174
   769  000FA6                     l1634:
   770  000FA6  0E03               	movlw	3
   771  000FA8  1802               	xorwf	_op^0,w,c
   772  000FAA  A4D8               	btfss	status,2,c
   773  000FAC  EFDA  F007         	goto	u851
   774  000FB0  EFDC  F007         	goto	u850
   775  000FB4                     u851:
   776  000FB4  EFE4  F007         	goto	l176
   777  000FB8                     u850:
   778  000FB8  C06A  F062         	movff	gerenciador@lcd,finaliza@lcd
   779  000FBC  C06B  F063         	movff	gerenciador@lcd+1,finaliza@lcd+1
   780  000FC0  ECE0  F008         	call	_finaliza	;wreg free
   781  000FC4  EF9C  F007         	goto	l174
   782  000FC8                     l176:
   783  000FC8  EF9C  F007         	goto	l174
   784  000FCC  0012               	return		;funcret
   785  000FCE                     __end_of_gerenciador:
   786                           	opt callstack 0
   787                           
   788 ;; *************** function _menu *****************
   789 ;; Defined at:
   790 ;;		line 100 in file "task_manager.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  lcd             2   25[COMRAM] PTR struct .
   793 ;;		 -> PORTD(1), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      unsigned char 
   798 ;; Registers used:
   799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   805 ;;      Params:         2       0       0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0
   808 ;;      Totals:         2       0       0       0       0       0       0
   809 ;;Total ram usage:        2 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    6
   812 ;; This function calls:
   813 ;;		_print_mat
   814 ;;		_strcpy
   815 ;; This function is called by:
   816 ;;		_gerenciador
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text2
   821  000AFA                     __ptext2:
   822                           	opt callstack 0
   823  000AFA                     _menu:
   824                           	opt callstack 23
   825  000AFA                     
   826                           ;task_manager.c: 101:     strcpy(mat_disp[0], "1.JOGAR.........");
   827  000AFA  0E09               	movlw	low _mat_disp
   828  000AFC  6E49               	movwf	strcpy@dest^0,c
   829  000AFE  0E00               	movlw	high _mat_disp
   830  000B00  6E4A               	movwf	(strcpy@dest+1)^0,c
   831  000B02  0E23               	movlw	low STR_17
   832  000B04  6E4B               	movwf	strcpy@src^0,c
   833  000B06  0E06               	movlw	high STR_17
   834  000B08  6E4C               	movwf	(strcpy@src+1)^0,c
   835  000B0A  EC4C  F009         	call	_strcpy	;wreg free
   836                           
   837                           ;task_manager.c: 102:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   838  000B0E  0E19               	movlw	low (_mat_disp+16)
   839  000B10  6E49               	movwf	strcpy@dest^0,c
   840  000B12  0E00               	movlw	high (_mat_disp+16)
   841  000B14  6E4A               	movwf	(strcpy@dest+1)^0,c
   842  000B16  0E56               	movlw	low STR_18
   843  000B18  6E4B               	movwf	strcpy@src^0,c
   844  000B1A  0E06               	movlw	high STR_18
   845  000B1C  6E4C               	movwf	(strcpy@src+1)^0,c
   846  000B1E  EC4C  F009         	call	_strcpy	;wreg free
   847                           
   848                           ;task_manager.c: 103:     strcpy(mat_disp[2], "3.CREDITOS......");
   849  000B22  0E29               	movlw	low (_mat_disp+32)
   850  000B24  6E49               	movwf	strcpy@dest^0,c
   851  000B26  0E00               	movlw	high (_mat_disp+32)
   852  000B28  6E4A               	movwf	(strcpy@dest+1)^0,c
   853  000B2A  0E34               	movlw	low STR_19
   854  000B2C  6E4B               	movwf	strcpy@src^0,c
   855  000B2E  0E06               	movlw	high STR_19
   856  000B30  6E4C               	movwf	(strcpy@src+1)^0,c
   857  000B32  EC4C  F009         	call	_strcpy	;wreg free
   858                           
   859                           ;task_manager.c: 104:     strcpy(mat_disp[3], "4.FINALIZAR.....");
   860  000B36  0E39               	movlw	low (_mat_disp+48)
   861  000B38  6E49               	movwf	strcpy@dest^0,c
   862  000B3A  0E00               	movlw	high (_mat_disp+48)
   863  000B3C  6E4A               	movwf	(strcpy@dest+1)^0,c
   864  000B3E  0E45               	movlw	low STR_20
   865  000B40  6E4B               	movwf	strcpy@src^0,c
   866  000B42  0E06               	movlw	high STR_20
   867  000B44  6E4C               	movwf	(strcpy@src+1)^0,c
   868  000B46  EC4C  F009         	call	_strcpy	;wreg free
   869  000B4A                     l1460:
   870                           
   871                           ;task_manager.c: 107:     mat_disp[op][15] = '<';
   872  000B4A  5002               	movf	_op^0,w,c
   873  000B4C  0D10               	mullw	16
   874  000B4E  0E18               	movlw	low (_mat_disp+15)
   875  000B50  24F3               	addwf	243,w,c
   876  000B52  6ED9               	movwf	fsr2l,c
   877  000B54  0E00               	movlw	high (_mat_disp+15)
   878  000B56  20F4               	addwfc	prodh,w,c
   879  000B58  6EDA               	movwf	fsr2h,c
   880  000B5A  0E3C               	movlw	60
   881  000B5C  6EDF               	movwf	indf2,c
   882  000B5E                     
   883                           ;task_manager.c: 108:     print_mat(lcd);
   884  000B5E  C062  F058         	movff	menu@lcd,print_mat@lcd
   885  000B62  C063  F059         	movff	menu@lcd+1,print_mat@lcd+1
   886  000B66  EC46  F007         	call	_print_mat	;wreg free
   887                           
   888                           ;task_manager.c: 110:     while(!botoes.Enter){
   889  000B6A  EFFF  F005         	goto	l1490
   890  000B6E                     l216:
   891                           
   892                           ;task_manager.c: 111:         if((botoes.U) && (op > 0)){
   893  000B6E  A008               	btfss	_botoes^0,0,c
   894  000B70  EFBC  F005         	goto	u651
   895  000B74  EFBE  F005         	goto	u650
   896  000B78                     u651:
   897  000B78  EFE2  F005         	goto	l1476
   898  000B7C                     u650:
   899  000B7C  5002               	movf	_op^0,w,c
   900  000B7E  B4D8               	btfsc	status,2,c
   901  000B80  EFC4  F005         	goto	u661
   902  000B84  EFC6  F005         	goto	u660
   903  000B88                     u661:
   904  000B88  EFE2  F005         	goto	l1476
   905  000B8C                     u660:
   906  000B8C                     
   907                           ;task_manager.c: 112:             mat_disp[op][15] = '.';
   908  000B8C  5002               	movf	_op^0,w,c
   909  000B8E  0D10               	mullw	16
   910  000B90  0E18               	movlw	low (_mat_disp+15)
   911  000B92  24F3               	addwf	243,w,c
   912  000B94  6ED9               	movwf	fsr2l,c
   913  000B96  0E00               	movlw	high (_mat_disp+15)
   914  000B98  20F4               	addwfc	prodh,w,c
   915  000B9A  6EDA               	movwf	fsr2h,c
   916  000B9C  0E2E               	movlw	46
   917  000B9E  6EDF               	movwf	indf2,c
   918  000BA0                     
   919                           ;task_manager.c: 113:             op--;
   920  000BA0  0602               	decf	_op^0,f,c
   921  000BA2                     
   922                           ;task_manager.c: 114:             botoes.U = 0;
   923  000BA2  9008               	bcf	_botoes^0,0,c
   924  000BA4                     
   925                           ;task_manager.c: 115:             mat_disp[op][15] = '<';
   926  000BA4  5002               	movf	_op^0,w,c
   927  000BA6  0D10               	mullw	16
   928  000BA8  0E18               	movlw	low (_mat_disp+15)
   929  000BAA  24F3               	addwf	243,w,c
   930  000BAC  6ED9               	movwf	fsr2l,c
   931  000BAE  0E00               	movlw	high (_mat_disp+15)
   932  000BB0  20F4               	addwfc	prodh,w,c
   933  000BB2  6EDA               	movwf	fsr2h,c
   934  000BB4  0E3C               	movlw	60
   935  000BB6  6EDF               	movwf	indf2,c
   936  000BB8                     
   937                           ;task_manager.c: 116:             print_mat(lcd);
   938  000BB8  C062  F058         	movff	menu@lcd,print_mat@lcd
   939  000BBC  C063  F059         	movff	menu@lcd+1,print_mat@lcd+1
   940  000BC0  EC46  F007         	call	_print_mat	;wreg free
   941  000BC4                     l1476:
   942                           
   943                           ;task_manager.c: 118:         if((botoes.D) && (op < 3)){
   944  000BC4  A208               	btfss	_botoes^0,1,c
   945  000BC6  EFE7  F005         	goto	u671
   946  000BCA  EFE9  F005         	goto	u670
   947  000BCE                     u671:
   948  000BCE  EFFF  F005         	goto	l1490
   949  000BD2                     u670:
   950  000BD2  0E03               	movlw	3
   951  000BD4  6002               	cpfslt	_op^0,c
   952  000BD6  EFEF  F005         	goto	u681
   953  000BDA  EFF1  F005         	goto	u680
   954  000BDE                     u681:
   955  000BDE  EFFF  F005         	goto	l1490
   956  000BE2                     u680:
   957  000BE2                     
   958                           ;task_manager.c: 119:             mat_disp[op][15] = '.';
   959  000BE2  5002               	movf	_op^0,w,c
   960  000BE4  0D10               	mullw	16
   961  000BE6  0E18               	movlw	low (_mat_disp+15)
   962  000BE8  24F3               	addwf	243,w,c
   963  000BEA  6ED9               	movwf	fsr2l,c
   964  000BEC  0E00               	movlw	high (_mat_disp+15)
   965  000BEE  20F4               	addwfc	prodh,w,c
   966  000BF0  6EDA               	movwf	fsr2h,c
   967  000BF2  0E2E               	movlw	46
   968  000BF4  6EDF               	movwf	indf2,c
   969  000BF6                     
   970                           ;task_manager.c: 120:             op++;
   971  000BF6  2A02               	incf	_op^0,f,c
   972  000BF8                     
   973                           ;task_manager.c: 121:             botoes.D = 0;
   974  000BF8  9208               	bcf	_botoes^0,1,c
   975  000BFA  EFA5  F005         	goto	l1460
   976  000BFE                     l1490:
   977                           
   978                           ;task_manager.c: 110:     while(!botoes.Enter){
   979  000BFE  A808               	btfss	_botoes^0,4,c
   980  000C00  EF04  F006         	goto	u691
   981  000C04  EF06  F006         	goto	u690
   982  000C08                     u691:
   983  000C08  EFB7  F005         	goto	l216
   984  000C0C                     u690:
   985  000C0C  0012               	return		;funcret
   986  000C0E                     __end_of_menu:
   987                           	opt callstack 0
   988                           
   989 ;; *************** function _jogar *****************
   990 ;; Defined at:
   991 ;;		line 46 in file "task_manager.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  lcd             2   25[COMRAM] PTR struct .
   994 ;;		 -> PORTD(1), 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  bateu           2   31[COMRAM] int 
   997 ;;  score           2    0        int 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1007 ;;      Params:         2       0       0       0       0       0       0
  1008 ;;      Locals:         4       0       0       0       0       0       0
  1009 ;;      Temps:          2       0       0       0       0       0       0
  1010 ;;      Totals:         8       0       0       0       0       0       0
  1011 ;;Total ram usage:        8 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    6
  1014 ;; This function calls:
  1015 ;;		_print_mat
  1016 ;;		_strcpy
  1017 ;; This function is called by:
  1018 ;;		_gerenciador
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text3
  1023  0006D8                     __ptext3:
  1024                           	opt callstack 0
  1025  0006D8                     _jogar:
  1026                           	opt callstack 23
  1027  0006D8                     
  1028                           ;task_manager.c: 48:     int bateu = 0;
  1029  0006D8  0E00               	movlw	0
  1030  0006DA  6E69               	movwf	(jogar@bateu+1)^0,c
  1031  0006DC  0E00               	movlw	0
  1032  0006DE  6E68               	movwf	jogar@bateu^0,c
  1033  0006E0                     
  1034                           ;task_manager.c: 51:     strcpy(mat_disp[0], "       SCORE:   ");
  1035  0006E0  0E09               	movlw	low _mat_disp
  1036  0006E2  6E49               	movwf	strcpy@dest^0,c
  1037  0006E4  0E00               	movlw	high _mat_disp
  1038  0006E6  6E4A               	movwf	(strcpy@dest+1)^0,c
  1039  0006E8  0E12               	movlw	low STR_9
  1040  0006EA  6E4B               	movwf	strcpy@src^0,c
  1041  0006EC  0E06               	movlw	high STR_9
  1042  0006EE  6E4C               	movwf	(strcpy@src+1)^0,c
  1043  0006F0  EC4C  F009         	call	_strcpy	;wreg free
  1044  0006F4                     
  1045                           ;task_manager.c: 52:     strcpy(mat_disp[1], "                ");
  1046  0006F4  0E19               	movlw	low (_mat_disp+16)
  1047  0006F6  6E49               	movwf	strcpy@dest^0,c
  1048  0006F8  0E00               	movlw	high (_mat_disp+16)
  1049  0006FA  6E4A               	movwf	(strcpy@dest+1)^0,c
  1050  0006FC  0E01               	movlw	low STR_10
  1051  0006FE  6E4B               	movwf	strcpy@src^0,c
  1052  000700  0E06               	movlw	high STR_10
  1053  000702  6E4C               	movwf	(strcpy@src+1)^0,c
  1054  000704  EC4C  F009         	call	_strcpy	;wreg free
  1055  000708                     
  1056                           ;task_manager.c: 53:     strcpy(mat_disp[2], "                ");
  1057  000708  0E29               	movlw	low (_mat_disp+32)
  1058  00070A  6E49               	movwf	strcpy@dest^0,c
  1059  00070C  0E00               	movlw	high (_mat_disp+32)
  1060  00070E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1061  000710  0E01               	movlw	low STR_10
  1062  000712  6E4B               	movwf	strcpy@src^0,c
  1063  000714  0E06               	movlw	high STR_10
  1064  000716  6E4C               	movwf	(strcpy@src+1)^0,c
  1065  000718  EC4C  F009         	call	_strcpy	;wreg free
  1066  00071C                     
  1067                           ;task_manager.c: 54:     strcpy(mat_disp[3], "                ");
  1068  00071C  0E39               	movlw	low (_mat_disp+48)
  1069  00071E  6E49               	movwf	strcpy@dest^0,c
  1070  000720  0E00               	movlw	high (_mat_disp+48)
  1071  000722  6E4A               	movwf	(strcpy@dest+1)^0,c
  1072  000724  0E01               	movlw	low STR_10
  1073  000726  6E4B               	movwf	strcpy@src^0,c
  1074  000728  0E06               	movlw	high STR_10
  1075  00072A  6E4C               	movwf	(strcpy@src+1)^0,c
  1076  00072C  EC4C  F009         	call	_strcpy	;wreg free
  1077                           
  1078                           ;task_manager.c: 55:     mat_disp[1][0] = '>';
  1079  000730  0E3E               	movlw	62
  1080  000732  6E19               	movwf	(_mat_disp+16)^0,c
  1081  000734                     l1502:
  1082                           
  1083                           ;task_manager.c: 56:     print_mat(lcd);
  1084  000734  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1085  000738  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1086  00073C  EC46  F007         	call	_print_mat	;wreg free
  1087                           
  1088                           ;task_manager.c: 58:     while(!botoes.Esc){
  1089  000740  EF8A  F004         	goto	l1558
  1090  000744                     l200:
  1091                           
  1092                           ;task_manager.c: 59:         if((botoes.U) && (x > 1)){
  1093  000744  A008               	btfss	_botoes^0,0,c
  1094  000746  EFA7  F003         	goto	u701
  1095  00074A  EFA9  F003         	goto	u700
  1096  00074E                     u701:
  1097  00074E  EFDD  F003         	goto	l1516
  1098  000752                     u700:
  1099  000752  0E01               	movlw	1
  1100  000754  646E               	cpfsgt	_x^0,c
  1101  000756  EFAF  F003         	goto	u711
  1102  00075A  EFB1  F003         	goto	u710
  1103  00075E                     u711:
  1104  00075E  EFDD  F003         	goto	l1516
  1105  000762                     u710:
  1106  000762                     
  1107                           ;task_manager.c: 60:             mat_disp[x][y] = ' ';
  1108  000762  506E               	movf	_x^0,w,c
  1109  000764  0D10               	mullw	16
  1110  000766  0E09               	movlw	low _mat_disp
  1111  000768  6E64               	movwf	??_jogar^0,c
  1112  00076A  0E00               	movlw	high _mat_disp
  1113  00076C  6E65               	movwf	(??_jogar+1)^0,c
  1114  00076E  50F3               	movf	243,w,c
  1115  000770  2664               	addwf	??_jogar^0,f,c
  1116  000772  50F4               	movf	244,w,c
  1117  000774  2265               	addwfc	(??_jogar+1)^0,f,c
  1118  000776  5001               	movf	_y^0,w,c
  1119  000778  2464               	addwf	??_jogar^0,w,c
  1120  00077A  6ED9               	movwf	fsr2l,c
  1121  00077C  0E00               	movlw	0
  1122  00077E  2065               	addwfc	(??_jogar+1)^0,w,c
  1123  000780  6EDA               	movwf	fsr2h,c
  1124  000782  0E20               	movlw	32
  1125  000784  6EDF               	movwf	indf2,c
  1126  000786                     
  1127                           ;task_manager.c: 61:             x--;
  1128  000786  066E               	decf	_x^0,f,c
  1129  000788                     
  1130                           ;task_manager.c: 62:             botoes.U = 0;
  1131  000788  9008               	bcf	_botoes^0,0,c
  1132  00078A                     
  1133                           ;task_manager.c: 63:             mat_disp[x][y] = '>';
  1134  00078A  506E               	movf	_x^0,w,c
  1135  00078C  0D10               	mullw	16
  1136  00078E  0E09               	movlw	low _mat_disp
  1137  000790  6E64               	movwf	??_jogar^0,c
  1138  000792  0E00               	movlw	high _mat_disp
  1139  000794  6E65               	movwf	(??_jogar+1)^0,c
  1140  000796  50F3               	movf	243,w,c
  1141  000798  2664               	addwf	??_jogar^0,f,c
  1142  00079A  50F4               	movf	244,w,c
  1143  00079C  2265               	addwfc	(??_jogar+1)^0,f,c
  1144  00079E  5001               	movf	_y^0,w,c
  1145  0007A0  2464               	addwf	??_jogar^0,w,c
  1146  0007A2  6ED9               	movwf	fsr2l,c
  1147  0007A4  0E00               	movlw	0
  1148  0007A6  2065               	addwfc	(??_jogar+1)^0,w,c
  1149  0007A8  6EDA               	movwf	fsr2h,c
  1150  0007AA  0E3E               	movlw	62
  1151  0007AC  6EDF               	movwf	indf2,c
  1152  0007AE                     
  1153                           ;task_manager.c: 64:             print_mat(lcd);
  1154  0007AE  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1155  0007B2  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1156  0007B6  EC46  F007         	call	_print_mat	;wreg free
  1157  0007BA                     l1516:
  1158                           
  1159                           ;task_manager.c: 66:         if((botoes.D) && (x < 3)){
  1160  0007BA  A208               	btfss	_botoes^0,1,c
  1161  0007BC  EFE2  F003         	goto	u721
  1162  0007C0  EFE4  F003         	goto	u720
  1163  0007C4                     u721:
  1164  0007C4  EF18  F004         	goto	l1530
  1165  0007C8                     u720:
  1166  0007C8  0E03               	movlw	3
  1167  0007CA  606E               	cpfslt	_x^0,c
  1168  0007CC  EFEA  F003         	goto	u731
  1169  0007D0  EFEC  F003         	goto	u730
  1170  0007D4                     u731:
  1171  0007D4  EF18  F004         	goto	l1530
  1172  0007D8                     u730:
  1173  0007D8                     
  1174                           ;task_manager.c: 67:             mat_disp[x][y] = ' ';
  1175  0007D8  506E               	movf	_x^0,w,c
  1176  0007DA  0D10               	mullw	16
  1177  0007DC  0E09               	movlw	low _mat_disp
  1178  0007DE  6E64               	movwf	??_jogar^0,c
  1179  0007E0  0E00               	movlw	high _mat_disp
  1180  0007E2  6E65               	movwf	(??_jogar+1)^0,c
  1181  0007E4  50F3               	movf	243,w,c
  1182  0007E6  2664               	addwf	??_jogar^0,f,c
  1183  0007E8  50F4               	movf	244,w,c
  1184  0007EA  2265               	addwfc	(??_jogar+1)^0,f,c
  1185  0007EC  5001               	movf	_y^0,w,c
  1186  0007EE  2464               	addwf	??_jogar^0,w,c
  1187  0007F0  6ED9               	movwf	fsr2l,c
  1188  0007F2  0E00               	movlw	0
  1189  0007F4  2065               	addwfc	(??_jogar+1)^0,w,c
  1190  0007F6  6EDA               	movwf	fsr2h,c
  1191  0007F8  0E20               	movlw	32
  1192  0007FA  6EDF               	movwf	indf2,c
  1193  0007FC                     
  1194                           ;task_manager.c: 68:             x++;
  1195  0007FC  2A6E               	incf	_x^0,f,c
  1196  0007FE                     
  1197                           ;task_manager.c: 69:             botoes.D = 0;
  1198  0007FE  9208               	bcf	_botoes^0,1,c
  1199  000800                     
  1200                           ;task_manager.c: 70:             mat_disp[x][y] = '>';
  1201  000800  506E               	movf	_x^0,w,c
  1202  000802  0D10               	mullw	16
  1203  000804  0E09               	movlw	low _mat_disp
  1204  000806  6E64               	movwf	??_jogar^0,c
  1205  000808  0E00               	movlw	high _mat_disp
  1206  00080A  6E65               	movwf	(??_jogar+1)^0,c
  1207  00080C  50F3               	movf	243,w,c
  1208  00080E  2664               	addwf	??_jogar^0,f,c
  1209  000810  50F4               	movf	244,w,c
  1210  000812  2265               	addwfc	(??_jogar+1)^0,f,c
  1211  000814  5001               	movf	_y^0,w,c
  1212  000816  2464               	addwf	??_jogar^0,w,c
  1213  000818  6ED9               	movwf	fsr2l,c
  1214  00081A  0E00               	movlw	0
  1215  00081C  2065               	addwfc	(??_jogar+1)^0,w,c
  1216  00081E  6EDA               	movwf	fsr2h,c
  1217  000820  0E3E               	movlw	62
  1218  000822  6EDF               	movwf	indf2,c
  1219  000824                     
  1220                           ;task_manager.c: 71:             print_mat(lcd);
  1221  000824  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1222  000828  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1223  00082C  EC46  F007         	call	_print_mat	;wreg free
  1224  000830                     l1530:
  1225                           
  1226                           ;task_manager.c: 73:         if((botoes.R) && (y < 15)){
  1227  000830  A608               	btfss	_botoes^0,3,c
  1228  000832  EF1D  F004         	goto	u741
  1229  000836  EF1F  F004         	goto	u740
  1230  00083A                     u741:
  1231  00083A  EF53  F004         	goto	l1544
  1232  00083E                     u740:
  1233  00083E  0E0F               	movlw	15
  1234  000840  6001               	cpfslt	_y^0,c
  1235  000842  EF25  F004         	goto	u751
  1236  000846  EF27  F004         	goto	u750
  1237  00084A                     u751:
  1238  00084A  EF53  F004         	goto	l1544
  1239  00084E                     u750:
  1240  00084E                     
  1241                           ;task_manager.c: 74:             mat_disp[x][y] = ' ';
  1242  00084E  506E               	movf	_x^0,w,c
  1243  000850  0D10               	mullw	16
  1244  000852  0E09               	movlw	low _mat_disp
  1245  000854  6E64               	movwf	??_jogar^0,c
  1246  000856  0E00               	movlw	high _mat_disp
  1247  000858  6E65               	movwf	(??_jogar+1)^0,c
  1248  00085A  50F3               	movf	243,w,c
  1249  00085C  2664               	addwf	??_jogar^0,f,c
  1250  00085E  50F4               	movf	244,w,c
  1251  000860  2265               	addwfc	(??_jogar+1)^0,f,c
  1252  000862  5001               	movf	_y^0,w,c
  1253  000864  2464               	addwf	??_jogar^0,w,c
  1254  000866  6ED9               	movwf	fsr2l,c
  1255  000868  0E00               	movlw	0
  1256  00086A  2065               	addwfc	(??_jogar+1)^0,w,c
  1257  00086C  6EDA               	movwf	fsr2h,c
  1258  00086E  0E20               	movlw	32
  1259  000870  6EDF               	movwf	indf2,c
  1260  000872                     
  1261                           ;task_manager.c: 75:             y++;
  1262  000872  2A01               	incf	_y^0,f,c
  1263  000874                     
  1264                           ;task_manager.c: 76:             botoes.R = 0;
  1265  000874  9608               	bcf	_botoes^0,3,c
  1266  000876                     
  1267                           ;task_manager.c: 77:             mat_disp[x][y] = '>';
  1268  000876  506E               	movf	_x^0,w,c
  1269  000878  0D10               	mullw	16
  1270  00087A  0E09               	movlw	low _mat_disp
  1271  00087C  6E64               	movwf	??_jogar^0,c
  1272  00087E  0E00               	movlw	high _mat_disp
  1273  000880  6E65               	movwf	(??_jogar+1)^0,c
  1274  000882  50F3               	movf	243,w,c
  1275  000884  2664               	addwf	??_jogar^0,f,c
  1276  000886  50F4               	movf	244,w,c
  1277  000888  2265               	addwfc	(??_jogar+1)^0,f,c
  1278  00088A  5001               	movf	_y^0,w,c
  1279  00088C  2464               	addwf	??_jogar^0,w,c
  1280  00088E  6ED9               	movwf	fsr2l,c
  1281  000890  0E00               	movlw	0
  1282  000892  2065               	addwfc	(??_jogar+1)^0,w,c
  1283  000894  6EDA               	movwf	fsr2h,c
  1284  000896  0E3E               	movlw	62
  1285  000898  6EDF               	movwf	indf2,c
  1286  00089A                     
  1287                           ;task_manager.c: 78:             print_mat(lcd);
  1288  00089A  C062  F058         	movff	jogar@lcd,print_mat@lcd
  1289  00089E  C063  F059         	movff	jogar@lcd+1,print_mat@lcd+1
  1290  0008A2  EC46  F007         	call	_print_mat	;wreg free
  1291  0008A6                     l1544:
  1292                           
  1293                           ;task_manager.c: 80:         if((botoes.L) && (y > 0)){
  1294  0008A6  A408               	btfss	_botoes^0,2,c
  1295  0008A8  EF58  F004         	goto	u761
  1296  0008AC  EF5A  F004         	goto	u760
  1297  0008B0                     u761:
  1298  0008B0  EF8A  F004         	goto	l1558
  1299  0008B4                     u760:
  1300  0008B4  5001               	movf	_y^0,w,c
  1301  0008B6  B4D8               	btfsc	status,2,c
  1302  0008B8  EF60  F004         	goto	u771
  1303  0008BC  EF62  F004         	goto	u770
  1304  0008C0                     u771:
  1305  0008C0  EF8A  F004         	goto	l1558
  1306  0008C4                     u770:
  1307  0008C4                     
  1308                           ;task_manager.c: 81:             mat_disp[x][y] = ' ';
  1309  0008C4  506E               	movf	_x^0,w,c
  1310  0008C6  0D10               	mullw	16
  1311  0008C8  0E09               	movlw	low _mat_disp
  1312  0008CA  6E64               	movwf	??_jogar^0,c
  1313  0008CC  0E00               	movlw	high _mat_disp
  1314  0008CE  6E65               	movwf	(??_jogar+1)^0,c
  1315  0008D0  50F3               	movf	243,w,c
  1316  0008D2  2664               	addwf	??_jogar^0,f,c
  1317  0008D4  50F4               	movf	244,w,c
  1318  0008D6  2265               	addwfc	(??_jogar+1)^0,f,c
  1319  0008D8  5001               	movf	_y^0,w,c
  1320  0008DA  2464               	addwf	??_jogar^0,w,c
  1321  0008DC  6ED9               	movwf	fsr2l,c
  1322  0008DE  0E00               	movlw	0
  1323  0008E0  2065               	addwfc	(??_jogar+1)^0,w,c
  1324  0008E2  6EDA               	movwf	fsr2h,c
  1325  0008E4  0E20               	movlw	32
  1326  0008E6  6EDF               	movwf	indf2,c
  1327  0008E8                     
  1328                           ;task_manager.c: 82:             y--;
  1329  0008E8  0601               	decf	_y^0,f,c
  1330  0008EA                     
  1331                           ;task_manager.c: 83:             botoes.L = 0;
  1332  0008EA  9408               	bcf	_botoes^0,2,c
  1333  0008EC                     
  1334                           ;task_manager.c: 84:             mat_disp[x][y] = '>';
  1335  0008EC  506E               	movf	_x^0,w,c
  1336  0008EE  0D10               	mullw	16
  1337  0008F0  0E09               	movlw	low _mat_disp
  1338  0008F2  6E64               	movwf	??_jogar^0,c
  1339  0008F4  0E00               	movlw	high _mat_disp
  1340  0008F6  6E65               	movwf	(??_jogar+1)^0,c
  1341  0008F8  50F3               	movf	243,w,c
  1342  0008FA  2664               	addwf	??_jogar^0,f,c
  1343  0008FC  50F4               	movf	244,w,c
  1344  0008FE  2265               	addwfc	(??_jogar+1)^0,f,c
  1345  000900  5001               	movf	_y^0,w,c
  1346  000902  2464               	addwf	??_jogar^0,w,c
  1347  000904  6ED9               	movwf	fsr2l,c
  1348  000906  0E00               	movlw	0
  1349  000908  2065               	addwfc	(??_jogar+1)^0,w,c
  1350  00090A  6EDA               	movwf	fsr2h,c
  1351  00090C  0E3E               	movlw	62
  1352  00090E  6EDF               	movwf	indf2,c
  1353  000910  EF9A  F003         	goto	l1502
  1354  000914                     l1558:
  1355                           
  1356                           ;task_manager.c: 58:     while(!botoes.Esc){
  1357  000914  AA08               	btfss	_botoes^0,5,c
  1358  000916  EF8F  F004         	goto	u781
  1359  00091A  EF91  F004         	goto	u780
  1360  00091E                     u781:
  1361  00091E  EFA2  F003         	goto	l200
  1362  000922                     u780:
  1363  000922  0012               	return		;funcret
  1364  000924                     __end_of_jogar:
  1365                           	opt callstack 0
  1366                           
  1367 ;; *************** function _instrucoes *****************
  1368 ;; Defined at:
  1369 ;;		line 91 in file "task_manager.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  lcd             2   25[COMRAM] PTR struct .
  1372 ;;		 -> PORTD(1), 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1384 ;;      Params:         2       0       0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0
  1387 ;;      Totals:         2       0       0       0       0       0       0
  1388 ;;Total ram usage:        2 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    6
  1391 ;; This function calls:
  1392 ;;		_print_mat
  1393 ;;		_strcpy
  1394 ;; This function is called by:
  1395 ;;		_gerenciador
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text4
  1400  001154                     __ptext4:
  1401                           	opt callstack 0
  1402  001154                     _instrucoes:
  1403                           	opt callstack 23
  1404  001154                     
  1405                           ;task_manager.c: 92:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  1406  001154  0E09               	movlw	low _mat_disp
  1407  001156  6E49               	movwf	strcpy@dest^0,c
  1408  001158  0E00               	movlw	high _mat_disp
  1409  00115A  6E4A               	movwf	(strcpy@dest+1)^0,c
  1410  00115C  0EB7               	movlw	low STR_13
  1411  00115E  6E4B               	movwf	strcpy@src^0,c
  1412  001160  0E06               	movlw	high STR_13
  1413  001162  6E4C               	movwf	(strcpy@src+1)^0,c
  1414  001164  EC4C  F009         	call	_strcpy	;wreg free
  1415                           
  1416                           ;task_manager.c: 93:     strcpy(mat_disp[1], "NAVE           ");
  1417  001168  0E19               	movlw	low (_mat_disp+16)
  1418  00116A  6E49               	movwf	strcpy@dest^0,c
  1419  00116C  0E00               	movlw	high (_mat_disp+16)
  1420  00116E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1421  001170  0E67               	movlw	low STR_14
  1422  001172  6E4B               	movwf	strcpy@src^0,c
  1423  001174  0E06               	movlw	high STR_14
  1424  001176  6E4C               	movwf	(strcpy@src+1)^0,c
  1425  001178  EC4C  F009         	call	_strcpy	;wreg free
  1426                           
  1427                           ;task_manager.c: 94:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  1428  00117C  0E29               	movlw	low (_mat_disp+32)
  1429  00117E  6E49               	movwf	strcpy@dest^0,c
  1430  001180  0E00               	movlw	high (_mat_disp+32)
  1431  001182  6E4A               	movwf	(strcpy@dest+1)^0,c
  1432  001184  0E87               	movlw	low STR_15
  1433  001186  6E4B               	movwf	strcpy@src^0,c
  1434  001188  0E06               	movlw	high STR_15
  1435  00118A  6E4C               	movwf	(strcpy@src+1)^0,c
  1436  00118C  EC4C  F009         	call	_strcpy	;wreg free
  1437                           
  1438                           ;task_manager.c: 95:     strcpy(mat_disp[3], "MENU           ");
  1439  001190  0E39               	movlw	low (_mat_disp+48)
  1440  001192  6E49               	movwf	strcpy@dest^0,c
  1441  001194  0E00               	movlw	high (_mat_disp+48)
  1442  001196  6E4A               	movwf	(strcpy@dest+1)^0,c
  1443  001198  0E77               	movlw	low STR_16
  1444  00119A  6E4B               	movwf	strcpy@src^0,c
  1445  00119C  0E06               	movlw	high STR_16
  1446  00119E  6E4C               	movwf	(strcpy@src+1)^0,c
  1447  0011A0  EC4C  F009         	call	_strcpy	;wreg free
  1448  0011A4                     
  1449                           ;task_manager.c: 96:     print_mat(lcd);
  1450  0011A4  C062  F058         	movff	instrucoes@lcd,print_mat@lcd
  1451  0011A8  C063  F059         	movff	instrucoes@lcd+1,print_mat@lcd+1
  1452  0011AC  EC46  F007         	call	_print_mat	;wreg free
  1453  0011B0                     l209:
  1454  0011B0  AA08               	btfss	_botoes^0,5,c
  1455  0011B2  EFDD  F008         	goto	u791
  1456  0011B6  EFDF  F008         	goto	u790
  1457  0011BA                     u791:
  1458  0011BA  EFD8  F008         	goto	l209
  1459  0011BE                     u790:
  1460  0011BE  0012               	return		;funcret
  1461  0011C0                     __end_of_instrucoes:
  1462                           	opt callstack 0
  1463                           
  1464 ;; *************** function _finaliza *****************
  1465 ;; Defined at:
  1466 ;;		line 37 in file "task_manager.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  lcd             2   25[COMRAM] PTR struct .
  1469 ;;		 -> PORTD(1), 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1481 ;;      Params:         2       0       0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0
  1484 ;;      Totals:         2       0       0       0       0       0       0
  1485 ;;Total ram usage:        2 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    6
  1488 ;; This function calls:
  1489 ;;		_print_mat
  1490 ;;		_strcpy
  1491 ;; This function is called by:
  1492 ;;		_gerenciador
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text5
  1497  0011C0                     __ptext5:
  1498                           	opt callstack 0
  1499  0011C0                     _finaliza:
  1500                           	opt callstack 23
  1501  0011C0                     
  1502                           ;task_manager.c: 38:     strcpy(mat_disp[0], "HIBERNANDO.....");
  1503  0011C0  0E09               	movlw	low _mat_disp
  1504  0011C2  6E49               	movwf	strcpy@dest^0,c
  1505  0011C4  0E00               	movlw	high _mat_disp
  1506  0011C6  6E4A               	movwf	(strcpy@dest+1)^0,c
  1507  0011C8  0E97               	movlw	low STR_5
  1508  0011CA  6E4B               	movwf	strcpy@src^0,c
  1509  0011CC  0E06               	movlw	high STR_5
  1510  0011CE  6E4C               	movwf	(strcpy@src+1)^0,c
  1511  0011D0  EC4C  F009         	call	_strcpy	;wreg free
  1512                           
  1513                           ;task_manager.c: 39:     strcpy(mat_disp[1], "               ");
  1514  0011D4  0E19               	movlw	low (_mat_disp+16)
  1515  0011D6  6E49               	movwf	strcpy@dest^0,c
  1516  0011D8  0E00               	movlw	high (_mat_disp+16)
  1517  0011DA  6E4A               	movwf	(strcpy@dest+1)^0,c
  1518  0011DC  0E02               	movlw	low (STR_10+1)
  1519  0011DE  6E4B               	movwf	strcpy@src^0,c
  1520  0011E0  0E06               	movlw	high (STR_10+1)
  1521  0011E2  6E4C               	movwf	(strcpy@src+1)^0,c
  1522  0011E4  EC4C  F009         	call	_strcpy	;wreg free
  1523                           
  1524                           ;task_manager.c: 40:     strcpy(mat_disp[2], "               ");
  1525  0011E8  0E29               	movlw	low (_mat_disp+32)
  1526  0011EA  6E49               	movwf	strcpy@dest^0,c
  1527  0011EC  0E00               	movlw	high (_mat_disp+32)
  1528  0011EE  6E4A               	movwf	(strcpy@dest+1)^0,c
  1529  0011F0  0E02               	movlw	low (STR_10+1)
  1530  0011F2  6E4B               	movwf	strcpy@src^0,c
  1531  0011F4  0E06               	movlw	high (STR_10+1)
  1532  0011F6  6E4C               	movwf	(strcpy@src+1)^0,c
  1533  0011F8  EC4C  F009         	call	_strcpy	;wreg free
  1534                           
  1535                           ;task_manager.c: 41:     strcpy(mat_disp[3], "               ");
  1536  0011FC  0E39               	movlw	low (_mat_disp+48)
  1537  0011FE  6E49               	movwf	strcpy@dest^0,c
  1538  001200  0E00               	movlw	high (_mat_disp+48)
  1539  001202  6E4A               	movwf	(strcpy@dest+1)^0,c
  1540  001204  0E02               	movlw	low (STR_10+1)
  1541  001206  6E4B               	movwf	strcpy@src^0,c
  1542  001208  0E06               	movlw	high (STR_10+1)
  1543  00120A  6E4C               	movwf	(strcpy@src+1)^0,c
  1544  00120C  EC4C  F009         	call	_strcpy	;wreg free
  1545  001210                     
  1546                           ;task_manager.c: 42:     print_mat(lcd);
  1547  001210  C062  F058         	movff	finaliza@lcd,print_mat@lcd
  1548  001214  C063  F059         	movff	finaliza@lcd+1,print_mat@lcd+1
  1549  001218  EC46  F007         	call	_print_mat	;wreg free
  1550  00121C                     l193:
  1551  00121C  AA08               	btfss	_botoes^0,5,c
  1552  00121E  EF13  F009         	goto	u811
  1553  001222  EF15  F009         	goto	u810
  1554  001226                     u811:
  1555  001226  EF0E  F009         	goto	l193
  1556  00122A                     u810:
  1557  00122A  0012               	return		;funcret
  1558  00122C                     __end_of_finaliza:
  1559                           	opt callstack 0
  1560                           
  1561 ;; *************** function _creditos *****************
  1562 ;; Defined at:
  1563 ;;		line 27 in file "task_manager.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  lcd             2   25[COMRAM] PTR struct .
  1566 ;;		 -> PORTD(1), 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         2       0       0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0
  1581 ;;      Totals:         2       0       0       0       0       0       0
  1582 ;;Total ram usage:        2 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    6
  1585 ;; This function calls:
  1586 ;;		_print_mat
  1587 ;;		_strcpy
  1588 ;; This function is called by:
  1589 ;;		_gerenciador
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text6
  1594  00122C                     __ptext6:
  1595                           	opt callstack 0
  1596  00122C                     _creditos:
  1597                           	opt callstack 23
  1598  00122C                     
  1599                           ;task_manager.c: 29:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  1600  00122C  0E09               	movlw	low _mat_disp
  1601  00122E  6E49               	movwf	strcpy@dest^0,c
  1602  001230  0E00               	movlw	high _mat_disp
  1603  001232  6E4A               	movwf	(strcpy@dest+1)^0,c
  1604  001234  0EA7               	movlw	low STR_1
  1605  001236  6E4B               	movwf	strcpy@src^0,c
  1606  001238  0E06               	movlw	high STR_1
  1607  00123A  6E4C               	movwf	(strcpy@src+1)^0,c
  1608  00123C  EC4C  F009         	call	_strcpy	;wreg free
  1609                           
  1610                           ;task_manager.c: 30:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  1611  001240  0E19               	movlw	low (_mat_disp+16)
  1612  001242  6E49               	movwf	strcpy@dest^0,c
  1613  001244  0E00               	movlw	high (_mat_disp+16)
  1614  001246  6E4A               	movwf	(strcpy@dest+1)^0,c
  1615  001248  0EC7               	movlw	low STR_2
  1616  00124A  6E4B               	movwf	strcpy@src^0,c
  1617  00124C  0E06               	movlw	high STR_2
  1618  00124E  6E4C               	movwf	(strcpy@src+1)^0,c
  1619  001250  EC4C  F009         	call	_strcpy	;wreg free
  1620                           
  1621                           ;task_manager.c: 31:     strcpy(mat_disp[2], "               ");
  1622  001254  0E29               	movlw	low (_mat_disp+32)
  1623  001256  6E49               	movwf	strcpy@dest^0,c
  1624  001258  0E00               	movlw	high (_mat_disp+32)
  1625  00125A  6E4A               	movwf	(strcpy@dest+1)^0,c
  1626  00125C  0E02               	movlw	low (STR_10+1)
  1627  00125E  6E4B               	movwf	strcpy@src^0,c
  1628  001260  0E06               	movlw	high (STR_10+1)
  1629  001262  6E4C               	movwf	(strcpy@src+1)^0,c
  1630  001264  EC4C  F009         	call	_strcpy	;wreg free
  1631                           
  1632                           ;task_manager.c: 32:     strcpy(mat_disp[3], "               ");
  1633  001268  0E39               	movlw	low (_mat_disp+48)
  1634  00126A  6E49               	movwf	strcpy@dest^0,c
  1635  00126C  0E00               	movlw	high (_mat_disp+48)
  1636  00126E  6E4A               	movwf	(strcpy@dest+1)^0,c
  1637  001270  0E02               	movlw	low (STR_10+1)
  1638  001272  6E4B               	movwf	strcpy@src^0,c
  1639  001274  0E06               	movlw	high (STR_10+1)
  1640  001276  6E4C               	movwf	(strcpy@src+1)^0,c
  1641  001278  EC4C  F009         	call	_strcpy	;wreg free
  1642  00127C                     
  1643                           ;task_manager.c: 33:     print_mat(lcd);
  1644  00127C  C062  F058         	movff	creditos@lcd,print_mat@lcd
  1645  001280  C063  F059         	movff	creditos@lcd+1,print_mat@lcd+1
  1646  001284  EC46  F007         	call	_print_mat	;wreg free
  1647  001288                     l187:
  1648  001288  AA08               	btfss	_botoes^0,5,c
  1649  00128A  EF49  F009         	goto	u801
  1650  00128E  EF4B  F009         	goto	u800
  1651  001292                     u801:
  1652  001292  EF44  F009         	goto	l187
  1653  001296                     u800:
  1654  001296  0012               	return		;funcret
  1655  001298                     __end_of_creditos:
  1656                           	opt callstack 0
  1657                           
  1658 ;; *************** function _strcpy *****************
  1659 ;; Defined at:
  1660 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  dest            2    0[COMRAM] PTR unsigned char 
  1663 ;;		 -> mat_disp(64), 
  1664 ;;  src             2    2[COMRAM] PTR const unsigned char 
  1665 ;;		 -> STR_20(17), STR_19(17), STR_18(17), STR_17(17), 
  1666 ;;		 -> STR_16(16), STR_15(16), STR_14(16), STR_13(16), 
  1667 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1668 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  1669 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  d               2    6[COMRAM] PTR unsigned char 
  1672 ;;		 -> mat_disp(64), 
  1673 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1674 ;;		 -> STR_20(17), STR_19(17), STR_18(17), STR_17(17), 
  1675 ;;		 -> STR_16(16), STR_15(16), STR_14(16), STR_13(16), 
  1676 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1677 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  1678 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  2    0[COMRAM] PTR unsigned char 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         4       0       0       0       0       0       0
  1689 ;;      Locals:         4       0       0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0
  1691 ;;      Totals:         8       0       0       0       0       0       0
  1692 ;;Total ram usage:        8 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    2
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_creditos
  1699 ;;		_finaliza
  1700 ;;		_jogar
  1701 ;;		_instrucoes
  1702 ;;		_menu
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text7
  1707  001298                     __ptext7:
  1708                           	opt callstack 0
  1709  001298                     _strcpy:
  1710                           	opt callstack 26
  1711  001298  C04B  F04D         	movff	strcpy@src,strcpy@s
  1712  00129C  C04C  F04E         	movff	strcpy@src+1,strcpy@s+1
  1713  0012A0  C049  F04F         	movff	strcpy@dest,strcpy@d
  1714  0012A4  C04A  F050         	movff	strcpy@dest+1,strcpy@d+1
  1715  0012A8                     l1456:
  1716  0012A8  C04D  FFF6         	movff	strcpy@s,tblptrl
  1717  0012AC  C04E  FFF7         	movff	strcpy@s+1,tblptrh
  1718  0012B0  4A4D               	infsnz	strcpy@s^0,f,c
  1719  0012B2  2A4E               	incf	(strcpy@s+1)^0,f,c
  1720  0012B4                     	if	0	;tblptru may be non-zero
  1721  0012B4                     	endif
  1722  0012B4                     	if	0	;tblptru may be non-zero
  1723  0012B4                     	endif
  1724  0012B4  C04F  FFD9         	movff	strcpy@d,fsr2l
  1725  0012B8  C050  FFDA         	movff	strcpy@d+1,fsr2h
  1726  0012BC  4A4F               	infsnz	strcpy@d^0,f,c
  1727  0012BE  2A50               	incf	(strcpy@d+1)^0,f,c
  1728  0012C0  0008               	tblrd		*
  1729  0012C2  CFF5 FFDF          	movff	tablat,indf2
  1730  0012C6  50DF               	movf	indf2,w,c
  1731  0012C8  A4D8               	btfss	status,2,c
  1732  0012CA  EF69  F009         	goto	u641
  1733  0012CE  EF6B  F009         	goto	u640
  1734  0012D2                     u641:
  1735  0012D2  EF54  F009         	goto	l1456
  1736  0012D6                     u640:
  1737  0012D6  0012               	return		;funcret
  1738  0012D8                     __end_of_strcpy:
  1739                           	opt callstack 0
  1740                           
  1741 ;; *************** function _print_mat *****************
  1742 ;; Defined at:
  1743 ;;		line 199 in file "lcd.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  lcd             2   15[COMRAM] PTR struct .
  1746 ;;		 -> PORTD(1), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  j               2   21[COMRAM] int 
  1749 ;;  i               2   23[COMRAM] int 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1759 ;;      Params:         2       0       0       0       0       0       0
  1760 ;;      Locals:         4       0       0       0       0       0       0
  1761 ;;      Temps:          4       0       0       0       0       0       0
  1762 ;;      Totals:        10       0       0       0       0       0       0
  1763 ;;Total ram usage:       10 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    5
  1766 ;; This function calls:
  1767 ;;		_goto_XY
  1768 ;;		_write_char
  1769 ;; This function is called by:
  1770 ;;		_creditos
  1771 ;;		_finaliza
  1772 ;;		_jogar
  1773 ;;		_instrucoes
  1774 ;;		_menu
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text8
  1779  000E8C                     __ptext8:
  1780                           	opt callstack 0
  1781  000E8C                     _print_mat:
  1782                           	opt callstack 23
  1783  000E8C                     
  1784                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  1785  000E8C  0E00               	movlw	0
  1786  000E8E  6E61               	movwf	(print_mat@i+1)^0,c
  1787  000E90  0E00               	movlw	0
  1788  000E92  6E60               	movwf	print_mat@i^0,c
  1789  000E94                     l1436:
  1790                           
  1791                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  1792  000E94  C058  F050         	movff	print_mat@lcd,goto_XY@lcd
  1793  000E98  C059  F051         	movff	print_mat@lcd+1,goto_XY@lcd+1
  1794  000E9C  2860               	incf	print_mat@i^0,w,c
  1795  000E9E  6E52               	movwf	goto_XY@x^0,c
  1796  000EA0  0E01               	movlw	1
  1797  000EA2  6E53               	movwf	goto_XY@y^0,c
  1798  000EA4  ECE8  F006         	call	_goto_XY	;wreg free
  1799  000EA8                     
  1800                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  1801  000EA8  0E00               	movlw	0
  1802  000EAA  6E5F               	movwf	(print_mat@j+1)^0,c
  1803  000EAC  0E00               	movlw	0
  1804  000EAE  6E5E               	movwf	print_mat@j^0,c
  1805  000EB0                     l1444:
  1806                           
  1807                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  1808  000EB0  C058  F049         	movff	print_mat@lcd,write_char@lcd
  1809  000EB4  C059  F04A         	movff	print_mat@lcd+1,write_char@lcd+1
  1810  000EB8  C060  F05A         	movff	print_mat@i,??_print_mat
  1811  000EBC  C061  F05B         	movff	print_mat@i+1,??_print_mat+1
  1812  000EC0  3A5A               	swapf	??_print_mat^0,f,c
  1813  000EC2  3A5B               	swapf	(??_print_mat+1)^0,f,c
  1814  000EC4  0EF0               	movlw	240
  1815  000EC6  165B               	andwf	(??_print_mat+1)^0,f,c
  1816  000EC8  505A               	movf	??_print_mat^0,w,c
  1817  000ECA  0B0F               	andlw	15
  1818  000ECC  125B               	iorwf	(??_print_mat+1)^0,f,c
  1819  000ECE  0EF0               	movlw	240
  1820  000ED0  165A               	andwf	??_print_mat^0,f,c
  1821  000ED2  0E09               	movlw	low _mat_disp
  1822  000ED4  6E5C               	movwf	(??_print_mat+2)^0,c
  1823  000ED6  0E00               	movlw	high _mat_disp
  1824  000ED8  6E5D               	movwf	(??_print_mat+3)^0,c
  1825  000EDA  505A               	movf	??_print_mat^0,w,c
  1826  000EDC  265C               	addwf	(??_print_mat+2)^0,f,c
  1827  000EDE  505B               	movf	(??_print_mat+1)^0,w,c
  1828  000EE0  225D               	addwfc	(??_print_mat+3)^0,f,c
  1829  000EE2  505E               	movf	print_mat@j^0,w,c
  1830  000EE4  245C               	addwf	(??_print_mat+2)^0,w,c
  1831  000EE6  6ED9               	movwf	fsr2l,c
  1832  000EE8  505F               	movf	(print_mat@j+1)^0,w,c
  1833  000EEA  205D               	addwfc	(??_print_mat+3)^0,w,c
  1834  000EEC  6EDA               	movwf	fsr2h,c
  1835  000EEE  50DF               	movf	indf2,w,c
  1836  000EF0  6E4B               	movwf	write_char@c^0,c
  1837  000EF2  EC07  F006         	call	_write_char	;wreg free
  1838  000EF6  4A5E               	infsnz	print_mat@j^0,f,c
  1839  000EF8  2A5F               	incf	(print_mat@j+1)^0,f,c
  1840  000EFA  BE5F               	btfsc	(print_mat@j+1)^0,7,c
  1841  000EFC  EF89  F007         	goto	u621
  1842  000F00  505F               	movf	(print_mat@j+1)^0,w,c
  1843  000F02  E109               	bnz	u620
  1844  000F04  0E10               	movlw	16
  1845  000F06  5C5E               	subwf	print_mat@j^0,w,c
  1846  000F08  A0D8               	btfss	status,0,c
  1847  000F0A  EF89  F007         	goto	u621
  1848  000F0E  EF8B  F007         	goto	u620
  1849  000F12                     u621:
  1850  000F12  EF58  F007         	goto	l1444
  1851  000F16                     u620:
  1852  000F16                     
  1853                           ;lcd.c: 204:     }
  1854  000F16  4A60               	infsnz	print_mat@i^0,f,c
  1855  000F18  2A61               	incf	(print_mat@i+1)^0,f,c
  1856  000F1A  BE61               	btfsc	(print_mat@i+1)^0,7,c
  1857  000F1C  EF99  F007         	goto	u631
  1858  000F20  5061               	movf	(print_mat@i+1)^0,w,c
  1859  000F22  E109               	bnz	u630
  1860  000F24  0E04               	movlw	4
  1861  000F26  5C60               	subwf	print_mat@i^0,w,c
  1862  000F28  A0D8               	btfss	status,0,c
  1863  000F2A  EF99  F007         	goto	u631
  1864  000F2E  EF9B  F007         	goto	u630
  1865  000F32                     u631:
  1866  000F32  EF4A  F007         	goto	l1436
  1867  000F36                     u630:
  1868  000F36  0012               	return		;funcret
  1869  000F38                     __end_of_print_mat:
  1870                           	opt callstack 0
  1871                           
  1872 ;; *************** function _write_char *****************
  1873 ;; Defined at:
  1874 ;;		line 133 in file "lcd.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  lcd             2    0[COMRAM] PTR struct .
  1877 ;;		 -> PORTD(1), 
  1878 ;;  c               1    2[COMRAM] unsigned char 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1890 ;;      Params:         3       0       0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0       0       0
  1892 ;;      Temps:          1       0       0       0       0       0       0
  1893 ;;      Totals:         4       0       0       0       0       0       0
  1894 ;;Total ram usage:        4 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    2
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_print_mat
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text9
  1905  000C0E                     __ptext9:
  1906                           	opt callstack 0
  1907  000C0E                     _write_char:
  1908                           	opt callstack 25
  1909  000C0E                     
  1910                           ;lcd.c: 134:     lcd->E = 0;
  1911  000C0E  C049  FFD9         	movff	write_char@lcd,fsr2l
  1912  000C12  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1913  000C16  94DF               	bcf	indf2,2,c
  1914                           
  1915                           ;lcd.c: 135:     lcd->RS = 1;
  1916  000C18  C049  FFD9         	movff	write_char@lcd,fsr2l
  1917  000C1C  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1918  000C20  80DF               	bsf	indf2,0,c
  1919                           
  1920                           ;lcd.c: 136:     lcd->R_W = 0;
  1921  000C22  C049  FFD9         	movff	write_char@lcd,fsr2l
  1922  000C26  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1923  000C2A  92DF               	bcf	indf2,1,c
  1924  000C2C                     
  1925                           ;lcd.c: 139:     lcd->data = (c>>4);
  1926  000C2C  C04B  F04C         	movff	write_char@c,??_write_char
  1927  000C30  3A4C               	swapf	??_write_char^0,f,c
  1928  000C32  0E0F               	movlw	15
  1929  000C34  164C               	andwf	??_write_char^0,f,c
  1930  000C36  C049  FFD9         	movff	write_char@lcd,fsr2l
  1931  000C3A  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1932  000C3E  3A4C               	swapf	??_write_char^0,f,c
  1933  000C40  50DF               	movf	indf2,w,c
  1934  000C42  184C               	xorwf	??_write_char^0,w,c
  1935  000C44  0B0F               	andlw	-241
  1936  000C46  184C               	xorwf	??_write_char^0,w,c
  1937  000C48  6EDF               	movwf	indf2,c
  1938  000C4A                     
  1939                           ;lcd.c: 140:     lcd->E = 1;
  1940  000C4A  C049  FFD9         	movff	write_char@lcd,fsr2l
  1941  000C4E  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1942  000C52  84DF               	bsf	indf2,2,c
  1943  000C54                     
  1944                           ;lcd.c: 141:     lcd->E = 0;
  1945  000C54  C049  FFD9         	movff	write_char@lcd,fsr2l
  1946  000C58  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1947  000C5C  94DF               	bcf	indf2,2,c
  1948  000C5E                     
  1949                           ;lcd.c: 144:     lcd->data = (c);
  1950  000C5E  C04B  F04C         	movff	write_char@c,??_write_char
  1951  000C62  C049  FFD9         	movff	write_char@lcd,fsr2l
  1952  000C66  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1953  000C6A  3A4C               	swapf	??_write_char^0,f,c
  1954  000C6C  50DF               	movf	indf2,w,c
  1955  000C6E  184C               	xorwf	??_write_char^0,w,c
  1956  000C70  0B0F               	andlw	-241
  1957  000C72  184C               	xorwf	??_write_char^0,w,c
  1958  000C74  6EDF               	movwf	indf2,c
  1959                           
  1960                           ;lcd.c: 145:     lcd->E = 1;
  1961  000C76  C049  FFD9         	movff	write_char@lcd,fsr2l
  1962  000C7A  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1963  000C7E  84DF               	bsf	indf2,2,c
  1964                           
  1965                           ;lcd.c: 146:     lcd->E = 0;
  1966  000C80  C049  FFD9         	movff	write_char@lcd,fsr2l
  1967  000C84  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1968  000C88  94DF               	bcf	indf2,2,c
  1969  000C8A                     
  1970                           ;lcd.c: 149:     TRISD = 0xF0;
  1971  000C8A  0EF0               	movlw	240
  1972  000C8C  6E95               	movwf	149,c	;volatile
  1973  000C8E                     
  1974                           ;lcd.c: 150:     lcd->RS = 0;
  1975  000C8E  C049  FFD9         	movff	write_char@lcd,fsr2l
  1976  000C92  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1977  000C96  90DF               	bcf	indf2,0,c
  1978  000C98                     
  1979                           ;lcd.c: 151:     lcd->R_W = 1;
  1980  000C98  C049  FFD9         	movff	write_char@lcd,fsr2l
  1981  000C9C  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1982  000CA0  82DF               	bsf	indf2,1,c
  1983  000CA2                     l1416:
  1984                           
  1985                           ;lcd.c: 153:        lcd->E = 1;
  1986  000CA2  C049  FFD9         	movff	write_char@lcd,fsr2l
  1987  000CA6  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1988  000CAA  84DF               	bsf	indf2,2,c
  1989  000CAC                     
  1990                           ;lcd.c: 154:        lcd->E = 0;
  1991  000CAC  C049  FFD9         	movff	write_char@lcd,fsr2l
  1992  000CB0  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1993  000CB4  94DF               	bcf	indf2,2,c
  1994  000CB6                     
  1995                           ;lcd.c: 155:        lcd->E = 1;
  1996  000CB6  C049  FFD9         	movff	write_char@lcd,fsr2l
  1997  000CBA  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  1998  000CBE  84DF               	bsf	indf2,2,c
  1999  000CC0                     
  2000                           ;lcd.c: 156:        lcd->E = 0;
  2001  000CC0  C049  FFD9         	movff	write_char@lcd,fsr2l
  2002  000CC4  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2003  000CC8  94DF               	bcf	indf2,2,c
  2004  000CCA                     
  2005                           ;lcd.c: 157:     } while(lcd->data&0x08);
  2006  000CCA  C049  FFD9         	movff	write_char@lcd,fsr2l
  2007  000CCE  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2008  000CD2  38DF               	swapf	indf2,w,c
  2009  000CD4  0B0F               	andlw	15
  2010  000CD6  6E4C               	movwf	??_write_char^0,c
  2011  000CD8  B64C               	btfsc	??_write_char^0,3,c
  2012  000CDA  EF71  F006         	goto	u611
  2013  000CDE  EF73  F006         	goto	u610
  2014  000CE2                     u611:
  2015  000CE2  EF51  F006         	goto	l1416
  2016  000CE6                     u610:
  2017  000CE6                     
  2018                           ;lcd.c: 158:     lcd->R_W = 0;
  2019  000CE6  C049  FFD9         	movff	write_char@lcd,fsr2l
  2020  000CEA  C04A  FFDA         	movff	write_char@lcd+1,fsr2h
  2021  000CEE  92DF               	bcf	indf2,1,c
  2022  000CF0                     
  2023                           ;lcd.c: 159:     TRISD = 0x00;
  2024  000CF0  0E00               	movlw	0
  2025  000CF2  6E95               	movwf	149,c	;volatile
  2026  000CF4  0012               	return		;funcret
  2027  000CF6                     __end_of_write_char:
  2028                           	opt callstack 0
  2029                           
  2030 ;; *************** function _goto_XY *****************
  2031 ;; Defined at:
  2032 ;;		line 76 in file "lcd.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  lcd             2    7[COMRAM] PTR struct .
  2035 ;;		 -> PORTD(1), 
  2036 ;;  x               1    9[COMRAM] unsigned char 
  2037 ;;  y               1   10[COMRAM] unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  temp            1   14[COMRAM] unsigned char 
  2040 ;;  a               1   13[COMRAM] unsigned char 
  2041 ;;  z               1   12[COMRAM] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2051 ;;      Params:         4       0       0       0       0       0       0
  2052 ;;      Locals:         3       0       0       0       0       0       0
  2053 ;;      Temps:          1       0       0       0       0       0       0
  2054 ;;      Totals:         8       0       0       0       0       0       0
  2055 ;;Total ram usage:        8 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    4
  2058 ;; This function calls:
  2059 ;;		_lcd_cmd
  2060 ;; This function is called by:
  2061 ;;		_print_mat
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text10
  2066  000DD0                     __ptext10:
  2067                           	opt callstack 0
  2068  000DD0                     _goto_XY:
  2069                           	opt callstack 23
  2070  000DD0                     
  2071                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  2072  000DD0  0452               	decf	goto_XY@x^0,w,c
  2073  000DD2  A4D8               	btfss	status,2,c
  2074  000DD4  EFEE  F006         	goto	u571
  2075  000DD8  EFF0  F006         	goto	u570
  2076  000DDC                     u571:
  2077  000DDC  EF12  F007         	goto	l1364
  2078  000DE0                     u570:
  2079  000DE0                     
  2080                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  2081  000DE0  5053               	movf	goto_XY@y^0,w,c
  2082  000DE2  0F7F               	addlw	127
  2083  000DE4  6E57               	movwf	goto_XY@temp^0,c
  2084                           
  2085                           ;lcd.c: 81:        z = temp>>4;
  2086  000DE6  3857               	swapf	goto_XY@temp^0,w,c
  2087  000DE8  0B0F               	andlw	15
  2088  000DEA  6E55               	movwf	goto_XY@z^0,c
  2089  000DEC                     l1356:
  2090                           
  2091                           ;lcd.c: 82:        a = temp;
  2092  000DEC  C057  F056         	movff	goto_XY@temp,goto_XY@a
  2093  000DF0                     
  2094                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  2095  000DF0  C050  F04C         	movff	goto_XY@lcd,lcd_cmd@lcd
  2096  000DF4  C051  F04D         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  2097  000DF8  C055  F04E         	movff	goto_XY@z,lcd_cmd@a
  2098  000DFC  EC6C  F009         	call	_lcd_cmd	;wreg free
  2099  000E00                     
  2100                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  2101  000E00  0E06               	movlw	6
  2102  000E02  6E54               	movwf	??_goto_XY^0,c
  2103  000E04  0E30               	movlw	48
  2104  000E06                     u867:
  2105  000E06  2EE8               	decfsz	wreg,f,c
  2106  000E08  D7FE               	bra	u867
  2107  000E0A  2E54               	decfsz	??_goto_XY^0,f,c
  2108  000E0C  D7FC               	bra	u867
  2109  000E0E  D000               	nop2	
  2110  000E10                     
  2111                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  2112  000E10  C050  F04C         	movff	goto_XY@lcd,lcd_cmd@lcd
  2113  000E14  C051  F04D         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  2114  000E18  C056  F04E         	movff	goto_XY@a,lcd_cmd@a
  2115  000E1C  EC6C  F009         	call	_lcd_cmd	;wreg free
  2116                           
  2117                           ;lcd.c: 86:     }
  2118  000E20  EF45  F007         	goto	l73
  2119  000E24                     l1364:
  2120  000E24  0E02               	movlw	2
  2121  000E26  1852               	xorwf	goto_XY@x^0,w,c
  2122  000E28  A4D8               	btfss	status,2,c
  2123  000E2A  EF19  F007         	goto	u581
  2124  000E2E  EF1B  F007         	goto	u580
  2125  000E32                     u581:
  2126  000E32  EF23  F007         	goto	l1376
  2127  000E36                     u580:
  2128  000E36                     
  2129                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  2130  000E36  5053               	movf	goto_XY@y^0,w,c
  2131  000E38  0FBF               	addlw	191
  2132  000E3A  6E57               	movwf	goto_XY@temp^0,c
  2133                           
  2134                           ;lcd.c: 90:        z = temp>>4;
  2135  000E3C  3857               	swapf	goto_XY@temp^0,w,c
  2136  000E3E  0B0F               	andlw	15
  2137  000E40  6E55               	movwf	goto_XY@z^0,c
  2138  000E42  EFF6  F006         	goto	l1356
  2139  000E46                     l1376:
  2140  000E46  0E03               	movlw	3
  2141  000E48  1852               	xorwf	goto_XY@x^0,w,c
  2142  000E4A  A4D8               	btfss	status,2,c
  2143  000E4C  EF2A  F007         	goto	u591
  2144  000E50  EF2C  F007         	goto	u590
  2145  000E54                     u591:
  2146  000E54  EF34  F007         	goto	l1388
  2147  000E58                     u590:
  2148  000E58                     
  2149                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  2150  000E58  5053               	movf	goto_XY@y^0,w,c
  2151  000E5A  0F8F               	addlw	143
  2152  000E5C  6E57               	movwf	goto_XY@temp^0,c
  2153                           
  2154                           ;lcd.c: 99:        z = temp>>4;
  2155  000E5E  3857               	swapf	goto_XY@temp^0,w,c
  2156  000E60  0B0F               	andlw	15
  2157  000E62  6E55               	movwf	goto_XY@z^0,c
  2158  000E64  EFF6  F006         	goto	l1356
  2159  000E68                     l1388:
  2160  000E68  0E04               	movlw	4
  2161  000E6A  1852               	xorwf	goto_XY@x^0,w,c
  2162  000E6C  A4D8               	btfss	status,2,c
  2163  000E6E  EF3B  F007         	goto	u601
  2164  000E72  EF3D  F007         	goto	u600
  2165  000E76                     u601:
  2166  000E76  EF45  F007         	goto	l69
  2167  000E7A                     u600:
  2168  000E7A                     
  2169                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  2170  000E7A  5053               	movf	goto_XY@y^0,w,c
  2171  000E7C  0FCF               	addlw	207
  2172  000E7E  6E57               	movwf	goto_XY@temp^0,c
  2173                           
  2174                           ;lcd.c: 108:        z = temp>>4;
  2175  000E80  3857               	swapf	goto_XY@temp^0,w,c
  2176  000E82  0B0F               	andlw	15
  2177  000E84  6E55               	movwf	goto_XY@z^0,c
  2178  000E86  EFF6  F006         	goto	l1356
  2179  000E8A                     l69:
  2180  000E8A                     l73:
  2181  000E8A  0012               	return		;funcret
  2182  000E8C                     __end_of_goto_XY:
  2183                           	opt callstack 0
  2184                           
  2185 ;; *************** function _lcd_cmd *****************
  2186 ;; Defined at:
  2187 ;;		line 67 in file "lcd.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  lcd             2    3[COMRAM] PTR struct .
  2190 ;;		 -> PORTD(1), 
  2191 ;;  a               1    5[COMRAM] unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         3       0       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0
  2205 ;;      Temps:          1       0       0       0       0       0       0
  2206 ;;      Totals:         4       0       0       0       0       0       0
  2207 ;;Total ram usage:        4 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    3
  2210 ;; This function calls:
  2211 ;;		_pulso
  2212 ;; This function is called by:
  2213 ;;		_goto_XY
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text11
  2218  0012D8                     __ptext11:
  2219                           	opt callstack 0
  2220  0012D8                     _lcd_cmd:
  2221                           	opt callstack 23
  2222  0012D8                     
  2223                           ;lcd.c: 68:     lcd->RS = 0;
  2224  0012D8  C04C  FFD9         	movff	lcd_cmd@lcd,fsr2l
  2225  0012DC  C04D  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  2226  0012E0  90DF               	bcf	indf2,0,c
  2227  0012E2                     
  2228                           ;lcd.c: 69:     lcd->data = (a);
  2229  0012E2  C04E  F04F         	movff	lcd_cmd@a,??_lcd_cmd
  2230  0012E6  C04C  FFD9         	movff	lcd_cmd@lcd,fsr2l
  2231  0012EA  C04D  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  2232  0012EE  3A4F               	swapf	??_lcd_cmd^0,f,c
  2233  0012F0  50DF               	movf	indf2,w,c
  2234  0012F2  184F               	xorwf	??_lcd_cmd^0,w,c
  2235  0012F4  0B0F               	andlw	-241
  2236  0012F6  184F               	xorwf	??_lcd_cmd^0,w,c
  2237  0012F8  6EDF               	movwf	indf2,c
  2238  0012FA                     
  2239                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2240  0012FA  0E06               	movlw	6
  2241  0012FC  6E4F               	movwf	??_lcd_cmd^0,c
  2242  0012FE  0E30               	movlw	48
  2243  001300                     u877:
  2244  001300  2EE8               	decfsz	wreg,f,c
  2245  001302  D7FE               	bra	u877
  2246  001304  2E4F               	decfsz	??_lcd_cmd^0,f,c
  2247  001306  D7FC               	bra	u877
  2248  001308  D000               	nop2	
  2249  00130A                     
  2250                           ;lcd.c: 72:     pulso(lcd);
  2251  00130A  C04C  F049         	movff	lcd_cmd@lcd,pulso@lcd
  2252  00130E  C04D  F04A         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  2253  001312  ECAA  F009         	call	_pulso	;wreg free
  2254  001316  0012               	return		;funcret
  2255  001318                     __end_of_lcd_cmd:
  2256                           	opt callstack 0
  2257                           
  2258 ;; *************** function _function_set *****************
  2259 ;; Defined at:
  2260 ;;		line 21 in file "lcd.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  lcd             2    3[COMRAM] PTR struct .
  2263 ;;		 -> PORTD(1), 
  2264 ;;  data_lenght     1    5[COMRAM] unsigned char 
  2265 ;;  num_lines       1    6[COMRAM] unsigned char 
  2266 ;;  char_font       1    7[COMRAM] unsigned char 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2278 ;;      Params:         5       0       0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0
  2280 ;;      Temps:          3       0       0       0       0       0       0
  2281 ;;      Totals:         8       0       0       0       0       0       0
  2282 ;;Total ram usage:        8 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    3
  2285 ;; This function calls:
  2286 ;;		_pulso
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text12
  2293  000CF6                     __ptext12:
  2294                           	opt callstack 0
  2295  000CF6                     _function_set:
  2296                           	opt callstack 27
  2297  000CF6                     
  2298                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  2299  000CF6  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2300  000CFA  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2301  000CFE  94DF               	bcf	indf2,2,c
  2302                           
  2303                           ;lcd.c: 24:     lcd->RS = 0;
  2304  000D00  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2305  000D04  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2306  000D08  90DF               	bcf	indf2,0,c
  2307                           
  2308                           ;lcd.c: 25:     lcd->R_W = 0;
  2309  000D0A  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2310  000D0E  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2311  000D12  92DF               	bcf	indf2,1,c
  2312  000D14                     
  2313                           ;lcd.c: 28:     lcd->data = 0x02;
  2314  000D14  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2315  000D18  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2316  000D1C  50DF               	movf	indf2,w,c
  2317  000D1E  0B0F               	andlw	-241
  2318  000D20  0920               	iorlw	32
  2319  000D22  6EDF               	movwf	indf2,c
  2320  000D24                     
  2321                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2322  000D24  0E06               	movlw	6
  2323  000D26  6E51               	movwf	??_function_set^0,c
  2324  000D28  0E30               	movlw	48
  2325  000D2A                     u887:
  2326  000D2A  2EE8               	decfsz	wreg,f,c
  2327  000D2C  D7FE               	bra	u887
  2328  000D2E  2E51               	decfsz	??_function_set^0,f,c
  2329  000D30  D7FC               	bra	u887
  2330  000D32  D000               	nop2	
  2331  000D34                     
  2332                           ;lcd.c: 31:     pulso(lcd);
  2333  000D34  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2334  000D38  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2335  000D3C  ECAA  F009         	call	_pulso	;wreg free
  2336  000D40                     
  2337                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  2338  000D40  C04E  F051         	movff	function_set@data_lenght,??_function_set
  2339  000D44  0E02               	movlw	2
  2340  000D46  1251               	iorwf	??_function_set^0,f,c
  2341  000D48  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2342  000D4C  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2343  000D50  3A51               	swapf	??_function_set^0,f,c
  2344  000D52  50DF               	movf	indf2,w,c
  2345  000D54  1851               	xorwf	??_function_set^0,w,c
  2346  000D56  0B0F               	andlw	-241
  2347  000D58  1851               	xorwf	??_function_set^0,w,c
  2348  000D5A  6EDF               	movwf	indf2,c
  2349  000D5C                     
  2350                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2351  000D5C  0E06               	movlw	6
  2352  000D5E  6E51               	movwf	??_function_set^0,c
  2353  000D60  0E30               	movlw	48
  2354  000D62                     u897:
  2355  000D62  2EE8               	decfsz	wreg,f,c
  2356  000D64  D7FE               	bra	u897
  2357  000D66  2E51               	decfsz	??_function_set^0,f,c
  2358  000D68  D7FC               	bra	u897
  2359  000D6A  D000               	nop2	
  2360  000D6C                     
  2361                           ;lcd.c: 37:     pulso(lcd);
  2362  000D6C  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2363  000D70  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2364  000D74  ECAA  F009         	call	_pulso	;wreg free
  2365  000D78                     
  2366                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  2367  000D78  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2368  000D7C  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2369  000D80  38DF               	swapf	indf2,w,c
  2370  000D82  0B0F               	andlw	15
  2371  000D84  6E51               	movwf	??_function_set^0,c
  2372  000D86  C050  F052         	movff	function_set@char_font,??_function_set+1
  2373  000D8A  90D8               	bcf	status,0,c
  2374  000D8C  3652               	rlcf	(??_function_set+1)^0,f,c
  2375  000D8E  90D8               	bcf	status,0,c
  2376  000D90  3652               	rlcf	(??_function_set+1)^0,f,c
  2377  000D92  384F               	swapf	function_set@num_lines^0,w,c
  2378  000D94  42E8               	rrncf	wreg,f,c
  2379  000D96  0BF8               	andlw	248
  2380  000D98  1052               	iorwf	(??_function_set+1)^0,w,c
  2381  000D9A  1051               	iorwf	??_function_set^0,w,c
  2382  000D9C  6E53               	movwf	(??_function_set+2)^0,c
  2383  000D9E  C04C  FFD9         	movff	function_set@lcd,fsr2l
  2384  000DA2  C04D  FFDA         	movff	function_set@lcd+1,fsr2h
  2385  000DA6  3A53               	swapf	(??_function_set+2)^0,f,c
  2386  000DA8  50DF               	movf	indf2,w,c
  2387  000DAA  1853               	xorwf	(??_function_set+2)^0,w,c
  2388  000DAC  0B0F               	andlw	-241
  2389  000DAE  1853               	xorwf	(??_function_set+2)^0,w,c
  2390  000DB0  6EDF               	movwf	indf2,c
  2391  000DB2                     
  2392                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2393  000DB2  0E06               	movlw	6
  2394  000DB4  6E51               	movwf	??_function_set^0,c
  2395  000DB6  0E30               	movlw	48
  2396  000DB8                     u907:
  2397  000DB8  2EE8               	decfsz	wreg,f,c
  2398  000DBA  D7FE               	bra	u907
  2399  000DBC  2E51               	decfsz	??_function_set^0,f,c
  2400  000DBE  D7FC               	bra	u907
  2401  000DC0  D000               	nop2	
  2402  000DC2                     
  2403                           ;lcd.c: 44:     pulso(lcd);
  2404  000DC2  C04C  F049         	movff	function_set@lcd,pulso@lcd
  2405  000DC6  C04D  F04A         	movff	function_set@lcd+1,pulso@lcd+1
  2406  000DCA  ECAA  F009         	call	_pulso	;wreg free
  2407  000DCE  0012               	return		;funcret
  2408  000DD0                     __end_of_function_set:
  2409                           	opt callstack 0
  2410                           
  2411 ;; *************** function _entry_mode_set *****************
  2412 ;; Defined at:
  2413 ;;		line 116 in file "lcd.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  lcd             2    3[COMRAM] PTR struct .
  2416 ;;		 -> PORTD(1), 
  2417 ;;  move_directi    1    5[COMRAM] unsigned char 
  2418 ;;  display_shif    1    6[COMRAM] unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2430 ;;      Params:         4       0       0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0       0       0
  2432 ;;      Temps:          1       0       0       0       0       0       0
  2433 ;;      Totals:         5       0       0       0       0       0       0
  2434 ;;Total ram usage:        5 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    3
  2437 ;; This function calls:
  2438 ;;		_pulso
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text13
  2445  00105C                     __ptext13:
  2446                           	opt callstack 0
  2447  00105C                     _entry_mode_set:
  2448                           	opt callstack 27
  2449  00105C                     
  2450                           ;lcd.c: 117:     lcd->E = 0;
  2451  00105C  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2452  001060  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2453  001064  94DF               	bcf	indf2,2,c
  2454                           
  2455                           ;lcd.c: 118:     lcd->RS = 0;
  2456  001066  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2457  00106A  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2458  00106E  90DF               	bcf	indf2,0,c
  2459                           
  2460                           ;lcd.c: 119:     lcd->R_W = 0;
  2461  001070  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2462  001074  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2463  001078  92DF               	bcf	indf2,1,c
  2464  00107A                     
  2465                           ;lcd.c: 121:     lcd->data = 0x00;
  2466  00107A  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2467  00107E  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2468  001082  0E0F               	movlw	-241
  2469  001084  16DF               	andwf	indf2,f,c
  2470  001086                     
  2471                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2472  001086  0E06               	movlw	6
  2473  001088  6E50               	movwf	??_entry_mode_set^0,c
  2474  00108A  0E30               	movlw	48
  2475  00108C                     u917:
  2476  00108C  2EE8               	decfsz	wreg,f,c
  2477  00108E  D7FE               	bra	u917
  2478  001090  2E50               	decfsz	??_entry_mode_set^0,f,c
  2479  001092  D7FC               	bra	u917
  2480  001094  D000               	nop2	
  2481  001096                     
  2482                           ;lcd.c: 124:     pulso(lcd);
  2483  001096  C04C  F049         	movff	entry_mode_set@lcd,pulso@lcd
  2484  00109A  C04D  F04A         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  2485  00109E  ECAA  F009         	call	_pulso	;wreg free
  2486  0010A2                     
  2487                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  2488  0010A2  504E               	movf	entry_mode_set@move_direction^0,w,c
  2489  0010A4  244E               	addwf	entry_mode_set@move_direction^0,w,c
  2490  0010A6  104F               	iorwf	entry_mode_set@display_shift^0,w,c
  2491  0010A8  6E50               	movwf	??_entry_mode_set^0,c
  2492  0010AA  0E04               	movlw	4
  2493  0010AC  1250               	iorwf	??_entry_mode_set^0,f,c
  2494  0010AE  C04C  FFD9         	movff	entry_mode_set@lcd,fsr2l
  2495  0010B2  C04D  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  2496  0010B6  3A50               	swapf	??_entry_mode_set^0,f,c
  2497  0010B8  50DF               	movf	indf2,w,c
  2498  0010BA  1850               	xorwf	??_entry_mode_set^0,w,c
  2499  0010BC  0B0F               	andlw	-241
  2500  0010BE  1850               	xorwf	??_entry_mode_set^0,w,c
  2501  0010C0  6EDF               	movwf	indf2,c
  2502  0010C2                     
  2503                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2504  0010C2  0E06               	movlw	6
  2505  0010C4  6E50               	movwf	??_entry_mode_set^0,c
  2506  0010C6  0E30               	movlw	48
  2507  0010C8                     u927:
  2508  0010C8  2EE8               	decfsz	wreg,f,c
  2509  0010CA  D7FE               	bra	u927
  2510  0010CC  2E50               	decfsz	??_entry_mode_set^0,f,c
  2511  0010CE  D7FC               	bra	u927
  2512  0010D0  D000               	nop2	
  2513  0010D2                     
  2514                           ;lcd.c: 130:     pulso(lcd);
  2515  0010D2  C04C  F049         	movff	entry_mode_set@lcd,pulso@lcd
  2516  0010D6  C04D  F04A         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  2517  0010DA  ECAA  F009         	call	_pulso	;wreg free
  2518  0010DE  0012               	return		;funcret
  2519  0010E0                     __end_of_entry_mode_set:
  2520                           	opt callstack 0
  2521                           
  2522 ;; *************** function _display_onoff_control *****************
  2523 ;; Defined at:
  2524 ;;		line 47 in file "lcd.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  lcd             2    3[COMRAM] PTR struct .
  2527 ;;		 -> PORTD(1), 
  2528 ;;  display_on      1    5[COMRAM] unsigned char 
  2529 ;;  cursor_on       1    6[COMRAM] unsigned char 
  2530 ;;  blink           1    7[COMRAM] unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2542 ;;      Params:         5       0       0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0
  2544 ;;      Temps:          2       0       0       0       0       0       0
  2545 ;;      Totals:         7       0       0       0       0       0       0
  2546 ;;Total ram usage:        7 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    3
  2549 ;; This function calls:
  2550 ;;		_pulso
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text14
  2557  000FCE                     __ptext14:
  2558                           	opt callstack 0
  2559  000FCE                     _display_onoff_control:
  2560                           	opt callstack 27
  2561  000FCE                     
  2562                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  2563  000FCE  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2564  000FD2  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2565  000FD6  94DF               	bcf	indf2,2,c
  2566                           
  2567                           ;lcd.c: 50:     lcd->RS = 0;
  2568  000FD8  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2569  000FDC  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2570  000FE0  90DF               	bcf	indf2,0,c
  2571                           
  2572                           ;lcd.c: 51:     lcd->R_W = 0;
  2573  000FE2  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2574  000FE6  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2575  000FEA  92DF               	bcf	indf2,1,c
  2576  000FEC                     
  2577                           ;lcd.c: 54:     lcd->data = 0x00;
  2578  000FEC  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2579  000FF0  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2580  000FF4  0E0F               	movlw	-241
  2581  000FF6  16DF               	andwf	indf2,f,c
  2582  000FF8                     
  2583                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2584  000FF8  0E06               	movlw	6
  2585  000FFA  6E51               	movwf	??_display_onoff_control^0,c
  2586  000FFC  0E30               	movlw	48
  2587  000FFE                     u937:
  2588  000FFE  2EE8               	decfsz	wreg,f,c
  2589  001000  D7FE               	bra	u937
  2590  001002  2E51               	decfsz	??_display_onoff_control^0,f,c
  2591  001004  D7FC               	bra	u937
  2592  001006  D000               	nop2	
  2593  001008                     
  2594                           ;lcd.c: 57:     pulso(lcd);
  2595  001008  C04C  F049         	movff	display_onoff_control@lcd,pulso@lcd
  2596  00100C  C04D  F04A         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2597  001010  ECAA  F009         	call	_pulso	;wreg free
  2598  001014                     
  2599                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  2600  001014  90D8               	bcf	status,0,c
  2601  001016  344F               	rlcf	display_onoff_control@cursor_on^0,w,c
  2602  001018  6E51               	movwf	??_display_onoff_control^0,c
  2603  00101A  444E               	rlncf	display_onoff_control@display_on^0,w,c
  2604  00101C  46E8               	rlncf	wreg,f,c
  2605  00101E  0BFC               	andlw	252
  2606  001020  1051               	iorwf	??_display_onoff_control^0,w,c
  2607  001022  1050               	iorwf	display_onoff_control@blink^0,w,c
  2608  001024  6E52               	movwf	(??_display_onoff_control+1)^0,c
  2609  001026  0E08               	movlw	8
  2610  001028  1252               	iorwf	(??_display_onoff_control+1)^0,f,c
  2611  00102A  C04C  FFD9         	movff	display_onoff_control@lcd,fsr2l
  2612  00102E  C04D  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  2613  001032  3A52               	swapf	(??_display_onoff_control+1)^0,f,c
  2614  001034  50DF               	movf	indf2,w,c
  2615  001036  1852               	xorwf	(??_display_onoff_control+1)^0,w,c
  2616  001038  0B0F               	andlw	-241
  2617  00103A  1852               	xorwf	(??_display_onoff_control+1)^0,w,c
  2618  00103C  6EDF               	movwf	indf2,c
  2619  00103E                     
  2620                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2621  00103E  0E06               	movlw	6
  2622  001040  6E51               	movwf	??_display_onoff_control^0,c
  2623  001042  0E30               	movlw	48
  2624  001044                     u947:
  2625  001044  2EE8               	decfsz	wreg,f,c
  2626  001046  D7FE               	bra	u947
  2627  001048  2E51               	decfsz	??_display_onoff_control^0,f,c
  2628  00104A  D7FC               	bra	u947
  2629  00104C  D000               	nop2	
  2630  00104E                     
  2631                           ;lcd.c: 64:     pulso(lcd);
  2632  00104E  C04C  F049         	movff	display_onoff_control@lcd,pulso@lcd
  2633  001052  C04D  F04A         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  2634  001056  ECAA  F009         	call	_pulso	;wreg free
  2635  00105A  0012               	return		;funcret
  2636  00105C                     __end_of_display_onoff_control:
  2637                           	opt callstack 0
  2638                           
  2639 ;; *************** function _pulso *****************
  2640 ;; Defined at:
  2641 ;;		line 11 in file "lcd.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  lcd             2    0[COMRAM] PTR struct .
  2644 ;;		 -> PORTD(1), 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr2l, fsr2h
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2656 ;;      Params:         2       0       0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0
  2658 ;;      Temps:          1       0       0       0       0       0       0
  2659 ;;      Totals:         3       0       0       0       0       0       0
  2660 ;;Total ram usage:        3 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    2
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_function_set
  2667 ;;		_display_onoff_control
  2668 ;;		_lcd_cmd
  2669 ;;		_entry_mode_set
  2670 ;;		_clear_display
  2671 ;;		_return_home
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text15
  2676  001354                     __ptext15:
  2677                           	opt callstack 0
  2678  001354                     _pulso:
  2679                           	opt callstack 23
  2680  001354                     
  2681                           ;lcd.c: 13:     lcd->E = 1;
  2682  001354  C049  FFD9         	movff	pulso@lcd,fsr2l
  2683  001358  C04A  FFDA         	movff	pulso@lcd+1,fsr2h
  2684  00135C  84DF               	bsf	indf2,2,c
  2685  00135E                     
  2686                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2687  00135E  0E06               	movlw	6
  2688  001360  6E4B               	movwf	??_pulso^0,c
  2689  001362  0E30               	movlw	48
  2690  001364                     u957:
  2691  001364  2EE8               	decfsz	wreg,f,c
  2692  001366  D7FE               	bra	u957
  2693  001368  2E4B               	decfsz	??_pulso^0,f,c
  2694  00136A  D7FC               	bra	u957
  2695  00136C  D000               	nop2	
  2696  00136E                     
  2697                           ;lcd.c: 17:     lcd->E = 0;
  2698  00136E  C049  FFD9         	movff	pulso@lcd,fsr2l
  2699  001372  C04A  FFDA         	movff	pulso@lcd+1,fsr2h
  2700  001376  94DF               	bcf	indf2,2,c
  2701                           
  2702                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2703  001378  0E06               	movlw	6
  2704  00137A  6E4B               	movwf	??_pulso^0,c
  2705  00137C  0E30               	movlw	48
  2706  00137E                     u967:
  2707  00137E  2EE8               	decfsz	wreg,f,c
  2708  001380  D7FE               	bra	u967
  2709  001382  2E4B               	decfsz	??_pulso^0,f,c
  2710  001384  D7FC               	bra	u967
  2711  001386  D000               	nop2	
  2712  001388  0012               	return		;funcret
  2713  00138A                     __end_of_pulso:
  2714                           	opt callstack 0
  2715                           
  2716 ;; *************** function _int_handler *****************
  2717 ;; Defined at:
  2718 ;;		line 24 in file "main.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2732 ;;      Params:         0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    1
  2739 ;; This function calls:
  2740 ;;		_le_entrada
  2741 ;; This function is called by:
  2742 ;;		Interrupt level 2
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	intcode
  2747  000008                     __pintcode:
  2748                           	opt callstack 0
  2749  000008                     _int_handler:
  2750                           	opt callstack 23
  2751                           
  2752                           ;incstack = 0
  2753  000008  826F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2754  00000A  EDC5  F009         	call	int_func,f	;refresh shadow registers
  2755                           
  2756                           	psect	intcode_body
  2757  00138A                     __pintcode_body:
  2758                           	opt callstack 23
  2759  00138A                     int_func:
  2760                           	opt callstack 23
  2761  00138A  0006               	pop		; remove dummy address from shadow register refresh
  2762  00138C                     
  2763                           ;main.c: 25:      if(INTCONbits.TMR0IF == 1){
  2764  00138C  A4F2               	btfss	242,2,c	;volatile
  2765  00138E  EFCB  F009         	goto	i2u56_41
  2766  001392  EFCD  F009         	goto	i2u56_40
  2767  001396                     i2u56_41:
  2768  001396  EFD2  F009         	goto	i2l40
  2769  00139A                     i2u56_40:
  2770  00139A                     
  2771                           ;main.c: 26:         TMR0L = 0x63;
  2772  00139A  0E63               	movlw	99
  2773  00139C  6ED6               	movwf	214,c	;volatile
  2774  00139E                     
  2775                           ;main.c: 27:         le_entrada();
  2776  00139E  EC92  F004         	call	_le_entrada	;wreg free
  2777  0013A2                     
  2778                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  2779  0013A2  94F2               	bcf	242,2,c	;volatile
  2780  0013A4                     i2l40:
  2781  0013A4  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2782  0013A6  0011               	retfie		f
  2783  0013A8                     __end_of_int_handler:
  2784                           	opt callstack 0
  2785                           
  2786 ;; *************** function _le_entrada *****************
  2787 ;; Defined at:
  2788 ;;		line 12 in file "keyboard.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2802 ;;      Params:         0       0       0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_int_handler
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text17
  2816  000924                     __ptext17:
  2817                           	opt callstack 0
  2818  000924                     _le_entrada:
  2819                           	opt callstack 23
  2820  000924                     
  2821                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  2822  000924  8E81               	bsf	129,7,c	;volatile
  2823                           
  2824                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB1==1) || cont_u > 50){
  2825  000926  B007               	btfsc	_botoes_ant^0,0,c
  2826  000928  EF98  F004         	goto	i2u26_41
  2827  00092C  EF9A  F004         	goto	i2u26_40
  2828  000930                     i2u26_41:
  2829  000930  EFA1  F004         	goto	i2l1140
  2830  000934                     i2u26_40:
  2831  000934  B281               	btfsc	129,1,c	;volatile
  2832  000936  EF9F  F004         	goto	i2u27_41
  2833  00093A  EFA1  F004         	goto	i2u27_40
  2834  00093E                     i2u27_41:
  2835  00093E  EFA9  F004         	goto	i2l113
  2836  000942                     i2u27_40:
  2837  000942                     i2l1140:
  2838  000942  0E32               	movlw	50
  2839  000944  6406               	cpfsgt	_cont_u^0,c
  2840  000946  EFA7  F004         	goto	i2u28_41
  2841  00094A  EFA9  F004         	goto	i2u28_40
  2842  00094E                     i2u28_41:
  2843  00094E  EFAF  F004         	goto	i2l111
  2844  000952                     i2u28_40:
  2845  000952                     i2l113:
  2846                           
  2847                           ;keyboard.c: 15:         botoes.U = 1;
  2848  000952  8008               	bsf	_botoes^0,0,c
  2849                           
  2850                           ;keyboard.c: 16:         botoes_ant.U = 1;
  2851  000954  8007               	bsf	_botoes_ant^0,0,c
  2852  000956                     i2l1142:
  2853                           
  2854                           ;keyboard.c: 17:         cont_u = 0;
  2855  000956  0E00               	movlw	0
  2856  000958  6E06               	movwf	_cont_u^0,c
  2857                           
  2858                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB1==0){
  2859  00095A  EFC9  F004         	goto	i2l1152
  2860  00095E                     i2l111:
  2861  00095E  A007               	btfss	_botoes_ant^0,0,c
  2862  000960  EFB4  F004         	goto	i2u29_41
  2863  000964  EFB6  F004         	goto	i2u29_40
  2864  000968                     i2u29_41:
  2865  000968  EFC1  F004         	goto	i2l117
  2866  00096C                     i2u29_40:
  2867  00096C  B281               	btfsc	129,1,c	;volatile
  2868  00096E  EFBB  F004         	goto	i2u30_41
  2869  000972  EFBD  F004         	goto	i2u30_40
  2870  000976                     i2u30_41:
  2871  000976  EFC1  F004         	goto	i2l117
  2872  00097A                     i2u30_40:
  2873  00097A                     
  2874                           ;keyboard.c: 19:         botoes.U = 0;
  2875  00097A  9008               	bcf	_botoes^0,0,c
  2876                           
  2877                           ;keyboard.c: 20:         botoes_ant.U = 0;
  2878  00097C  9007               	bcf	_botoes_ant^0,0,c
  2879  00097E  EFAB  F004         	goto	i2l1142
  2880  000982                     i2l117:
  2881  000982  A281               	btfss	129,1,c	;volatile
  2882  000984  EFC6  F004         	goto	i2u31_41
  2883  000988  EFC8  F004         	goto	i2u31_40
  2884  00098C                     i2u31_41:
  2885  00098C  EFC9  F004         	goto	i2l1152
  2886  000990                     i2u31_40:
  2887  000990  2A06               	incf	_cont_u^0,f,c
  2888  000992                     i2l1152:
  2889                           
  2890                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  2891  000992  9E81               	bcf	129,7,c	;volatile
  2892  000994                     
  2893                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  2894  000994  8C81               	bsf	129,6,c	;volatile
  2895  000996                     
  2896                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB0==1) || cont_l > 50){
  2897  000996  B407               	btfsc	_botoes_ant^0,2,c
  2898  000998  EFD0  F004         	goto	i2u32_41
  2899  00099C  EFD2  F004         	goto	i2u32_40
  2900  0009A0                     i2u32_41:
  2901  0009A0  EFD9  F004         	goto	i2l1160
  2902  0009A4                     i2u32_40:
  2903  0009A4  B081               	btfsc	129,0,c	;volatile
  2904  0009A6  EFD7  F004         	goto	i2u33_41
  2905  0009AA  EFD9  F004         	goto	i2u33_40
  2906  0009AE                     i2u33_41:
  2907  0009AE  EFE1  F004         	goto	i2l122
  2908  0009B2                     i2u33_40:
  2909  0009B2                     i2l1160:
  2910  0009B2  0E32               	movlw	50
  2911  0009B4  6404               	cpfsgt	_cont_l^0,c
  2912  0009B6  EFDF  F004         	goto	i2u34_41
  2913  0009BA  EFE1  F004         	goto	i2u34_40
  2914  0009BE                     i2u34_41:
  2915  0009BE  EFE7  F004         	goto	i2l120
  2916  0009C2                     i2u34_40:
  2917  0009C2                     i2l122:
  2918                           
  2919                           ;keyboard.c: 27:         botoes.L = 1;
  2920  0009C2  8408               	bsf	_botoes^0,2,c
  2921                           
  2922                           ;keyboard.c: 28:         botoes_ant.L = 1;
  2923  0009C4  8407               	bsf	_botoes_ant^0,2,c
  2924  0009C6                     i2l1162:
  2925                           
  2926                           ;keyboard.c: 29:         cont_l = 0;
  2927  0009C6  0E00               	movlw	0
  2928  0009C8  6E04               	movwf	_cont_l^0,c
  2929                           
  2930                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB0==0){
  2931  0009CA  EF01  F005         	goto	i2l1172
  2932  0009CE                     i2l120:
  2933  0009CE  A407               	btfss	_botoes_ant^0,2,c
  2934  0009D0  EFEC  F004         	goto	i2u35_41
  2935  0009D4  EFEE  F004         	goto	i2u35_40
  2936  0009D8                     i2u35_41:
  2937  0009D8  EFF9  F004         	goto	i2l126
  2938  0009DC                     i2u35_40:
  2939  0009DC  B081               	btfsc	129,0,c	;volatile
  2940  0009DE  EFF3  F004         	goto	i2u36_41
  2941  0009E2  EFF5  F004         	goto	i2u36_40
  2942  0009E6                     i2u36_41:
  2943  0009E6  EFF9  F004         	goto	i2l126
  2944  0009EA                     i2u36_40:
  2945  0009EA                     
  2946                           ;keyboard.c: 31:         botoes.L = 0;
  2947  0009EA  9408               	bcf	_botoes^0,2,c
  2948                           
  2949                           ;keyboard.c: 32:         botoes_ant.L = 0;
  2950  0009EC  9407               	bcf	_botoes_ant^0,2,c
  2951  0009EE  EFE3  F004         	goto	i2l1162
  2952  0009F2                     i2l126:
  2953  0009F2  A081               	btfss	129,0,c	;volatile
  2954  0009F4  EFFE  F004         	goto	i2u37_41
  2955  0009F8  EF00  F005         	goto	i2u37_40
  2956  0009FC                     i2u37_41:
  2957  0009FC  EF01  F005         	goto	i2l1172
  2958  000A00                     i2u37_40:
  2959  000A00  2A04               	incf	_cont_l^0,f,c
  2960  000A02                     i2l1172:
  2961                           
  2962                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB2==1) || cont_r > 50){
  2963  000A02  B607               	btfsc	_botoes_ant^0,3,c
  2964  000A04  EF06  F005         	goto	i2u38_41
  2965  000A08  EF08  F005         	goto	i2u38_40
  2966  000A0C                     i2u38_41:
  2967  000A0C  EF0F  F005         	goto	i2l1176
  2968  000A10                     i2u38_40:
  2969  000A10  B481               	btfsc	129,2,c	;volatile
  2970  000A12  EF0D  F005         	goto	i2u39_41
  2971  000A16  EF0F  F005         	goto	i2u39_40
  2972  000A1A                     i2u39_41:
  2973  000A1A  EF17  F005         	goto	i2l131
  2974  000A1E                     i2u39_40:
  2975  000A1E                     i2l1176:
  2976  000A1E  0E32               	movlw	50
  2977  000A20  6403               	cpfsgt	_cont_r^0,c
  2978  000A22  EF15  F005         	goto	i2u40_41
  2979  000A26  EF17  F005         	goto	i2u40_40
  2980  000A2A                     i2u40_41:
  2981  000A2A  EF1D  F005         	goto	i2l129
  2982  000A2E                     i2u40_40:
  2983  000A2E                     i2l131:
  2984                           
  2985                           ;keyboard.c: 37:         botoes.R = 1;
  2986  000A2E  8608               	bsf	_botoes^0,3,c
  2987                           
  2988                           ;keyboard.c: 38:         botoes_ant.R = 1;
  2989  000A30  8607               	bsf	_botoes_ant^0,3,c
  2990  000A32                     i2l1178:
  2991                           
  2992                           ;keyboard.c: 39:         cont_r = 0;
  2993  000A32  0E00               	movlw	0
  2994  000A34  6E03               	movwf	_cont_r^0,c
  2995                           
  2996                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB2==0){
  2997  000A36  EF37  F005         	goto	i2l1188
  2998  000A3A                     i2l129:
  2999  000A3A  A607               	btfss	_botoes_ant^0,3,c
  3000  000A3C  EF22  F005         	goto	i2u41_41
  3001  000A40  EF24  F005         	goto	i2u41_40
  3002  000A44                     i2u41_41:
  3003  000A44  EF2F  F005         	goto	i2l135
  3004  000A48                     i2u41_40:
  3005  000A48  B481               	btfsc	129,2,c	;volatile
  3006  000A4A  EF29  F005         	goto	i2u42_41
  3007  000A4E  EF2B  F005         	goto	i2u42_40
  3008  000A52                     i2u42_41:
  3009  000A52  EF2F  F005         	goto	i2l135
  3010  000A56                     i2u42_40:
  3011  000A56                     
  3012                           ;keyboard.c: 41:         botoes.R = 0;
  3013  000A56  9608               	bcf	_botoes^0,3,c
  3014                           
  3015                           ;keyboard.c: 42:         botoes_ant.R = 0;
  3016  000A58  9607               	bcf	_botoes_ant^0,3,c
  3017  000A5A  EF19  F005         	goto	i2l1178
  3018  000A5E                     i2l135:
  3019  000A5E  A481               	btfss	129,2,c	;volatile
  3020  000A60  EF34  F005         	goto	i2u43_41
  3021  000A64  EF36  F005         	goto	i2u43_40
  3022  000A68                     i2u43_41:
  3023  000A68  EF37  F005         	goto	i2l1188
  3024  000A6C                     i2u43_40:
  3025  000A6C  2A03               	incf	_cont_r^0,f,c
  3026  000A6E                     i2l1188:
  3027                           
  3028                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  3029  000A6E  9C81               	bcf	129,6,c	;volatile
  3030  000A70                     
  3031                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  3032  000A70  8A81               	bsf	129,5,c	;volatile
  3033  000A72                     
  3034                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB1==1) || cont_d > 50){
  3035  000A72  B207               	btfsc	_botoes_ant^0,1,c
  3036  000A74  EF3E  F005         	goto	i2u44_41
  3037  000A78  EF40  F005         	goto	i2u44_40
  3038  000A7C                     i2u44_41:
  3039  000A7C  EF47  F005         	goto	i2l1196
  3040  000A80                     i2u44_40:
  3041  000A80  B281               	btfsc	129,1,c	;volatile
  3042  000A82  EF45  F005         	goto	i2u45_41
  3043  000A86  EF47  F005         	goto	i2u45_40
  3044  000A8A                     i2u45_41:
  3045  000A8A  EF4F  F005         	goto	i2l140
  3046  000A8E                     i2u45_40:
  3047  000A8E                     i2l1196:
  3048  000A8E  0E32               	movlw	50
  3049  000A90  6405               	cpfsgt	_cont_d^0,c
  3050  000A92  EF4D  F005         	goto	i2u46_41
  3051  000A96  EF4F  F005         	goto	i2u46_40
  3052  000A9A                     i2u46_41:
  3053  000A9A  EF55  F005         	goto	i2l138
  3054  000A9E                     i2u46_40:
  3055  000A9E                     i2l140:
  3056                           
  3057                           ;keyboard.c: 49:         botoes.D = 1;
  3058  000A9E  8208               	bsf	_botoes^0,1,c
  3059                           
  3060                           ;keyboard.c: 50:         botoes_ant.D = 1;
  3061  000AA0  8207               	bsf	_botoes_ant^0,1,c
  3062  000AA2                     i2l1198:
  3063                           
  3064                           ;keyboard.c: 51:         cont_d = 0;
  3065  000AA2  0E00               	movlw	0
  3066  000AA4  6E05               	movwf	_cont_d^0,c
  3067                           
  3068                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB1==0){
  3069  000AA6  EF6F  F005         	goto	i2l1208
  3070  000AAA                     i2l138:
  3071  000AAA  A207               	btfss	_botoes_ant^0,1,c
  3072  000AAC  EF5A  F005         	goto	i2u47_41
  3073  000AB0  EF5C  F005         	goto	i2u47_40
  3074  000AB4                     i2u47_41:
  3075  000AB4  EF67  F005         	goto	i2l144
  3076  000AB8                     i2u47_40:
  3077  000AB8  B281               	btfsc	129,1,c	;volatile
  3078  000ABA  EF61  F005         	goto	i2u48_41
  3079  000ABE  EF63  F005         	goto	i2u48_40
  3080  000AC2                     i2u48_41:
  3081  000AC2  EF67  F005         	goto	i2l144
  3082  000AC6                     i2u48_40:
  3083  000AC6                     
  3084                           ;keyboard.c: 53:         botoes.D = 0;
  3085  000AC6  9208               	bcf	_botoes^0,1,c
  3086                           
  3087                           ;keyboard.c: 54:         botoes_ant.D = 0;
  3088  000AC8  9207               	bcf	_botoes_ant^0,1,c
  3089  000ACA  EF51  F005         	goto	i2l1198
  3090  000ACE                     i2l144:
  3091  000ACE  A281               	btfss	129,1,c	;volatile
  3092  000AD0  EF6C  F005         	goto	i2u49_41
  3093  000AD4  EF6E  F005         	goto	i2u49_40
  3094  000AD8                     i2u49_41:
  3095  000AD8  EF6F  F005         	goto	i2l1208
  3096  000ADC                     i2u49_40:
  3097  000ADC  2A05               	incf	_cont_d^0,f,c
  3098  000ADE                     i2l1208:
  3099                           
  3100                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  3101  000ADE  9A81               	bcf	129,5,c	;volatile
  3102  000AE0                     
  3103                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  3104  000AE0  8881               	bsf	129,4,c	;volatile
  3105  000AE2                     
  3106                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB0;
  3107  000AE2  A081               	btfss	129,0,c	;volatile
  3108  000AE4  D002               	bra	i2u50_45
  3109  000AE6  8808               	bsf	_botoes^0,4,c
  3110  000AE8  D001               	bra	i2u50_47
  3111  000AEA                     i2u50_45:
  3112  000AEA  9808               	bcf	_botoes^0,4,c
  3113  000AEC                     i2u50_47:
  3114  000AEC                     
  3115                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB2;
  3116  000AEC  A481               	btfss	129,2,c	;volatile
  3117  000AEE  D002               	bra	i2u51_45
  3118  000AF0  8A08               	bsf	_botoes^0,5,c
  3119  000AF2  D001               	bra	i2u51_47
  3120  000AF4                     i2u51_45:
  3121  000AF4  9A08               	bcf	_botoes^0,5,c
  3122  000AF6                     i2u51_47:
  3123  000AF6                     
  3124                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  3125  000AF6  9881               	bcf	129,4,c	;volatile
  3126  000AF8  0012               	return		;funcret
  3127  000AFA                     __end_of_le_entrada:
  3128                           	opt callstack 0
  3129                           
  3130                           	psect	rparam
  3131  0000                     
  3132                           	psect	temp
  3133  00006F                     btemp:
  3134                           	opt callstack 0
  3135  00006F                     	ds	1
  3136  0000                     int$flags	set	btemp
  3137  0000                     wtemp8	set	btemp+1
  3138  0000                     ttemp5	set	btemp+1
  3139  0000                     ttemp6	set	btemp+4
  3140  0000                     ttemp7	set	btemp+8
  3141                           tosu	equ	0xFFF
  3142                           tosh	equ	0xFFE
  3143                           tosl	equ	0xFFD
  3144                           stkptr	equ	0xFFC
  3145                           pclatu	equ	0xFFB
  3146                           pclath	equ	0xFFA
  3147                           pcl	equ	0xFF9
  3148                           tblptru	equ	0xFF8
  3149                           tblptrh	equ	0xFF7
  3150                           tblptrl	equ	0xFF6
  3151                           tablat	equ	0xFF5
  3152                           prodh	equ	0xFF4
  3153                           prodl	equ	0xFF3
  3154                           indf0	equ	0xFEF
  3155                           postinc0	equ	0xFEE
  3156                           postdec0	equ	0xFED
  3157                           preinc0	equ	0xFEC
  3158                           plusw0	equ	0xFEB
  3159                           fsr0h	equ	0xFEA
  3160                           fsr0l	equ	0xFE9
  3161                           wreg	equ	0xFE8
  3162                           indf1	equ	0xFE7
  3163                           postinc1	equ	0xFE6
  3164                           postdec1	equ	0xFE5
  3165                           preinc1	equ	0xFE4
  3166                           plusw1	equ	0xFE3
  3167                           fsr1h	equ	0xFE2
  3168                           fsr1l	equ	0xFE1
  3169                           bsr	equ	0xFE0
  3170                           indf2	equ	0xFDF
  3171                           postinc2	equ	0xFDE
  3172                           postdec2	equ	0xFDD
  3173                           preinc2	equ	0xFDC
  3174                           plusw2	equ	0xFDB
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8


Data Sizes:
    Strings     214
    Constant    0
    Data        3
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     35     110
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[16]), STR_15(CODE[16]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), 
		 -> STR_16(CODE[16]), STR_15(CODE[16]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(COMRAM[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->_print_mat
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   44958
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   40550
                                             33 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8090
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                                8     6      2    8136
                                             25 COMRAM     8     6      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    8046
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    8046
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8046
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    3136
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4812
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     23      6E       1       87.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6E      15        0.0%
DATA                 0      0      6E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 15 21:52:32 2020

                              _x 006E                                _y 0001  
         ?_display_onoff_control 004C                               l60 105A  
                             l45 1150                               l54 1388  
                             l63 1316                               l57 0DCE  
                             l73 0E8A                               l81 0CF4  
                             l76 10DE                               l69 0E8A  
                             l94 0F36                               _op 0002  
                    creditos@lcd 0062                      __CFG_OSC$HS 000000  
                            l200 0744                              l212 11BE  
                            l220 0C0C                              l206 0922  
                            l216 0B6E                              l209 11B0  
                            l190 1296                              l174 0F38  
                            l176 0FC8                              l193 121C  
                            l187 1288                              l196 122A  
                            l900 12D6                              u600 0E7A  
                            u601 0E76                              u610 0CE6  
                            u611 0CE2                              u620 0F16  
                            u700 0752                              u621 0F12  
                            u701 074E                              u630 0F36  
                            u710 0762                              u631 0F32  
                            u711 075E                              u640 12D6  
                            u800 1296                              u720 07C8  
                            u641 12D2                              u801 1292  
                            u721 07C4                              u570 0DE0  
                            u810 122A                              u730 07D8  
                            u650 0B7C                              u571 0DDC  
                            u811 1226                              u731 07D4  
                            u651 0B78                              u580 0E36  
                            u740 083E                              u660 0B8C  
                            u820 0F54                              u581 0E32  
                            u741 083A                              u661 0B88  
                            u821 0F50                              u590 0E58  
                            u750 084E                              u670 0BD2  
                            u830 0F74                              u591 0E54  
                            u751 084A                              u671 0BCE  
                            u831 0F70                              u760 08B4  
                            u680 0BE2                              u840 0F96  
                            u761 08B0                              u681 0BDE  
                            u841 0F92                              u770 08C4  
                            u690 0C0C                              u850 0FB8  
                            u907 0DB8                              u771 08C0  
                            u691 0C08                              u851 0FB4  
                            u780 0922                              u917 108C  
                            u781 091E                              u790 11BE  
                            u927 10C8                              u791 11BA  
                            u937 0FFE                              u947 1044  
                            u867 0E06                              u957 1364  
                            u877 1300                              u967 137E  
                            u887 0D2A                              u897 0D62  
                    finaliza@lcd 0062                              _lcd 006C  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0049                     __CFG_WDT$OFF 000000  
                           l1400 0C0E                             l1410 0C8A  
                           l1402 0C2C                             l1340 135E  
                           l1420 0CB6                             l1412 0C8E  
                           l1404 0C4A                             l1500 071C  
                           l1342 136E                             l1350 130A  
                           l1422 0CC0                             l1414 0C98  
                           l1406 0C54                             l1430 0E8C  
                           l1510 0788                             l1502 0734  
                           l1600 1014                             l1344 12D8  
                           l1360 0E00                             l1352 0DD0  
                           l1424 0CCA                             l1416 0CA2  
                           l1408 0C5E                             l1520 07D8  
                           l1512 078A                             l1504 0752  
                           l1338 1354                             l1602 103E  
                           l1610 1086                             l1346 12E2  
                           l1362 0E10                             l1354 0DE0  
                           l1426 0CE6                             l1418 0CAC  
                           l1450 0F16                             l1522 07FC  
                           l1530 0830                             l1514 07AE  
                           l1506 0762                             l1604 104E  
                           l1612 1096                             l1348 12FA  
                           l1356 0DEC                             l1364 0E24  
                           l1428 0CF0                             l1452 0F1A  
                           l1444 0EB0                             l1436 0E94  
                           l1540 0876                             l1532 083E  
                           l1524 07FE                             l1508 0786  
                           l1516 07BA                             l1460 0B4A  
                           l1620 0F38                             l1614 10A2  
                           l1606 105C                             l1390 0E7A  
                           l1366 0E36                             l1358 0DF0  
                           l1446 0EF6                             l1438 0EA8  
                           l1454 1298                             l1550 08E8  
                           l1542 089A                             l1534 084E  
                           l1526 0800                             l1518 07C8  
                           l1470 0BA2                             l1462 0B5E  
                           l1630 0F84                             l1622 0F44  
                           l1616 10C2                             l1608 107A  
                           l1376 0E46                             l1448 0EFA  
                           l1456 12A8                             l1560 1154  
                           l1552 08EA                             l1536 0872  
                           l1544 08A6                             l1528 0824  
                           l1480 0BE2                             l1472 0BA4  
                           l1464 0B7C                             l1632 0F96  
                           l1624 0F54                             l1640 10F8  
                           l1618 10D2                             l1378 0E58  
                           l1570 1210                             l1562 11A4  
                           l1554 08EC                             l1546 08B4  
                           l1538 0874                             l1482 0BF6  
                           l1474 0BB8                             l1466 0B8C  
                           l1490 0BFE                             l1458 0AFA  
                           l1634 0FA6                             l1626 0F64  
                           l1650 112E                             l1642 10FA  
                           l1580 0D40                             l1572 0CF6  
                           l1388 0E68                             l1564 122C  
                           l1548 08C4                             l1492 06D8  
                           l1484 0BF8                             l1468 0BA0  
                           l1476 0BC4                             l1636 0FB8  
                           l1628 0F74                             l1652 1142  
                           l1644 10FC                             l1590 0DC2  
                           l1582 0D5C                             l1574 0D14  
                           l1566 127C                             l1558 0914  
                           l1494 06E0                             l1478 0BD2  
                           l1654 1144                             l1646 10FE  
                           l1638 10E0                             l1592 0FCE  
                           l1584 0D6C                             l1576 0D24  
                           l1568 11C0                             l1496 06F4  
                           l1648 1116                             l1594 0FEC  
                           l1586 0D78                             l1578 0D34  
                           l1498 0708                             l1596 0FF8  
                           l1588 0DB2                             l1598 1008  
                           STR_1 06A7                             STR_2 06C7  
                           STR_3 0602                             STR_4 0602  
                           STR_5 0697                             STR_6 0602  
                           STR_7 0602                             STR_8 0602  
                           STR_9 0612                             i2l40 13A4  
                           _main 10E0                             _menu 0AFA  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 006F  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E            function_set@num_lines 004F  
                   print_mat@lcd 0058                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 004C  
                          ?_main 0049                            ?_menu 0062  
                          STR_10 0601                            STR_11 0601  
                          STR_12 0601                            STR_20 0645  
                          STR_13 06B7                            STR_14 0667  
                          STR_15 0687                            STR_16 0677  
                          STR_17 0623                            STR_18 0656  
                          STR_19 0634                            _T0CON 000FD5  
                          i2l111 095E                            i2l120 09CE  
                          i2l113 0952                            i2l122 09C2  
                          i2l131 0A2E                            i2l140 0A9E  
                          i2l117 0982                            i2l126 09F2  
                          i2l135 0A5E                            i2l144 0ACE  
                          i2l129 0A3A                            i2l138 0AAA  
                          i2l147 0AF8                            _TMR0L 000FD6  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0049                  __end_of_lcd_cmd 1318  
                __end_of_goto_XY 0E8C                            _jogar 06D8  
                          _pulso 1354                            tablat 000FF5  
                          ttemp5 0070                            ttemp6 0073  
                          ttemp7 0077                            status 000FD8  
                          wtemp8 0070                  __initialization 1318  
                   __end_of_main 1154                     __end_of_menu 0C0E  
                         ??_main 006C                           ??_menu 0064  
                  __activetblptr 000001                           _ADCON1 000FC1  
                         ?_jogar 0062                           ?_pulso 0049  
                         i2l1200 0AB8                           i2l1210 0AE0  
                         i2l1202 0AC6                           i2l1212 0AE2  
                         i2l1140 0942                           i2l1214 0AEC  
                         i2l1206 0ADC                           i2l1150 0990  
                         i2l1142 0956                           i2l1216 0AF6  
                         i2l1208 0ADE                           i2l1160 09B2  
                         i2l1144 096C                           i2l1152 0992  
                         i2l1136 0924                           i2l1170 0A00  
                         i2l1162 09C6                           i2l1154 0994  
                         i2l1146 097A                           i2l1138 0934  
                         i2l1180 0A48                           i2l1164 09DC  
                         i2l1172 0A02                           i2l1156 0996  
                         i2l1190 0A70                           i2l1182 0A56  
                         i2l1174 0A10                           i2l1166 09EA  
                         i2l1158 09A4                           i2l1192 0A72  
                         i2l1176 0A1E                           i2l1194 0A80  
                         i2l1186 0A6C                           i2l1178 0A32  
                         i2l1290 13A2                           i2l1196 0A8E  
                         i2l1188 0A6E                           i2l1284 138C  
                         i2l1198 0AA2                           i2l1286 139A  
                         i2l1288 139E                 __end_of_creditos 1298  
               __end_of_finaliza 122C                      goto_XY@temp 0057  
           __size_of_gerenciador 0096                           _cont_d 0005  
                         _cont_l 0004                           _cont_r 0003  
                         _cont_u 0006                           _botoes 0008  
                         clear_0 133C                    ?_function_set 004C  
                      ??_lcd_cmd 004F                           _strcpy 1298  
                      ??_goto_XY 0054                     __pdataCOMRAM 006C  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
       display_onoff_control@lcd 004C                       __accesstop 0080  
        __end_of__initialization 1342                    ___rparam_used 000001  
        ??_display_onoff_control 0051                   __pcstackCOMRAM 0049  
                  __end_of_jogar 0924                   gerenciador@lcd 006A  
                  __end_of_pulso 138A                   ??_function_set 0051  
                        ??_jogar 0064             __size_of_int_handler 13A0  
                        ??_pulso 004B                          ?_strcpy 0049  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 004F  
                        i2u30_40 097A                          i2u30_41 0976  
                        i2u31_40 0990                          i2u31_41 098C  
                        i2u40_40 0A2E                          i2u32_40 09A4  
                        i2u40_41 0A2A                          i2u32_41 09A0  
                        i2u41_40 0A48                          i2u33_40 09B2  
                        i2u41_41 0A44                          i2u33_41 09AE  
                        i2u42_40 0A56                          i2u34_40 09C2  
                        i2u26_40 0934                          i2u42_41 0A52  
                        i2u34_41 09BE                          i2u26_41 0930  
                        i2u50_45 0AEA                          i2u50_47 0AEC  
                        i2u43_40 0A6C                          i2u35_40 09DC  
                        i2u27_40 0942                          i2u43_41 0A68  
                        i2u35_41 09D8                          i2u27_41 093E  
                        i2u51_45 0AF4                          i2u51_47 0AF6  
                        i2u44_40 0A80                          i2u36_40 09EA  
                        i2u28_40 0952                          i2u44_41 0A7C  
                        i2u36_41 09E6                          i2u28_41 094E  
                        i2u45_40 0A8E                          i2u37_40 0A00  
                        i2u29_40 096C                          i2u45_41 0A8A  
                        i2u37_41 09FC                          i2u29_41 0968  
                        i2u46_40 0A9E                          i2u38_40 0A10  
                        i2u46_41 0A9A                          i2u38_41 0A0C  
                        i2u47_40 0AB8                          i2u39_40 0A1E  
                        i2u47_41 0AB4                          i2u39_41 0A1A  
                        i2u48_40 0AC6                          i2u56_40 139A  
                        i2u48_41 0AC2                          i2u56_41 1396  
                        i2u49_40 0ADC                          i2u49_41 0AD8  
                      ?_creditos 0062                       _le_entrada 0924  
                      ?_finaliza 0062                       _botoes_ant 0007  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 004F                          __Lparam 0000  
                   __psmallconst 0600                          __pcinit 1318  
                        __ramtop 0600                    instrucoes@lcd 0062  
                        __ptext0 10E0                          __ptext1 0F38  
                        __ptext2 0AFA                          __ptext3 06D8  
                        __ptext4 1154                          __ptext5 11C0  
                        __ptext6 122C                          __ptext7 1298  
                        __ptext8 0E8C                          __ptext9 0C0E  
                        _lcd_cmd 12D8                        _T0CONbits 000FD5  
                __size_of_strcpy 0040                          _goto_XY 0DD0  
                     ??_creditos 0064                       ??_finaliza 0064  
                 __pintcode_body 138A             end_of_initialization 1342  
                     _instrucoes 1154                          menu@lcd 0062  
           __end_of_function_set 0DD0                          int_func 138A  
              __end_of_print_mat 0F38                          postinc0 000FEE  
                        strcpy@d 004F                          strcpy@s 004D  
                      _PORTBbits 000F81                       lcd_cmd@lcd 004C  
                    ?_le_entrada 0049                    ??_gerenciador 006C  
 __size_of_display_onoff_control 008E    __end_of_display_onoff_control 105C  
                     _write_char 0C0E                    __pidataCOMRAM 13A8  
                 __end_of_strcpy 12D8              start_initialization 1318  
                    ?_instrucoes 0062                       jogar@bateu 0068  
                 _entry_mode_set 105C                       goto_XY@lcd 0050  
            __size_of_le_entrada 01D6              __end_of_gerenciador 0FCE  
                       ??_strcpy 004D                      __pbssCOMRAM 0001  
                  ??_int_handler 0049            __size_of_function_set 00DA  
              __size_of_creditos 006C                __size_of_finaliza 006C  
         __end_of_entry_mode_set 10E0                        __pintcode 0008  
                    ?_write_char 0049              __size_of_instrucoes 006C  
                       ?_lcd_cmd 004C                     _function_set 0CF6  
                    __smallconst 0600                         ?_goto_XY 0050  
                 __size_of_jogar 024C                   __size_of_pulso 0036  
            __end_of_int_handler 13A8                  ?_entry_mode_set 004C  
                    _gerenciador 0F38     entry_mode_set@move_direction 004E  
                      _print_mat 0E8C  display_onoff_control@display_on 004E  
     display_onoff_control@blink 0050                      write_char@c 004B  
                     print_mat@i 0060                       print_mat@j 005E  
                   ??_le_entrada 0049              __size_of_write_char 00E8  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0600                entry_mode_set@lcd 004C  
                     ?_print_mat 0058               __end_of_le_entrada 0AFA  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 0DD0  
                       __ptext11 12D8                         __ptext12 0CF6  
                       __ptext13 105C                         __ptext14 0FCE  
                       __ptext15 1354                         __ptext17 0924  
                       _creditos 122C                         _finaliza 11C0  
                   ??_instrucoes 0064                       strcpy@dest 0049  
                       _mat_disp 0009                    __size_of_main 0074  
                  __size_of_menu 0114                         int$flags 006F  
                       lcd_cmd@a 004E            _display_onoff_control 0FCE  
             __end_of_instrucoes 11C0                       _INTCONbits 000FF2  
                       jogar@lcd 0062                         goto_XY@a 0056  
                       goto_XY@x 0052                         goto_XY@y 0053  
                       goto_XY@z 0055                         intlevel2 0000  
                      strcpy@src 004B          function_set@data_lenght 004E  
                    ??_print_mat 005A                     ??_write_char 004C  
                       pulso@lcd 0049                 ??_entry_mode_set 0050  
          function_set@char_font 0050               __end_of_write_char 0CF6  
                   ?_gerenciador 006A  
