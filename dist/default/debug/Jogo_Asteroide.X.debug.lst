

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 16:36:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  0013C2                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for _lcd
    80  0013C2  83                 	db	131
    81  0013C3  0F                 	db	15
    82                           
    83                           ;initializer for _x
    84  0013C4  01                 	db	1
    85  0000                     _PORTBbits	set	3969
    86  0000                     _T0CONbits	set	4053
    87  0000                     _T0CON	set	4053
    88  0000                     _TRISD	set	3989
    89  0000                     _PORTB	set	3969
    90  0000                     _TRISB	set	3987
    91  0000                     _ADCON1	set	4033
    92  0000                     _TMR0L	set	4054
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTD	set	3971
    95                           
    96                           	psect	mediumconst
    97  007EF4                     __pmediumconst:
    98                           	opt callstack 0
    99  007EF4  00                 	db	0
   100  007EF5                     STR_10:
   101  007EF5  20                 	db	32
   102  007EF6  20                 	db	32
   103  007EF7  20                 	db	32
   104  007EF8  20                 	db	32
   105  007EF9  20                 	db	32
   106  007EFA  20                 	db	32
   107  007EFB  20                 	db	32
   108  007EFC  20                 	db	32
   109  007EFD  20                 	db	32
   110  007EFE  20                 	db	32
   111  007EFF  20                 	db	32
   112  007F00  20                 	db	32
   113  007F01  20                 	db	32
   114  007F02  20                 	db	32
   115  007F03  20                 	db	32
   116  007F04  20                 	db	32
   117  007F05  00                 	db	0
   118  007F06                     STR_15:
   119  007F06  50                 	db	80	;'P'
   120  007F07  41                 	db	65	;'A'
   121  007F08  52                 	db	82	;'R'
   122  007F09  41                 	db	65	;'A'
   123  007F0A  20                 	db	32
   124  007F0B  53                 	db	83	;'S'
   125  007F0C  41                 	db	65	;'A'
   126  007F0D  49                 	db	73	;'I'
   127  007F0E  52                 	db	82	;'R'
   128  007F0F  20                 	db	32
   129  007F10  20                 	db	32
   130  007F11  20                 	db	32
   131  007F12  20                 	db	32
   132  007F13  20                 	db	32
   133  007F14  20                 	db	32
   134  007F15  20                 	db	32
   135  007F16  00                 	db	0
   136  007F17                     STR_14:
   137  007F17  41                 	db	65	;'A'
   138  007F18  50                 	db	80	;'P'
   139  007F19  45                 	db	69	;'E'
   140  007F1A  52                 	db	82	;'R'
   141  007F1B  54                 	db	84	;'T'
   142  007F1C  45                 	db	69	;'E'
   143  007F1D  20                 	db	32
   144  007F1E  45                 	db	69	;'E'
   145  007F1F  53                 	db	83	;'S'
   146  007F20  43                 	db	67	;'C'
   147  007F21  20                 	db	32
   148  007F22  20                 	db	32
   149  007F23  20                 	db	32
   150  007F24  20                 	db	32
   151  007F25  20                 	db	32
   152  007F26  20                 	db	32
   153  007F27  00                 	db	0
   154  007F28                     STR_9:
   155  007F28  20                 	db	32
   156  007F29  20                 	db	32
   157  007F2A  20                 	db	32
   158  007F2B  20                 	db	32
   159  007F2C  20                 	db	32
   160  007F2D  20                 	db	32
   161  007F2E  20                 	db	32
   162  007F2F  20                 	db	32
   163  007F30  20                 	db	32
   164  007F31  53                 	db	83	;'S'
   165  007F32  43                 	db	67	;'C'
   166  007F33  4F                 	db	79	;'O'
   167  007F34  52                 	db	82	;'R'
   168  007F35  45                 	db	69	;'E'
   169  007F36  3A                 	db	58	;':'
   170  007F37  20                 	db	32
   171  007F38  00                 	db	0
   172  007F39                     STR_13:
   173  007F39  21                 	db	33
   174  007F3A  21                 	db	33
   175  007F3B  21                 	db	33
   176  007F3C  56                 	db	86	;'V'
   177  007F3D  4F                 	db	79	;'O'
   178  007F3E  43                 	db	67	;'C'
   179  007F3F  45                 	db	69	;'E'
   180  007F40  20                 	db	32
   181  007F41  42                 	db	66	;'B'
   182  007F42  41                 	db	65	;'A'
   183  007F43  54                 	db	84	;'T'
   184  007F44  45                 	db	69	;'E'
   185  007F45  55                 	db	85	;'U'
   186  007F46  21                 	db	33
   187  007F47  21                 	db	33
   188  007F48  21                 	db	33
   189  007F49  00                 	db	0
   190  007F4A                     STR_21:
   191  007F4A  31                 	db	49	;'1'
   192  007F4B  2E                 	db	46
   193  007F4C  4A                 	db	74	;'J'
   194  007F4D  4F                 	db	79	;'O'
   195  007F4E  47                 	db	71	;'G'
   196  007F4F  41                 	db	65	;'A'
   197  007F50  52                 	db	82	;'R'
   198  007F51  2E                 	db	46
   199  007F52  2E                 	db	46
   200  007F53  2E                 	db	46
   201  007F54  2E                 	db	46
   202  007F55  2E                 	db	46
   203  007F56  2E                 	db	46
   204  007F57  2E                 	db	46
   205  007F58  2E                 	db	46
   206  007F59  2E                 	db	46
   207  007F5A  00                 	db	0
   208  007F5B                     STR_23:
   209  007F5B  33                 	db	51	;'3'
   210  007F5C  2E                 	db	46
   211  007F5D  43                 	db	67	;'C'
   212  007F5E  52                 	db	82	;'R'
   213  007F5F  45                 	db	69	;'E'
   214  007F60  44                 	db	68	;'D'
   215  007F61  49                 	db	73	;'I'
   216  007F62  54                 	db	84	;'T'
   217  007F63  4F                 	db	79	;'O'
   218  007F64  53                 	db	83	;'S'
   219  007F65  2E                 	db	46
   220  007F66  2E                 	db	46
   221  007F67  2E                 	db	46
   222  007F68  2E                 	db	46
   223  007F69  2E                 	db	46
   224  007F6A  2E                 	db	46
   225  007F6B  00                 	db	0
   226  007F6C                     STR_24:
   227  007F6C  34                 	db	52	;'4'
   228  007F6D  2E                 	db	46
   229  007F6E  46                 	db	70	;'F'
   230  007F6F  49                 	db	73	;'I'
   231  007F70  4E                 	db	78	;'N'
   232  007F71  41                 	db	65	;'A'
   233  007F72  4C                 	db	76	;'L'
   234  007F73  49                 	db	73	;'I'
   235  007F74  5A                 	db	90	;'Z'
   236  007F75  41                 	db	65	;'A'
   237  007F76  52                 	db	82	;'R'
   238  007F77  2E                 	db	46
   239  007F78  2E                 	db	46
   240  007F79  2E                 	db	46
   241  007F7A  2E                 	db	46
   242  007F7B  2E                 	db	46
   243  007F7C  00                 	db	0
   244  007F7D                     STR_22:
   245  007F7D  32                 	db	50	;'2'
   246  007F7E  2E                 	db	46
   247  007F7F  49                 	db	73	;'I'
   248  007F80  4E                 	db	78	;'N'
   249  007F81  53                 	db	83	;'S'
   250  007F82  54                 	db	84	;'T'
   251  007F83  52                 	db	82	;'R'
   252  007F84  55                 	db	85	;'U'
   253  007F85  43                 	db	67	;'C'
   254  007F86  4F                 	db	79	;'O'
   255  007F87  45                 	db	69	;'E'
   256  007F88  53                 	db	83	;'S'
   257  007F89  2E                 	db	46
   258  007F8A  2E                 	db	46
   259  007F8B  2E                 	db	46
   260  007F8C  2E                 	db	46
   261  007F8D  00                 	db	0
   262  007F8E                     STR_18:
   263  007F8E  4E                 	db	78	;'N'
   264  007F8F  41                 	db	65	;'A'
   265  007F90  56                 	db	86	;'V'
   266  007F91  45                 	db	69	;'E'
   267  007F92  20                 	db	32
   268  007F93  20                 	db	32
   269  007F94  20                 	db	32
   270  007F95  20                 	db	32
   271  007F96  20                 	db	32
   272  007F97  20                 	db	32
   273  007F98  20                 	db	32
   274  007F99  20                 	db	32
   275  007F9A  20                 	db	32
   276  007F9B  20                 	db	32
   277  007F9C  20                 	db	32
   278  007F9D  00                 	db	0
   279  007F9E                     STR_20:
   280  007F9E  4D                 	db	77	;'M'
   281  007F9F  45                 	db	69	;'E'
   282  007FA0  4E                 	db	78	;'N'
   283  007FA1  55                 	db	85	;'U'
   284  007FA2  20                 	db	32
   285  007FA3  20                 	db	32
   286  007FA4  20                 	db	32
   287  007FA5  20                 	db	32
   288  007FA6  20                 	db	32
   289  007FA7  20                 	db	32
   290  007FA8  20                 	db	32
   291  007FA9  20                 	db	32
   292  007FAA  20                 	db	32
   293  007FAB  20                 	db	32
   294  007FAC  20                 	db	32
   295  007FAD  00                 	db	0
   296  007FAE                     STR_19:
   297  007FAE  32                 	db	50	;'2'
   298  007FAF  2E                 	db	46
   299  007FB0  45                 	db	69	;'E'
   300  007FB1  53                 	db	83	;'S'
   301  007FB2  43                 	db	67	;'C'
   302  007FB3  41                 	db	65	;'A'
   303  007FB4  50                 	db	80	;'P'
   304  007FB5  45                 	db	69	;'E'
   305  007FB6  20                 	db	32
   306  007FB7  56                 	db	86	;'V'
   307  007FB8  4F                 	db	79	;'O'
   308  007FB9  4C                 	db	76	;'L'
   309  007FBA  54                 	db	84	;'T'
   310  007FBB  41                 	db	65	;'A'
   311  007FBC  20                 	db	32
   312  007FBD  00                 	db	0
   313  007FBE                     STR_5:
   314  007FBE  48                 	db	72	;'H'
   315  007FBF  49                 	db	73	;'I'
   316  007FC0  42                 	db	66	;'B'
   317  007FC1  45                 	db	69	;'E'
   318  007FC2  52                 	db	82	;'R'
   319  007FC3  4E                 	db	78	;'N'
   320  007FC4  41                 	db	65	;'A'
   321  007FC5  4E                 	db	78	;'N'
   322  007FC6  44                 	db	68	;'D'
   323  007FC7  4F                 	db	79	;'O'
   324  007FC8  2E                 	db	46
   325  007FC9  2E                 	db	46
   326  007FCA  2E                 	db	46
   327  007FCB  2E                 	db	46
   328  007FCC  2E                 	db	46
   329  007FCD  00                 	db	0
   330  007FCE                     STR_1:
   331  007FCE  31                 	db	49	;'1'
   332  007FCF  2E                 	db	46
   333  007FD0  44                 	db	68	;'D'
   334  007FD1  49                 	db	73	;'I'
   335  007FD2  4F                 	db	79	;'O'
   336  007FD3  47                 	db	71	;'G'
   337  007FD4  4F                 	db	79	;'O'
   338  007FD5  20                 	db	32
   339  007FD6  4D                 	db	77	;'M'
   340  007FD7  41                 	db	65	;'A'
   341  007FD8  52                 	db	82	;'R'
   342  007FD9  43                 	db	67	;'C'
   343  007FDA  48                 	db	72	;'H'
   344  007FDB  49                 	db	73	;'I'
   345  007FDC  2E                 	db	46
   346  007FDD  00                 	db	0
   347  007FDE                     STR_17:
   348  007FDE  31                 	db	49	;'1'
   349  007FDF  2E                 	db	46
   350  007FE0  53                 	db	83	;'S'
   351  007FE1  45                 	db	69	;'E'
   352  007FE2  54                 	db	84	;'T'
   353  007FE3  41                 	db	65	;'A'
   354  007FE4  53                 	db	83	;'S'
   355  007FE5  20                 	db	32
   356  007FE6  4D                 	db	77	;'M'
   357  007FE7  4F                 	db	79	;'O'
   358  007FE8  56                 	db	86	;'V'
   359  007FE9  45                 	db	69	;'E'
   360  007FEA  4D                 	db	77	;'M'
   361  007FEB  20                 	db	32
   362  007FEC  41                 	db	65	;'A'
   363  007FED  00                 	db	0
   364  007FEE                     STR_2:
   365  007FEE  32                 	db	50	;'2'
   366  007FEF  2E                 	db	46
   367  007FF0  47                 	db	71	;'G'
   368  007FF1  45                 	db	69	;'E'
   369  007FF2  4F                 	db	79	;'O'
   370  007FF3  52                 	db	82	;'R'
   371  007FF4  47                 	db	71	;'G'
   372  007FF5  45                 	db	69	;'E'
   373  007FF6  20                 	db	32
   374  007FF7  4E                 	db	78	;'N'
   375  007FF8  41                 	db	65	;'A'
   376  007FF9  52                 	db	82	;'R'
   377  007FFA  44                 	db	68	;'D'
   378  007FFB  45                 	db	69	;'E'
   379  007FFC  53                 	db	83	;'S'
   380  007FFD  00                 	db	0
   381  0000                     
   382                           ; #config settings
   383  007FFE  00                 	db	0	; dummy byte at the end
   384  0000                     
   385                           	psect	cinit
   386  00126A                     __pcinit:
   387                           	opt callstack 0
   388  00126A                     start_initialization:
   389                           	opt callstack 0
   390  00126A                     __initialization:
   391                           	opt callstack 0
   392                           
   393                           ; Initialize objects allocated to COMRAM (3 bytes)
   394                           ; load TBLPTR registers with __pidataCOMRAM
   395  00126A  0EC2               	movlw	low __pidataCOMRAM
   396  00126C  6EF6               	movwf	tblptrl,c
   397  00126E  0E13               	movlw	high __pidataCOMRAM
   398  001270  6EF7               	movwf	tblptrh,c
   399  001272  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   400  001274  6EF8               	movwf	tblptru,c
   401  001276  0009               	tblrd		*+	;fetch initializer
   402  001278  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   403  00127C  0009               	tblrd		*+	;fetch initializer
   404  00127E  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   405  001282  0009               	tblrd		*+	;fetch initializer
   406  001284  CFF5 F051          	movff	tablat,__pdataCOMRAM+2
   407                           
   408                           ; Clear objects allocated to BANK0 (64 bytes)
   409  001288  EE00  F080         	lfsr	0,__pbssBANK0
   410  00128C  0E40               	movlw	64
   411  00128E                     clear_0:
   412  00128E  6AEE               	clrf	postinc0,c
   413  001290  06E8               	decf	wreg,f,c
   414  001292  E1FD               	bnz	clear_0
   415                           
   416                           ; Clear objects allocated to COMRAM (17 bytes)
   417  001294  EE00  F03E         	lfsr	0,__pbssCOMRAM
   418  001298  0E11               	movlw	17
   419  00129A                     clear_1:
   420  00129A  6AEE               	clrf	postinc0,c
   421  00129C  06E8               	decf	wreg,f,c
   422  00129E  E1FD               	bnz	clear_1
   423  0012A0                     end_of_initialization:
   424                           	opt callstack 0
   425  0012A0                     __end_of__initialization:
   426                           	opt callstack 0
   427  0012A0  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   428  0012A2  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   429  0012A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   430  0012A6  6EF8               	movwf	tblptru,c
   431  0012A8  0100               	movlb	0
   432  0012AA  EF37  F008         	goto	_main	;jump to C main() function
   433                           
   434                           	psect	bssCOMRAM
   435  00003E                     __pbssCOMRAM:
   436                           	opt callstack 0
   437  00003E                     _contador:
   438                           	opt callstack 0
   439  00003E                     	ds	1
   440  00003F                     _y:
   441                           	opt callstack 0
   442  00003F                     	ds	1
   443  000040                     _op:
   444                           	opt callstack 0
   445  000040                     	ds	1
   446  000041                     _cont_r:
   447                           	opt callstack 0
   448  000041                     	ds	1
   449  000042                     _cont_l:
   450                           	opt callstack 0
   451  000042                     	ds	1
   452  000043                     _cont_d:
   453                           	opt callstack 0
   454  000043                     	ds	1
   455  000044                     _cont_u:
   456                           	opt callstack 0
   457  000044                     	ds	1
   458  000045                     _botoes_ant:
   459                           	opt callstack 0
   460  000045                     	ds	1
   461  000046                     _botoes:
   462                           	opt callstack 0
   463  000046                     	ds	1
   464  000047                     _seed:
   465                           	opt callstack 0
   466  000047                     	ds	8
   467                           
   468                           	psect	dataCOMRAM
   469  00004F                     __pdataCOMRAM:
   470                           	opt callstack 0
   471  00004F                     _lcd:
   472                           	opt callstack 0
   473  00004F                     	ds	2
   474  000051                     _x:
   475                           	opt callstack 0
   476  000051                     	ds	1
   477                           
   478                           	psect	bssBANK0
   479  000080                     __pbssBANK0:
   480                           	opt callstack 0
   481  000080                     _mat_disp:
   482                           	opt callstack 0
   483  000080                     	ds	64
   484                           
   485                           	psect	cstackCOMRAM
   486  000001                     __pcstackCOMRAM:
   487                           	opt callstack 0
   488  000001                     ?_time:
   489                           	opt callstack 0
   490  000001                     ?___omul:
   491                           	opt callstack 0
   492  000001                     pulso@lcd:
   493                           	opt callstack 0
   494  000001                     write_char@lcd:
   495                           	opt callstack 0
   496  000001                     strcpy@dest:
   497                           	opt callstack 0
   498  000001                     time@t:
   499                           	opt callstack 0
   500  000001                     ___omul@multiplier:
   501                           	opt callstack 0
   502                           
   503                           ; 8 bytes @ 0x0
   504  000001                     	ds	2
   505  000003                     ??_pulso:
   506  000003                     write_char@c:
   507                           	opt callstack 0
   508  000003                     strcpy@src:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x2
   512  000003                     	ds	1
   513  000004                     ??_write_char:
   514  000004                     function_set@lcd:
   515                           	opt callstack 0
   516  000004                     display_onoff_control@lcd:
   517                           	opt callstack 0
   518  000004                     lcd_cmd@lcd:
   519                           	opt callstack 0
   520  000004                     entry_mode_set@lcd:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x3
   524  000004                     	ds	1
   525  000005                     strcpy@s:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x4
   529  000005                     	ds	1
   530  000006                     function_set@data_lenght:
   531                           	opt callstack 0
   532  000006                     display_onoff_control@display_on:
   533                           	opt callstack 0
   534  000006                     lcd_cmd@a:
   535                           	opt callstack 0
   536  000006                     entry_mode_set@move_direction:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x5
   540  000006                     	ds	1
   541  000007                     ??_lcd_cmd:
   542  000007                     function_set@num_lines:
   543                           	opt callstack 0
   544  000007                     display_onoff_control@cursor_on:
   545                           	opt callstack 0
   546  000007                     entry_mode_set@display_shift:
   547                           	opt callstack 0
   548  000007                     strcpy@d:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x6
   552  000007                     	ds	1
   553  000008                     ??_entry_mode_set:
   554  000008                     function_set@char_font:
   555                           	opt callstack 0
   556  000008                     display_onoff_control@blink:
   557                           	opt callstack 0
   558  000008                     goto_XY@lcd:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x7
   562  000008                     	ds	1
   563  000009                     ??_function_set:
   564  000009                     ??_display_onoff_control:
   565  000009                     srand@s:
   566                           	opt callstack 0
   567  000009                     ___omul@multiplicand:
   568                           	opt callstack 0
   569                           
   570                           ; 8 bytes @ 0x8
   571  000009                     	ds	1
   572  00000A                     goto_XY@x:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x9
   576  00000A                     	ds	1
   577  00000B                     ??_srand:
   578  00000B                     goto_XY@y:
   579                           	opt callstack 0
   580                           
   581                           ; 1 bytes @ 0xA
   582  00000B                     	ds	1
   583  00000C                     ??_goto_XY:
   584                           
   585                           ; 1 bytes @ 0xB
   586  00000C                     	ds	1
   587  00000D                     goto_XY@z:
   588                           	opt callstack 0
   589                           
   590                           ; 1 bytes @ 0xC
   591  00000D                     	ds	1
   592  00000E                     goto_XY@a:
   593                           	opt callstack 0
   594                           
   595                           ; 1 bytes @ 0xD
   596  00000E                     	ds	1
   597  00000F                     goto_XY@temp:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0xE
   601  00000F                     	ds	1
   602  000010                     print_mat@lcd:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0xF
   606  000010                     	ds	1
   607  000011                     ___omul@product:
   608                           	opt callstack 0
   609                           
   610                           ; 8 bytes @ 0x10
   611  000011                     	ds	1
   612  000012                     ??_print_mat:
   613                           
   614                           ; 1 bytes @ 0x11
   615  000012                     	ds	4
   616  000016                     print_mat@j:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x15
   620  000016                     	ds	2
   621  000018                     print_mat@i:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x17
   625  000018                     	ds	1
   626  000019                     ?_rand:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0x18
   630  000019                     	ds	1
   631  00001A                     creditos@lcd:
   632                           	opt callstack 0
   633  00001A                     finaliza@lcd:
   634                           	opt callstack 0
   635  00001A                     instrucoes@lcd:
   636                           	opt callstack 0
   637  00001A                     menu@lcd:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x19
   641  00001A                     	ds	1
   642  00001B                     ??_rand:
   643                           
   644                           ; 1 bytes @ 0x1A
   645  00001B                     	ds	1
   646  00001C                     
   647                           ; 1 bytes @ 0x1B
   648  00001C                     	ds	7
   649  000023                     ?___awmod:
   650                           	opt callstack 0
   651  000023                     ___awmod@dividend:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x22
   655  000023                     	ds	2
   656  000025                     ___awmod@divisor:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x24
   660  000025                     	ds	2
   661  000027                     ___awmod@counter:
   662                           	opt callstack 0
   663                           
   664                           ; 1 bytes @ 0x26
   665  000027                     	ds	1
   666  000028                     ___awmod@sign:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x27
   670  000028                     	ds	1
   671  000029                     jogar@lcd:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x28
   675  000029                     	ds	2
   676  00002B                     ??_jogar:
   677                           
   678                           ; 1 bytes @ 0x2A
   679  00002B                     	ds	8
   680  000033                     jogar@score:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x32
   684  000033                     	ds	1
   685  000034                     jogar@i:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x33
   689  000034                     	ds	2
   690  000036                     jogar@bateu:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x35
   694  000036                     	ds	2
   695  000038                     jogar@j:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x37
   699  000038                     	ds	2
   700  00003A                     jogar@i_485:
   701                           	opt callstack 0
   702                           
   703                           ; 2 bytes @ 0x39
   704  00003A                     	ds	2
   705  00003C                     gerenciador@lcd:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x3B
   709  00003C                     	ds	2
   710  00003E                     
   711                           ; 1 bytes @ 0x3D
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 36 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   731 ;;      Params:         0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels required when called:    8
   737 ;; This function calls:
   738 ;;		_display_onoff_control
   739 ;;		_entry_mode_set
   740 ;;		_function_set
   741 ;;		_gerenciador
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text0
   748  00106E                     __ptext0:
   749                           	opt callstack 0
   750  00106E                     _main:
   751                           	opt callstack 23
   752  00106E                     
   753                           ;main.c: 38:     ADCON1 = 0x0F;
   754  00106E  0E0F               	movlw	15
   755  001070  6EC1               	movwf	193,c	;volatile
   756                           
   757                           ;main.c: 43:     TRISB = 0x0F;
   758  001072  0E0F               	movlw	15
   759  001074  6E93               	movwf	147,c	;volatile
   760                           
   761                           ;main.c: 46:     PORTB = 0x00;
   762  001076  0E00               	movlw	0
   763  001078  6E81               	movwf	129,c	;volatile
   764                           
   765                           ;main.c: 49:     TRISD = 0x00;
   766  00107A  0E00               	movlw	0
   767  00107C  6E95               	movwf	149,c	;volatile
   768                           
   769                           ;main.c: 52:     T0CON = 0x47;
   770  00107E  0E47               	movlw	71
   771  001080  6ED5               	movwf	213,c	;volatile
   772                           
   773                           ;main.c: 55:     TMR0L = 0x63;
   774  001082  0E63               	movlw	99
   775  001084  6ED6               	movwf	214,c	;volatile
   776  001086                     
   777                           ;main.c: 58:     INTCONbits.TMR0IF = 0;
   778  001086  94F2               	bcf	242,2,c	;volatile
   779  001088                     
   780                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   781  001088  8AF2               	bsf	242,5,c	;volatile
   782  00108A                     
   783                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   784  00108A  88F2               	bsf	242,4,c	;volatile
   785  00108C                     
   786                           ;main.c: 61:     INTCONbits.INT0IF = 0;
   787  00108C  92F2               	bcf	242,1,c	;volatile
   788  00108E                     
   789                           ;main.c: 62:     INTCONbits.GIE = 1;
   790  00108E  8EF2               	bsf	242,7,c	;volatile
   791  001090                     
   792                           ;main.c: 64:     function_set(lcd, 0, 1, 0);
   793  001090  0E83               	movlw	131
   794  001092  6E04               	movwf	function_set@lcd^0,c
   795  001094  0E0F               	movlw	15
   796  001096  6E05               	movwf	(function_set@lcd+1)^0,c
   797  001098  0E00               	movlw	0
   798  00109A  6E06               	movwf	function_set@data_lenght^0,c
   799  00109C  0E01               	movlw	1
   800  00109E  6E07               	movwf	function_set@num_lines^0,c
   801  0010A0  0E00               	movlw	0
   802  0010A2  6E08               	movwf	function_set@char_font^0,c
   803  0010A4  EC9B  F005         	call	_function_set	;wreg free
   804  0010A8                     
   805                           ;main.c: 65:     display_onoff_control(lcd, 1, 0, 0);
   806  0010A8  0E83               	movlw	131
   807  0010AA  6E04               	movwf	display_onoff_control@lcd^0,c
   808  0010AC  0E0F               	movlw	15
   809  0010AE  6E05               	movwf	(display_onoff_control@lcd+1)^0,c
   810  0010B0  0E01               	movlw	1
   811  0010B2  6E06               	movwf	display_onoff_control@display_on^0,c
   812  0010B4  0E00               	movlw	0
   813  0010B6  6E07               	movwf	display_onoff_control@cursor_on^0,c
   814  0010B8  0E00               	movlw	0
   815  0010BA  6E08               	movwf	display_onoff_control@blink^0,c
   816  0010BC  ECAE  F007         	call	_display_onoff_control	;wreg free
   817  0010C0                     
   818                           ;main.c: 66:     entry_mode_set(lcd, 1,0);
   819  0010C0  0E83               	movlw	131
   820  0010C2  6E04               	movwf	entry_mode_set@lcd^0,c
   821  0010C4  0E0F               	movlw	15
   822  0010C6  6E05               	movwf	(entry_mode_set@lcd+1)^0,c
   823  0010C8  0E01               	movlw	1
   824  0010CA  6E06               	movwf	entry_mode_set@move_direction^0,c
   825  0010CC  0E00               	movlw	0
   826  0010CE  6E07               	movwf	entry_mode_set@display_shift^0,c
   827  0010D0  ECF5  F007         	call	_entry_mode_set	;wreg free
   828  0010D4                     
   829                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   830  0010D4  8ED5               	bsf	213,7,c	;volatile
   831  0010D6                     
   832                           ;main.c: 70:     gerenciador(lcd);
   833  0010D6  0E83               	movlw	131
   834  0010D8  6E3C               	movwf	gerenciador@lcd^0,c
   835  0010DA  0E0F               	movlw	15
   836  0010DC  6E3D               	movwf	(gerenciador@lcd+1)^0,c
   837  0010DE  EC63  F007         	call	_gerenciador	;wreg free
   838  0010E2  EF07  F000         	goto	start
   839  0010E6                     __end_of_main:
   840                           	opt callstack 0
   841                           
   842 ;; *************** function _gerenciador *****************
   843 ;; Defined at:
   844 ;;		line 16 in file "task_manager.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  lcd             2   59[COMRAM] PTR struct .
   847 ;;		 -> PORTD(1), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   859 ;;      Params:         2       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0
   862 ;;      Totals:         2       0       0       0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    7
   866 ;; This function calls:
   867 ;;		_creditos
   868 ;;		_finaliza
   869 ;;		_instrucoes
   870 ;;		_jogar
   871 ;;		_menu
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text1
   878  000EC6                     __ptext1:
   879                           	opt callstack 0
   880  000EC6                     _gerenciador:
   881                           	opt callstack 23
   882  000EC6                     l183:
   883  000EC6                     
   884                           ;task_manager.c: 18:         menu(lcd);
   885  000EC6  C03C  F01A         	movff	gerenciador@lcd,menu@lcd
   886  000ECA  C03D  F01B         	movff	gerenciador@lcd+1,menu@lcd+1
   887  000ECE  EC2F  F004         	call	_menu	;wreg free
   888  000ED2                     
   889                           ;task_manager.c: 19:         if(op == 0) jogar(lcd);
   890  000ED2  5040               	movf	_op^0,w,c
   891  000ED4  A4D8               	btfss	status,2,c
   892  000ED6  EF6F  F007         	goto	u1331
   893  000EDA  EF71  F007         	goto	u1330
   894  000EDE                     u1331:
   895  000EDE  EF79  F007         	goto	l1953
   896  000EE2                     u1330:
   897  000EE2  C03C  F029         	movff	gerenciador@lcd,jogar@lcd
   898  000EE6  C03D  F02A         	movff	gerenciador@lcd+1,jogar@lcd+1
   899  000EEA  EC09  F000         	call	_jogar	;wreg free
   900  000EEE  EF63  F007         	goto	l183
   901  000EF2                     l1953:
   902  000EF2  0440               	decf	_op^0,w,c
   903  000EF4  A4D8               	btfss	status,2,c
   904  000EF6  EF7F  F007         	goto	u1341
   905  000EFA  EF81  F007         	goto	u1340
   906  000EFE                     u1341:
   907  000EFE  EF89  F007         	goto	l1957
   908  000F02                     u1340:
   909  000F02  C03C  F01A         	movff	gerenciador@lcd,instrucoes@lcd
   910  000F06  C03D  F01B         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   911  000F0A  EC73  F008         	call	_instrucoes	;wreg free
   912  000F0E  EF63  F007         	goto	l183
   913  000F12                     l1957:
   914  000F12  0E02               	movlw	2
   915  000F14  1840               	xorwf	_op^0,w,c
   916  000F16  A4D8               	btfss	status,2,c
   917  000F18  EF90  F007         	goto	u1351
   918  000F1C  EF92  F007         	goto	u1350
   919  000F20                     u1351:
   920  000F20  EF9A  F007         	goto	l1961
   921  000F24                     u1350:
   922  000F24  C03C  F01A         	movff	gerenciador@lcd,creditos@lcd
   923  000F28  C03D  F01B         	movff	gerenciador@lcd+1,creditos@lcd+1
   924  000F2C  ECA9  F008         	call	_creditos	;wreg free
   925  000F30  EF63  F007         	goto	l183
   926  000F34                     l1961:
   927  000F34  0E03               	movlw	3
   928  000F36  1840               	xorwf	_op^0,w,c
   929  000F38  A4D8               	btfss	status,2,c
   930  000F3A  EFA1  F007         	goto	u1361
   931  000F3E  EFA3  F007         	goto	u1360
   932  000F42                     u1361:
   933  000F42  EFAB  F007         	goto	l185
   934  000F46                     u1360:
   935  000F46  C03C  F01A         	movff	gerenciador@lcd,finaliza@lcd
   936  000F4A  C03D  F01B         	movff	gerenciador@lcd+1,finaliza@lcd+1
   937  000F4E  ECDF  F008         	call	_finaliza	;wreg free
   938  000F52  EF63  F007         	goto	l183
   939  000F56                     l185:
   940  000F56  EF63  F007         	goto	l183
   941  000F5A  0012               	return		;funcret
   942  000F5C                     __end_of_gerenciador:
   943                           	opt callstack 0
   944                           
   945 ;; *************** function _menu *****************
   946 ;; Defined at:
   947 ;;		line 135 in file "task_manager.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  lcd             2   25[COMRAM] PTR struct .
   950 ;;		 -> PORTD(1), 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      unsigned char 
   955 ;; Registers used:
   956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   962 ;;      Params:         2       0       0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0
   965 ;;      Totals:         2       0       0       0       0       0       0
   966 ;;Total ram usage:        2 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    6
   969 ;; This function calls:
   970 ;;		_print_mat
   971 ;;		_strcpy
   972 ;; This function is called by:
   973 ;;		_gerenciador
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text2
   978  00085E                     __ptext2:
   979                           	opt callstack 0
   980  00085E                     _menu:
   981                           	opt callstack 23
   982  00085E                     
   983                           ;task_manager.c: 136:     strcpy(mat_disp[0], "1.JOGAR.........");
   984  00085E  0E80               	movlw	low _mat_disp
   985  000860  6E01               	movwf	strcpy@dest^0,c
   986  000862  0E00               	movlw	high _mat_disp
   987  000864  6E02               	movwf	(strcpy@dest+1)^0,c
   988  000866  0E4A               	movlw	low STR_21
   989  000868  6E03               	movwf	strcpy@src^0,c
   990  00086A  0E7F               	movlw	high STR_21
   991  00086C  6E04               	movwf	(strcpy@src+1)^0,c
   992  00086E  EC57  F009         	call	_strcpy	;wreg free
   993                           
   994                           ;task_manager.c: 137:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   995  000872  0E90               	movlw	low (_mat_disp+16)
   996  000874  6E01               	movwf	strcpy@dest^0,c
   997  000876  0E00               	movlw	high (_mat_disp+16)
   998  000878  6E02               	movwf	(strcpy@dest+1)^0,c
   999  00087A  0E7D               	movlw	low STR_22
  1000  00087C  6E03               	movwf	strcpy@src^0,c
  1001  00087E  0E7F               	movlw	high STR_22
  1002  000880  6E04               	movwf	(strcpy@src+1)^0,c
  1003  000882  EC57  F009         	call	_strcpy	;wreg free
  1004                           
  1005                           ;task_manager.c: 138:     strcpy(mat_disp[2], "3.CREDITOS......");
  1006  000886  0EA0               	movlw	low (_mat_disp+32)
  1007  000888  6E01               	movwf	strcpy@dest^0,c
  1008  00088A  0E00               	movlw	high (_mat_disp+32)
  1009  00088C  6E02               	movwf	(strcpy@dest+1)^0,c
  1010  00088E  0E5B               	movlw	low STR_23
  1011  000890  6E03               	movwf	strcpy@src^0,c
  1012  000892  0E7F               	movlw	high STR_23
  1013  000894  6E04               	movwf	(strcpy@src+1)^0,c
  1014  000896  EC57  F009         	call	_strcpy	;wreg free
  1015                           
  1016                           ;task_manager.c: 139:     strcpy(mat_disp[3], "4.FINALIZAR.....");
  1017  00089A  0EB0               	movlw	low (_mat_disp+48)
  1018  00089C  6E01               	movwf	strcpy@dest^0,c
  1019  00089E  0E00               	movlw	high (_mat_disp+48)
  1020  0008A0  6E02               	movwf	(strcpy@dest+1)^0,c
  1021  0008A2  0E6C               	movlw	low STR_24
  1022  0008A4  6E03               	movwf	strcpy@src^0,c
  1023  0008A6  0E7F               	movlw	high STR_24
  1024  0008A8  6E04               	movwf	(strcpy@src+1)^0,c
  1025  0008AA  EC57  F009         	call	_strcpy	;wreg free
  1026  0008AE                     l1707:
  1027                           
  1028                           ;task_manager.c: 142:     mat_disp[op][15] = '<';
  1029  0008AE  5040               	movf	_op^0,w,c
  1030  0008B0  0D10               	mullw	16
  1031  0008B2  0E8F               	movlw	low (_mat_disp+15)
  1032  0008B4  24F3               	addwf	243,w,c
  1033  0008B6  6ED9               	movwf	fsr2l,c
  1034  0008B8  0E00               	movlw	high (_mat_disp+15)
  1035  0008BA  20F4               	addwfc	prodh,w,c
  1036  0008BC  6EDA               	movwf	fsr2h,c
  1037  0008BE  0E3C               	movlw	60
  1038  0008C0  6EDF               	movwf	indf2,c
  1039  0008C2                     
  1040                           ;task_manager.c: 143:     print_mat(lcd);
  1041  0008C2  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1042  0008C6  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1043  0008CA  ECBE  F006         	call	_print_mat	;wreg free
  1044                           
  1045                           ;task_manager.c: 145:     while(!botoes.Enter){
  1046  0008CE  EFB1  F004         	goto	l1737
  1047  0008D2                     l239:
  1048                           
  1049                           ;task_manager.c: 146:         if((botoes.U) && (op > 0)){
  1050  0008D2  A046               	btfss	_botoes^0,0,c
  1051  0008D4  EF6E  F004         	goto	u1021
  1052  0008D8  EF70  F004         	goto	u1020
  1053  0008DC                     u1021:
  1054  0008DC  EF94  F004         	goto	l1723
  1055  0008E0                     u1020:
  1056  0008E0  5040               	movf	_op^0,w,c
  1057  0008E2  B4D8               	btfsc	status,2,c
  1058  0008E4  EF76  F004         	goto	u1031
  1059  0008E8  EF78  F004         	goto	u1030
  1060  0008EC                     u1031:
  1061  0008EC  EF94  F004         	goto	l1723
  1062  0008F0                     u1030:
  1063  0008F0                     
  1064                           ;task_manager.c: 147:             mat_disp[op][15] = '.';
  1065  0008F0  5040               	movf	_op^0,w,c
  1066  0008F2  0D10               	mullw	16
  1067  0008F4  0E8F               	movlw	low (_mat_disp+15)
  1068  0008F6  24F3               	addwf	243,w,c
  1069  0008F8  6ED9               	movwf	fsr2l,c
  1070  0008FA  0E00               	movlw	high (_mat_disp+15)
  1071  0008FC  20F4               	addwfc	prodh,w,c
  1072  0008FE  6EDA               	movwf	fsr2h,c
  1073  000900  0E2E               	movlw	46
  1074  000902  6EDF               	movwf	indf2,c
  1075  000904                     
  1076                           ;task_manager.c: 148:             op--;
  1077  000904  0640               	decf	_op^0,f,c
  1078  000906                     
  1079                           ;task_manager.c: 149:             botoes.U = 0;
  1080  000906  9046               	bcf	_botoes^0,0,c
  1081  000908                     
  1082                           ;task_manager.c: 150:             mat_disp[op][15] = '<';
  1083  000908  5040               	movf	_op^0,w,c
  1084  00090A  0D10               	mullw	16
  1085  00090C  0E8F               	movlw	low (_mat_disp+15)
  1086  00090E  24F3               	addwf	243,w,c
  1087  000910  6ED9               	movwf	fsr2l,c
  1088  000912  0E00               	movlw	high (_mat_disp+15)
  1089  000914  20F4               	addwfc	prodh,w,c
  1090  000916  6EDA               	movwf	fsr2h,c
  1091  000918  0E3C               	movlw	60
  1092  00091A  6EDF               	movwf	indf2,c
  1093  00091C                     
  1094                           ;task_manager.c: 151:             print_mat(lcd);
  1095  00091C  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1096  000920  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1097  000924  ECBE  F006         	call	_print_mat	;wreg free
  1098  000928                     l1723:
  1099                           
  1100                           ;task_manager.c: 153:         if((botoes.D) && (op < 3)){
  1101  000928  A246               	btfss	_botoes^0,1,c
  1102  00092A  EF99  F004         	goto	u1041
  1103  00092E  EF9B  F004         	goto	u1040
  1104  000932                     u1041:
  1105  000932  EFB1  F004         	goto	l1737
  1106  000936                     u1040:
  1107  000936  0E03               	movlw	3
  1108  000938  6040               	cpfslt	_op^0,c
  1109  00093A  EFA1  F004         	goto	u1051
  1110  00093E  EFA3  F004         	goto	u1050
  1111  000942                     u1051:
  1112  000942  EFB1  F004         	goto	l1737
  1113  000946                     u1050:
  1114  000946                     
  1115                           ;task_manager.c: 154:             mat_disp[op][15] = '.';
  1116  000946  5040               	movf	_op^0,w,c
  1117  000948  0D10               	mullw	16
  1118  00094A  0E8F               	movlw	low (_mat_disp+15)
  1119  00094C  24F3               	addwf	243,w,c
  1120  00094E  6ED9               	movwf	fsr2l,c
  1121  000950  0E00               	movlw	high (_mat_disp+15)
  1122  000952  20F4               	addwfc	prodh,w,c
  1123  000954  6EDA               	movwf	fsr2h,c
  1124  000956  0E2E               	movlw	46
  1125  000958  6EDF               	movwf	indf2,c
  1126  00095A                     
  1127                           ;task_manager.c: 155:             op++;
  1128  00095A  2A40               	incf	_op^0,f,c
  1129  00095C                     
  1130                           ;task_manager.c: 156:             botoes.D = 0;
  1131  00095C  9246               	bcf	_botoes^0,1,c
  1132  00095E  EF57  F004         	goto	l1707
  1133  000962                     l1737:
  1134                           
  1135                           ;task_manager.c: 145:     while(!botoes.Enter){
  1136  000962  A846               	btfss	_botoes^0,4,c
  1137  000964  EFB6  F004         	goto	u1061
  1138  000968  EFB8  F004         	goto	u1060
  1139  00096C                     u1061:
  1140  00096C  EF69  F004         	goto	l239
  1141  000970                     u1060:
  1142  000970  0012               	return		;funcret
  1143  000972                     __end_of_menu:
  1144                           	opt callstack 0
  1145                           
  1146 ;; *************** function _jogar *****************
  1147 ;; Defined at:
  1148 ;;		line 47 in file "task_manager.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  lcd             2   40[COMRAM] PTR struct .
  1151 ;;		 -> PORTD(1), 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  j               2   55[COMRAM] int 
  1154 ;;  i               2   57[COMRAM] int 
  1155 ;;  bateu           2   53[COMRAM] int 
  1156 ;;  i               2   51[COMRAM] int 
  1157 ;;  score           1   50[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1167 ;;      Params:         2       0       0       0       0       0       0
  1168 ;;      Locals:         9       0       0       0       0       0       0
  1169 ;;      Temps:          8       0       0       0       0       0       0
  1170 ;;      Totals:        19       0       0       0       0       0       0
  1171 ;;Total ram usage:       19 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    6
  1174 ;; This function calls:
  1175 ;;		___awmod
  1176 ;;		_print_mat
  1177 ;;		_rand
  1178 ;;		_srand
  1179 ;;		_strcpy
  1180 ;;		_time
  1181 ;; This function is called by:
  1182 ;;		_gerenciador
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text3
  1187  000012                     __ptext3:
  1188                           	opt callstack 0
  1189  000012                     _jogar:
  1190                           	opt callstack 23
  1191  000012                     
  1192                           ;task_manager.c: 48:     srand(time(((void*)0)));
  1193  000012  0E00               	movlw	0
  1194  000014  6E01               	movwf	time@t^0,c
  1195  000016  0E00               	movlw	0
  1196  000018  6E02               	movwf	(time@t+1)^0,c
  1197  00001A  EC0F  F009         	call	_time	;wreg free
  1198  00001E  C001  F02B         	movff	?_time,??_jogar
  1199  000022  C002  F02C         	movff	?_time+1,??_jogar+1
  1200  000026  C003  F02D         	movff	?_time+2,??_jogar+2
  1201  00002A  C004  F02E         	movff	?_time+3,??_jogar+3
  1202  00002E  C005  F02F         	movff	?_time+4,??_jogar+4
  1203  000032  C006  F030         	movff	?_time+5,??_jogar+5
  1204  000036  C007  F031         	movff	?_time+6,??_jogar+6
  1205  00003A  C008  F032         	movff	?_time+7,??_jogar+7
  1206  00003E  C02B  F009         	movff	??_jogar,srand@s
  1207  000042  C02D  F00A         	movff	??_jogar+2,srand@s+1
  1208  000046  ECCA  F009         	call	_srand	;wreg free
  1209  00004A                     
  1210                           ;task_manager.c: 49:     char score = 2;
  1211  00004A  0E02               	movlw	2
  1212  00004C  6E33               	movwf	jogar@score^0,c
  1213  00004E                     
  1214                           ;task_manager.c: 50:     int bateu = 0;
  1215  00004E  0E00               	movlw	0
  1216  000050  6E37               	movwf	(jogar@bateu+1)^0,c
  1217  000052  0E00               	movlw	0
  1218  000054  6E36               	movwf	jogar@bateu^0,c
  1219  000056                     
  1220                           ;task_manager.c: 54:     strcpy(mat_disp[0], "         SCORE: ");
  1221  000056  0E80               	movlw	low _mat_disp
  1222  000058  6E01               	movwf	strcpy@dest^0,c
  1223  00005A  0E00               	movlw	high _mat_disp
  1224  00005C  6E02               	movwf	(strcpy@dest+1)^0,c
  1225  00005E  0E28               	movlw	low STR_9
  1226  000060  6E03               	movwf	strcpy@src^0,c
  1227  000062  0E7F               	movlw	high STR_9
  1228  000064  6E04               	movwf	(strcpy@src+1)^0,c
  1229  000066  EC57  F009         	call	_strcpy	;wreg free
  1230  00006A                     
  1231                           ;task_manager.c: 55:     strcpy(mat_disp[1], "                ");
  1232  00006A  0E90               	movlw	low (_mat_disp+16)
  1233  00006C  6E01               	movwf	strcpy@dest^0,c
  1234  00006E  0E00               	movlw	high (_mat_disp+16)
  1235  000070  6E02               	movwf	(strcpy@dest+1)^0,c
  1236  000072  0EF5               	movlw	low STR_10
  1237  000074  6E03               	movwf	strcpy@src^0,c
  1238  000076  0E7E               	movlw	high STR_10
  1239  000078  6E04               	movwf	(strcpy@src+1)^0,c
  1240  00007A  EC57  F009         	call	_strcpy	;wreg free
  1241  00007E                     
  1242                           ;task_manager.c: 56:     strcpy(mat_disp[2], "                ");
  1243  00007E  0EA0               	movlw	low (_mat_disp+32)
  1244  000080  6E01               	movwf	strcpy@dest^0,c
  1245  000082  0E00               	movlw	high (_mat_disp+32)
  1246  000084  6E02               	movwf	(strcpy@dest+1)^0,c
  1247  000086  0EF5               	movlw	low STR_10
  1248  000088  6E03               	movwf	strcpy@src^0,c
  1249  00008A  0E7E               	movlw	high STR_10
  1250  00008C  6E04               	movwf	(strcpy@src+1)^0,c
  1251  00008E  EC57  F009         	call	_strcpy	;wreg free
  1252  000092                     
  1253                           ;task_manager.c: 57:     strcpy(mat_disp[3], "                ");
  1254  000092  0EB0               	movlw	low (_mat_disp+48)
  1255  000094  6E01               	movwf	strcpy@dest^0,c
  1256  000096  0E00               	movlw	high (_mat_disp+48)
  1257  000098  6E02               	movwf	(strcpy@dest+1)^0,c
  1258  00009A  0EF5               	movlw	low STR_10
  1259  00009C  6E03               	movwf	strcpy@src^0,c
  1260  00009E  0E7E               	movlw	high STR_10
  1261  0000A0  6E04               	movwf	(strcpy@src+1)^0,c
  1262  0000A2  EC57  F009         	call	_strcpy	;wreg free
  1263  0000A6                     l1755:
  1264                           
  1265                           ;task_manager.c: 58:     print_mat(lcd);
  1266  0000A6  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1267  0000AA  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1268  0000AE  ECBE  F006         	call	_print_mat	;wreg free
  1269                           
  1270                           ;task_manager.c: 60:     while(!botoes.Esc && bateu == 0){
  1271  0000B2  EFEF  F002         	goto	l1875
  1272  0000B6                     l1757:
  1273                           
  1274                           ;task_manager.c: 61:         contador ++;
  1275  0000B6  2A3E               	incf	_contador^0,f,c
  1276  0000B8                     
  1277                           ;task_manager.c: 62:         if(contador%10 == 0){
  1278  0000B8  C03E  F023         	movff	_contador,___awmod@dividend
  1279  0000BC  6A24               	clrf	(___awmod@dividend+1)^0,c
  1280  0000BE  0E00               	movlw	0
  1281  0000C0  6E26               	movwf	(___awmod@divisor+1)^0,c
  1282  0000C2  0E0A               	movlw	10
  1283  0000C4  6E25               	movwf	___awmod@divisor^0,c
  1284  0000C6  EC66  F006         	call	___awmod	;wreg free
  1285  0000CA  5023               	movf	?___awmod^0,w,c
  1286  0000CC  1024               	iorwf	(?___awmod+1)^0,w,c
  1287  0000CE  A4D8               	btfss	status,2,c
  1288  0000D0  EF6C  F000         	goto	u1071
  1289  0000D4  EF6E  F000         	goto	u1070
  1290  0000D8                     u1071:
  1291  0000D8  EF93  F000         	goto	l1765
  1292  0000DC                     u1070:
  1293  0000DC                     
  1294                           ;task_manager.c: 63:             i = rand()%3;
  1295  0000DC  EC2D  F005         	call	_rand	;wreg free
  1296  0000E0  C019  F023         	movff	?_rand,___awmod@dividend
  1297  0000E4  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
  1298  0000E8  0E00               	movlw	0
  1299  0000EA  6E26               	movwf	(___awmod@divisor+1)^0,c
  1300  0000EC  0E03               	movlw	3
  1301  0000EE  6E25               	movwf	___awmod@divisor^0,c
  1302  0000F0  EC66  F006         	call	___awmod	;wreg free
  1303  0000F4  C023  F034         	movff	?___awmod,jogar@i
  1304  0000F8  C024  F035         	movff	?___awmod+1,jogar@i+1
  1305  0000FC                     
  1306                           ;task_manager.c: 64:             mat_disp[i+1][15] = '*';
  1307  0000FC  C034  F02B         	movff	jogar@i,??_jogar
  1308  000100  C035  F02C         	movff	jogar@i+1,??_jogar+1
  1309  000104  3A2B               	swapf	??_jogar^0,f,c
  1310  000106  3A2C               	swapf	(??_jogar+1)^0,f,c
  1311  000108  0EF0               	movlw	240
  1312  00010A  162C               	andwf	(??_jogar+1)^0,f,c
  1313  00010C  502B               	movf	??_jogar^0,w,c
  1314  00010E  0B0F               	andlw	15
  1315  000110  122C               	iorwf	(??_jogar+1)^0,f,c
  1316  000112  0EF0               	movlw	240
  1317  000114  162B               	andwf	??_jogar^0,f,c
  1318  000116  0E9F               	movlw	low (_mat_disp+31)
  1319  000118  242B               	addwf	??_jogar^0,w,c
  1320  00011A  6ED9               	movwf	fsr2l,c
  1321  00011C  0E00               	movlw	high (_mat_disp+31)
  1322  00011E  202C               	addwfc	(??_jogar+1)^0,w,c
  1323  000120  6EDA               	movwf	fsr2h,c
  1324  000122  0E2A               	movlw	42
  1325  000124  6EDF               	movwf	indf2,c
  1326  000126                     l1765:
  1327                           
  1328                           ;task_manager.c: 66:         for(int i = 1; i <= 3; i++){
  1329  000126  0E00               	movlw	0
  1330  000128  6E3B               	movwf	(jogar@i_485+1)^0,c
  1331  00012A  0E01               	movlw	1
  1332  00012C  6E3A               	movwf	jogar@i_485^0,c
  1333  00012E                     l1771:
  1334                           
  1335                           ;task_manager.c: 67:             for(int j = 0; j < 15; j++)
  1336  00012E  0E00               	movlw	0
  1337  000130  6E39               	movwf	(jogar@j+1)^0,c
  1338  000132  0E00               	movlw	0
  1339  000134  6E38               	movwf	jogar@j^0,c
  1340  000136                     l1777:
  1341                           
  1342                           ;task_manager.c: 68:                 mat_disp[i][j] = mat_disp[i][j+1];
  1343  000136  C03A  F02B         	movff	jogar@i_485,??_jogar
  1344  00013A  C03B  F02C         	movff	jogar@i_485+1,??_jogar+1
  1345  00013E  3A2B               	swapf	??_jogar^0,f,c
  1346  000140  3A2C               	swapf	(??_jogar+1)^0,f,c
  1347  000142  0EF0               	movlw	240
  1348  000144  162C               	andwf	(??_jogar+1)^0,f,c
  1349  000146  502B               	movf	??_jogar^0,w,c
  1350  000148  0B0F               	andlw	15
  1351  00014A  122C               	iorwf	(??_jogar+1)^0,f,c
  1352  00014C  0EF0               	movlw	240
  1353  00014E  162B               	andwf	??_jogar^0,f,c
  1354  000150  0E80               	movlw	low _mat_disp
  1355  000152  6E2D               	movwf	(??_jogar+2)^0,c
  1356  000154  0E00               	movlw	high _mat_disp
  1357  000156  6E2E               	movwf	(??_jogar+3)^0,c
  1358  000158  0E01               	movlw	1
  1359  00015A  262D               	addwf	(??_jogar+2)^0,f,c
  1360  00015C  0E00               	movlw	0
  1361  00015E  222E               	addwfc	(??_jogar+3)^0,f,c
  1362  000160  502B               	movf	??_jogar^0,w,c
  1363  000162  262D               	addwf	(??_jogar+2)^0,f,c
  1364  000164  502C               	movf	(??_jogar+1)^0,w,c
  1365  000166  222E               	addwfc	(??_jogar+3)^0,f,c
  1366  000168  5038               	movf	jogar@j^0,w,c
  1367  00016A  242D               	addwf	(??_jogar+2)^0,w,c
  1368  00016C  6ED9               	movwf	fsr2l,c
  1369  00016E  5039               	movf	(jogar@j+1)^0,w,c
  1370  000170  202E               	addwfc	(??_jogar+3)^0,w,c
  1371  000172  6EDA               	movwf	fsr2h,c
  1372  000174  C03A  F02F         	movff	jogar@i_485,??_jogar+4
  1373  000178  C03B  F030         	movff	jogar@i_485+1,??_jogar+5
  1374  00017C  3A2F               	swapf	(??_jogar+4)^0,f,c
  1375  00017E  3A30               	swapf	(??_jogar+5)^0,f,c
  1376  000180  0EF0               	movlw	240
  1377  000182  1630               	andwf	(??_jogar+5)^0,f,c
  1378  000184  502F               	movf	(??_jogar+4)^0,w,c
  1379  000186  0B0F               	andlw	15
  1380  000188  1230               	iorwf	(??_jogar+5)^0,f,c
  1381  00018A  0EF0               	movlw	240
  1382  00018C  162F               	andwf	(??_jogar+4)^0,f,c
  1383  00018E  0E80               	movlw	low _mat_disp
  1384  000190  6E31               	movwf	(??_jogar+6)^0,c
  1385  000192  0E00               	movlw	high _mat_disp
  1386  000194  6E32               	movwf	(??_jogar+7)^0,c
  1387  000196  502F               	movf	(??_jogar+4)^0,w,c
  1388  000198  2631               	addwf	(??_jogar+6)^0,f,c
  1389  00019A  5030               	movf	(??_jogar+5)^0,w,c
  1390  00019C  2232               	addwfc	(??_jogar+7)^0,f,c
  1391  00019E  5038               	movf	jogar@j^0,w,c
  1392  0001A0  2431               	addwf	(??_jogar+6)^0,w,c
  1393  0001A2  6EE1               	movwf	fsr1l,c
  1394  0001A4  5039               	movf	(jogar@j+1)^0,w,c
  1395  0001A6  2032               	addwfc	(??_jogar+7)^0,w,c
  1396  0001A8  6EE2               	movwf	fsr1h,c
  1397  0001AA  CFDF FFE7          	movff	indf2,indf1
  1398  0001AE  4A38               	infsnz	jogar@j^0,f,c
  1399  0001B0  2A39               	incf	(jogar@j+1)^0,f,c
  1400  0001B2  BE39               	btfsc	(jogar@j+1)^0,7,c
  1401  0001B4  EFE5  F000         	goto	u1081
  1402  0001B8  5039               	movf	(jogar@j+1)^0,w,c
  1403  0001BA  E109               	bnz	u1080
  1404  0001BC  0E0F               	movlw	15
  1405  0001BE  5C38               	subwf	jogar@j^0,w,c
  1406  0001C0  A0D8               	btfss	status,0,c
  1407  0001C2  EFE5  F000         	goto	u1081
  1408  0001C6  EFE7  F000         	goto	u1080
  1409  0001CA                     u1081:
  1410  0001CA  EF9B  F000         	goto	l1777
  1411  0001CE                     u1080:
  1412  0001CE                     
  1413                           ;task_manager.c: 69:             mat_disp[i][15] = ' ';
  1414  0001CE  C03A  F02B         	movff	jogar@i_485,??_jogar
  1415  0001D2  C03B  F02C         	movff	jogar@i_485+1,??_jogar+1
  1416  0001D6  3A2B               	swapf	??_jogar^0,f,c
  1417  0001D8  3A2C               	swapf	(??_jogar+1)^0,f,c
  1418  0001DA  0EF0               	movlw	240
  1419  0001DC  162C               	andwf	(??_jogar+1)^0,f,c
  1420  0001DE  502B               	movf	??_jogar^0,w,c
  1421  0001E0  0B0F               	andlw	15
  1422  0001E2  122C               	iorwf	(??_jogar+1)^0,f,c
  1423  0001E4  0EF0               	movlw	240
  1424  0001E6  162B               	andwf	??_jogar^0,f,c
  1425  0001E8  0E8F               	movlw	low (_mat_disp+15)
  1426  0001EA  242B               	addwf	??_jogar^0,w,c
  1427  0001EC  6ED9               	movwf	fsr2l,c
  1428  0001EE  0E00               	movlw	high (_mat_disp+15)
  1429  0001F0  202C               	addwfc	(??_jogar+1)^0,w,c
  1430  0001F2  6EDA               	movwf	fsr2h,c
  1431  0001F4  0E20               	movlw	32
  1432  0001F6  6EDF               	movwf	indf2,c
  1433  0001F8                     
  1434                           ;task_manager.c: 70:         }
  1435  0001F8  4A3A               	infsnz	jogar@i_485^0,f,c
  1436  0001FA  2A3B               	incf	(jogar@i_485+1)^0,f,c
  1437  0001FC  BE3B               	btfsc	(jogar@i_485+1)^0,7,c
  1438  0001FE  EF0A  F001         	goto	u1091
  1439  000202  503B               	movf	(jogar@i_485+1)^0,w,c
  1440  000204  E109               	bnz	u1090
  1441  000206  0E04               	movlw	4
  1442  000208  5C3A               	subwf	jogar@i_485^0,w,c
  1443  00020A  A0D8               	btfss	status,0,c
  1444  00020C  EF0A  F001         	goto	u1091
  1445  000210  EF0C  F001         	goto	u1090
  1446  000214                     u1091:
  1447  000214  EF97  F000         	goto	l1771
  1448  000218                     u1090:
  1449  000218                     
  1450                           ;task_manager.c: 72:         mat_disp[x][y] = '>';
  1451  000218  5051               	movf	_x^0,w,c
  1452  00021A  0D10               	mullw	16
  1453  00021C  0E80               	movlw	low _mat_disp
  1454  00021E  6E2B               	movwf	??_jogar^0,c
  1455  000220  0E00               	movlw	high _mat_disp
  1456  000222  6E2C               	movwf	(??_jogar+1)^0,c
  1457  000224  50F3               	movf	243,w,c
  1458  000226  262B               	addwf	??_jogar^0,f,c
  1459  000228  50F4               	movf	244,w,c
  1460  00022A  222C               	addwfc	(??_jogar+1)^0,f,c
  1461  00022C  503F               	movf	_y^0,w,c
  1462  00022E  242B               	addwf	??_jogar^0,w,c
  1463  000230  6ED9               	movwf	fsr2l,c
  1464  000232  0E00               	movlw	0
  1465  000234  202C               	addwfc	(??_jogar+1)^0,w,c
  1466  000236  6EDA               	movwf	fsr2h,c
  1467  000238  0E3E               	movlw	62
  1468  00023A  6EDF               	movwf	indf2,c
  1469  00023C                     
  1470                           ;task_manager.c: 73:         if(mat_disp[1][0] == '*' || mat_disp[2][0] == '*' || mat_di
      +                          sp[3][0] == '*')
  1471  00023C  0E2A               	movlw	42
  1472  00023E  0100               	movlb	0	; () banked
  1473  000240  1990               	xorwf	(_mat_disp+16)& (0+255),w,b
  1474  000242  B4D8               	btfsc	status,2,c
  1475  000244  EF26  F001         	goto	u1101
  1476  000248  EF28  F001         	goto	u1100
  1477  00024C                     u1101:
  1478  00024C  EF3A  F001         	goto	l1797
  1479  000250                     u1100:
  1480  000250                     
  1481                           ; BSR set to: 0
  1482  000250  0E2A               	movlw	42
  1483  000252  19A0               	xorwf	(_mat_disp+32)& (0+255),w,b
  1484  000254  B4D8               	btfsc	status,2,c
  1485  000256  EF2F  F001         	goto	u1111
  1486  00025A  EF31  F001         	goto	u1110
  1487  00025E                     u1111:
  1488  00025E  EF3A  F001         	goto	l1797
  1489  000262                     u1110:
  1490  000262                     
  1491                           ; BSR set to: 0
  1492  000262  0E2A               	movlw	42
  1493  000264  19B0               	xorwf	(_mat_disp+48)& (0+255),w,b
  1494  000266  A4D8               	btfss	status,2,c
  1495  000268  EF38  F001         	goto	u1121
  1496  00026C  EF3A  F001         	goto	u1120
  1497  000270                     u1121:
  1498  000270  EF3B  F001         	goto	l1799
  1499  000274                     u1120:
  1500  000274                     l1797:
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;task_manager.c: 74:             score++;
  1504  000274  2A33               	incf	jogar@score^0,f,c
  1505  000276                     l1799:
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;task_manager.c: 75:         print_mat(lcd);
  1509  000276  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1510  00027A  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1511  00027E  ECBE  F006         	call	_print_mat	;wreg free
  1512  000282                     
  1513                           ;task_manager.c: 77:         if(mat_disp[x][y] == '>' && mat_disp[x][y+1] == '*')
  1514  000282  5051               	movf	_x^0,w,c
  1515  000284  0D10               	mullw	16
  1516  000286  0E80               	movlw	low _mat_disp
  1517  000288  6E2B               	movwf	??_jogar^0,c
  1518  00028A  0E00               	movlw	high _mat_disp
  1519  00028C  6E2C               	movwf	(??_jogar+1)^0,c
  1520  00028E  50F3               	movf	243,w,c
  1521  000290  262B               	addwf	??_jogar^0,f,c
  1522  000292  50F4               	movf	244,w,c
  1523  000294  222C               	addwfc	(??_jogar+1)^0,f,c
  1524  000296  503F               	movf	_y^0,w,c
  1525  000298  242B               	addwf	??_jogar^0,w,c
  1526  00029A  6ED9               	movwf	fsr2l,c
  1527  00029C  0E00               	movlw	0
  1528  00029E  202C               	addwfc	(??_jogar+1)^0,w,c
  1529  0002A0  6EDA               	movwf	fsr2h,c
  1530  0002A2  0E3E               	movlw	62
  1531  0002A4  18DE               	xorwf	postinc2,w,c
  1532  0002A6  A4D8               	btfss	status,2,c
  1533  0002A8  EF58  F001         	goto	u1131
  1534  0002AC  EF5A  F001         	goto	u1130
  1535  0002B0                     u1131:
  1536  0002B0  EF7B  F001         	goto	l1807
  1537  0002B4                     u1130:
  1538  0002B4  5051               	movf	_x^0,w,c
  1539  0002B6  0D10               	mullw	16
  1540  0002B8  0E80               	movlw	low _mat_disp
  1541  0002BA  6E2B               	movwf	??_jogar^0,c
  1542  0002BC  0E00               	movlw	high _mat_disp
  1543  0002BE  6E2C               	movwf	(??_jogar+1)^0,c
  1544  0002C0  0E01               	movlw	1
  1545  0002C2  262B               	addwf	??_jogar^0,f,c
  1546  0002C4  0E00               	movlw	0
  1547  0002C6  222C               	addwfc	(??_jogar+1)^0,f,c
  1548  0002C8  50F3               	movf	243,w,c
  1549  0002CA  262B               	addwf	??_jogar^0,f,c
  1550  0002CC  50F4               	movf	244,w,c
  1551  0002CE  222C               	addwfc	(??_jogar+1)^0,f,c
  1552  0002D0  503F               	movf	_y^0,w,c
  1553  0002D2  242B               	addwf	??_jogar^0,w,c
  1554  0002D4  6ED9               	movwf	fsr2l,c
  1555  0002D6  0E00               	movlw	0
  1556  0002D8  202C               	addwfc	(??_jogar+1)^0,w,c
  1557  0002DA  6EDA               	movwf	fsr2h,c
  1558  0002DC  0E2A               	movlw	42
  1559  0002DE  18DE               	xorwf	postinc2,w,c
  1560  0002E0  A4D8               	btfss	status,2,c
  1561  0002E2  EF75  F001         	goto	u1141
  1562  0002E6  EF77  F001         	goto	u1140
  1563  0002EA                     u1141:
  1564  0002EA  EF7B  F001         	goto	l1807
  1565  0002EE                     u1140:
  1566  0002EE                     
  1567                           ;task_manager.c: 78:             bateu = 1;
  1568  0002EE  0E00               	movlw	0
  1569  0002F0  6E37               	movwf	(jogar@bateu+1)^0,c
  1570  0002F2  0E01               	movlw	1
  1571  0002F4  6E36               	movwf	jogar@bateu^0,c
  1572  0002F6                     l1807:
  1573                           
  1574                           ;task_manager.c: 79:         if((botoes.U) && (x > 1)){
  1575  0002F6  A046               	btfss	_botoes^0,0,c
  1576  0002F8  EF80  F001         	goto	u1151
  1577  0002FC  EF82  F001         	goto	u1150
  1578  000300                     u1151:
  1579  000300  EFFE  F001         	goto	l1827
  1580  000304                     u1150:
  1581  000304  0E01               	movlw	1
  1582  000306  6451               	cpfsgt	_x^0,c
  1583  000308  EF88  F001         	goto	u1161
  1584  00030C  EF8A  F001         	goto	u1160
  1585  000310                     u1161:
  1586  000310  EFFE  F001         	goto	l1827
  1587  000314                     u1160:
  1588  000314                     
  1589                           ;task_manager.c: 80:             if(mat_disp[x][y] == '>' && mat_disp[x-1][y] == '*')
  1590  000314  5051               	movf	_x^0,w,c
  1591  000316  0D10               	mullw	16
  1592  000318  0E80               	movlw	low _mat_disp
  1593  00031A  6E2B               	movwf	??_jogar^0,c
  1594  00031C  0E00               	movlw	high _mat_disp
  1595  00031E  6E2C               	movwf	(??_jogar+1)^0,c
  1596  000320  50F3               	movf	243,w,c
  1597  000322  262B               	addwf	??_jogar^0,f,c
  1598  000324  50F4               	movf	244,w,c
  1599  000326  222C               	addwfc	(??_jogar+1)^0,f,c
  1600  000328  503F               	movf	_y^0,w,c
  1601  00032A  242B               	addwf	??_jogar^0,w,c
  1602  00032C  6ED9               	movwf	fsr2l,c
  1603  00032E  0E00               	movlw	0
  1604  000330  202C               	addwfc	(??_jogar+1)^0,w,c
  1605  000332  6EDA               	movwf	fsr2h,c
  1606  000334  0E3E               	movlw	62
  1607  000336  18DE               	xorwf	postinc2,w,c
  1608  000338  A4D8               	btfss	status,2,c
  1609  00033A  EFA1  F001         	goto	u1171
  1610  00033E  EFA3  F001         	goto	u1170
  1611  000342                     u1171:
  1612  000342  EFD2  F001         	goto	l1817
  1613  000346                     u1170:
  1614  000346  5051               	movf	_x^0,w,c
  1615  000348  6E2B               	movwf	??_jogar^0,c
  1616  00034A  6A2C               	clrf	(??_jogar+1)^0,c
  1617  00034C  3A2B               	swapf	??_jogar^0,f,c
  1618  00034E  3A2C               	swapf	(??_jogar+1)^0,f,c
  1619  000350  0EF0               	movlw	240
  1620  000352  162C               	andwf	(??_jogar+1)^0,f,c
  1621  000354  502B               	movf	??_jogar^0,w,c
  1622  000356  0B0F               	andlw	15
  1623  000358  122C               	iorwf	(??_jogar+1)^0,f,c
  1624  00035A  0EF0               	movlw	240
  1625  00035C  162B               	andwf	??_jogar^0,f,c
  1626  00035E  0EF0               	movlw	240
  1627  000360  6E2D               	movwf	(??_jogar+2)^0,c
  1628  000362  0EFF               	movlw	255
  1629  000364  6E2E               	movwf	(??_jogar+3)^0,c
  1630  000366  0E80               	movlw	low _mat_disp
  1631  000368  6E2F               	movwf	(??_jogar+4)^0,c
  1632  00036A  0E00               	movlw	high _mat_disp
  1633  00036C  6E30               	movwf	(??_jogar+5)^0,c
  1634  00036E  502D               	movf	(??_jogar+2)^0,w,c
  1635  000370  262F               	addwf	(??_jogar+4)^0,f,c
  1636  000372  502E               	movf	(??_jogar+3)^0,w,c
  1637  000374  2230               	addwfc	(??_jogar+5)^0,f,c
  1638  000376  502B               	movf	??_jogar^0,w,c
  1639  000378  262F               	addwf	(??_jogar+4)^0,f,c
  1640  00037A  502C               	movf	(??_jogar+1)^0,w,c
  1641  00037C  2230               	addwfc	(??_jogar+5)^0,f,c
  1642  00037E  503F               	movf	_y^0,w,c
  1643  000380  242F               	addwf	(??_jogar+4)^0,w,c
  1644  000382  6ED9               	movwf	fsr2l,c
  1645  000384  0E00               	movlw	0
  1646  000386  2030               	addwfc	(??_jogar+5)^0,w,c
  1647  000388  6EDA               	movwf	fsr2h,c
  1648  00038A  0E2A               	movlw	42
  1649  00038C  18DE               	xorwf	postinc2,w,c
  1650  00038E  A4D8               	btfss	status,2,c
  1651  000390  EFCC  F001         	goto	u1181
  1652  000394  EFCE  F001         	goto	u1180
  1653  000398                     u1181:
  1654  000398  EFD2  F001         	goto	l1817
  1655  00039C                     u1180:
  1656  00039C                     
  1657                           ;task_manager.c: 81:                 bateu = 1;
  1658  00039C  0E00               	movlw	0
  1659  00039E  6E37               	movwf	(jogar@bateu+1)^0,c
  1660  0003A0  0E01               	movlw	1
  1661  0003A2  6E36               	movwf	jogar@bateu^0,c
  1662  0003A4                     l1817:
  1663                           
  1664                           ;task_manager.c: 82:             mat_disp[x][y] = ' ';
  1665  0003A4  5051               	movf	_x^0,w,c
  1666  0003A6  0D10               	mullw	16
  1667  0003A8  0E80               	movlw	low _mat_disp
  1668  0003AA  6E2B               	movwf	??_jogar^0,c
  1669  0003AC  0E00               	movlw	high _mat_disp
  1670  0003AE  6E2C               	movwf	(??_jogar+1)^0,c
  1671  0003B0  50F3               	movf	243,w,c
  1672  0003B2  262B               	addwf	??_jogar^0,f,c
  1673  0003B4  50F4               	movf	244,w,c
  1674  0003B6  222C               	addwfc	(??_jogar+1)^0,f,c
  1675  0003B8  503F               	movf	_y^0,w,c
  1676  0003BA  242B               	addwf	??_jogar^0,w,c
  1677  0003BC  6ED9               	movwf	fsr2l,c
  1678  0003BE  0E00               	movlw	0
  1679  0003C0  202C               	addwfc	(??_jogar+1)^0,w,c
  1680  0003C2  6EDA               	movwf	fsr2h,c
  1681  0003C4  0E20               	movlw	32
  1682  0003C6  6EDF               	movwf	indf2,c
  1683  0003C8                     
  1684                           ;task_manager.c: 83:             x--;
  1685  0003C8  0651               	decf	_x^0,f,c
  1686  0003CA                     
  1687                           ;task_manager.c: 84:             botoes.U = 0;
  1688  0003CA  9046               	bcf	_botoes^0,0,c
  1689  0003CC                     
  1690                           ;task_manager.c: 85:             mat_disp[x][y] = '>';
  1691  0003CC  5051               	movf	_x^0,w,c
  1692  0003CE  0D10               	mullw	16
  1693  0003D0  0E80               	movlw	low _mat_disp
  1694  0003D2  6E2B               	movwf	??_jogar^0,c
  1695  0003D4  0E00               	movlw	high _mat_disp
  1696  0003D6  6E2C               	movwf	(??_jogar+1)^0,c
  1697  0003D8  50F3               	movf	243,w,c
  1698  0003DA  262B               	addwf	??_jogar^0,f,c
  1699  0003DC  50F4               	movf	244,w,c
  1700  0003DE  222C               	addwfc	(??_jogar+1)^0,f,c
  1701  0003E0  503F               	movf	_y^0,w,c
  1702  0003E2  242B               	addwf	??_jogar^0,w,c
  1703  0003E4  6ED9               	movwf	fsr2l,c
  1704  0003E6  0E00               	movlw	0
  1705  0003E8  202C               	addwfc	(??_jogar+1)^0,w,c
  1706  0003EA  6EDA               	movwf	fsr2h,c
  1707  0003EC  0E3E               	movlw	62
  1708  0003EE  6EDF               	movwf	indf2,c
  1709  0003F0                     
  1710                           ;task_manager.c: 86:             print_mat(lcd);
  1711  0003F0  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1712  0003F4  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1713  0003F8  ECBE  F006         	call	_print_mat	;wreg free
  1714  0003FC                     l1827:
  1715                           
  1716                           ;task_manager.c: 88:         if((botoes.D) && (x < 3)){
  1717  0003FC  A246               	btfss	_botoes^0,1,c
  1718  0003FE  EF03  F002         	goto	u1191
  1719  000402  EF05  F002         	goto	u1190
  1720  000406                     u1191:
  1721  000406  EF7D  F002         	goto	l1847
  1722  00040A                     u1190:
  1723  00040A  0E03               	movlw	3
  1724  00040C  6051               	cpfslt	_x^0,c
  1725  00040E  EF0B  F002         	goto	u1201
  1726  000412  EF0D  F002         	goto	u1200
  1727  000416                     u1201:
  1728  000416  EF7D  F002         	goto	l1847
  1729  00041A                     u1200:
  1730  00041A                     
  1731                           ;task_manager.c: 89:             if(mat_disp[x][y] == '>' && mat_disp[x+1][y] == '*')
  1732  00041A  5051               	movf	_x^0,w,c
  1733  00041C  0D10               	mullw	16
  1734  00041E  0E80               	movlw	low _mat_disp
  1735  000420  6E2B               	movwf	??_jogar^0,c
  1736  000422  0E00               	movlw	high _mat_disp
  1737  000424  6E2C               	movwf	(??_jogar+1)^0,c
  1738  000426  50F3               	movf	243,w,c
  1739  000428  262B               	addwf	??_jogar^0,f,c
  1740  00042A  50F4               	movf	244,w,c
  1741  00042C  222C               	addwfc	(??_jogar+1)^0,f,c
  1742  00042E  503F               	movf	_y^0,w,c
  1743  000430  242B               	addwf	??_jogar^0,w,c
  1744  000432  6ED9               	movwf	fsr2l,c
  1745  000434  0E00               	movlw	0
  1746  000436  202C               	addwfc	(??_jogar+1)^0,w,c
  1747  000438  6EDA               	movwf	fsr2h,c
  1748  00043A  0E3E               	movlw	62
  1749  00043C  18DE               	xorwf	postinc2,w,c
  1750  00043E  A4D8               	btfss	status,2,c
  1751  000440  EF24  F002         	goto	u1211
  1752  000444  EF26  F002         	goto	u1210
  1753  000448                     u1211:
  1754  000448  EF51  F002         	goto	l1837
  1755  00044C                     u1210:
  1756  00044C  5051               	movf	_x^0,w,c
  1757  00044E  6E2B               	movwf	??_jogar^0,c
  1758  000450  6A2C               	clrf	(??_jogar+1)^0,c
  1759  000452  3A2B               	swapf	??_jogar^0,f,c
  1760  000454  3A2C               	swapf	(??_jogar+1)^0,f,c
  1761  000456  0EF0               	movlw	240
  1762  000458  162C               	andwf	(??_jogar+1)^0,f,c
  1763  00045A  502B               	movf	??_jogar^0,w,c
  1764  00045C  0B0F               	andlw	15
  1765  00045E  122C               	iorwf	(??_jogar+1)^0,f,c
  1766  000460  0EF0               	movlw	240
  1767  000462  162B               	andwf	??_jogar^0,f,c
  1768  000464  0E80               	movlw	low _mat_disp
  1769  000466  6E2D               	movwf	(??_jogar+2)^0,c
  1770  000468  0E00               	movlw	high _mat_disp
  1771  00046A  6E2E               	movwf	(??_jogar+3)^0,c
  1772  00046C  0E10               	movlw	16
  1773  00046E  262D               	addwf	(??_jogar+2)^0,f,c
  1774  000470  0E00               	movlw	0
  1775  000472  222E               	addwfc	(??_jogar+3)^0,f,c
  1776  000474  502B               	movf	??_jogar^0,w,c
  1777  000476  262D               	addwf	(??_jogar+2)^0,f,c
  1778  000478  502C               	movf	(??_jogar+1)^0,w,c
  1779  00047A  222E               	addwfc	(??_jogar+3)^0,f,c
  1780  00047C  503F               	movf	_y^0,w,c
  1781  00047E  242D               	addwf	(??_jogar+2)^0,w,c
  1782  000480  6ED9               	movwf	fsr2l,c
  1783  000482  0E00               	movlw	0
  1784  000484  202E               	addwfc	(??_jogar+3)^0,w,c
  1785  000486  6EDA               	movwf	fsr2h,c
  1786  000488  0E2A               	movlw	42
  1787  00048A  18DE               	xorwf	postinc2,w,c
  1788  00048C  A4D8               	btfss	status,2,c
  1789  00048E  EF4B  F002         	goto	u1221
  1790  000492  EF4D  F002         	goto	u1220
  1791  000496                     u1221:
  1792  000496  EF51  F002         	goto	l1837
  1793  00049A                     u1220:
  1794  00049A                     
  1795                           ;task_manager.c: 90:                 bateu = 1;
  1796  00049A  0E00               	movlw	0
  1797  00049C  6E37               	movwf	(jogar@bateu+1)^0,c
  1798  00049E  0E01               	movlw	1
  1799  0004A0  6E36               	movwf	jogar@bateu^0,c
  1800  0004A2                     l1837:
  1801                           
  1802                           ;task_manager.c: 91:             mat_disp[x][y] = ' ';
  1803  0004A2  5051               	movf	_x^0,w,c
  1804  0004A4  0D10               	mullw	16
  1805  0004A6  0E80               	movlw	low _mat_disp
  1806  0004A8  6E2B               	movwf	??_jogar^0,c
  1807  0004AA  0E00               	movlw	high _mat_disp
  1808  0004AC  6E2C               	movwf	(??_jogar+1)^0,c
  1809  0004AE  50F3               	movf	243,w,c
  1810  0004B0  262B               	addwf	??_jogar^0,f,c
  1811  0004B2  50F4               	movf	244,w,c
  1812  0004B4  222C               	addwfc	(??_jogar+1)^0,f,c
  1813  0004B6  503F               	movf	_y^0,w,c
  1814  0004B8  242B               	addwf	??_jogar^0,w,c
  1815  0004BA  6ED9               	movwf	fsr2l,c
  1816  0004BC  0E00               	movlw	0
  1817  0004BE  202C               	addwfc	(??_jogar+1)^0,w,c
  1818  0004C0  6EDA               	movwf	fsr2h,c
  1819  0004C2  0E20               	movlw	32
  1820  0004C4  6EDF               	movwf	indf2,c
  1821  0004C6                     
  1822                           ;task_manager.c: 92:             x++;
  1823  0004C6  2A51               	incf	_x^0,f,c
  1824  0004C8                     
  1825                           ;task_manager.c: 93:             botoes.D = 0;
  1826  0004C8  9246               	bcf	_botoes^0,1,c
  1827  0004CA                     
  1828                           ;task_manager.c: 94:             mat_disp[x][y] = '>';
  1829  0004CA  5051               	movf	_x^0,w,c
  1830  0004CC  0D10               	mullw	16
  1831  0004CE  0E80               	movlw	low _mat_disp
  1832  0004D0  6E2B               	movwf	??_jogar^0,c
  1833  0004D2  0E00               	movlw	high _mat_disp
  1834  0004D4  6E2C               	movwf	(??_jogar+1)^0,c
  1835  0004D6  50F3               	movf	243,w,c
  1836  0004D8  262B               	addwf	??_jogar^0,f,c
  1837  0004DA  50F4               	movf	244,w,c
  1838  0004DC  222C               	addwfc	(??_jogar+1)^0,f,c
  1839  0004DE  503F               	movf	_y^0,w,c
  1840  0004E0  242B               	addwf	??_jogar^0,w,c
  1841  0004E2  6ED9               	movwf	fsr2l,c
  1842  0004E4  0E00               	movlw	0
  1843  0004E6  202C               	addwfc	(??_jogar+1)^0,w,c
  1844  0004E8  6EDA               	movwf	fsr2h,c
  1845  0004EA  0E3E               	movlw	62
  1846  0004EC  6EDF               	movwf	indf2,c
  1847  0004EE                     
  1848                           ;task_manager.c: 95:             print_mat(lcd);
  1849  0004EE  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1850  0004F2  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1851  0004F6  ECBE  F006         	call	_print_mat	;wreg free
  1852  0004FA                     l1847:
  1853                           
  1854                           ;task_manager.c: 97:         if((botoes.R) && (y < 15)){
  1855  0004FA  A646               	btfss	_botoes^0,3,c
  1856  0004FC  EF82  F002         	goto	u1231
  1857  000500  EF84  F002         	goto	u1230
  1858  000504                     u1231:
  1859  000504  EFB8  F002         	goto	l1861
  1860  000508                     u1230:
  1861  000508  0E0F               	movlw	15
  1862  00050A  603F               	cpfslt	_y^0,c
  1863  00050C  EF8A  F002         	goto	u1241
  1864  000510  EF8C  F002         	goto	u1240
  1865  000514                     u1241:
  1866  000514  EFB8  F002         	goto	l1861
  1867  000518                     u1240:
  1868  000518                     
  1869                           ;task_manager.c: 98:             mat_disp[x][y] = ' ';
  1870  000518  5051               	movf	_x^0,w,c
  1871  00051A  0D10               	mullw	16
  1872  00051C  0E80               	movlw	low _mat_disp
  1873  00051E  6E2B               	movwf	??_jogar^0,c
  1874  000520  0E00               	movlw	high _mat_disp
  1875  000522  6E2C               	movwf	(??_jogar+1)^0,c
  1876  000524  50F3               	movf	243,w,c
  1877  000526  262B               	addwf	??_jogar^0,f,c
  1878  000528  50F4               	movf	244,w,c
  1879  00052A  222C               	addwfc	(??_jogar+1)^0,f,c
  1880  00052C  503F               	movf	_y^0,w,c
  1881  00052E  242B               	addwf	??_jogar^0,w,c
  1882  000530  6ED9               	movwf	fsr2l,c
  1883  000532  0E00               	movlw	0
  1884  000534  202C               	addwfc	(??_jogar+1)^0,w,c
  1885  000536  6EDA               	movwf	fsr2h,c
  1886  000538  0E20               	movlw	32
  1887  00053A  6EDF               	movwf	indf2,c
  1888  00053C                     
  1889                           ;task_manager.c: 99:             y++;
  1890  00053C  2A3F               	incf	_y^0,f,c
  1891  00053E                     
  1892                           ;task_manager.c: 100:             botoes.R = 0;
  1893  00053E  9646               	bcf	_botoes^0,3,c
  1894  000540                     
  1895                           ;task_manager.c: 101:             mat_disp[x][y] = '>';
  1896  000540  5051               	movf	_x^0,w,c
  1897  000542  0D10               	mullw	16
  1898  000544  0E80               	movlw	low _mat_disp
  1899  000546  6E2B               	movwf	??_jogar^0,c
  1900  000548  0E00               	movlw	high _mat_disp
  1901  00054A  6E2C               	movwf	(??_jogar+1)^0,c
  1902  00054C  50F3               	movf	243,w,c
  1903  00054E  262B               	addwf	??_jogar^0,f,c
  1904  000550  50F4               	movf	244,w,c
  1905  000552  222C               	addwfc	(??_jogar+1)^0,f,c
  1906  000554  503F               	movf	_y^0,w,c
  1907  000556  242B               	addwf	??_jogar^0,w,c
  1908  000558  6ED9               	movwf	fsr2l,c
  1909  00055A  0E00               	movlw	0
  1910  00055C  202C               	addwfc	(??_jogar+1)^0,w,c
  1911  00055E  6EDA               	movwf	fsr2h,c
  1912  000560  0E3E               	movlw	62
  1913  000562  6EDF               	movwf	indf2,c
  1914  000564                     
  1915                           ;task_manager.c: 102:             print_mat(lcd);
  1916  000564  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1917  000568  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1918  00056C  ECBE  F006         	call	_print_mat	;wreg free
  1919  000570                     l1861:
  1920                           
  1921                           ;task_manager.c: 104:         if((botoes.L) && (y > 0)){
  1922  000570  A446               	btfss	_botoes^0,2,c
  1923  000572  EFBD  F002         	goto	u1251
  1924  000576  EFBF  F002         	goto	u1250
  1925  00057A                     u1251:
  1926  00057A  EFEF  F002         	goto	l1875
  1927  00057E                     u1250:
  1928  00057E  503F               	movf	_y^0,w,c
  1929  000580  B4D8               	btfsc	status,2,c
  1930  000582  EFC5  F002         	goto	u1261
  1931  000586  EFC7  F002         	goto	u1260
  1932  00058A                     u1261:
  1933  00058A  EFEF  F002         	goto	l1875
  1934  00058E                     u1260:
  1935  00058E                     
  1936                           ;task_manager.c: 105:             mat_disp[x][y] = ' ';
  1937  00058E  5051               	movf	_x^0,w,c
  1938  000590  0D10               	mullw	16
  1939  000592  0E80               	movlw	low _mat_disp
  1940  000594  6E2B               	movwf	??_jogar^0,c
  1941  000596  0E00               	movlw	high _mat_disp
  1942  000598  6E2C               	movwf	(??_jogar+1)^0,c
  1943  00059A  50F3               	movf	243,w,c
  1944  00059C  262B               	addwf	??_jogar^0,f,c
  1945  00059E  50F4               	movf	244,w,c
  1946  0005A0  222C               	addwfc	(??_jogar+1)^0,f,c
  1947  0005A2  503F               	movf	_y^0,w,c
  1948  0005A4  242B               	addwf	??_jogar^0,w,c
  1949  0005A6  6ED9               	movwf	fsr2l,c
  1950  0005A8  0E00               	movlw	0
  1951  0005AA  202C               	addwfc	(??_jogar+1)^0,w,c
  1952  0005AC  6EDA               	movwf	fsr2h,c
  1953  0005AE  0E20               	movlw	32
  1954  0005B0  6EDF               	movwf	indf2,c
  1955  0005B2                     
  1956                           ;task_manager.c: 106:             y--;
  1957  0005B2  063F               	decf	_y^0,f,c
  1958  0005B4                     
  1959                           ;task_manager.c: 107:             botoes.L = 0;
  1960  0005B4  9446               	bcf	_botoes^0,2,c
  1961  0005B6                     
  1962                           ;task_manager.c: 108:             mat_disp[x][y] = '>';
  1963  0005B6  5051               	movf	_x^0,w,c
  1964  0005B8  0D10               	mullw	16
  1965  0005BA  0E80               	movlw	low _mat_disp
  1966  0005BC  6E2B               	movwf	??_jogar^0,c
  1967  0005BE  0E00               	movlw	high _mat_disp
  1968  0005C0  6E2C               	movwf	(??_jogar+1)^0,c
  1969  0005C2  50F3               	movf	243,w,c
  1970  0005C4  262B               	addwf	??_jogar^0,f,c
  1971  0005C6  50F4               	movf	244,w,c
  1972  0005C8  222C               	addwfc	(??_jogar+1)^0,f,c
  1973  0005CA  503F               	movf	_y^0,w,c
  1974  0005CC  242B               	addwf	??_jogar^0,w,c
  1975  0005CE  6ED9               	movwf	fsr2l,c
  1976  0005D0  0E00               	movlw	0
  1977  0005D2  202C               	addwfc	(??_jogar+1)^0,w,c
  1978  0005D4  6EDA               	movwf	fsr2h,c
  1979  0005D6  0E3E               	movlw	62
  1980  0005D8  6EDF               	movwf	indf2,c
  1981  0005DA  EF53  F000         	goto	l1755
  1982  0005DE                     l1875:
  1983                           
  1984                           ;task_manager.c: 60:     while(!botoes.Esc && bateu == 0){
  1985  0005DE  BA46               	btfsc	_botoes^0,5,c
  1986  0005E0  EFF4  F002         	goto	u1271
  1987  0005E4  EFF6  F002         	goto	u1270
  1988  0005E8                     u1271:
  1989  0005E8  EFFF  F002         	goto	l1879
  1990  0005EC                     u1270:
  1991  0005EC  5036               	movf	jogar@bateu^0,w,c
  1992  0005EE  1037               	iorwf	(jogar@bateu+1)^0,w,c
  1993  0005F0  B4D8               	btfsc	status,2,c
  1994  0005F2  EFFD  F002         	goto	u1281
  1995  0005F6  EFFF  F002         	goto	u1280
  1996  0005FA                     u1281:
  1997  0005FA  EF5B  F000         	goto	l1757
  1998  0005FE                     u1280:
  1999  0005FE                     l1879:
  2000                           
  2001                           ;task_manager.c: 112:     if(bateu == 1){
  2002  0005FE  0436               	decf	jogar@bateu^0,w,c
  2003  000600  1037               	iorwf	(jogar@bateu+1)^0,w,c
  2004  000602  A4D8               	btfss	status,2,c
  2005  000604  EF06  F003         	goto	u1291
  2006  000608  EF08  F003         	goto	u1290
  2007  00060C                     u1291:
  2008  00060C  EF3D  F003         	goto	l1885
  2009  000610                     u1290:
  2010  000610                     
  2011                           ;task_manager.c: 113:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  2012  000610  0E80               	movlw	low _mat_disp
  2013  000612  6E01               	movwf	strcpy@dest^0,c
  2014  000614  0E00               	movlw	high _mat_disp
  2015  000616  6E02               	movwf	(strcpy@dest+1)^0,c
  2016  000618  0E39               	movlw	low STR_13
  2017  00061A  6E03               	movwf	strcpy@src^0,c
  2018  00061C  0E7F               	movlw	high STR_13
  2019  00061E  6E04               	movwf	(strcpy@src+1)^0,c
  2020  000620  EC57  F009         	call	_strcpy	;wreg free
  2021                           
  2022                           ;task_manager.c: 114:             strcpy(mat_disp[1], "APERTE ESC      ");
  2023  000624  0E90               	movlw	low (_mat_disp+16)
  2024  000626  6E01               	movwf	strcpy@dest^0,c
  2025  000628  0E00               	movlw	high (_mat_disp+16)
  2026  00062A  6E02               	movwf	(strcpy@dest+1)^0,c
  2027  00062C  0E17               	movlw	low STR_14
  2028  00062E  6E03               	movwf	strcpy@src^0,c
  2029  000630  0E7F               	movlw	high STR_14
  2030  000632  6E04               	movwf	(strcpy@src+1)^0,c
  2031  000634  EC57  F009         	call	_strcpy	;wreg free
  2032                           
  2033                           ;task_manager.c: 115:             strcpy(mat_disp[2], "PARA SAIR       ");
  2034  000638  0EA0               	movlw	low (_mat_disp+32)
  2035  00063A  6E01               	movwf	strcpy@dest^0,c
  2036  00063C  0E00               	movlw	high (_mat_disp+32)
  2037  00063E  6E02               	movwf	(strcpy@dest+1)^0,c
  2038  000640  0E06               	movlw	low STR_15
  2039  000642  6E03               	movwf	strcpy@src^0,c
  2040  000644  0E7F               	movlw	high STR_15
  2041  000646  6E04               	movwf	(strcpy@src+1)^0,c
  2042  000648  EC57  F009         	call	_strcpy	;wreg free
  2043                           
  2044                           ;task_manager.c: 116:             strcpy(mat_disp[3], "                ");
  2045  00064C  0EB0               	movlw	low (_mat_disp+48)
  2046  00064E  6E01               	movwf	strcpy@dest^0,c
  2047  000650  0E00               	movlw	high (_mat_disp+48)
  2048  000652  6E02               	movwf	(strcpy@dest+1)^0,c
  2049  000654  0EF5               	movlw	low STR_10
  2050  000656  6E03               	movwf	strcpy@src^0,c
  2051  000658  0E7E               	movlw	high STR_10
  2052  00065A  6E04               	movwf	(strcpy@src+1)^0,c
  2053  00065C  EC57  F009         	call	_strcpy	;wreg free
  2054  000660                     
  2055                           ;task_manager.c: 117:             print_mat(lcd);
  2056  000660  C029  F010         	movff	jogar@lcd,print_mat@lcd
  2057  000664  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  2058  000668  ECBE  F006         	call	_print_mat	;wreg free
  2059  00066C                     l226:
  2060  00066C  AA46               	btfss	_botoes^0,5,c
  2061  00066E  EF3B  F003         	goto	u1301
  2062  000672  EF3D  F003         	goto	u1300
  2063  000676                     u1301:
  2064  000676  EF36  F003         	goto	l226
  2065  00067A                     u1300:
  2066  00067A                     l1885:
  2067                           
  2068                           ;task_manager.c: 121:     x = 1;
  2069  00067A  0E01               	movlw	1
  2070  00067C  6E51               	movwf	_x^0,c
  2071                           
  2072                           ;task_manager.c: 122:     y = 0;
  2073  00067E  0E00               	movlw	0
  2074  000680  6E3F               	movwf	_y^0,c
  2075                           
  2076                           ;task_manager.c: 123:     contador = 0;
  2077  000682  0E00               	movlw	0
  2078  000684  6E3E               	movwf	_contador^0,c
  2079  000686  0012               	return		;funcret
  2080  000688                     __end_of_jogar:
  2081                           	opt callstack 0
  2082                           
  2083 ;; *************** function _time *****************
  2084 ;; Defined at:
  2085 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  t               2    0[COMRAM] PTR long long 
  2088 ;;		 -> NULL(0), 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  8    0[COMRAM] long long 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2100 ;;      Params:         8       0       0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0
  2103 ;;      Totals:         8       0       0       0       0       0       0
  2104 ;;Total ram usage:        8 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    2
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_jogar
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text4
  2115  00121E                     __ptext4:
  2116                           	opt callstack 0
  2117  00121E                     _time:
  2118                           	opt callstack 26
  2119  00121E  5001               	movf	time@t^0,w,c
  2120  001220  1002               	iorwf	(time@t+1)^0,w,c
  2121  001222  B4D8               	btfsc	status,2,c
  2122  001224  EF16  F009         	goto	u941
  2123  001228  EF18  F009         	goto	u940
  2124  00122C                     u941:
  2125  00122C  EF2C  F009         	goto	l1657
  2126  001230                     u940:
  2127  001230  C001  FFD9         	movff	time@t,fsr2l
  2128  001234  C002  FFDA         	movff	time@t+1,fsr2h
  2129  001238  0EFF               	movlw	255
  2130  00123A  6EDE               	movwf	postinc2,c
  2131  00123C  0EFF               	movlw	255
  2132  00123E  6EDE               	movwf	postinc2,c
  2133  001240  0EFF               	movlw	255
  2134  001242  6EDE               	movwf	postinc2,c
  2135  001244  0EFF               	movlw	255
  2136  001246  6EDE               	movwf	postinc2,c
  2137  001248  0EFF               	movlw	255
  2138  00124A  6EDE               	movwf	postinc2,c
  2139  00124C  0EFF               	movlw	255
  2140  00124E  6EDE               	movwf	postinc2,c
  2141  001250  0EFF               	movlw	255
  2142  001252  6EDE               	movwf	postinc2,c
  2143  001254  0EFF               	movlw	255
  2144  001256  6EDD               	movwf	postdec2,c
  2145  001258                     l1657:
  2146  001258  6801               	setf	?_time^0,c
  2147  00125A  6802               	setf	(?_time+1)^0,c
  2148  00125C  6803               	setf	(?_time+2)^0,c
  2149  00125E  6804               	setf	(?_time+3)^0,c
  2150  001260  6805               	setf	(?_time+4)^0,c
  2151  001262  6806               	setf	(?_time+5)^0,c
  2152  001264  6807               	setf	(?_time+6)^0,c
  2153  001266  6808               	setf	(?_time+7)^0,c
  2154  001268  0012               	return		;funcret
  2155  00126A                     __end_of_time:
  2156                           	opt callstack 0
  2157                           
  2158 ;; *************** function _srand *****************
  2159 ;; Defined at:
  2160 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  s               2    8[COMRAM] unsigned int 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2174 ;;      Params:         2       0       0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0
  2176 ;;      Temps:          4       0       0       0       0       0       0
  2177 ;;      Totals:         6       0       0       0       0       0       0
  2178 ;;Total ram usage:        6 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    2
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_jogar
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text5
  2189  001394                     __ptext5:
  2190                           	opt callstack 0
  2191  001394                     _srand:
  2192                           	opt callstack 26
  2193  001394  0EFF               	movlw	255
  2194  001396  6E0B               	movwf	??_srand^0,c
  2195  001398  0EFF               	movlw	255
  2196  00139A  6E0C               	movwf	(??_srand+1)^0,c
  2197  00139C  C009  F00D         	movff	srand@s,??_srand+2
  2198  0013A0  C00A  F00E         	movff	srand@s+1,??_srand+3
  2199  0013A4  500B               	movf	??_srand^0,w,c
  2200  0013A6  260D               	addwf	(??_srand+2)^0,f,c
  2201  0013A8  500C               	movf	(??_srand+1)^0,w,c
  2202  0013AA  220E               	addwfc	(??_srand+3)^0,f,c
  2203  0013AC  C00D  F047         	movff	??_srand+2,_seed
  2204  0013B0  C00E  F048         	movff	??_srand+3,_seed+1
  2205  0013B4  6A49               	clrf	(_seed+2)^0,c
  2206  0013B6  6A4A               	clrf	(_seed+3)^0,c
  2207  0013B8  6A4B               	clrf	(_seed+4)^0,c
  2208  0013BA  6A4C               	clrf	(_seed+5)^0,c
  2209  0013BC  6A4D               	clrf	(_seed+6)^0,c
  2210  0013BE  6A4E               	clrf	(_seed+7)^0,c
  2211  0013C0  0012               	return		;funcret
  2212  0013C2                     __end_of_srand:
  2213                           	opt callstack 0
  2214                           
  2215 ;; *************** function _rand *****************
  2216 ;; Defined at:
  2217 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2   24[COMRAM] int 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         2       0       0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0
  2233 ;;      Temps:          8       0       0       0       0       0       0
  2234 ;;      Totals:        10       0       0       0       0       0       0
  2235 ;;Total ram usage:       10 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    3
  2238 ;; This function calls:
  2239 ;;		___omul
  2240 ;; This function is called by:
  2241 ;;		_jogar
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text6
  2246  000A5A                     __ptext6:
  2247                           	opt callstack 0
  2248  000A5A                     _rand:
  2249                           	opt callstack 25
  2250  000A5A  C047  F001         	movff	_seed,___omul@multiplier
  2251  000A5E  C048  F002         	movff	_seed+1,___omul@multiplier+1
  2252  000A62  C049  F003         	movff	_seed+2,___omul@multiplier+2
  2253  000A66  C04A  F004         	movff	_seed+3,___omul@multiplier+3
  2254  000A6A  C04B  F005         	movff	_seed+4,___omul@multiplier+4
  2255  000A6E  C04C  F006         	movff	_seed+5,___omul@multiplier+5
  2256  000A72  C04D  F007         	movff	_seed+6,___omul@multiplier+6
  2257  000A76  C04E  F008         	movff	_seed+7,___omul@multiplier+7
  2258  000A7A  0E2D               	movlw	45
  2259  000A7C  6E09               	movwf	___omul@multiplicand^0,c
  2260  000A7E  0E7F               	movlw	127
  2261  000A80  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2262  000A82  0E95               	movlw	149
  2263  000A84  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2264  000A86  0E4C               	movlw	76
  2265  000A88  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2266  000A8A  0E2D               	movlw	45
  2267  000A8C  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2268  000A8E  0EF4               	movlw	244
  2269  000A90  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2270  000A92  0E51               	movlw	81
  2271  000A94  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2272  000A96  0E58               	movlw	88
  2273  000A98  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2274  000A9A  EC14  F007         	call	___omul	;wreg free
  2275  000A9E  C001  F01B         	movff	?___omul,??_rand
  2276  000AA2  C002  F01C         	movff	?___omul+1,??_rand+1
  2277  000AA6  C003  F01D         	movff	?___omul+2,??_rand+2
  2278  000AAA  C004  F01E         	movff	?___omul+3,??_rand+3
  2279  000AAE  C005  F01F         	movff	?___omul+4,??_rand+4
  2280  000AB2  C006  F020         	movff	?___omul+5,??_rand+5
  2281  000AB6  C007  F021         	movff	?___omul+6,??_rand+6
  2282  000ABA  C008  F022         	movff	?___omul+7,??_rand+7
  2283  000ABE  0E01               	movlw	1
  2284  000AC0  241B               	addwf	??_rand^0,w,c
  2285  000AC2  6E47               	movwf	_seed^0,c
  2286  000AC4  0E00               	movlw	0
  2287  000AC6  201C               	addwfc	(??_rand+1)^0,w,c
  2288  000AC8  6E48               	movwf	(_seed+1)^0,c
  2289  000ACA  0E00               	movlw	0
  2290  000ACC  201D               	addwfc	(??_rand+2)^0,w,c
  2291  000ACE  6E49               	movwf	(_seed+2)^0,c
  2292  000AD0  0E00               	movlw	0
  2293  000AD2  201E               	addwfc	(??_rand+3)^0,w,c
  2294  000AD4  6E4A               	movwf	(_seed+3)^0,c
  2295  000AD6  0E00               	movlw	0
  2296  000AD8  201F               	addwfc	(??_rand+4)^0,w,c
  2297  000ADA  6E4B               	movwf	(_seed+4)^0,c
  2298  000ADC  0E00               	movlw	0
  2299  000ADE  2020               	addwfc	(??_rand+5)^0,w,c
  2300  000AE0  6E4C               	movwf	(_seed+5)^0,c
  2301  000AE2  0E00               	movlw	0
  2302  000AE4  2021               	addwfc	(??_rand+6)^0,w,c
  2303  000AE6  6E4D               	movwf	(_seed+6)^0,c
  2304  000AE8  0E00               	movlw	0
  2305  000AEA  2022               	addwfc	(??_rand+7)^0,w,c
  2306  000AEC  6E4E               	movwf	(_seed+7)^0,c
  2307  000AEE  C047  F01B         	movff	_seed,??_rand
  2308  000AF2  C048  F01C         	movff	_seed+1,??_rand+1
  2309  000AF6  C049  F01D         	movff	_seed+2,??_rand+2
  2310  000AFA  C04A  F01E         	movff	_seed+3,??_rand+3
  2311  000AFE  C04B  F01F         	movff	_seed+4,??_rand+4
  2312  000B02  C04C  F020         	movff	_seed+5,??_rand+5
  2313  000B06  C04D  F021         	movff	_seed+6,??_rand+6
  2314  000B0A  C04E  F022         	movff	_seed+7,??_rand+7
  2315  000B0E  0E32               	movlw	50
  2316  000B10  EF93  F005         	goto	u950
  2317  000B14                     u955:
  2318  000B14  90D8               	bcf	status,0,c
  2319  000B16  3222               	rrcf	(??_rand+7)^0,f,c
  2320  000B18  3221               	rrcf	(??_rand+6)^0,f,c
  2321  000B1A  3220               	rrcf	(??_rand+5)^0,f,c
  2322  000B1C  321F               	rrcf	(??_rand+4)^0,f,c
  2323  000B1E  321E               	rrcf	(??_rand+3)^0,f,c
  2324  000B20  321D               	rrcf	(??_rand+2)^0,f,c
  2325  000B22  321C               	rrcf	(??_rand+1)^0,f,c
  2326  000B24  321B               	rrcf	??_rand^0,f,c
  2327  000B26                     u950:
  2328  000B26  2EE8               	decfsz	wreg,f,c
  2329  000B28  EF8A  F005         	goto	u955
  2330  000B2C  C01B  F019         	movff	??_rand,?_rand
  2331  000B30  C01D  F01A         	movff	??_rand+2,?_rand+1
  2332  000B34  0012               	return		;funcret
  2333  000B36                     __end_of_rand:
  2334                           	opt callstack 0
  2335                           
  2336 ;; *************** function ___omul *****************
  2337 ;; Defined at:
  2338 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2341 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  product         8   16[COMRAM] unsigned long long 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  8    0[COMRAM] unsigned long long 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2353 ;;      Params:        16       0       0       0       0       0       0
  2354 ;;      Locals:         8       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0
  2356 ;;      Totals:        24       0       0       0       0       0       0
  2357 ;;Total ram usage:       24 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    2
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_rand
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text7
  2368  000E28                     __ptext7:
  2369                           	opt callstack 0
  2370  000E28                     ___omul:
  2371                           	opt callstack 25
  2372  000E28  EE20  F011         	lfsr	2,___omul@product
  2373  000E2C  0E07               	movlw	7
  2374  000E2E                     u881:
  2375  000E2E  6ADE               	clrf	postinc2,c
  2376  000E30  06E8               	decf	wreg,f,c
  2377  000E32  E2FD               	bc	u881
  2378  000E34                     l1617:
  2379  000E34  A001               	btfss	___omul@multiplier^0,0,c
  2380  000E36  EF1F  F007         	goto	u891
  2381  000E3A  EF21  F007         	goto	u890
  2382  000E3E                     u891:
  2383  000E3E  EF31  F007         	goto	l1621
  2384  000E42                     u890:
  2385  000E42  5009               	movf	___omul@multiplicand^0,w,c
  2386  000E44  2611               	addwf	___omul@product^0,f,c
  2387  000E46  500A               	movf	(___omul@multiplicand+1)^0,w,c
  2388  000E48  2212               	addwfc	(___omul@product+1)^0,f,c
  2389  000E4A  500B               	movf	(___omul@multiplicand+2)^0,w,c
  2390  000E4C  2213               	addwfc	(___omul@product+2)^0,f,c
  2391  000E4E  500C               	movf	(___omul@multiplicand+3)^0,w,c
  2392  000E50  2214               	addwfc	(___omul@product+3)^0,f,c
  2393  000E52  500D               	movf	(___omul@multiplicand+4)^0,w,c
  2394  000E54  2215               	addwfc	(___omul@product+4)^0,f,c
  2395  000E56  500E               	movf	(___omul@multiplicand+5)^0,w,c
  2396  000E58  2216               	addwfc	(___omul@product+5)^0,f,c
  2397  000E5A  500F               	movf	(___omul@multiplicand+6)^0,w,c
  2398  000E5C  2217               	addwfc	(___omul@product+6)^0,f,c
  2399  000E5E  5010               	movf	(___omul@multiplicand+7)^0,w,c
  2400  000E60  2218               	addwfc	(___omul@product+7)^0,f,c
  2401  000E62                     l1621:
  2402  000E62  90D8               	bcf	status,0,c
  2403  000E64  3609               	rlcf	___omul@multiplicand^0,f,c
  2404  000E66  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  2405  000E68  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  2406  000E6A  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  2407  000E6C  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  2408  000E6E  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  2409  000E70  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  2410  000E72  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  2411  000E74  90D8               	bcf	status,0,c
  2412  000E76  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  2413  000E78  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  2414  000E7A  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  2415  000E7C  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  2416  000E7E  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  2417  000E80  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  2418  000E82  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  2419  000E84  3201               	rrcf	___omul@multiplier^0,f,c
  2420  000E86  5001               	movf	___omul@multiplier^0,w,c
  2421  000E88  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  2422  000E8A  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  2423  000E8C  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  2424  000E8E  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  2425  000E90  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  2426  000E92  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  2427  000E94  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  2428  000E96  A4D8               	btfss	status,2,c
  2429  000E98  EF50  F007         	goto	u901
  2430  000E9C  EF52  F007         	goto	u900
  2431  000EA0                     u901:
  2432  000EA0  EF1A  F007         	goto	l1617
  2433  000EA4                     u900:
  2434  000EA4  C011  F001         	movff	___omul@product,?___omul
  2435  000EA8  C012  F002         	movff	___omul@product+1,?___omul+1
  2436  000EAC  C013  F003         	movff	___omul@product+2,?___omul+2
  2437  000EB0  C014  F004         	movff	___omul@product+3,?___omul+3
  2438  000EB4  C015  F005         	movff	___omul@product+4,?___omul+4
  2439  000EB8  C016  F006         	movff	___omul@product+5,?___omul+5
  2440  000EBC  C017  F007         	movff	___omul@product+6,?___omul+6
  2441  000EC0  C018  F008         	movff	___omul@product+7,?___omul+7
  2442  000EC4  0012               	return		;funcret
  2443  000EC6                     __end_of___omul:
  2444                           	opt callstack 0
  2445                           
  2446 ;; *************** function ___awmod *****************
  2447 ;; Defined at:
  2448 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  dividend        2   34[COMRAM] int 
  2451 ;;  divisor         2   36[COMRAM] int 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  sign            1   39[COMRAM] unsigned char 
  2454 ;;  counter         1   38[COMRAM] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  2   34[COMRAM] int 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2464 ;;      Params:         4       0       0       0       0       0       0
  2465 ;;      Locals:         2       0       0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0
  2467 ;;      Totals:         6       0       0       0       0       0       0
  2468 ;;Total ram usage:        6 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    2
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_jogar
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text8
  2479  000CCC                     __ptext8:
  2480                           	opt callstack 0
  2481  000CCC                     ___awmod:
  2482                           	opt callstack 26
  2483  000CCC  0E00               	movlw	0
  2484  000CCE  6E28               	movwf	___awmod@sign^0,c
  2485  000CD0  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  2486  000CD2  EF6F  F006         	goto	u960
  2487  000CD6  EF6D  F006         	goto	u961
  2488  000CDA                     u961:
  2489  000CDA  EF75  F006         	goto	l1677
  2490  000CDE                     u960:
  2491  000CDE  6C23               	negf	___awmod@dividend^0,c
  2492  000CE0  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2493  000CE2  B0D8               	btfsc	status,0,c
  2494  000CE4  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2495  000CE6  0E01               	movlw	1
  2496  000CE8  6E28               	movwf	___awmod@sign^0,c
  2497  000CEA                     l1677:
  2498  000CEA  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  2499  000CEC  EF7C  F006         	goto	u970
  2500  000CF0  EF7A  F006         	goto	u971
  2501  000CF4                     u971:
  2502  000CF4  EF80  F006         	goto	l1681
  2503  000CF8                     u970:
  2504  000CF8  6C25               	negf	___awmod@divisor^0,c
  2505  000CFA  1E26               	comf	(___awmod@divisor+1)^0,f,c
  2506  000CFC  B0D8               	btfsc	status,0,c
  2507  000CFE  2A26               	incf	(___awmod@divisor+1)^0,f,c
  2508  000D00                     l1681:
  2509  000D00  5025               	movf	___awmod@divisor^0,w,c
  2510  000D02  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  2511  000D04  B4D8               	btfsc	status,2,c
  2512  000D06  EF87  F006         	goto	u981
  2513  000D0A  EF89  F006         	goto	u980
  2514  000D0E                     u981:
  2515  000D0E  EFAD  F006         	goto	l1697
  2516  000D12                     u980:
  2517  000D12  0E01               	movlw	1
  2518  000D14  6E27               	movwf	___awmod@counter^0,c
  2519  000D16  EF91  F006         	goto	l1687
  2520  000D1A                     l1685:
  2521  000D1A  90D8               	bcf	status,0,c
  2522  000D1C  3625               	rlcf	___awmod@divisor^0,f,c
  2523  000D1E  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  2524  000D20  2A27               	incf	___awmod@counter^0,f,c
  2525  000D22                     l1687:
  2526  000D22  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  2527  000D24  EF96  F006         	goto	u991
  2528  000D28  EF98  F006         	goto	u990
  2529  000D2C                     u991:
  2530  000D2C  EF8D  F006         	goto	l1685
  2531  000D30                     u990:
  2532  000D30                     l1689:
  2533  000D30  5025               	movf	___awmod@divisor^0,w,c
  2534  000D32  5C23               	subwf	___awmod@dividend^0,w,c
  2535  000D34  5026               	movf	(___awmod@divisor+1)^0,w,c
  2536  000D36  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  2537  000D38  A0D8               	btfss	status,0,c
  2538  000D3A  EFA1  F006         	goto	u1001
  2539  000D3E  EFA3  F006         	goto	u1000
  2540  000D42                     u1001:
  2541  000D42  EFA7  F006         	goto	l1693
  2542  000D46                     u1000:
  2543  000D46  5025               	movf	___awmod@divisor^0,w,c
  2544  000D48  5E23               	subwf	___awmod@dividend^0,f,c
  2545  000D4A  5026               	movf	(___awmod@divisor+1)^0,w,c
  2546  000D4C  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  2547  000D4E                     l1693:
  2548  000D4E  90D8               	bcf	status,0,c
  2549  000D50  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  2550  000D52  3225               	rrcf	___awmod@divisor^0,f,c
  2551  000D54  2E27               	decfsz	___awmod@counter^0,f,c
  2552  000D56  EF98  F006         	goto	l1689
  2553  000D5A                     l1697:
  2554  000D5A  5028               	movf	___awmod@sign^0,w,c
  2555  000D5C  B4D8               	btfsc	status,2,c
  2556  000D5E  EFB3  F006         	goto	u1011
  2557  000D62  EFB5  F006         	goto	u1010
  2558  000D66                     u1011:
  2559  000D66  EFB9  F006         	goto	l1701
  2560  000D6A                     u1010:
  2561  000D6A  6C23               	negf	___awmod@dividend^0,c
  2562  000D6C  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2563  000D6E  B0D8               	btfsc	status,0,c
  2564  000D70  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2565  000D72                     l1701:
  2566  000D72  C023  F023         	movff	___awmod@dividend,?___awmod
  2567  000D76  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  2568  000D7A  0012               	return		;funcret
  2569  000D7C                     __end_of___awmod:
  2570                           	opt callstack 0
  2571                           
  2572 ;; *************** function _instrucoes *****************
  2573 ;; Defined at:
  2574 ;;		line 126 in file "task_manager.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  lcd             2   25[COMRAM] PTR struct .
  2577 ;;		 -> PORTD(1), 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2589 ;;      Params:         2       0       0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0
  2592 ;;      Totals:         2       0       0       0       0       0       0
  2593 ;;Total ram usage:        2 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    6
  2596 ;; This function calls:
  2597 ;;		_print_mat
  2598 ;;		_strcpy
  2599 ;; This function is called by:
  2600 ;;		_gerenciador
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text9
  2605  0010E6                     __ptext9:
  2606                           	opt callstack 0
  2607  0010E6                     _instrucoes:
  2608                           	opt callstack 23
  2609  0010E6                     
  2610                           ;task_manager.c: 127:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  2611  0010E6  0E80               	movlw	low _mat_disp
  2612  0010E8  6E01               	movwf	strcpy@dest^0,c
  2613  0010EA  0E00               	movlw	high _mat_disp
  2614  0010EC  6E02               	movwf	(strcpy@dest+1)^0,c
  2615  0010EE  0EDE               	movlw	low STR_17
  2616  0010F0  6E03               	movwf	strcpy@src^0,c
  2617  0010F2  0E7F               	movlw	high STR_17
  2618  0010F4  6E04               	movwf	(strcpy@src+1)^0,c
  2619  0010F6  EC57  F009         	call	_strcpy	;wreg free
  2620                           
  2621                           ;task_manager.c: 128:     strcpy(mat_disp[1], "NAVE           ");
  2622  0010FA  0E90               	movlw	low (_mat_disp+16)
  2623  0010FC  6E01               	movwf	strcpy@dest^0,c
  2624  0010FE  0E00               	movlw	high (_mat_disp+16)
  2625  001100  6E02               	movwf	(strcpy@dest+1)^0,c
  2626  001102  0E8E               	movlw	low STR_18
  2627  001104  6E03               	movwf	strcpy@src^0,c
  2628  001106  0E7F               	movlw	high STR_18
  2629  001108  6E04               	movwf	(strcpy@src+1)^0,c
  2630  00110A  EC57  F009         	call	_strcpy	;wreg free
  2631                           
  2632                           ;task_manager.c: 129:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  2633  00110E  0EA0               	movlw	low (_mat_disp+32)
  2634  001110  6E01               	movwf	strcpy@dest^0,c
  2635  001112  0E00               	movlw	high (_mat_disp+32)
  2636  001114  6E02               	movwf	(strcpy@dest+1)^0,c
  2637  001116  0EAE               	movlw	low STR_19
  2638  001118  6E03               	movwf	strcpy@src^0,c
  2639  00111A  0E7F               	movlw	high STR_19
  2640  00111C  6E04               	movwf	(strcpy@src+1)^0,c
  2641  00111E  EC57  F009         	call	_strcpy	;wreg free
  2642                           
  2643                           ;task_manager.c: 130:     strcpy(mat_disp[3], "MENU           ");
  2644  001122  0EB0               	movlw	low (_mat_disp+48)
  2645  001124  6E01               	movwf	strcpy@dest^0,c
  2646  001126  0E00               	movlw	high (_mat_disp+48)
  2647  001128  6E02               	movwf	(strcpy@dest+1)^0,c
  2648  00112A  0E9E               	movlw	low STR_20
  2649  00112C  6E03               	movwf	strcpy@src^0,c
  2650  00112E  0E7F               	movlw	high STR_20
  2651  001130  6E04               	movwf	(strcpy@src+1)^0,c
  2652  001132  EC57  F009         	call	_strcpy	;wreg free
  2653  001136                     
  2654                           ;task_manager.c: 131:     print_mat(lcd);
  2655  001136  C01A  F010         	movff	instrucoes@lcd,print_mat@lcd
  2656  00113A  C01B  F011         	movff	instrucoes@lcd+1,print_mat@lcd+1
  2657  00113E  ECBE  F006         	call	_print_mat	;wreg free
  2658  001142                     l232:
  2659  001142  AA46               	btfss	_botoes^0,5,c
  2660  001144  EFA6  F008         	goto	u1311
  2661  001148  EFA8  F008         	goto	u1310
  2662  00114C                     u1311:
  2663  00114C  EFA1  F008         	goto	l232
  2664  001150                     u1310:
  2665  001150  0012               	return		;funcret
  2666  001152                     __end_of_instrucoes:
  2667                           	opt callstack 0
  2668                           
  2669 ;; *************** function _finaliza *****************
  2670 ;; Defined at:
  2671 ;;		line 38 in file "task_manager.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  lcd             2   25[COMRAM] PTR struct .
  2674 ;;		 -> PORTD(1), 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         2       0       0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0
  2689 ;;      Totals:         2       0       0       0       0       0       0
  2690 ;;Total ram usage:        2 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    6
  2693 ;; This function calls:
  2694 ;;		_print_mat
  2695 ;;		_strcpy
  2696 ;; This function is called by:
  2697 ;;		_gerenciador
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text10
  2702  0011BE                     __ptext10:
  2703                           	opt callstack 0
  2704  0011BE                     _finaliza:
  2705                           	opt callstack 23
  2706  0011BE                     
  2707                           ;task_manager.c: 39:     strcpy(mat_disp[0], "HIBERNANDO.....");
  2708  0011BE  0E80               	movlw	low _mat_disp
  2709  0011C0  6E01               	movwf	strcpy@dest^0,c
  2710  0011C2  0E00               	movlw	high _mat_disp
  2711  0011C4  6E02               	movwf	(strcpy@dest+1)^0,c
  2712  0011C6  0EBE               	movlw	low STR_5
  2713  0011C8  6E03               	movwf	strcpy@src^0,c
  2714  0011CA  0E7F               	movlw	high STR_5
  2715  0011CC  6E04               	movwf	(strcpy@src+1)^0,c
  2716  0011CE  EC57  F009         	call	_strcpy	;wreg free
  2717                           
  2718                           ;task_manager.c: 40:     strcpy(mat_disp[1], "               ");
  2719  0011D2  0E90               	movlw	low (_mat_disp+16)
  2720  0011D4  6E01               	movwf	strcpy@dest^0,c
  2721  0011D6  0E00               	movlw	high (_mat_disp+16)
  2722  0011D8  6E02               	movwf	(strcpy@dest+1)^0,c
  2723  0011DA  0EF6               	movlw	low (STR_10+1)
  2724  0011DC  6E03               	movwf	strcpy@src^0,c
  2725  0011DE  0E7E               	movlw	high (STR_10+1)
  2726  0011E0  6E04               	movwf	(strcpy@src+1)^0,c
  2727  0011E2  EC57  F009         	call	_strcpy	;wreg free
  2728                           
  2729                           ;task_manager.c: 41:     strcpy(mat_disp[2], "               ");
  2730  0011E6  0EA0               	movlw	low (_mat_disp+32)
  2731  0011E8  6E01               	movwf	strcpy@dest^0,c
  2732  0011EA  0E00               	movlw	high (_mat_disp+32)
  2733  0011EC  6E02               	movwf	(strcpy@dest+1)^0,c
  2734  0011EE  0EF6               	movlw	low (STR_10+1)
  2735  0011F0  6E03               	movwf	strcpy@src^0,c
  2736  0011F2  0E7E               	movlw	high (STR_10+1)
  2737  0011F4  6E04               	movwf	(strcpy@src+1)^0,c
  2738  0011F6  EC57  F009         	call	_strcpy	;wreg free
  2739                           
  2740                           ;task_manager.c: 42:     strcpy(mat_disp[3], "               ");
  2741  0011FA  0EB0               	movlw	low (_mat_disp+48)
  2742  0011FC  6E01               	movwf	strcpy@dest^0,c
  2743  0011FE  0E00               	movlw	high (_mat_disp+48)
  2744  001200  6E02               	movwf	(strcpy@dest+1)^0,c
  2745  001202  0EF6               	movlw	low (STR_10+1)
  2746  001204  6E03               	movwf	strcpy@src^0,c
  2747  001206  0E7E               	movlw	high (STR_10+1)
  2748  001208  6E04               	movwf	(strcpy@src+1)^0,c
  2749  00120A  EC57  F009         	call	_strcpy	;wreg free
  2750  00120E                     
  2751                           ;task_manager.c: 43:     print_mat(lcd);
  2752  00120E  C01A  F010         	movff	finaliza@lcd,print_mat@lcd
  2753  001212  C01B  F011         	movff	finaliza@lcd+1,print_mat@lcd+1
  2754  001216  ECBE  F006         	call	_print_mat	;wreg free
  2755  00121A  0003               	sleep		;# 
  2756  00121C  0012               	return		;funcret
  2757  00121E                     __end_of_finaliza:
  2758                           	opt callstack 0
  2759                           
  2760 ;; *************** function _creditos *****************
  2761 ;; Defined at:
  2762 ;;		line 28 in file "task_manager.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  lcd             2   25[COMRAM] PTR struct .
  2765 ;;		 -> PORTD(1), 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2777 ;;      Params:         2       0       0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0
  2780 ;;      Totals:         2       0       0       0       0       0       0
  2781 ;;Total ram usage:        2 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    6
  2784 ;; This function calls:
  2785 ;;		_print_mat
  2786 ;;		_strcpy
  2787 ;; This function is called by:
  2788 ;;		_gerenciador
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text11
  2793  001152                     __ptext11:
  2794                           	opt callstack 0
  2795  001152                     _creditos:
  2796                           	opt callstack 23
  2797  001152                     
  2798                           ;task_manager.c: 30:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  2799  001152  0E80               	movlw	low _mat_disp
  2800  001154  6E01               	movwf	strcpy@dest^0,c
  2801  001156  0E00               	movlw	high _mat_disp
  2802  001158  6E02               	movwf	(strcpy@dest+1)^0,c
  2803  00115A  0ECE               	movlw	low STR_1
  2804  00115C  6E03               	movwf	strcpy@src^0,c
  2805  00115E  0E7F               	movlw	high STR_1
  2806  001160  6E04               	movwf	(strcpy@src+1)^0,c
  2807  001162  EC57  F009         	call	_strcpy	;wreg free
  2808                           
  2809                           ;task_manager.c: 31:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  2810  001166  0E90               	movlw	low (_mat_disp+16)
  2811  001168  6E01               	movwf	strcpy@dest^0,c
  2812  00116A  0E00               	movlw	high (_mat_disp+16)
  2813  00116C  6E02               	movwf	(strcpy@dest+1)^0,c
  2814  00116E  0EEE               	movlw	low STR_2
  2815  001170  6E03               	movwf	strcpy@src^0,c
  2816  001172  0E7F               	movlw	high STR_2
  2817  001174  6E04               	movwf	(strcpy@src+1)^0,c
  2818  001176  EC57  F009         	call	_strcpy	;wreg free
  2819                           
  2820                           ;task_manager.c: 32:     strcpy(mat_disp[2], "               ");
  2821  00117A  0EA0               	movlw	low (_mat_disp+32)
  2822  00117C  6E01               	movwf	strcpy@dest^0,c
  2823  00117E  0E00               	movlw	high (_mat_disp+32)
  2824  001180  6E02               	movwf	(strcpy@dest+1)^0,c
  2825  001182  0EF6               	movlw	low (STR_10+1)
  2826  001184  6E03               	movwf	strcpy@src^0,c
  2827  001186  0E7E               	movlw	high (STR_10+1)
  2828  001188  6E04               	movwf	(strcpy@src+1)^0,c
  2829  00118A  EC57  F009         	call	_strcpy	;wreg free
  2830                           
  2831                           ;task_manager.c: 33:     strcpy(mat_disp[3], "               ");
  2832  00118E  0EB0               	movlw	low (_mat_disp+48)
  2833  001190  6E01               	movwf	strcpy@dest^0,c
  2834  001192  0E00               	movlw	high (_mat_disp+48)
  2835  001194  6E02               	movwf	(strcpy@dest+1)^0,c
  2836  001196  0EF6               	movlw	low (STR_10+1)
  2837  001198  6E03               	movwf	strcpy@src^0,c
  2838  00119A  0E7E               	movlw	high (STR_10+1)
  2839  00119C  6E04               	movwf	(strcpy@src+1)^0,c
  2840  00119E  EC57  F009         	call	_strcpy	;wreg free
  2841  0011A2                     
  2842                           ;task_manager.c: 34:     print_mat(lcd);
  2843  0011A2  C01A  F010         	movff	creditos@lcd,print_mat@lcd
  2844  0011A6  C01B  F011         	movff	creditos@lcd+1,print_mat@lcd+1
  2845  0011AA  ECBE  F006         	call	_print_mat	;wreg free
  2846  0011AE                     l196:
  2847  0011AE  AA46               	btfss	_botoes^0,5,c
  2848  0011B0  EFDC  F008         	goto	u1321
  2849  0011B4  EFDE  F008         	goto	u1320
  2850  0011B8                     u1321:
  2851  0011B8  EFD7  F008         	goto	l196
  2852  0011BC                     u1320:
  2853  0011BC  0012               	return		;funcret
  2854  0011BE                     __end_of_creditos:
  2855                           	opt callstack 0
  2856                           
  2857 ;; *************** function _strcpy *****************
  2858 ;; Defined at:
  2859 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2862 ;;		 -> mat_disp(64), 
  2863 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2864 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  2865 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  2866 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  2867 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2868 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  2869 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  d               2    6[COMRAM] PTR unsigned char 
  2872 ;;		 -> mat_disp(64), 
  2873 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2874 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  2875 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  2876 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  2877 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2878 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  2879 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2    0[COMRAM] PTR unsigned char 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2889 ;;      Params:         4       0       0       0       0       0       0
  2890 ;;      Locals:         4       0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0
  2892 ;;      Totals:         8       0       0       0       0       0       0
  2893 ;;Total ram usage:        8 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    2
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_creditos
  2900 ;;		_finaliza
  2901 ;;		_jogar
  2902 ;;		_instrucoes
  2903 ;;		_menu
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text12
  2908  0012AE                     __ptext12:
  2909                           	opt callstack 0
  2910  0012AE                     _strcpy:
  2911                           	opt callstack 26
  2912  0012AE  C003  F005         	movff	strcpy@src,strcpy@s
  2913  0012B2  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  2914  0012B6  C001  F007         	movff	strcpy@dest,strcpy@d
  2915  0012BA  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  2916  0012BE                     l1651:
  2917  0012BE  C005  FFF6         	movff	strcpy@s,tblptrl
  2918  0012C2  C006  FFF7         	movff	strcpy@s+1,tblptrh
  2919  0012C6  4A05               	infsnz	strcpy@s^0,f,c
  2920  0012C8  2A06               	incf	(strcpy@s+1)^0,f,c
  2921  0012CA                     	if	0	;tblptru may be non-zero
  2922  0012CA                     	endif
  2923  0012CA                     	if	0	;tblptru may be non-zero
  2924  0012CA                     	endif
  2925  0012CA  C007  FFD9         	movff	strcpy@d,fsr2l
  2926  0012CE  C008  FFDA         	movff	strcpy@d+1,fsr2h
  2927  0012D2  4A07               	infsnz	strcpy@d^0,f,c
  2928  0012D4  2A08               	incf	(strcpy@d+1)^0,f,c
  2929  0012D6  0008               	tblrd		*
  2930  0012D8  CFF5 FFDF          	movff	tablat,indf2
  2931  0012DC  50DF               	movf	indf2,w,c
  2932  0012DE  A4D8               	btfss	status,2,c
  2933  0012E0  EF74  F009         	goto	u931
  2934  0012E4  EF76  F009         	goto	u930
  2935  0012E8                     u931:
  2936  0012E8  EF5F  F009         	goto	l1651
  2937  0012EC                     u930:
  2938  0012EC  0012               	return		;funcret
  2939  0012EE                     __end_of_strcpy:
  2940                           	opt callstack 0
  2941                           
  2942 ;; *************** function _print_mat *****************
  2943 ;; Defined at:
  2944 ;;		line 199 in file "lcd.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  lcd             2   15[COMRAM] PTR struct .
  2947 ;;		 -> PORTD(1), 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  j               2   21[COMRAM] int 
  2950 ;;  i               2   23[COMRAM] int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2960 ;;      Params:         2       0       0       0       0       0       0
  2961 ;;      Locals:         4       0       0       0       0       0       0
  2962 ;;      Temps:          4       0       0       0       0       0       0
  2963 ;;      Totals:        10       0       0       0       0       0       0
  2964 ;;Total ram usage:       10 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    5
  2967 ;; This function calls:
  2968 ;;		_goto_XY
  2969 ;;		_write_char
  2970 ;; This function is called by:
  2971 ;;		_creditos
  2972 ;;		_finaliza
  2973 ;;		_jogar
  2974 ;;		_instrucoes
  2975 ;;		_menu
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text13
  2980  000D7C                     __ptext13:
  2981                           	opt callstack 0
  2982  000D7C                     _print_mat:
  2983                           	opt callstack 23
  2984  000D7C                     
  2985                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  2986  000D7C  0E00               	movlw	0
  2987  000D7E  6E19               	movwf	(print_mat@i+1)^0,c
  2988  000D80  0E00               	movlw	0
  2989  000D82  6E18               	movwf	print_mat@i^0,c
  2990  000D84                     l1631:
  2991                           
  2992                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  2993  000D84  C010  F008         	movff	print_mat@lcd,goto_XY@lcd
  2994  000D88  C011  F009         	movff	print_mat@lcd+1,goto_XY@lcd+1
  2995  000D8C  2818               	incf	print_mat@i^0,w,c
  2996  000D8E  6E0A               	movwf	goto_XY@x^0,c
  2997  000D90  0E01               	movlw	1
  2998  000D92  6E0B               	movwf	goto_XY@y^0,c
  2999  000D94  EC08  F006         	call	_goto_XY	;wreg free
  3000  000D98                     
  3001                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  3002  000D98  0E00               	movlw	0
  3003  000D9A  6E17               	movwf	(print_mat@j+1)^0,c
  3004  000D9C  0E00               	movlw	0
  3005  000D9E  6E16               	movwf	print_mat@j^0,c
  3006  000DA0                     l1639:
  3007                           
  3008                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  3009  000DA0  C010  F001         	movff	print_mat@lcd,write_char@lcd
  3010  000DA4  C011  F002         	movff	print_mat@lcd+1,write_char@lcd+1
  3011  000DA8  C018  F012         	movff	print_mat@i,??_print_mat
  3012  000DAC  C019  F013         	movff	print_mat@i+1,??_print_mat+1
  3013  000DB0  3A12               	swapf	??_print_mat^0,f,c
  3014  000DB2  3A13               	swapf	(??_print_mat+1)^0,f,c
  3015  000DB4  0EF0               	movlw	240
  3016  000DB6  1613               	andwf	(??_print_mat+1)^0,f,c
  3017  000DB8  5012               	movf	??_print_mat^0,w,c
  3018  000DBA  0B0F               	andlw	15
  3019  000DBC  1213               	iorwf	(??_print_mat+1)^0,f,c
  3020  000DBE  0EF0               	movlw	240
  3021  000DC0  1612               	andwf	??_print_mat^0,f,c
  3022  000DC2  0E80               	movlw	low _mat_disp
  3023  000DC4  6E14               	movwf	(??_print_mat+2)^0,c
  3024  000DC6  0E00               	movlw	high _mat_disp
  3025  000DC8  6E15               	movwf	(??_print_mat+3)^0,c
  3026  000DCA  5012               	movf	??_print_mat^0,w,c
  3027  000DCC  2614               	addwf	(??_print_mat+2)^0,f,c
  3028  000DCE  5013               	movf	(??_print_mat+1)^0,w,c
  3029  000DD0  2215               	addwfc	(??_print_mat+3)^0,f,c
  3030  000DD2  5016               	movf	print_mat@j^0,w,c
  3031  000DD4  2414               	addwf	(??_print_mat+2)^0,w,c
  3032  000DD6  6ED9               	movwf	fsr2l,c
  3033  000DD8  5017               	movf	(print_mat@j+1)^0,w,c
  3034  000DDA  2015               	addwfc	(??_print_mat+3)^0,w,c
  3035  000DDC  6EDA               	movwf	fsr2h,c
  3036  000DDE  50DF               	movf	indf2,w,c
  3037  000DE0  6E03               	movwf	write_char@c^0,c
  3038  000DE2  ECB9  F004         	call	_write_char	;wreg free
  3039  000DE6  4A16               	infsnz	print_mat@j^0,f,c
  3040  000DE8  2A17               	incf	(print_mat@j+1)^0,f,c
  3041  000DEA  BE17               	btfsc	(print_mat@j+1)^0,7,c
  3042  000DEC  EF01  F007         	goto	u911
  3043  000DF0  5017               	movf	(print_mat@j+1)^0,w,c
  3044  000DF2  E109               	bnz	u910
  3045  000DF4  0E10               	movlw	16
  3046  000DF6  5C16               	subwf	print_mat@j^0,w,c
  3047  000DF8  A0D8               	btfss	status,0,c
  3048  000DFA  EF01  F007         	goto	u911
  3049  000DFE  EF03  F007         	goto	u910
  3050  000E02                     u911:
  3051  000E02  EFD0  F006         	goto	l1639
  3052  000E06                     u910:
  3053  000E06                     
  3054                           ;lcd.c: 204:     }
  3055  000E06  4A18               	infsnz	print_mat@i^0,f,c
  3056  000E08  2A19               	incf	(print_mat@i+1)^0,f,c
  3057  000E0A  BE19               	btfsc	(print_mat@i+1)^0,7,c
  3058  000E0C  EF11  F007         	goto	u921
  3059  000E10  5019               	movf	(print_mat@i+1)^0,w,c
  3060  000E12  E109               	bnz	u920
  3061  000E14  0E04               	movlw	4
  3062  000E16  5C18               	subwf	print_mat@i^0,w,c
  3063  000E18  A0D8               	btfss	status,0,c
  3064  000E1A  EF11  F007         	goto	u921
  3065  000E1E  EF13  F007         	goto	u920
  3066  000E22                     u921:
  3067  000E22  EFC2  F006         	goto	l1631
  3068  000E26                     u920:
  3069  000E26  0012               	return		;funcret
  3070  000E28                     __end_of_print_mat:
  3071                           	opt callstack 0
  3072                           
  3073 ;; *************** function _write_char *****************
  3074 ;; Defined at:
  3075 ;;		line 133 in file "lcd.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  lcd             2    0[COMRAM] PTR struct .
  3078 ;;		 -> PORTD(1), 
  3079 ;;  c               1    2[COMRAM] unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3091 ;;      Params:         3       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0
  3093 ;;      Temps:          1       0       0       0       0       0       0
  3094 ;;      Totals:         4       0       0       0       0       0       0
  3095 ;;Total ram usage:        4 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    2
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_print_mat
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text14
  3106  000972                     __ptext14:
  3107                           	opt callstack 0
  3108  000972                     _write_char:
  3109                           	opt callstack 25
  3110  000972                     
  3111                           ;lcd.c: 134:     lcd->E = 0;
  3112  000972  C001  FFD9         	movff	write_char@lcd,fsr2l
  3113  000976  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3114  00097A  94DF               	bcf	indf2,2,c
  3115                           
  3116                           ;lcd.c: 135:     lcd->RS = 1;
  3117  00097C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3118  000980  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3119  000984  80DF               	bsf	indf2,0,c
  3120                           
  3121                           ;lcd.c: 136:     lcd->R_W = 0;
  3122  000986  C001  FFD9         	movff	write_char@lcd,fsr2l
  3123  00098A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3124  00098E  92DF               	bcf	indf2,1,c
  3125  000990                     
  3126                           ;lcd.c: 139:     lcd->data = (c>>4);
  3127  000990  C003  F004         	movff	write_char@c,??_write_char
  3128  000994  3A04               	swapf	??_write_char^0,f,c
  3129  000996  0E0F               	movlw	15
  3130  000998  1604               	andwf	??_write_char^0,f,c
  3131  00099A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3132  00099E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3133  0009A2  3A04               	swapf	??_write_char^0,f,c
  3134  0009A4  50DF               	movf	indf2,w,c
  3135  0009A6  1804               	xorwf	??_write_char^0,w,c
  3136  0009A8  0B0F               	andlw	-241
  3137  0009AA  1804               	xorwf	??_write_char^0,w,c
  3138  0009AC  6EDF               	movwf	indf2,c
  3139  0009AE                     
  3140                           ;lcd.c: 140:     lcd->E = 1;
  3141  0009AE  C001  FFD9         	movff	write_char@lcd,fsr2l
  3142  0009B2  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3143  0009B6  84DF               	bsf	indf2,2,c
  3144  0009B8                     
  3145                           ;lcd.c: 141:     lcd->E = 0;
  3146  0009B8  C001  FFD9         	movff	write_char@lcd,fsr2l
  3147  0009BC  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3148  0009C0  94DF               	bcf	indf2,2,c
  3149  0009C2                     
  3150                           ;lcd.c: 144:     lcd->data = (c);
  3151  0009C2  C003  F004         	movff	write_char@c,??_write_char
  3152  0009C6  C001  FFD9         	movff	write_char@lcd,fsr2l
  3153  0009CA  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3154  0009CE  3A04               	swapf	??_write_char^0,f,c
  3155  0009D0  50DF               	movf	indf2,w,c
  3156  0009D2  1804               	xorwf	??_write_char^0,w,c
  3157  0009D4  0B0F               	andlw	-241
  3158  0009D6  1804               	xorwf	??_write_char^0,w,c
  3159  0009D8  6EDF               	movwf	indf2,c
  3160                           
  3161                           ;lcd.c: 145:     lcd->E = 1;
  3162  0009DA  C001  FFD9         	movff	write_char@lcd,fsr2l
  3163  0009DE  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3164  0009E2  84DF               	bsf	indf2,2,c
  3165                           
  3166                           ;lcd.c: 146:     lcd->E = 0;
  3167  0009E4  C001  FFD9         	movff	write_char@lcd,fsr2l
  3168  0009E8  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3169  0009EC  94DF               	bcf	indf2,2,c
  3170  0009EE                     
  3171                           ;lcd.c: 149:     TRISD = 0xF0;
  3172  0009EE  0EF0               	movlw	240
  3173  0009F0  6E95               	movwf	149,c	;volatile
  3174  0009F2                     
  3175                           ;lcd.c: 150:     lcd->RS = 0;
  3176  0009F2  C001  FFD9         	movff	write_char@lcd,fsr2l
  3177  0009F6  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3178  0009FA  90DF               	bcf	indf2,0,c
  3179  0009FC                     
  3180                           ;lcd.c: 151:     lcd->R_W = 1;
  3181  0009FC  C001  FFD9         	movff	write_char@lcd,fsr2l
  3182  000A00  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3183  000A04  82DF               	bsf	indf2,1,c
  3184  000A06                     l1601:
  3185                           
  3186                           ;lcd.c: 153:        lcd->E = 1;
  3187  000A06  C001  FFD9         	movff	write_char@lcd,fsr2l
  3188  000A0A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3189  000A0E  84DF               	bsf	indf2,2,c
  3190  000A10                     
  3191                           ;lcd.c: 154:        lcd->E = 0;
  3192  000A10  C001  FFD9         	movff	write_char@lcd,fsr2l
  3193  000A14  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3194  000A18  94DF               	bcf	indf2,2,c
  3195  000A1A                     
  3196                           ;lcd.c: 155:        lcd->E = 1;
  3197  000A1A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3198  000A1E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3199  000A22  84DF               	bsf	indf2,2,c
  3200  000A24                     
  3201                           ;lcd.c: 156:        lcd->E = 0;
  3202  000A24  C001  FFD9         	movff	write_char@lcd,fsr2l
  3203  000A28  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3204  000A2C  94DF               	bcf	indf2,2,c
  3205  000A2E                     
  3206                           ;lcd.c: 157:     } while(lcd->data&0x08);
  3207  000A2E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3208  000A32  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3209  000A36  38DF               	swapf	indf2,w,c
  3210  000A38  0B0F               	andlw	15
  3211  000A3A  6E04               	movwf	??_write_char^0,c
  3212  000A3C  B604               	btfsc	??_write_char^0,3,c
  3213  000A3E  EF23  F005         	goto	u871
  3214  000A42  EF25  F005         	goto	u870
  3215  000A46                     u871:
  3216  000A46  EF03  F005         	goto	l1601
  3217  000A4A                     u870:
  3218  000A4A                     
  3219                           ;lcd.c: 158:     lcd->R_W = 0;
  3220  000A4A  C001  FFD9         	movff	write_char@lcd,fsr2l
  3221  000A4E  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3222  000A52  92DF               	bcf	indf2,1,c
  3223  000A54                     
  3224                           ;lcd.c: 159:     TRISD = 0x00;
  3225  000A54  0E00               	movlw	0
  3226  000A56  6E95               	movwf	149,c	;volatile
  3227  000A58  0012               	return		;funcret
  3228  000A5A                     __end_of_write_char:
  3229                           	opt callstack 0
  3230                           
  3231 ;; *************** function _goto_XY *****************
  3232 ;; Defined at:
  3233 ;;		line 76 in file "lcd.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  lcd             2    7[COMRAM] PTR struct .
  3236 ;;		 -> PORTD(1), 
  3237 ;;  x               1    9[COMRAM] unsigned char 
  3238 ;;  y               1   10[COMRAM] unsigned char 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  temp            1   14[COMRAM] unsigned char 
  3241 ;;  a               1   13[COMRAM] unsigned char 
  3242 ;;  z               1   12[COMRAM] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3252 ;;      Params:         4       0       0       0       0       0       0
  3253 ;;      Locals:         3       0       0       0       0       0       0
  3254 ;;      Temps:          1       0       0       0       0       0       0
  3255 ;;      Totals:         8       0       0       0       0       0       0
  3256 ;;Total ram usage:        8 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    4
  3259 ;; This function calls:
  3260 ;;		_lcd_cmd
  3261 ;; This function is called by:
  3262 ;;		_print_mat
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text15
  3267  000C10                     __ptext15:
  3268                           	opt callstack 0
  3269  000C10                     _goto_XY:
  3270                           	opt callstack 23
  3271  000C10                     
  3272                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  3273  000C10  040A               	decf	goto_XY@x^0,w,c
  3274  000C12  A4D8               	btfss	status,2,c
  3275  000C14  EF0E  F006         	goto	u831
  3276  000C18  EF10  F006         	goto	u830
  3277  000C1C                     u831:
  3278  000C1C  EF32  F006         	goto	l1549
  3279  000C20                     u830:
  3280  000C20                     
  3281                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  3282  000C20  500B               	movf	goto_XY@y^0,w,c
  3283  000C22  0F7F               	addlw	127
  3284  000C24  6E0F               	movwf	goto_XY@temp^0,c
  3285                           
  3286                           ;lcd.c: 81:        z = temp>>4;
  3287  000C26  380F               	swapf	goto_XY@temp^0,w,c
  3288  000C28  0B0F               	andlw	15
  3289  000C2A  6E0D               	movwf	goto_XY@z^0,c
  3290  000C2C                     l1541:
  3291                           
  3292                           ;lcd.c: 82:        a = temp;
  3293  000C2C  C00F  F00E         	movff	goto_XY@temp,goto_XY@a
  3294  000C30                     
  3295                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  3296  000C30  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3297  000C34  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3298  000C38  C00D  F006         	movff	goto_XY@z,lcd_cmd@a
  3299  000C3C  EC77  F009         	call	_lcd_cmd	;wreg free
  3300  000C40                     
  3301                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  3302  000C40  0E06               	movlw	6
  3303  000C42  6E0C               	movwf	??_goto_XY^0,c
  3304  000C44  0E30               	movlw	48
  3305  000C46                     u1377:
  3306  000C46  2EE8               	decfsz	wreg,f,c
  3307  000C48  D7FE               	bra	u1377
  3308  000C4A  2E0C               	decfsz	??_goto_XY^0,f,c
  3309  000C4C  D7FC               	bra	u1377
  3310  000C4E  D000               	nop2	
  3311  000C50                     
  3312                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  3313  000C50  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3314  000C54  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3315  000C58  C00E  F006         	movff	goto_XY@a,lcd_cmd@a
  3316  000C5C  EC77  F009         	call	_lcd_cmd	;wreg free
  3317                           
  3318                           ;lcd.c: 86:     }
  3319  000C60  EF65  F006         	goto	l74
  3320  000C64                     l1549:
  3321  000C64  0E02               	movlw	2
  3322  000C66  180A               	xorwf	goto_XY@x^0,w,c
  3323  000C68  A4D8               	btfss	status,2,c
  3324  000C6A  EF39  F006         	goto	u841
  3325  000C6E  EF3B  F006         	goto	u840
  3326  000C72                     u841:
  3327  000C72  EF43  F006         	goto	l1561
  3328  000C76                     u840:
  3329  000C76                     
  3330                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  3331  000C76  500B               	movf	goto_XY@y^0,w,c
  3332  000C78  0FBF               	addlw	191
  3333  000C7A  6E0F               	movwf	goto_XY@temp^0,c
  3334                           
  3335                           ;lcd.c: 90:        z = temp>>4;
  3336  000C7C  380F               	swapf	goto_XY@temp^0,w,c
  3337  000C7E  0B0F               	andlw	15
  3338  000C80  6E0D               	movwf	goto_XY@z^0,c
  3339  000C82  EF16  F006         	goto	l1541
  3340  000C86                     l1561:
  3341  000C86  0E03               	movlw	3
  3342  000C88  180A               	xorwf	goto_XY@x^0,w,c
  3343  000C8A  A4D8               	btfss	status,2,c
  3344  000C8C  EF4A  F006         	goto	u851
  3345  000C90  EF4C  F006         	goto	u850
  3346  000C94                     u851:
  3347  000C94  EF54  F006         	goto	l1573
  3348  000C98                     u850:
  3349  000C98                     
  3350                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  3351  000C98  500B               	movf	goto_XY@y^0,w,c
  3352  000C9A  0F8F               	addlw	143
  3353  000C9C  6E0F               	movwf	goto_XY@temp^0,c
  3354                           
  3355                           ;lcd.c: 99:        z = temp>>4;
  3356  000C9E  380F               	swapf	goto_XY@temp^0,w,c
  3357  000CA0  0B0F               	andlw	15
  3358  000CA2  6E0D               	movwf	goto_XY@z^0,c
  3359  000CA4  EF16  F006         	goto	l1541
  3360  000CA8                     l1573:
  3361  000CA8  0E04               	movlw	4
  3362  000CAA  180A               	xorwf	goto_XY@x^0,w,c
  3363  000CAC  A4D8               	btfss	status,2,c
  3364  000CAE  EF5B  F006         	goto	u861
  3365  000CB2  EF5D  F006         	goto	u860
  3366  000CB6                     u861:
  3367  000CB6  EF65  F006         	goto	l70
  3368  000CBA                     u860:
  3369  000CBA                     
  3370                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  3371  000CBA  500B               	movf	goto_XY@y^0,w,c
  3372  000CBC  0FCF               	addlw	207
  3373  000CBE  6E0F               	movwf	goto_XY@temp^0,c
  3374                           
  3375                           ;lcd.c: 108:        z = temp>>4;
  3376  000CC0  380F               	swapf	goto_XY@temp^0,w,c
  3377  000CC2  0B0F               	andlw	15
  3378  000CC4  6E0D               	movwf	goto_XY@z^0,c
  3379  000CC6  EF16  F006         	goto	l1541
  3380  000CCA                     l70:
  3381  000CCA                     l74:
  3382  000CCA  0012               	return		;funcret
  3383  000CCC                     __end_of_goto_XY:
  3384                           	opt callstack 0
  3385                           
  3386 ;; *************** function _lcd_cmd *****************
  3387 ;; Defined at:
  3388 ;;		line 67 in file "lcd.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  lcd             2    3[COMRAM] PTR struct .
  3391 ;;		 -> PORTD(1), 
  3392 ;;  a               1    5[COMRAM] unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3404 ;;      Params:         3       0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0
  3406 ;;      Temps:          1       0       0       0       0       0       0
  3407 ;;      Totals:         4       0       0       0       0       0       0
  3408 ;;Total ram usage:        4 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    3
  3411 ;; This function calls:
  3412 ;;		_pulso
  3413 ;; This function is called by:
  3414 ;;		_goto_XY
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text16
  3419  0012EE                     __ptext16:
  3420                           	opt callstack 0
  3421  0012EE                     _lcd_cmd:
  3422                           	opt callstack 23
  3423  0012EE                     
  3424                           ;lcd.c: 68:     lcd->RS = 0;
  3425  0012EE  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3426  0012F2  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3427  0012F6  90DF               	bcf	indf2,0,c
  3428  0012F8                     
  3429                           ;lcd.c: 69:     lcd->data = (a);
  3430  0012F8  C006  F007         	movff	lcd_cmd@a,??_lcd_cmd
  3431  0012FC  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3432  001300  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3433  001304  3A07               	swapf	??_lcd_cmd^0,f,c
  3434  001306  50DF               	movf	indf2,w,c
  3435  001308  1807               	xorwf	??_lcd_cmd^0,w,c
  3436  00130A  0B0F               	andlw	-241
  3437  00130C  1807               	xorwf	??_lcd_cmd^0,w,c
  3438  00130E  6EDF               	movwf	indf2,c
  3439  001310                     
  3440                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3441  001310  0E06               	movlw	6
  3442  001312  6E07               	movwf	??_lcd_cmd^0,c
  3443  001314  0E30               	movlw	48
  3444  001316                     u1387:
  3445  001316  2EE8               	decfsz	wreg,f,c
  3446  001318  D7FE               	bra	u1387
  3447  00131A  2E07               	decfsz	??_lcd_cmd^0,f,c
  3448  00131C  D7FC               	bra	u1387
  3449  00131E  D000               	nop2	
  3450  001320                     
  3451                           ;lcd.c: 72:     pulso(lcd);
  3452  001320  C004  F001         	movff	lcd_cmd@lcd,pulso@lcd
  3453  001324  C005  F002         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  3454  001328  EC97  F009         	call	_pulso	;wreg free
  3455  00132C  0012               	return		;funcret
  3456  00132E                     __end_of_lcd_cmd:
  3457                           	opt callstack 0
  3458                           
  3459 ;; *************** function _function_set *****************
  3460 ;; Defined at:
  3461 ;;		line 21 in file "lcd.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  lcd             2    3[COMRAM] PTR struct .
  3464 ;;		 -> PORTD(1), 
  3465 ;;  data_lenght     1    5[COMRAM] unsigned char 
  3466 ;;  num_lines       1    6[COMRAM] unsigned char 
  3467 ;;  char_font       1    7[COMRAM] unsigned char 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3479 ;;      Params:         5       0       0       0       0       0       0
  3480 ;;      Locals:         0       0       0       0       0       0       0
  3481 ;;      Temps:          3       0       0       0       0       0       0
  3482 ;;      Totals:         8       0       0       0       0       0       0
  3483 ;;Total ram usage:        8 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    3
  3486 ;; This function calls:
  3487 ;;		_pulso
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text17
  3494  000B36                     __ptext17:
  3495                           	opt callstack 0
  3496  000B36                     _function_set:
  3497                           	opt callstack 27
  3498  000B36                     
  3499                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  3500  000B36  C004  FFD9         	movff	function_set@lcd,fsr2l
  3501  000B3A  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3502  000B3E  94DF               	bcf	indf2,2,c
  3503                           
  3504                           ;lcd.c: 24:     lcd->RS = 0;
  3505  000B40  C004  FFD9         	movff	function_set@lcd,fsr2l
  3506  000B44  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3507  000B48  90DF               	bcf	indf2,0,c
  3508                           
  3509                           ;lcd.c: 25:     lcd->R_W = 0;
  3510  000B4A  C004  FFD9         	movff	function_set@lcd,fsr2l
  3511  000B4E  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3512  000B52  92DF               	bcf	indf2,1,c
  3513  000B54                     
  3514                           ;lcd.c: 28:     lcd->data = 0x02;
  3515  000B54  C004  FFD9         	movff	function_set@lcd,fsr2l
  3516  000B58  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3517  000B5C  50DF               	movf	indf2,w,c
  3518  000B5E  0B0F               	andlw	-241
  3519  000B60  0920               	iorlw	32
  3520  000B62  6EDF               	movwf	indf2,c
  3521  000B64                     
  3522                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3523  000B64  0E06               	movlw	6
  3524  000B66  6E09               	movwf	??_function_set^0,c
  3525  000B68  0E30               	movlw	48
  3526  000B6A                     u1397:
  3527  000B6A  2EE8               	decfsz	wreg,f,c
  3528  000B6C  D7FE               	bra	u1397
  3529  000B6E  2E09               	decfsz	??_function_set^0,f,c
  3530  000B70  D7FC               	bra	u1397
  3531  000B72  D000               	nop2	
  3532  000B74                     
  3533                           ;lcd.c: 31:     pulso(lcd);
  3534  000B74  C004  F001         	movff	function_set@lcd,pulso@lcd
  3535  000B78  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3536  000B7C  EC97  F009         	call	_pulso	;wreg free
  3537  000B80                     
  3538                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  3539  000B80  C006  F009         	movff	function_set@data_lenght,??_function_set
  3540  000B84  0E02               	movlw	2
  3541  000B86  1209               	iorwf	??_function_set^0,f,c
  3542  000B88  C004  FFD9         	movff	function_set@lcd,fsr2l
  3543  000B8C  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3544  000B90  3A09               	swapf	??_function_set^0,f,c
  3545  000B92  50DF               	movf	indf2,w,c
  3546  000B94  1809               	xorwf	??_function_set^0,w,c
  3547  000B96  0B0F               	andlw	-241
  3548  000B98  1809               	xorwf	??_function_set^0,w,c
  3549  000B9A  6EDF               	movwf	indf2,c
  3550  000B9C                     
  3551                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3552  000B9C  0E06               	movlw	6
  3553  000B9E  6E09               	movwf	??_function_set^0,c
  3554  000BA0  0E30               	movlw	48
  3555  000BA2                     u1407:
  3556  000BA2  2EE8               	decfsz	wreg,f,c
  3557  000BA4  D7FE               	bra	u1407
  3558  000BA6  2E09               	decfsz	??_function_set^0,f,c
  3559  000BA8  D7FC               	bra	u1407
  3560  000BAA  D000               	nop2	
  3561  000BAC                     
  3562                           ;lcd.c: 37:     pulso(lcd);
  3563  000BAC  C004  F001         	movff	function_set@lcd,pulso@lcd
  3564  000BB0  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3565  000BB4  EC97  F009         	call	_pulso	;wreg free
  3566  000BB8                     
  3567                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  3568  000BB8  C004  FFD9         	movff	function_set@lcd,fsr2l
  3569  000BBC  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3570  000BC0  38DF               	swapf	indf2,w,c
  3571  000BC2  0B0F               	andlw	15
  3572  000BC4  6E09               	movwf	??_function_set^0,c
  3573  000BC6  C008  F00A         	movff	function_set@char_font,??_function_set+1
  3574  000BCA  90D8               	bcf	status,0,c
  3575  000BCC  360A               	rlcf	(??_function_set+1)^0,f,c
  3576  000BCE  90D8               	bcf	status,0,c
  3577  000BD0  360A               	rlcf	(??_function_set+1)^0,f,c
  3578  000BD2  3807               	swapf	function_set@num_lines^0,w,c
  3579  000BD4  42E8               	rrncf	wreg,f,c
  3580  000BD6  0BF8               	andlw	248
  3581  000BD8  100A               	iorwf	(??_function_set+1)^0,w,c
  3582  000BDA  1009               	iorwf	??_function_set^0,w,c
  3583  000BDC  6E0B               	movwf	(??_function_set+2)^0,c
  3584  000BDE  C004  FFD9         	movff	function_set@lcd,fsr2l
  3585  000BE2  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3586  000BE6  3A0B               	swapf	(??_function_set+2)^0,f,c
  3587  000BE8  50DF               	movf	indf2,w,c
  3588  000BEA  180B               	xorwf	(??_function_set+2)^0,w,c
  3589  000BEC  0B0F               	andlw	-241
  3590  000BEE  180B               	xorwf	(??_function_set+2)^0,w,c
  3591  000BF0  6EDF               	movwf	indf2,c
  3592  000BF2                     
  3593                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3594  000BF2  0E06               	movlw	6
  3595  000BF4  6E09               	movwf	??_function_set^0,c
  3596  000BF6  0E30               	movlw	48
  3597  000BF8                     u1417:
  3598  000BF8  2EE8               	decfsz	wreg,f,c
  3599  000BFA  D7FE               	bra	u1417
  3600  000BFC  2E09               	decfsz	??_function_set^0,f,c
  3601  000BFE  D7FC               	bra	u1417
  3602  000C00  D000               	nop2	
  3603  000C02                     
  3604                           ;lcd.c: 44:     pulso(lcd);
  3605  000C02  C004  F001         	movff	function_set@lcd,pulso@lcd
  3606  000C06  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3607  000C0A  EC97  F009         	call	_pulso	;wreg free
  3608  000C0E  0012               	return		;funcret
  3609  000C10                     __end_of_function_set:
  3610                           	opt callstack 0
  3611                           
  3612 ;; *************** function _entry_mode_set *****************
  3613 ;; Defined at:
  3614 ;;		line 116 in file "lcd.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  lcd             2    3[COMRAM] PTR struct .
  3617 ;;		 -> PORTD(1), 
  3618 ;;  move_directi    1    5[COMRAM] unsigned char 
  3619 ;;  display_shif    1    6[COMRAM] unsigned char 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3631 ;;      Params:         4       0       0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0
  3633 ;;      Temps:          1       0       0       0       0       0       0
  3634 ;;      Totals:         5       0       0       0       0       0       0
  3635 ;;Total ram usage:        5 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    3
  3638 ;; This function calls:
  3639 ;;		_pulso
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text18
  3646  000FEA                     __ptext18:
  3647                           	opt callstack 0
  3648  000FEA                     _entry_mode_set:
  3649                           	opt callstack 27
  3650  000FEA                     
  3651                           ;lcd.c: 117:     lcd->E = 0;
  3652  000FEA  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3653  000FEE  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3654  000FF2  94DF               	bcf	indf2,2,c
  3655                           
  3656                           ;lcd.c: 118:     lcd->RS = 0;
  3657  000FF4  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3658  000FF8  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3659  000FFC  90DF               	bcf	indf2,0,c
  3660                           
  3661                           ;lcd.c: 119:     lcd->R_W = 0;
  3662  000FFE  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3663  001002  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3664  001006  92DF               	bcf	indf2,1,c
  3665  001008                     
  3666                           ;lcd.c: 121:     lcd->data = 0x00;
  3667  001008  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3668  00100C  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3669  001010  0E0F               	movlw	-241
  3670  001012  16DF               	andwf	indf2,f,c
  3671  001014                     
  3672                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3673  001014  0E06               	movlw	6
  3674  001016  6E08               	movwf	??_entry_mode_set^0,c
  3675  001018  0E30               	movlw	48
  3676  00101A                     u1427:
  3677  00101A  2EE8               	decfsz	wreg,f,c
  3678  00101C  D7FE               	bra	u1427
  3679  00101E  2E08               	decfsz	??_entry_mode_set^0,f,c
  3680  001020  D7FC               	bra	u1427
  3681  001022  D000               	nop2	
  3682  001024                     
  3683                           ;lcd.c: 124:     pulso(lcd);
  3684  001024  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3685  001028  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3686  00102C  EC97  F009         	call	_pulso	;wreg free
  3687  001030                     
  3688                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  3689  001030  5006               	movf	entry_mode_set@move_direction^0,w,c
  3690  001032  2406               	addwf	entry_mode_set@move_direction^0,w,c
  3691  001034  1007               	iorwf	entry_mode_set@display_shift^0,w,c
  3692  001036  6E08               	movwf	??_entry_mode_set^0,c
  3693  001038  0E04               	movlw	4
  3694  00103A  1208               	iorwf	??_entry_mode_set^0,f,c
  3695  00103C  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3696  001040  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3697  001044  3A08               	swapf	??_entry_mode_set^0,f,c
  3698  001046  50DF               	movf	indf2,w,c
  3699  001048  1808               	xorwf	??_entry_mode_set^0,w,c
  3700  00104A  0B0F               	andlw	-241
  3701  00104C  1808               	xorwf	??_entry_mode_set^0,w,c
  3702  00104E  6EDF               	movwf	indf2,c
  3703  001050                     
  3704                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3705  001050  0E06               	movlw	6
  3706  001052  6E08               	movwf	??_entry_mode_set^0,c
  3707  001054  0E30               	movlw	48
  3708  001056                     u1437:
  3709  001056  2EE8               	decfsz	wreg,f,c
  3710  001058  D7FE               	bra	u1437
  3711  00105A  2E08               	decfsz	??_entry_mode_set^0,f,c
  3712  00105C  D7FC               	bra	u1437
  3713  00105E  D000               	nop2	
  3714  001060                     
  3715                           ;lcd.c: 130:     pulso(lcd);
  3716  001060  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3717  001064  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3718  001068  EC97  F009         	call	_pulso	;wreg free
  3719  00106C  0012               	return		;funcret
  3720  00106E                     __end_of_entry_mode_set:
  3721                           	opt callstack 0
  3722                           
  3723 ;; *************** function _display_onoff_control *****************
  3724 ;; Defined at:
  3725 ;;		line 47 in file "lcd.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  lcd             2    3[COMRAM] PTR struct .
  3728 ;;		 -> PORTD(1), 
  3729 ;;  display_on      1    5[COMRAM] unsigned char 
  3730 ;;  cursor_on       1    6[COMRAM] unsigned char 
  3731 ;;  blink           1    7[COMRAM] unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3743 ;;      Params:         5       0       0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0
  3745 ;;      Temps:          2       0       0       0       0       0       0
  3746 ;;      Totals:         7       0       0       0       0       0       0
  3747 ;;Total ram usage:        7 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    3
  3750 ;; This function calls:
  3751 ;;		_pulso
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text19
  3758  000F5C                     __ptext19:
  3759                           	opt callstack 0
  3760  000F5C                     _display_onoff_control:
  3761                           	opt callstack 27
  3762  000F5C                     
  3763                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  3764  000F5C  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3765  000F60  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3766  000F64  94DF               	bcf	indf2,2,c
  3767                           
  3768                           ;lcd.c: 50:     lcd->RS = 0;
  3769  000F66  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3770  000F6A  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3771  000F6E  90DF               	bcf	indf2,0,c
  3772                           
  3773                           ;lcd.c: 51:     lcd->R_W = 0;
  3774  000F70  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3775  000F74  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3776  000F78  92DF               	bcf	indf2,1,c
  3777  000F7A                     
  3778                           ;lcd.c: 54:     lcd->data = 0x00;
  3779  000F7A  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3780  000F7E  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3781  000F82  0E0F               	movlw	-241
  3782  000F84  16DF               	andwf	indf2,f,c
  3783  000F86                     
  3784                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3785  000F86  0E06               	movlw	6
  3786  000F88  6E09               	movwf	??_display_onoff_control^0,c
  3787  000F8A  0E30               	movlw	48
  3788  000F8C                     u1447:
  3789  000F8C  2EE8               	decfsz	wreg,f,c
  3790  000F8E  D7FE               	bra	u1447
  3791  000F90  2E09               	decfsz	??_display_onoff_control^0,f,c
  3792  000F92  D7FC               	bra	u1447
  3793  000F94  D000               	nop2	
  3794  000F96                     
  3795                           ;lcd.c: 57:     pulso(lcd);
  3796  000F96  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3797  000F9A  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3798  000F9E  EC97  F009         	call	_pulso	;wreg free
  3799  000FA2                     
  3800                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  3801  000FA2  90D8               	bcf	status,0,c
  3802  000FA4  3407               	rlcf	display_onoff_control@cursor_on^0,w,c
  3803  000FA6  6E09               	movwf	??_display_onoff_control^0,c
  3804  000FA8  4406               	rlncf	display_onoff_control@display_on^0,w,c
  3805  000FAA  46E8               	rlncf	wreg,f,c
  3806  000FAC  0BFC               	andlw	252
  3807  000FAE  1009               	iorwf	??_display_onoff_control^0,w,c
  3808  000FB0  1008               	iorwf	display_onoff_control@blink^0,w,c
  3809  000FB2  6E0A               	movwf	(??_display_onoff_control+1)^0,c
  3810  000FB4  0E08               	movlw	8
  3811  000FB6  120A               	iorwf	(??_display_onoff_control+1)^0,f,c
  3812  000FB8  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3813  000FBC  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3814  000FC0  3A0A               	swapf	(??_display_onoff_control+1)^0,f,c
  3815  000FC2  50DF               	movf	indf2,w,c
  3816  000FC4  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3817  000FC6  0B0F               	andlw	-241
  3818  000FC8  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3819  000FCA  6EDF               	movwf	indf2,c
  3820  000FCC                     
  3821                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3822  000FCC  0E06               	movlw	6
  3823  000FCE  6E09               	movwf	??_display_onoff_control^0,c
  3824  000FD0  0E30               	movlw	48
  3825  000FD2                     u1457:
  3826  000FD2  2EE8               	decfsz	wreg,f,c
  3827  000FD4  D7FE               	bra	u1457
  3828  000FD6  2E09               	decfsz	??_display_onoff_control^0,f,c
  3829  000FD8  D7FC               	bra	u1457
  3830  000FDA  D000               	nop2	
  3831  000FDC                     
  3832                           ;lcd.c: 64:     pulso(lcd);
  3833  000FDC  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3834  000FE0  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3835  000FE4  EC97  F009         	call	_pulso	;wreg free
  3836  000FE8  0012               	return		;funcret
  3837  000FEA                     __end_of_display_onoff_control:
  3838                           	opt callstack 0
  3839                           
  3840 ;; *************** function _pulso *****************
  3841 ;; Defined at:
  3842 ;;		line 11 in file "lcd.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  lcd             2    0[COMRAM] PTR struct .
  3845 ;;		 -> PORTD(1), 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, fsr2l, fsr2h
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3857 ;;      Params:         2       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0
  3859 ;;      Temps:          1       0       0       0       0       0       0
  3860 ;;      Totals:         3       0       0       0       0       0       0
  3861 ;;Total ram usage:        3 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    2
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_function_set
  3868 ;;		_display_onoff_control
  3869 ;;		_lcd_cmd
  3870 ;;		_entry_mode_set
  3871 ;;		_clear_display
  3872 ;;		_return_home
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text20
  3877  00132E                     __ptext20:
  3878                           	opt callstack 0
  3879  00132E                     _pulso:
  3880                           	opt callstack 23
  3881  00132E                     
  3882                           ;lcd.c: 13:     lcd->E = 1;
  3883  00132E  C001  FFD9         	movff	pulso@lcd,fsr2l
  3884  001332  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  3885  001336  84DF               	bsf	indf2,2,c
  3886  001338                     
  3887                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3888  001338  0E06               	movlw	6
  3889  00133A  6E03               	movwf	??_pulso^0,c
  3890  00133C  0E30               	movlw	48
  3891  00133E                     u1467:
  3892  00133E  2EE8               	decfsz	wreg,f,c
  3893  001340  D7FE               	bra	u1467
  3894  001342  2E03               	decfsz	??_pulso^0,f,c
  3895  001344  D7FC               	bra	u1467
  3896  001346  D000               	nop2	
  3897  001348                     
  3898                           ;lcd.c: 17:     lcd->E = 0;
  3899  001348  C001  FFD9         	movff	pulso@lcd,fsr2l
  3900  00134C  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  3901  001350  94DF               	bcf	indf2,2,c
  3902                           
  3903                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3904  001352  0E06               	movlw	6
  3905  001354  6E03               	movwf	??_pulso^0,c
  3906  001356  0E30               	movlw	48
  3907  001358                     u1477:
  3908  001358  2EE8               	decfsz	wreg,f,c
  3909  00135A  D7FE               	bra	u1477
  3910  00135C  2E03               	decfsz	??_pulso^0,f,c
  3911  00135E  D7FC               	bra	u1477
  3912  001360  D000               	nop2	
  3913  001362  0012               	return		;funcret
  3914  001364                     __end_of_pulso:
  3915                           	opt callstack 0
  3916                           
  3917 ;; *************** function _int_handler *****************
  3918 ;; Defined at:
  3919 ;;		line 24 in file "main.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3933 ;;      Params:         0       0       0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0
  3936 ;;      Totals:         0       0       0       0       0       0       0
  3937 ;;Total ram usage:        0 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    1
  3940 ;; This function calls:
  3941 ;;		_le_entrada
  3942 ;; This function is called by:
  3943 ;;		Interrupt level 2
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	intcode
  3948  000008                     __pintcode:
  3949                           	opt callstack 0
  3950  000008                     _int_handler:
  3951                           	opt callstack 23
  3952                           
  3953                           ;incstack = 0
  3954  000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3955  00000A  EDB2  F009         	call	int_func,f	;refresh shadow registers
  3956                           
  3957                           	psect	intcode_body
  3958  001364                     __pintcode_body:
  3959                           	opt callstack 23
  3960  001364                     int_func:
  3961                           	opt callstack 23
  3962  001364  0006               	pop		; remove dummy address from shadow register refresh
  3963  001366                     
  3964                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  3965  001366  A4F2               	btfss	242,2,c	;volatile
  3966  001368  EFB8  F009         	goto	i2u81_41
  3967  00136C  EFBA  F009         	goto	i2u81_40
  3968  001370                     i2u81_41:
  3969  001370  EFBF  F009         	goto	i2l1469
  3970  001374                     i2u81_40:
  3971  001374                     
  3972                           ;main.c: 26:         TMR0L = 0x63;
  3973  001374  0E63               	movlw	99
  3974  001376  6ED6               	movwf	214,c	;volatile
  3975  001378                     
  3976                           ;main.c: 27:         le_entrada();
  3977  001378  EC44  F003         	call	_le_entrada	;wreg free
  3978  00137C                     
  3979                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  3980  00137C  94F2               	bcf	242,2,c	;volatile
  3981  00137E                     i2l1469:
  3982                           
  3983                           ;main.c: 30:     if(INTCONbits.INT0IF == 1){
  3984  00137E  A2F2               	btfss	242,1,c	;volatile
  3985  001380  EFC4  F009         	goto	i2u82_41
  3986  001384  EFC6  F009         	goto	i2u82_40
  3987  001388                     i2u82_41:
  3988  001388  EFC8  F009         	goto	i2l41
  3989  00138C                     i2u82_40:
  3990  00138C                     
  3991                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  3992  00138C  92F2               	bcf	242,1,c	;volatile
  3993  00138E  00FF               	reset		;# 
  3994  001390                     i2l41:
  3995  001390  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3996  001392  0011               	retfie		f
  3997  001394                     __end_of_int_handler:
  3998                           	opt callstack 0
  3999                           
  4000 ;; *************** function _le_entrada *****************
  4001 ;; Defined at:
  4002 ;;		line 12 in file "keyboard.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4016 ;;      Params:         0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_int_handler
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text22
  4030  000688                     __ptext22:
  4031                           	opt callstack 0
  4032  000688                     _le_entrada:
  4033                           	opt callstack 23
  4034  000688                     
  4035                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  4036  000688  8E81               	bsf	129,7,c	;volatile
  4037                           
  4038                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  4039  00068A  B045               	btfsc	_botoes_ant^0,0,c
  4040  00068C  EF4A  F003         	goto	i2u51_41
  4041  000690  EF4C  F003         	goto	i2u51_40
  4042  000694                     i2u51_41:
  4043  000694  EF53  F003         	goto	i2l1317
  4044  000698                     i2u51_40:
  4045  000698  B481               	btfsc	129,2,c	;volatile
  4046  00069A  EF51  F003         	goto	i2u52_41
  4047  00069E  EF53  F003         	goto	i2u52_40
  4048  0006A2                     i2u52_41:
  4049  0006A2  EF5B  F003         	goto	i2l114
  4050  0006A6                     i2u52_40:
  4051  0006A6                     i2l1317:
  4052  0006A6  0E32               	movlw	50
  4053  0006A8  6444               	cpfsgt	_cont_u^0,c
  4054  0006AA  EF59  F003         	goto	i2u53_41
  4055  0006AE  EF5B  F003         	goto	i2u53_40
  4056  0006B2                     i2u53_41:
  4057  0006B2  EF61  F003         	goto	i2l112
  4058  0006B6                     i2u53_40:
  4059  0006B6                     i2l114:
  4060                           
  4061                           ;keyboard.c: 15:         botoes.U = 1;
  4062  0006B6  8046               	bsf	_botoes^0,0,c
  4063                           
  4064                           ;keyboard.c: 16:         botoes_ant.U = 1;
  4065  0006B8  8045               	bsf	_botoes_ant^0,0,c
  4066  0006BA                     i2l1319:
  4067                           
  4068                           ;keyboard.c: 17:         cont_u = 0;
  4069  0006BA  0E00               	movlw	0
  4070  0006BC  6E44               	movwf	_cont_u^0,c
  4071                           
  4072                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  4073  0006BE  EF7B  F003         	goto	i2l1329
  4074  0006C2                     i2l112:
  4075  0006C2  A045               	btfss	_botoes_ant^0,0,c
  4076  0006C4  EF66  F003         	goto	i2u54_41
  4077  0006C8  EF68  F003         	goto	i2u54_40
  4078  0006CC                     i2u54_41:
  4079  0006CC  EF73  F003         	goto	i2l118
  4080  0006D0                     i2u54_40:
  4081  0006D0  B481               	btfsc	129,2,c	;volatile
  4082  0006D2  EF6D  F003         	goto	i2u55_41
  4083  0006D6  EF6F  F003         	goto	i2u55_40
  4084  0006DA                     i2u55_41:
  4085  0006DA  EF73  F003         	goto	i2l118
  4086  0006DE                     i2u55_40:
  4087  0006DE                     
  4088                           ;keyboard.c: 19:         botoes.U = 0;
  4089  0006DE  9046               	bcf	_botoes^0,0,c
  4090                           
  4091                           ;keyboard.c: 20:         botoes_ant.U = 0;
  4092  0006E0  9045               	bcf	_botoes_ant^0,0,c
  4093  0006E2  EF5D  F003         	goto	i2l1319
  4094  0006E6                     i2l118:
  4095  0006E6  A481               	btfss	129,2,c	;volatile
  4096  0006E8  EF78  F003         	goto	i2u56_41
  4097  0006EC  EF7A  F003         	goto	i2u56_40
  4098  0006F0                     i2u56_41:
  4099  0006F0  EF7B  F003         	goto	i2l1329
  4100  0006F4                     i2u56_40:
  4101  0006F4  2A44               	incf	_cont_u^0,f,c
  4102  0006F6                     i2l1329:
  4103                           
  4104                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  4105  0006F6  9E81               	bcf	129,7,c	;volatile
  4106  0006F8                     
  4107                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  4108  0006F8  8C81               	bsf	129,6,c	;volatile
  4109  0006FA                     
  4110                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  4111  0006FA  B445               	btfsc	_botoes_ant^0,2,c
  4112  0006FC  EF82  F003         	goto	i2u57_41
  4113  000700  EF84  F003         	goto	i2u57_40
  4114  000704                     i2u57_41:
  4115  000704  EF8B  F003         	goto	i2l1337
  4116  000708                     i2u57_40:
  4117  000708  B281               	btfsc	129,1,c	;volatile
  4118  00070A  EF89  F003         	goto	i2u58_41
  4119  00070E  EF8B  F003         	goto	i2u58_40
  4120  000712                     i2u58_41:
  4121  000712  EF93  F003         	goto	i2l123
  4122  000716                     i2u58_40:
  4123  000716                     i2l1337:
  4124  000716  0E32               	movlw	50
  4125  000718  6442               	cpfsgt	_cont_l^0,c
  4126  00071A  EF91  F003         	goto	i2u59_41
  4127  00071E  EF93  F003         	goto	i2u59_40
  4128  000722                     i2u59_41:
  4129  000722  EF99  F003         	goto	i2l121
  4130  000726                     i2u59_40:
  4131  000726                     i2l123:
  4132                           
  4133                           ;keyboard.c: 27:         botoes.L = 1;
  4134  000726  8446               	bsf	_botoes^0,2,c
  4135                           
  4136                           ;keyboard.c: 28:         botoes_ant.L = 1;
  4137  000728  8445               	bsf	_botoes_ant^0,2,c
  4138  00072A                     i2l1339:
  4139                           
  4140                           ;keyboard.c: 29:         cont_l = 0;
  4141  00072A  0E00               	movlw	0
  4142  00072C  6E42               	movwf	_cont_l^0,c
  4143                           
  4144                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  4145  00072E  EFB3  F003         	goto	i2l1349
  4146  000732                     i2l121:
  4147  000732  A445               	btfss	_botoes_ant^0,2,c
  4148  000734  EF9E  F003         	goto	i2u60_41
  4149  000738  EFA0  F003         	goto	i2u60_40
  4150  00073C                     i2u60_41:
  4151  00073C  EFAB  F003         	goto	i2l127
  4152  000740                     i2u60_40:
  4153  000740  B281               	btfsc	129,1,c	;volatile
  4154  000742  EFA5  F003         	goto	i2u61_41
  4155  000746  EFA7  F003         	goto	i2u61_40
  4156  00074A                     i2u61_41:
  4157  00074A  EFAB  F003         	goto	i2l127
  4158  00074E                     i2u61_40:
  4159  00074E                     
  4160                           ;keyboard.c: 31:         botoes.L = 0;
  4161  00074E  9446               	bcf	_botoes^0,2,c
  4162                           
  4163                           ;keyboard.c: 32:         botoes_ant.L = 0;
  4164  000750  9445               	bcf	_botoes_ant^0,2,c
  4165  000752  EF95  F003         	goto	i2l1339
  4166  000756                     i2l127:
  4167  000756  A281               	btfss	129,1,c	;volatile
  4168  000758  EFB0  F003         	goto	i2u62_41
  4169  00075C  EFB2  F003         	goto	i2u62_40
  4170  000760                     i2u62_41:
  4171  000760  EFB3  F003         	goto	i2l1349
  4172  000764                     i2u62_40:
  4173  000764  2A42               	incf	_cont_l^0,f,c
  4174  000766                     i2l1349:
  4175                           
  4176                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  4177  000766  B645               	btfsc	_botoes_ant^0,3,c
  4178  000768  EFB8  F003         	goto	i2u63_41
  4179  00076C  EFBA  F003         	goto	i2u63_40
  4180  000770                     i2u63_41:
  4181  000770  EFC1  F003         	goto	i2l1353
  4182  000774                     i2u63_40:
  4183  000774  B681               	btfsc	129,3,c	;volatile
  4184  000776  EFBF  F003         	goto	i2u64_41
  4185  00077A  EFC1  F003         	goto	i2u64_40
  4186  00077E                     i2u64_41:
  4187  00077E  EFC9  F003         	goto	i2l132
  4188  000782                     i2u64_40:
  4189  000782                     i2l1353:
  4190  000782  0E32               	movlw	50
  4191  000784  6441               	cpfsgt	_cont_r^0,c
  4192  000786  EFC7  F003         	goto	i2u65_41
  4193  00078A  EFC9  F003         	goto	i2u65_40
  4194  00078E                     i2u65_41:
  4195  00078E  EFCF  F003         	goto	i2l130
  4196  000792                     i2u65_40:
  4197  000792                     i2l132:
  4198                           
  4199                           ;keyboard.c: 37:         botoes.R = 1;
  4200  000792  8646               	bsf	_botoes^0,3,c
  4201                           
  4202                           ;keyboard.c: 38:         botoes_ant.R = 1;
  4203  000794  8645               	bsf	_botoes_ant^0,3,c
  4204  000796                     i2l1355:
  4205                           
  4206                           ;keyboard.c: 39:         cont_r = 0;
  4207  000796  0E00               	movlw	0
  4208  000798  6E41               	movwf	_cont_r^0,c
  4209                           
  4210                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  4211  00079A  EFE9  F003         	goto	i2l1365
  4212  00079E                     i2l130:
  4213  00079E  A645               	btfss	_botoes_ant^0,3,c
  4214  0007A0  EFD4  F003         	goto	i2u66_41
  4215  0007A4  EFD6  F003         	goto	i2u66_40
  4216  0007A8                     i2u66_41:
  4217  0007A8  EFE1  F003         	goto	i2l136
  4218  0007AC                     i2u66_40:
  4219  0007AC  B681               	btfsc	129,3,c	;volatile
  4220  0007AE  EFDB  F003         	goto	i2u67_41
  4221  0007B2  EFDD  F003         	goto	i2u67_40
  4222  0007B6                     i2u67_41:
  4223  0007B6  EFE1  F003         	goto	i2l136
  4224  0007BA                     i2u67_40:
  4225  0007BA                     
  4226                           ;keyboard.c: 41:         botoes.R = 0;
  4227  0007BA  9646               	bcf	_botoes^0,3,c
  4228                           
  4229                           ;keyboard.c: 42:         botoes_ant.R = 0;
  4230  0007BC  9645               	bcf	_botoes_ant^0,3,c
  4231  0007BE  EFCB  F003         	goto	i2l1355
  4232  0007C2                     i2l136:
  4233  0007C2  A681               	btfss	129,3,c	;volatile
  4234  0007C4  EFE6  F003         	goto	i2u68_41
  4235  0007C8  EFE8  F003         	goto	i2u68_40
  4236  0007CC                     i2u68_41:
  4237  0007CC  EFE9  F003         	goto	i2l1365
  4238  0007D0                     i2u68_40:
  4239  0007D0  2A41               	incf	_cont_r^0,f,c
  4240  0007D2                     i2l1365:
  4241                           
  4242                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  4243  0007D2  9C81               	bcf	129,6,c	;volatile
  4244  0007D4                     
  4245                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  4246  0007D4  8A81               	bsf	129,5,c	;volatile
  4247  0007D6                     
  4248                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  4249  0007D6  B245               	btfsc	_botoes_ant^0,1,c
  4250  0007D8  EFF0  F003         	goto	i2u69_41
  4251  0007DC  EFF2  F003         	goto	i2u69_40
  4252  0007E0                     i2u69_41:
  4253  0007E0  EFF9  F003         	goto	i2l1373
  4254  0007E4                     i2u69_40:
  4255  0007E4  B481               	btfsc	129,2,c	;volatile
  4256  0007E6  EFF7  F003         	goto	i2u70_41
  4257  0007EA  EFF9  F003         	goto	i2u70_40
  4258  0007EE                     i2u70_41:
  4259  0007EE  EF01  F004         	goto	i2l141
  4260  0007F2                     i2u70_40:
  4261  0007F2                     i2l1373:
  4262  0007F2  0E32               	movlw	50
  4263  0007F4  6443               	cpfsgt	_cont_d^0,c
  4264  0007F6  EFFF  F003         	goto	i2u71_41
  4265  0007FA  EF01  F004         	goto	i2u71_40
  4266  0007FE                     i2u71_41:
  4267  0007FE  EF07  F004         	goto	i2l139
  4268  000802                     i2u71_40:
  4269  000802                     i2l141:
  4270                           
  4271                           ;keyboard.c: 49:         botoes.D = 1;
  4272  000802  8246               	bsf	_botoes^0,1,c
  4273                           
  4274                           ;keyboard.c: 50:         botoes_ant.D = 1;
  4275  000804  8245               	bsf	_botoes_ant^0,1,c
  4276  000806                     i2l1375:
  4277                           
  4278                           ;keyboard.c: 51:         cont_d = 0;
  4279  000806  0E00               	movlw	0
  4280  000808  6E43               	movwf	_cont_d^0,c
  4281                           
  4282                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  4283  00080A  EF21  F004         	goto	i2l1385
  4284  00080E                     i2l139:
  4285  00080E  A245               	btfss	_botoes_ant^0,1,c
  4286  000810  EF0C  F004         	goto	i2u72_41
  4287  000814  EF0E  F004         	goto	i2u72_40
  4288  000818                     i2u72_41:
  4289  000818  EF19  F004         	goto	i2l145
  4290  00081C                     i2u72_40:
  4291  00081C  B481               	btfsc	129,2,c	;volatile
  4292  00081E  EF13  F004         	goto	i2u73_41
  4293  000822  EF15  F004         	goto	i2u73_40
  4294  000826                     i2u73_41:
  4295  000826  EF19  F004         	goto	i2l145
  4296  00082A                     i2u73_40:
  4297  00082A                     
  4298                           ;keyboard.c: 53:         botoes.D = 0;
  4299  00082A  9246               	bcf	_botoes^0,1,c
  4300                           
  4301                           ;keyboard.c: 54:         botoes_ant.D = 0;
  4302  00082C  9245               	bcf	_botoes_ant^0,1,c
  4303  00082E  EF03  F004         	goto	i2l1375
  4304  000832                     i2l145:
  4305  000832  A481               	btfss	129,2,c	;volatile
  4306  000834  EF1E  F004         	goto	i2u74_41
  4307  000838  EF20  F004         	goto	i2u74_40
  4308  00083C                     i2u74_41:
  4309  00083C  EF21  F004         	goto	i2l1385
  4310  000840                     i2u74_40:
  4311  000840  2A43               	incf	_cont_d^0,f,c
  4312  000842                     i2l1385:
  4313                           
  4314                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  4315  000842  9A81               	bcf	129,5,c	;volatile
  4316  000844                     
  4317                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  4318  000844  8881               	bsf	129,4,c	;volatile
  4319  000846                     
  4320                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  4321  000846  A281               	btfss	129,1,c	;volatile
  4322  000848  D002               	bra	i2u75_45
  4323  00084A  8846               	bsf	_botoes^0,4,c
  4324  00084C  D001               	bra	i2u75_47
  4325  00084E                     i2u75_45:
  4326  00084E  9846               	bcf	_botoes^0,4,c
  4327  000850                     i2u75_47:
  4328  000850                     
  4329                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  4330  000850  A681               	btfss	129,3,c	;volatile
  4331  000852  D002               	bra	i2u76_45
  4332  000854  8A46               	bsf	_botoes^0,5,c
  4333  000856  D001               	bra	i2u76_47
  4334  000858                     i2u76_45:
  4335  000858  9A46               	bcf	_botoes^0,5,c
  4336  00085A                     i2u76_47:
  4337  00085A                     
  4338                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  4339  00085A  9881               	bcf	129,4,c	;volatile
  4340  00085C  0012               	return		;funcret
  4341  00085E                     __end_of_le_entrada:
  4342                           	opt callstack 0
  4343                           
  4344                           	psect	rparam
  4345  0000                     
  4346                           	psect	temp
  4347  000052                     btemp:
  4348                           	opt callstack 0
  4349  000052                     	ds	1
  4350  0000                     int$flags	set	btemp
  4351  0000                     wtemp8	set	btemp+1
  4352  0000                     ttemp5	set	btemp+1
  4353  0000                     ttemp6	set	btemp+4
  4354  0000                     ttemp7	set	btemp+8
  4355                           tosu	equ	0xFFF
  4356                           tosh	equ	0xFFE
  4357                           tosl	equ	0xFFD
  4358                           stkptr	equ	0xFFC
  4359                           pclatu	equ	0xFFB
  4360                           pclath	equ	0xFFA
  4361                           pcl	equ	0xFF9
  4362                           tblptru	equ	0xFF8
  4363                           tblptrh	equ	0xFF7
  4364                           tblptrl	equ	0xFF6
  4365                           tablat	equ	0xFF5
  4366                           prodh	equ	0xFF4
  4367                           prodl	equ	0xFF3
  4368                           indf0	equ	0xFEF
  4369                           postinc0	equ	0xFEE
  4370                           postdec0	equ	0xFED
  4371                           preinc0	equ	0xFEC
  4372                           plusw0	equ	0xFEB
  4373                           fsr0h	equ	0xFEA
  4374                           fsr0l	equ	0xFE9
  4375                           wreg	equ	0xFE8
  4376                           indf1	equ	0xFE7
  4377                           postinc1	equ	0xFE6
  4378                           postdec1	equ	0xFE5
  4379                           preinc1	equ	0xFE4
  4380                           plusw1	equ	0xFE3
  4381                           fsr1h	equ	0xFE2
  4382                           fsr1l	equ	0xFE1
  4383                           bsr	equ	0xFE0
  4384                           indf2	equ	0xFDF
  4385                           postinc2	equ	0xFDE
  4386                           postdec2	equ	0xFDD
  4387                           preinc2	equ	0xFDC
  4388                           plusw2	equ	0xFDB
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8


Data Sizes:
    Strings     265
    Constant    0
    Data        3
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     61      81
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   50264
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   45856
                                             59 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8850
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                               19    17      2   10402
                                             40 COMRAM    19    17      2
                            ___awmod
                          _print_mat
                               _rand
                              _srand
                             _strcpy
                               _time
 ---------------------------------------------------------------------------------
 (3) _time                                                 8     0      8     120
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _srand                                                6     4      2      98
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    8806
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    8806
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8806
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    3744
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4964
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       ___awmod
         _rand (ARG)
           ___omul
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _rand
         ___omul
       _srand
         _time (ARG)
       _strcpy
       _time
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3D      51       1       64.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      91      15        0.0%
DATA                 0      0      91       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 16:36:03 2020

                              _x 0051                                _y 003F  
         ?_display_onoff_control 0004                               l61 0FE8  
                             l70 0CCA                               l46 10E2  
                             l55 1362                               l64 132C  
                             l58 0C0E                               l74 0CCA  
                             l82 0A58                               l77 106C  
                             l95 0E26                               _op 0040  
                    creditos@lcd 001A                      __CFG_OSC$HS 000000  
                            l202 121C                              l232 1142  
                            l226 066C                              l235 1150  
                            l243 0970                              l229 0686  
                            l263 0EA4                              l239 08D2  
                            l183 0EC6                              l264 0EC4  
                            l185 0F56                              l196 11AE  
                            l199 11BC                              l490 0D7A  
                            l922 13C0                              l931 12EC  
                            l925 0B34                              l935 1268  
                            u900 0EA4                              u901 0EA0  
                            u830 0C20                              u910 0E06  
                            u831 0C1C                              u911 0E02  
                            u840 0C76                              u920 0E26  
                            u841 0C72                              u921 0E22  
                            u850 0C98                              u930 12EC  
                            u851 0C94                              u931 12E8  
                            u860 0CBA                              u940 1230  
                            u861 0CB6                              u941 122C  
                            u870 0A4A                              u950 0B26  
                            u871 0A46                              u960 0CDE  
                            u961 0CDA                              u881 0E2E  
                            u970 0CF8                              u890 0E42  
                            u971 0CF4                              u891 0E3E  
                            u955 0B14                              u980 0D12  
                            u981 0D0E                              u990 0D30  
                            u991 0D2C                      finaliza@lcd 001A  
                            _lcd 004F                     ___awmod@sign 0028  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0001                     __CFG_WDT$OFF 000000  
                           l1601 0A06                             l1523 132E  
                           l1531 12F8                             l1611 0A4A  
                           l1603 0A10                             l1525 1338  
                           l1533 1310                             l1541 0C2C  
                           l1613 0A54                             l1605 0A1A  
                           l1701 0D72                             l1621 0E62  
                           l1527 1348                             l1535 1320  
                           l1551 0C76                             l1543 0C30  
                           l1607 0A24                             l1631 0D84  
                           l1623 0E74                             l1615 0E28  
                           l1711 08E0                             l1529 12EE  
                           l1561 0C86                             l1545 0C40  
                           l1537 0C10                             l1609 0A2E  
                           l1641 0DE6                             l1633 0D98  
                           l1625 0D7C                             l1617 0E34  
                           l1801 0282                             l1721 091C  
                           l1713 08F0                             l1705 085E  
                           l1563 0C98                             l1547 0C50  
                           l1539 0C20                             l1643 0DEA  
                           l1651 12BE                             l1619 0E42  
                           l1811 0314                             l1803 02B4  
                           l1731 095C                             l1715 0904  
                           l1723 0928                             l1707 08AE  
                           l1901 0B54                             l1573 0CA8  
                           l1549 0C64                             l1645 0E06  
                           l1661 1394                             l1653 121E  
                           l1821 03CA                             l1813 0346  
                           l1805 02EE                             l1741 004A  
                           l1725 0936                             l1717 0906  
                           l1709 08C2                             l1911 0BAC  
                           l1903 0B64                             l1575 0CBA  
                           l1591 09B8                             l1647 0E0A  
                           l1639 0DA0                             l1671 0CD0  
                           l1663 0A5A                             l1655 1230  
                           l1831 041A                             l1823 03CC  
                           l1815 039C                             l1807 02F6  
                           l1751 007E                             l1743 004E  
                           l1727 0946                             l1719 0908  
                           l1921 0F7A                             l1913 0BB8  
                           l1905 0B74                             l1593 09C2  
                           l1585 0972                             l1649 12AE  
                           l1681 0D00                             l1673 0CDE  
                           l1665 0AEE                             l1657 1258  
                           l1841 04C8                             l1833 044C  
                           l1825 03F0                             l1817 03A4  
                           l1809 0304                             l1761 00DC  
                           l1753 0092                             l1745 0056  
                           l1729 095A                             l1737 0962  
                           l1931 0FDC                             l1923 0F86  
                           l1915 0BF2                             l1907 0B80  
                           l1595 09EE                             l1587 0990  
                           l1691 0D46                             l1683 0D12  
                           l1675 0CE6                             l1851 0518  
                           l1843 04CA                             l1835 049A  
                           l1819 03C8                             l1827 03FC  
                           l1771 012E                             l1763 00FC  
                           l1755 00A6                             l1747 0056  
                           l1739 0012                             l1925 0F96  
                           l1941 1030                             l1933 0FEA  
                           l1917 0C02                             l1909 0B9C  
                           l1597 09F2                             l1589 09AE  
                           l1693 0D4E                             l1685 0D1A  
                           l1677 0CEA                             l1669 0CCC  
                           l1853 053C                             l1861 0570  
                           l1845 04EE                             l1837 04A2  
                           l1829 040A                             l1781 01B2  
                           l1765 0126                             l1757 00B6  
                           l1749 006A                             l1927 0FA2  
                           l1919 0F5C                             l1943 1050  
                           l1935 1008                             l1599 09FC  
                           l1695 0D54                             l1687 0D22  
                           l1679 0CF8                             l1871 05B6  
                           l1863 057E                             l1855 053E  
                           l1839 04C6                             l1847 04FA  
                           l1791 023C                             l1783 01CE  
                           l1759 00B8                             l1951 0EE2  
                           l1929 0FCC                             l1945 1060  
                           l1937 1014                             l1689 0D30  
                           l1697 0D5A                             l1881 0610  
                           l1865 058E                             l1857 0540  
                           l1849 0508                             l1793 0250  
                           l1785 01F8                             l1777 0136  
                           l1961 0F34                             l1953 0EF2  
                           l1939 1024                             l1891 1152  
                           l1699 0D6A                             l1883 0660  
                           l1867 05B2                             l1859 0564  
                           l1795 0262                             l1787 01FC  
                           l1779 01AE                             l1875 05DE  
                           l1963 0F46                             l1955 0F02  
                           l1947 0EC6                             l1971 108A  
                           l1893 11A2                             l1885 067A  
                           l1877 05EC                             l1869 05B4  
                           l1797 0274                             l1789 0218  
                           l1957 0F12                             l1949 0ED2  
                           l1981 10C0                             l1973 108C  
                           l1965 106E                             l1895 11BE  
                           l1887 10E6                             l1879 05FE  
                           l1799 0276                             l1959 0F24  
                           l1983 10D4                             l1975 108E  
                           l1967 1086                             l1897 120E  
                           l1889 1136                             l1985 10D6  
                           l1977 1090                             l1969 1088  
                           l1899 0B36                             l1979 10A8  
                           STR_1 7FCE                             STR_2 7FEE  
                           STR_3 7EF6                             STR_4 7EF6  
                           STR_5 7FBE                             STR_6 7EF6  
                           STR_7 7EF6                             STR_8 7EF6  
                           STR_9 7F28                             u1000 0D46  
                           u1001 0D42                             u1010 0D6A  
                           u1011 0D66                             u1100 0250  
                           u1020 08E0                             u1101 024C  
                           u1021 08DC                             u1110 0262  
                           u1030 08F0                             u1111 025E  
                           u1031 08EC                             u1200 041A  
                           u1120 0274                             u1040 0936  
                           u1201 0416                             u1121 0270  
                           u1041 0932                             u1210 044C  
                           u1130 02B4                             u1050 0946  
                           u1211 0448                             u1131 02B0  
                           u1051 0942                             u1300 067A  
                           u1220 049A                             u1140 02EE  
                           u1060 0970                             u1301 0676  
                           u1221 0496                             u1141 02EA  
                           u1061 096C                             u1310 1150  
                           u1230 0508                             u1150 0304  
                           u1070 00DC                             u1311 114C  
                           u1231 0504                             u1151 0300  
                           u1071 00D8                             u1320 11BC  
                           u1240 0518                             u1160 0314  
                           u1080 01CE                             u1321 11B8  
                           u1241 0514                             u1161 0310  
                           u1081 01CA                             u1250 057E  
                           u1170 0346                             u1090 0218  
                           u1330 0EE2                             u1251 057A  
                           u1171 0342                             u1091 0214  
                           u1331 0EDE                             u1260 058E  
                           u1180 039C                             u1340 0F02  
                           u1261 058A                             u1181 0398  
                           u1341 0EFE                             u1270 05EC  
                           u1190 040A                             u1350 0F24  
                           u1407 0BA2                             u1271 05E8  
                           u1191 0406                             u1351 0F20  
                           u1280 05FE                             u1360 0F46  
                           u1417 0BF8                             u1281 05FA  
                           u1361 0F42                             u1290 0610  
                           u1427 101A                             u1291 060C  
                           u1437 1056                             u1447 0F8C  
                           u1457 0FD2                             u1377 0C46  
                           u1467 133E                             u1387 1316  
                           u1477 1358                             u1397 0B6A  
                           i2l41 1390                             _main 106E  
                           _menu 085E                             _rand 0A5A  
                           _seed 0047                             _time 121E  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0052  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E            function_set@num_lines 0007  
                   print_mat@lcd 0010                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 0004  
                          ?_main 0001                            ?_menu 001A  
                          ?_rand 0019                            STR_10 7EF5  
                          STR_11 7EF5                            STR_12 7EF5  
                          STR_20 7F9E                            STR_21 7F4A  
                          STR_13 7F39                            STR_22 7F7D  
                          STR_14 7F17                            STR_23 7F5B  
                          STR_15 7F06                            STR_16 7EF5  
                          STR_24 7F6C                            STR_17 7FDE  
                          STR_18 7F8E                            STR_19 7FAE  
                __end_of___awmod 0D7C                            ?_time 0001  
                          _T0CON 000FD5                            i2l112 06C2  
                          i2l121 0732                            i2l130 079E  
                          i2l114 06B6                            i2l123 0726  
                          i2l132 0792                            i2l141 0802  
                          i2l118 06E6                            i2l127 0756  
                          i2l136 07C2                            i2l145 0832  
                          i2l139 080E                            i2l148 085C  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0001  
                __end_of_lcd_cmd 132E                  __end_of_goto_XY 0CCC  
                          _jogar 0012                            _srand 1394  
                          _pulso 132E                            tablat 000FF5  
                          time@t 0001                            ttemp5 0053  
                          ttemp6 0056                            ttemp7 005A  
                          status 000FD8                            wtemp8 0053  
                __initialization 126A                     __end_of_main 10E6  
                   __end_of_menu 0972                     __end_of_rand 0B36  
                   __end_of_time 126A                           ??_main 003E  
                         ??_menu 001C                           ??_rand 001B  
                         ??_time 0009                    __activetblptr 000002  
                         _ADCON1 000FC1                           ?_jogar 0029  
                         ?_srand 0009                           ?_pulso 0001  
                         i2l1321 06D0                           i2l1313 0688  
                         i2l1331 06F8                           i2l1323 06DE  
                         i2l1315 0698                           i2l1341 0740  
                         i2l1333 06FA                           i2l1317 06A6  
                         i2l1351 0774                           i2l1343 074E  
                         i2l1335 0708                           i2l1327 06F4  
                         i2l1319 06BA                           i2l1353 0782  
                         i2l1337 0716                           i2l1329 06F6  
                         i2l1371 07E4                           i2l1363 07D0  
                         i2l1355 0796                           i2l1347 0764  
                         i2l1339 072A                           i2l1373 07F2  
                         i2l1357 07AC                           i2l1365 07D2  
                         i2l1349 0766                           i2l1461 1366  
                         i2l1391 0850                           i2l1383 0840  
                         i2l1375 0806                           i2l1367 07D4  
                         i2l1359 07BA                           i2l1471 138C  
                         i2l1463 1374                           i2l1393 085A  
                         i2l1377 081C                           i2l1385 0842  
                         i2l1369 07D6                           i2l1465 1378  
                         i2l1387 0844                           i2l1379 082A  
                         i2l1467 137C                           i2l1389 0846  
                         i2l1469 137E                 __end_of_creditos 11BE  
               __end_of_finaliza 121E                      goto_XY@temp 000F  
                         ___omul 0E28                        ??___awmod 0027  
           __size_of_gerenciador 0096                           _cont_d 0043  
                         _cont_l 0042                           _cont_r 0041  
                         _cont_u 0044                           _botoes 0046  
                         clear_0 128E                           clear_1 129A  
                ___awmod@divisor 0025                  ___awmod@counter 0027  
                  ?_function_set 0004                        ??_lcd_cmd 0007  
                         _strcpy 12AE                           jogar@i 0034  
                         jogar@j 0038                        ??_goto_XY 000C  
                   __pdataCOMRAM 004F                     __mediumconst 7EF4  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                           srand@s 0009  
       display_onoff_control@lcd 0004                       __accesstop 0080  
        __end_of__initialization 12A0                    ___rparam_used 000001  
        ??_display_onoff_control 0009                   __pcstackCOMRAM 0001  
                  __end_of_jogar 0688                   gerenciador@lcd 003C  
                  __end_of_srand 13C2                    __end_of_pulso 1364  
                 ??_function_set 0009                          ??_jogar 002B  
                        ??_srand 000B             __size_of_int_handler 138C  
                        ??_pulso 0003                       __pbssBANK0 0080  
                        ?___omul 0001              ___omul@multiplicand 0009  
                        ?_strcpy 0001               __size_of_print_mat 00AC  
    entry_mode_set@display_shift 0007                          i2u51_40 0698  
                        i2u51_41 0694                          i2u60_40 0740  
                        i2u52_40 06A6                          i2u60_41 073C  
                        i2u52_41 06A2                          i2u61_40 074E  
                        i2u53_40 06B6                          i2u61_41 074A  
                        i2u53_41 06B2                          i2u70_40 07F2  
                        i2u62_40 0764                          i2u54_40 06D0  
                        i2u70_41 07EE                          i2u62_41 0760  
                        i2u54_41 06CC                          i2u71_40 0802  
                        i2u63_40 0774                          i2u55_40 06DE  
                        i2u71_41 07FE                          i2u63_41 0770  
                        i2u55_41 06DA                          i2u72_40 081C  
                        i2u64_40 0782                          i2u56_40 06F4  
                        i2u72_41 0818                          i2u64_41 077E  
                        i2u56_41 06F0                          i2u73_40 082A  
                        i2u65_40 0792                          i2u57_40 0708  
                        i2u81_40 1374                          i2u73_41 0826  
                        i2u65_41 078E                          i2u57_41 0704  
                        i2u81_41 1370                          i2u74_40 0840  
                        i2u66_40 07AC                          i2u58_40 0716  
                        i2u82_40 138C                          i2u74_41 083C  
                        i2u66_41 07A8                          i2u58_41 0712  
                        i2u82_41 1388                          i2u67_40 07BA  
                        i2u59_40 0726                          i2u67_41 07B6  
                        i2u59_41 0722                          i2u75_45 084E  
                        i2u75_47 0850                          i2u68_40 07D0  
                        i2u68_41 07CC                          i2u76_45 0858  
                        i2u76_47 085A                          i2u69_40 07E4  
                        i2u69_41 07E0                        ?_creditos 001A  
                     _le_entrada 0688                        ?_finaliza 001A  
                     _botoes_ant 0045          __size_of_entry_mode_set 0084  
                        __Hparam 0000   display_onoff_control@cursor_on 0007  
                        __Lparam 0000                          ___awmod 0CCC  
                __size_of___omul 009E                          __pcinit 126A  
                        __ramtop 0600                    instrucoes@lcd 001A  
                        __ptext0 106E                          __ptext1 0EC6  
                        __ptext2 085E                          __ptext3 0012  
                        __ptext4 121E                          __ptext5 1394  
                        __ptext6 0A5A                          __ptext7 0E28  
                        __ptext8 0CCC                          __ptext9 10E6  
                        _lcd_cmd 12EE                        _T0CONbits 000FD5  
                __size_of_strcpy 0040                          _goto_XY 0C10  
               ___awmod@dividend 0023                       ??_creditos 001C  
                     ??_finaliza 001C                   __pintcode_body 1364  
           end_of_initialization 12A0                       _instrucoes 10E6  
                        menu@lcd 001A                   ___omul@product 0011  
           __end_of_function_set 0C10                    __Lmediumconst 7EF4  
                        int_func 1364                __end_of_print_mat 0E28  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE                          strcpy@d 0007  
                        strcpy@s 0005                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0004                      ?_le_entrada 0001  
                  ??_gerenciador 003E   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 0FEA                   __end_of___omul 0EC6  
                     _write_char 0972                    __pidataCOMRAM 13C2  
                 __end_of_strcpy 12EE              start_initialization 126A  
                     jogar@i_485 003A                      ?_instrucoes 001A  
                     jogar@bateu 0036                ___omul@multiplier 0001  
                     jogar@score 0033                   _entry_mode_set 0FEA  
                     goto_XY@lcd 0008                         ??___omul 0011  
            __size_of_le_entrada 01D6              __end_of_gerenciador 0F5C  
                       ??_strcpy 0005                      __pbssCOMRAM 003E  
                  ??_int_handler 0001            __size_of_function_set 00DA  
              __size_of_creditos 006C                __size_of_finaliza 0060  
         __end_of_entry_mode_set 106E                        __pintcode 0008  
                  __pmediumconst 7EF4                         ?___awmod 0023  
                    ?_write_char 0001              __size_of_instrucoes 006C  
                       ?_lcd_cmd 0004                     _function_set 0B36  
                       ?_goto_XY 0008                   __size_of_jogar 0676  
                 __size_of_srand 002E                   __size_of_pulso 0036  
            __end_of_int_handler 1394                  ?_entry_mode_set 0004  
                    _gerenciador 0EC6     entry_mode_set@move_direction 0006  
                      _print_mat 0D7C  display_onoff_control@display_on 0006  
     display_onoff_control@blink 0008                      write_char@c 0003  
                     print_mat@i 0018                       print_mat@j 0016  
                   ??_le_entrada 0001              __size_of_write_char 00E8  
                       __Hrparam 0000                         __Lrparam 0000  
              entry_mode_set@lcd 0004                 __size_of___awmod 00B0  
                     ?_print_mat 0010               __end_of_le_entrada 085E  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 11BE  
                       __ptext11 1152                         __ptext20 132E  
                       __ptext12 12AE                         __ptext13 0D7C  
                       __ptext22 0688                         __ptext14 0972  
                       __ptext15 0C10                         __ptext16 12EE  
                       __ptext17 0B36                         __ptext18 0FEA  
                       __ptext19 0F5C                         _creditos 1152  
                       _finaliza 11BE                         _contador 003E  
                   ??_instrucoes 001C                       strcpy@dest 0001  
                       _mat_disp 0080                    __size_of_main 0078  
                  __size_of_menu 0114                    __size_of_rand 00DC  
                  __size_of_time 004C                         int$flags 0052  
                       lcd_cmd@a 0006            _display_onoff_control 0F5C  
             __end_of_instrucoes 1152                       _INTCONbits 000FF2  
                       jogar@lcd 0029                         goto_XY@a 000E  
                       goto_XY@x 000A                         goto_XY@y 000B  
                       goto_XY@z 000D                         intlevel2 0000  
                      strcpy@src 0003          function_set@data_lenght 0006  
                    ??_print_mat 0012                     ??_write_char 0004  
                       pulso@lcd 0001                 ??_entry_mode_set 0008  
          function_set@char_font 0008               __end_of_write_char 0A5A  
                   ?_gerenciador 003C  
