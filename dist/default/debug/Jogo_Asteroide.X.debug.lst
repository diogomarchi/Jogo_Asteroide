

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 10 15:09:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  000702                     __pidataCOMRAM:
    67                           	opt callstack 0
    68                           
    69                           ;initializer for instrucoes@F3089
    70  000702  32                 	db	50
    71  000703  2E                 	db	46
    72  000704  45                 	db	69
    73  000705  53                 	db	83
    74  000706  43                 	db	67
    75  000707  41                 	db	65
    76  000708  50                 	db	80
    77  000709  45                 	db	69
    78  00070A  20                 	db	32
    79  00070B  56                 	db	86
    80  00070C  4F                 	db	79
    81  00070D  4C                 	db	76
    82  00070E  54                 	db	84
    83  00070F  41                 	db	65
    84  000710  00                 	db	0
    85  000711  00                 	db	0
    86                           
    87                           ;initializer for instrucoes@F3086
    88  000712  4E                 	db	78
    89  000713  41                 	db	65
    90  000714  56                 	db	86
    91  000715  45                 	db	69
    92  000716  00                 	db	0
    93  000717  00                 	db	0
    94  000718  00                 	db	0
    95  000719  00                 	db	0
    96  00071A  00                 	db	0
    97  00071B  00                 	db	0
    98  00071C  00                 	db	0
    99  00071D  00                 	db	0
   100  00071E  00                 	db	0
   101  00071F  00                 	db	0
   102  000720  00                 	db	0
   103  000721  00                 	db	0
   104                           
   105                           ;initializer for instrucoes@F3083
   106  000722  31                 	db	49
   107  000723  2E                 	db	46
   108  000724  53                 	db	83
   109  000725  45                 	db	69
   110  000726  54                 	db	84
   111  000727  41                 	db	65
   112  000728  53                 	db	83
   113  000729  20                 	db	32
   114  00072A  4D                 	db	77
   115  00072B  4F                 	db	79
   116  00072C  56                 	db	86
   117  00072D  45                 	db	69
   118  00072E  4D                 	db	77
   119  00072F  20                 	db	32
   120  000730  41                 	db	65
   121  000731  00                 	db	0
   122                           
   123                           ;initializer for creditos@F3059
   124  000732  32                 	db	50
   125  000733  2E                 	db	46
   126  000734  47                 	db	71
   127  000735  45                 	db	69
   128  000736  4F                 	db	79
   129  000737  52                 	db	82
   130  000738  47                 	db	71
   131  000739  45                 	db	69
   132  00073A  20                 	db	32
   133  00073B  4E                 	db	78
   134  00073C  41                 	db	65
   135  00073D  52                 	db	82
   136  00073E  44                 	db	68
   137  00073F  45                 	db	69
   138  000740  53                 	db	83
   139  000741  00                 	db	0
   140                           
   141                           ;initializer for creditos@F3056
   142  000742  31                 	db	49
   143  000743  2E                 	db	46
   144  000744  44                 	db	68
   145  000745  49                 	db	73
   146  000746  4F                 	db	79
   147  000747  47                 	db	71
   148  000748  4F                 	db	79
   149  000749  20                 	db	32
   150  00074A  4D                 	db	77
   151  00074B  41                 	db	65
   152  00074C  52                 	db	82
   153  00074D  43                 	db	67
   154  00074E  48                 	db	72
   155  00074F  49                 	db	73
   156  000750  00                 	db	0
   157  000751  00                 	db	0
   158                           
   159                           ;initializer for _controle
   160  000752  01                 	db	1
   161                           
   162                           	psect	idataBANK0
   163  000753                     __pidataBANK0:
   164                           	opt callstack 0
   165                           
   166                           ;initializer for menu@F3110
   167  000753  34                 	db	52
   168  000754  2E                 	db	46
   169  000755  46                 	db	70
   170  000756  49                 	db	73
   171  000757  4E                 	db	78
   172  000758  41                 	db	65
   173  000759  4C                 	db	76
   174  00075A  49                 	db	73
   175  00075B  5A                 	db	90
   176  00075C  41                 	db	65
   177  00075D  52                 	db	82
   178  00075E  00                 	db	0
   179  00075F  00                 	db	0
   180  000760  00                 	db	0
   181  000761  00                 	db	0
   182  000762  00                 	db	0
   183                           
   184                           ;initializer for menu@F3107
   185  000763  33                 	db	51
   186  000764  2E                 	db	46
   187  000765  43                 	db	67
   188  000766  52                 	db	82
   189  000767  45                 	db	69
   190  000768  44                 	db	68
   191  000769  49                 	db	73
   192  00076A  54                 	db	84
   193  00076B  4F                 	db	79
   194  00076C  53                 	db	83
   195  00076D  00                 	db	0
   196  00076E  00                 	db	0
   197  00076F  00                 	db	0
   198  000770  00                 	db	0
   199  000771  00                 	db	0
   200  000772  00                 	db	0
   201                           
   202                           ;initializer for menu@F3104
   203  000773  32                 	db	50
   204  000774  2E                 	db	46
   205  000775  49                 	db	73
   206  000776  4E                 	db	78
   207  000777  53                 	db	83
   208  000778  54                 	db	84
   209  000779  52                 	db	82
   210  00077A  55                 	db	85
   211  00077B  43                 	db	67
   212  00077C  4F                 	db	79
   213  00077D  45                 	db	69
   214  00077E  53                 	db	83
   215  00077F  00                 	db	0
   216  000780  00                 	db	0
   217  000781  00                 	db	0
   218  000782  00                 	db	0
   219                           
   220                           ;initializer for menu@F3101
   221  000783  31                 	db	49
   222  000784  2E                 	db	46
   223  000785  4A                 	db	74
   224  000786  4F                 	db	79
   225  000787  47                 	db	71
   226  000788  41                 	db	65
   227  000789  52                 	db	82
   228  00078A  00                 	db	0
   229  00078B  00                 	db	0
   230  00078C  00                 	db	0
   231  00078D  00                 	db	0
   232  00078E  00                 	db	0
   233  00078F  00                 	db	0
   234  000790  00                 	db	0
   235  000791  00                 	db	0
   236  000792  00                 	db	0
   237                           
   238                           ;initializer for instrucoes@F3092
   239  000793  50                 	db	80
   240  000794  52                 	db	82
   241  000795  4F                 	db	79
   242  000796  20                 	db	32
   243  000797  4D                 	db	77
   244  000798  45                 	db	69
   245  000799  4E                 	db	78
   246  00079A  55                 	db	85
   247  00079B  00                 	db	0
   248  00079C  00                 	db	0
   249  00079D  00                 	db	0
   250  00079E  00                 	db	0
   251  00079F  00                 	db	0
   252  0007A0  00                 	db	0
   253  0007A1  00                 	db	0
   254  0007A2  00                 	db	0
   255                           
   256                           	psect	nvCOMRAM
   257  00006A                     __pnvCOMRAM:
   258                           	opt callstack 0
   259  00006A                     _lcd:
   260                           	opt callstack 0
   261  00006A                     	ds	2
   262  0000                     _TMR0	set	4054
   263  0000                     _T0CONbits	set	4053
   264  0000                     _T0CON	set	4053
   265  0000                     _TRISD	set	3989
   266  0000                     _PORTB	set	3969
   267  0000                     _TRISB	set	3987
   268  0000                     _ADCON1	set	4033
   269  0000                     _PORTBbits	set	3969
   270  0000                     _INTCONbits	set	4082
   271  0000                     _PORTD	set	3971
   272                           
   273                           ; #config settings
   274  0000                     
   275                           	psect	cinit
   276  0007A4                     __pcinit:
   277                           	opt callstack 0
   278  0007A4                     start_initialization:
   279                           	opt callstack 0
   280  0007A4                     __initialization:
   281                           	opt callstack 0
   282                           
   283                           ; Initialize objects allocated to BANK0 (80 bytes)
   284                           ; load TBLPTR registers with __pidataBANK0
   285  0007A4  0E53               	movlw	low __pidataBANK0
   286  0007A6  6EF6               	movwf	tblptrl,c
   287  0007A8  0E07               	movlw	high __pidataBANK0
   288  0007AA  6EF7               	movwf	tblptrh,c
   289  0007AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   290  0007AE  6EF8               	movwf	tblptru,c
   291  0007B0  EE00  F080         	lfsr	0,__pdataBANK0
   292  0007B4  EE10 F050          	lfsr	1,80
   293  0007B8                     copy_data0:
   294  0007B8  0009               	tblrd		*+
   295  0007BA  CFF5 FFEE          	movff	tablat,postinc0
   296  0007BE  50E5               	movf	postdec1,w,c
   297  0007C0  50E1               	movf	fsr1l,w,c
   298  0007C2  E1FA               	bnz	copy_data0
   299                           
   300                           ; Initialize objects allocated to COMRAM (81 bytes)
   301                           ; load TBLPTR registers with __pidataCOMRAM
   302  0007C4  0E02               	movlw	low __pidataCOMRAM
   303  0007C6  6EF6               	movwf	tblptrl,c
   304  0007C8  0E07               	movlw	high __pidataCOMRAM
   305  0007CA  6EF7               	movwf	tblptrh,c
   306  0007CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   307  0007CE  6EF8               	movwf	tblptru,c
   308  0007D0  EE00  F001         	lfsr	0,__pdataCOMRAM
   309  0007D4  EE10 F051          	lfsr	1,81
   310  0007D8                     copy_data1:
   311  0007D8  0009               	tblrd		*+
   312  0007DA  CFF5 FFEE          	movff	tablat,postinc0
   313  0007DE  50E5               	movf	postdec1,w,c
   314  0007E0  50E1               	movf	fsr1l,w,c
   315  0007E2  E1FA               	bnz	copy_data1
   316  0007E4                     end_of_initialization:
   317                           	opt callstack 0
   318  0007E4                     __end_of__initialization:
   319                           	opt callstack 0
   320  0007E4  906C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321  0007E6  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322  0007E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   323  0007EA  6EF8               	movwf	tblptru,c
   324  0007EC  0100               	movlb	0
   325  0007EE  EF21  F002         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	dataCOMRAM
   328  000001                     __pdataCOMRAM:
   329                           	opt callstack 0
   330  000001                     instrucoes@F3089:
   331                           	opt callstack 0
   332  000001                     	ds	16
   333  000011                     instrucoes@F3086:
   334                           	opt callstack 0
   335  000011                     	ds	16
   336  000021                     instrucoes@F3083:
   337                           	opt callstack 0
   338  000021                     	ds	16
   339  000031                     creditos@F3059:
   340                           	opt callstack 0
   341  000031                     	ds	16
   342  000041                     creditos@F3056:
   343                           	opt callstack 0
   344  000041                     	ds	16
   345  000051                     _controle:
   346                           	opt callstack 0
   347  000051                     	ds	1
   348                           
   349                           	psect	dataBANK0
   350  000080                     __pdataBANK0:
   351                           	opt callstack 0
   352  000080                     menu@F3110:
   353                           	opt callstack 0
   354  000080                     	ds	16
   355  000090                     menu@F3107:
   356                           	opt callstack 0
   357  000090                     	ds	16
   358  0000A0                     menu@F3104:
   359                           	opt callstack 0
   360  0000A0                     	ds	16
   361  0000B0                     menu@F3101:
   362                           	opt callstack 0
   363  0000B0                     	ds	16
   364  0000C0                     instrucoes@F3092:
   365                           	opt callstack 0
   366  0000C0                     	ds	16
   367                           
   368                           	psect	cstackBANK0
   369  0000D0                     __pcstackBANK0:
   370                           	opt callstack 0
   371  0000D0                     function_set@lcd:
   372                           	opt callstack 0
   373  0000D0                     display_onoff_control@lcd:
   374                           	opt callstack 0
   375  0000D0                     entry_mode_set@lcd:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x0
   379  0000D0                     	ds	2
   380  0000D2                     function_set@data_lenght:
   381                           	opt callstack 0
   382  0000D2                     display_onoff_control@display_on:
   383                           	opt callstack 0
   384  0000D2                     entry_mode_set@move_direction:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x2
   388  0000D2                     	ds	1
   389  0000D3                     function_set@num_lines:
   390                           	opt callstack 0
   391  0000D3                     display_onoff_control@cursor_on:
   392                           	opt callstack 0
   393  0000D3                     entry_mode_set@display_shift:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0x3
   397  0000D3                     	ds	1
   398  0000D4                     function_set@char_font:
   399                           	opt callstack 0
   400  0000D4                     display_onoff_control@blink:
   401                           	opt callstack 0
   402                           
   403                           ; 1 bytes @ 0x4
   404  0000D4                     	ds	1
   405  0000D5                     ??_function_set:
   406                           
   407                           ; 1 bytes @ 0x5
   408  0000D5                     	ds	3
   409  0000D8                     ??_main:
   410                           
   411                           ; 1 bytes @ 0x8
   412  0000D8                     	ds	2
   413                           
   414                           	psect	cstackCOMRAM
   415  000052                     __pcstackCOMRAM:
   416                           	opt callstack 0
   417  000052                     i2pulso@lcd:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421  000052                     	ds	2
   422  000054                     ??i2_pulso:
   423                           
   424                           ; 1 bytes @ 0x2
   425  000054                     	ds	1
   426  000055                     lcd_cmd@lcd:
   427                           	opt callstack 0
   428  000055                     write_char@lcd:
   429                           	opt callstack 0
   430  000055                     clear_display@lcd:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x3
   434  000055                     	ds	2
   435  000057                     ??_clear_display:
   436  000057                     lcd_cmd@a:
   437                           	opt callstack 0
   438  000057                     write_char@c:
   439                           	opt callstack 0
   440                           
   441                           ; 1 bytes @ 0x5
   442  000057                     	ds	1
   443  000058                     ??_write_char:
   444  000058                     ??_lcd_cmd:
   445                           
   446                           ; 1 bytes @ 0x6
   447  000058                     	ds	1
   448  000059                     goto_XY@lcd:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x7
   452  000059                     	ds	2
   453  00005B                     goto_XY@x:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x9
   457  00005B                     	ds	1
   458  00005C                     goto_XY@y:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0xA
   462  00005C                     	ds	1
   463  00005D                     ??_goto_XY:
   464                           
   465                           ; 1 bytes @ 0xB
   466  00005D                     	ds	1
   467  00005E                     goto_XY@z:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0xC
   471  00005E                     	ds	1
   472  00005F                     goto_XY@a:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0xD
   476  00005F                     	ds	1
   477  000060                     goto_XY@temp:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0xE
   481  000060                     	ds	1
   482  000061                     ??_le_entrada:
   483                           
   484                           ; 1 bytes @ 0xF
   485  000061                     	ds	2
   486  000063                     ??_int_handler:
   487                           
   488                           ; 1 bytes @ 0x11
   489  000063                     	ds	2
   490  000065                     pulso@lcd:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x13
   494  000065                     	ds	2
   495  000067                     ??_pulso:
   496                           
   497                           ; 1 bytes @ 0x15
   498  000067                     	ds	1
   499  000068                     ??_display_onoff_control:
   500  000068                     ??_entry_mode_set:
   501                           
   502                           ; 1 bytes @ 0x16
   503  000068                     	ds	2
   504                           
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 34 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   524 ;;      Params:         0       0       0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0       0       0
   526 ;;      Temps:          0       2       0       0       0       0       0
   527 ;;      Totals:         0       2       0       0       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels required when called:    7
   530 ;; This function calls:
   531 ;;		_display_onoff_control
   532 ;;		_entry_mode_set
   533 ;;		_function_set
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540  000442                     __ptext0:
   541                           	opt callstack 0
   542  000442                     _main:
   543                           	opt callstack 24
   544  000442                     
   545                           ;main.c: 35:     ADCON1 = 0x0F;
   546  000442  0E0F               	movlw	15
   547  000444  6EC1               	movwf	193,c	;volatile
   548                           
   549                           ;main.c: 36:     TRISB = 0xF0;
   550  000446  0EF0               	movlw	240
   551  000448  6E93               	movwf	147,c	;volatile
   552                           
   553                           ;main.c: 37:     PORTB = 0xF0;
   554  00044A  0EF0               	movlw	240
   555  00044C  6E81               	movwf	129,c	;volatile
   556                           
   557                           ;main.c: 38:     TRISD = 0x00;
   558  00044E  0E00               	movlw	0
   559  000450  6E95               	movwf	149,c	;volatile
   560  000452                     
   561                           ;main.c: 41:     INTCONbits.INT0IF = 0;
   562  000452  92F2               	bcf	242,1,c	;volatile
   563  000454                     
   564                           ;main.c: 42:     INTCONbits.INT0IE = 1;
   565  000454  88F2               	bsf	242,4,c	;volatile
   566                           
   567                           ;main.c: 44:     T0CON = 0x07;
   568  000456  0E07               	movlw	7
   569  000458  6ED5               	movwf	213,c	;volatile
   570                           
   571                           ;main.c: 45:     TMR0 = 0xC2F7;
   572  00045A  0EC2               	movlw	194
   573  00045C  6ED7               	movwf	215,c	;volatile
   574  00045E  0EF7               	movlw	247
   575  000460  6ED6               	movwf	214,c	;volatile
   576  000462                     
   577                           ;main.c: 48:     INTCONbits.TMR0IE = 1;
   578  000462  8AF2               	bsf	242,5,c	;volatile
   579  000464                     
   580                           ;main.c: 49:     INTCONbits.GIE = 1;
   581  000464  8EF2               	bsf	242,7,c	;volatile
   582  000466                     
   583                           ;main.c: 51:     lcd = &PORTD;
   584  000466  0E83               	movlw	131
   585  000468  6E6A               	movwf	_lcd^0,c
   586  00046A  0E0F               	movlw	15
   587  00046C  6E6B               	movwf	(_lcd+1)^0,c
   588  00046E                     
   589                           ;main.c: 53:     function_set(lcd, 0, 1, 0);
   590  00046E  C06A  F0D0         	movff	_lcd,function_set@lcd
   591  000472  C06B  F0D1         	movff	_lcd+1,function_set@lcd+1
   592  000476  0E00               	movlw	0
   593  000478  0100               	movlb	0	; () banked
   594  00047A  6FD2               	movwf	function_set@data_lenght& (0+255),b
   595  00047C  0E01               	movlw	1
   596  00047E  6FD3               	movwf	function_set@num_lines& (0+255),b
   597  000480  0E00               	movlw	0
   598  000482  6FD4               	movwf	function_set@char_font& (0+255),b
   599  000484  EC50  F001         	call	_function_set	;wreg free
   600  000488                     
   601                           ;main.c: 54:     display_onoff_control(lcd, 1, 1, 0);
   602  000488  C06A  F0D0         	movff	_lcd,display_onoff_control@lcd
   603  00048C  C06B  F0D1         	movff	_lcd+1,display_onoff_control@lcd+1
   604  000490  0E01               	movlw	1
   605  000492  0100               	movlb	0	; () banked
   606  000494  6FD2               	movwf	display_onoff_control@display_on& (0+255),b
   607  000496  0E01               	movlw	1
   608  000498  6FD3               	movwf	display_onoff_control@cursor_on& (0+255),b
   609  00049A  0E00               	movlw	0
   610  00049C  6FD4               	movwf	display_onoff_control@blink& (0+255),b
   611  00049E  ECBA  F002         	call	_display_onoff_control	;wreg free
   612  0004A2                     
   613                           ;main.c: 55:     entry_mode_set(lcd, 1,0);
   614  0004A2  C06A  F0D0         	movff	_lcd,entry_mode_set@lcd
   615  0004A6  C06B  F0D1         	movff	_lcd+1,entry_mode_set@lcd+1
   616  0004AA  0E01               	movlw	1
   617  0004AC  0100               	movlb	0	; () banked
   618  0004AE  6FD2               	movwf	entry_mode_set@move_direction& (0+255),b
   619  0004B0  0E00               	movlw	0
   620  0004B2  6FD3               	movwf	entry_mode_set@display_shift& (0+255),b
   621  0004B4  EC03  F003         	call	_entry_mode_set	;wreg free
   622  0004B8                     
   623                           ;main.c: 58:     T0CONbits.TMR0ON = 1;
   624  0004B8  8ED5               	bsf	213,7,c	;volatile
   625  0004BA                     
   626                           ;main.c: 59:      _delay((unsigned long)((1000)*(16000000/4000.0)));
   627  0004BA  0E15               	movlw	21
   628  0004BC  0100               	movlb	0	; () banked
   629  0004BE  6FD9               	movwf	(??_main+1)& (0+255),b
   630  0004C0  0E4B               	movlw	75
   631  0004C2  6FD8               	movwf	??_main& (0+255),b
   632  0004C4  0EBE               	movlw	190
   633  0004C6                     u927:
   634  0004C6  2EE8               	decfsz	wreg,f,c
   635  0004C8  D7FE               	bra	u927
   636  0004CA  2FD8               	decfsz	??_main& (0+255),f,b
   637  0004CC  D7FC               	bra	u927
   638  0004CE  2FD9               	decfsz	(??_main+1)& (0+255),f,b
   639  0004D0  D7FA               	bra	u927
   640  0004D2  F000               	nop	
   641  0004D4                     l45:
   642  0004D4  EF6A  F002         	goto	l45
   643  0004D8  EF07  F000         	goto	start
   644  0004DC                     __end_of_main:
   645                           	opt callstack 0
   646                           
   647 ;; *************** function _function_set *****************
   648 ;; Defined at:
   649 ;;		line 22 in file "lcd.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  lcd             2    0[BANK0 ] PTR struct .
   652 ;;		 -> NULL(0), PORTD(1), 
   653 ;;  data_lenght     1    2[BANK0 ] unsigned char 
   654 ;;  num_lines       1    3[BANK0 ] unsigned char 
   655 ;;  char_font       1    4[BANK0 ] unsigned char 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   667 ;;      Params:         0       5       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0
   669 ;;      Temps:          0       3       0       0       0       0       0
   670 ;;      Totals:         0       8       0       0       0       0       0
   671 ;;Total ram usage:        8 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    6
   674 ;; This function calls:
   675 ;;		_pulso
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text1
   682  0002A0                     __ptext1:
   683                           	opt callstack 0
   684  0002A0                     _function_set:
   685                           	opt callstack 24
   686  0002A0                     
   687                           ;lcd.c: 22: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 23:         
      +                          char num_lines, char char_font){;lcd.c: 24:     lcd->E = 0;
   688  0002A0  C0D0  FFD9         	movff	function_set@lcd,fsr2l
   689  0002A4  C0D1  FFDA         	movff	function_set@lcd+1,fsr2h
   690  0002A8  0100               	movlb	0	; () banked
   691  0002AA  94DF               	bcf	indf2,2,c
   692                           
   693                           ;lcd.c: 25:     lcd->RS = 0;
   694  0002AC  C0D0  FFD9         	movff	function_set@lcd,fsr2l
   695  0002B0  C0D1  FFDA         	movff	function_set@lcd+1,fsr2h
   696  0002B4  90DF               	bcf	indf2,0,c
   697                           
   698                           ;lcd.c: 26:     lcd->R_W = 0;
   699  0002B6  C0D0  FFD9         	movff	function_set@lcd,fsr2l
   700  0002BA  C0D1  FFDA         	movff	function_set@lcd+1,fsr2h
   701  0002BE  92DF               	bcf	indf2,1,c
   702  0002C0                     
   703                           ; BSR set to: 0
   704                           ;lcd.c: 29:     lcd->data = 0x02;
   705  0002C0  C0D0  FFD9         	movff	function_set@lcd,fsr2l
   706  0002C4  C0D1  FFDA         	movff	function_set@lcd+1,fsr2h
   707  0002C8  50DF               	movf	223,w,c
   708  0002CA  0B0F               	andlw	-241
   709  0002CC  0920               	iorlw	32
   710  0002CE  6EDF               	movwf	223,c
   711  0002D0                     
   712                           ; BSR set to: 0
   713                           ;lcd.c: 30:     _delay((unsigned long)((1)*(16000000/4000.0)));
   714  0002D0  0E06               	movlw	6
   715  0002D2  0100               	movlb	0	; () banked
   716  0002D4  6FD5               	movwf	??_function_set& (0+255),b
   717  0002D6  0E30               	movlw	48
   718  0002D8                     u937:
   719  0002D8  2EE8               	decfsz	wreg,f,c
   720  0002DA  D7FE               	bra	u937
   721  0002DC  2FD5               	decfsz	??_function_set& (0+255),f,b
   722  0002DE  D7FC               	bra	u937
   723  0002E0  F000               	nop	
   724  0002E2                     
   725                           ;lcd.c: 32:     pulso(lcd);
   726  0002E2  C0D0  F065         	movff	function_set@lcd,pulso@lcd
   727  0002E6  C0D1  F066         	movff	function_set@lcd+1,pulso@lcd+1
   728  0002EA  ECF9  F003         	call	_pulso	;wreg free
   729  0002EE                     
   730                           ;lcd.c: 35:     lcd->data = 0x02|data_lenght;
   731  0002EE  C0D2  F0D5         	movff	function_set@data_lenght,??_function_set
   732  0002F2  0E02               	movlw	2
   733  0002F4  0100               	movlb	0	; () banked
   734  0002F6  13D5               	iorwf	??_function_set& (0+255),f,b
   735  0002F8  C0D0  FFD9         	movff	function_set@lcd,fsr2l
   736  0002FC  C0D1  FFDA         	movff	function_set@lcd+1,fsr2h
   737  000300  3BD5               	swapf	??_function_set& (0+255),f,b
   738  000302  50DF               	movf	223,w,c
   739  000304  19D5               	xorwf	??_function_set& (0+255),w,b
   740  000306  0B0F               	andlw	-241
   741  000308  19D5               	xorwf	??_function_set& (0+255),w,b
   742  00030A  6EDF               	movwf	223,c
   743  00030C                     
   744                           ; BSR set to: 0
   745                           ;lcd.c: 36:     _delay((unsigned long)((1)*(16000000/4000.0)));
   746  00030C  0E06               	movlw	6
   747  00030E  0100               	movlb	0	; () banked
   748  000310  6FD5               	movwf	??_function_set& (0+255),b
   749  000312  0E30               	movlw	48
   750  000314                     u947:
   751  000314  2EE8               	decfsz	wreg,f,c
   752  000316  D7FE               	bra	u947
   753  000318  2FD5               	decfsz	??_function_set& (0+255),f,b
   754  00031A  D7FC               	bra	u947
   755  00031C  F000               	nop	
   756  00031E                     
   757                           ;lcd.c: 38:     pulso(lcd);
   758  00031E  C0D0  F065         	movff	function_set@lcd,pulso@lcd
   759  000322  C0D1  F066         	movff	function_set@lcd+1,pulso@lcd+1
   760  000326  ECF9  F003         	call	_pulso	;wreg free
   761  00032A                     
   762                           ;lcd.c: 42:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
   763  00032A  C0D0  FFD9         	movff	function_set@lcd,fsr2l
   764  00032E  C0D1  FFDA         	movff	function_set@lcd+1,fsr2h
   765  000332  0100               	movlb	0	; () banked
   766  000334  38DF               	swapf	223,w,c
   767  000336  0B0F               	andlw	15
   768  000338  6FD5               	movwf	??_function_set& (0+255),b
   769  00033A  C0D4  F0D6         	movff	function_set@char_font,??_function_set+1
   770  00033E  90D8               	bcf	status,0,c
   771  000340  37D6               	rlcf	(??_function_set+1)& (0+255),f,b
   772  000342  90D8               	bcf	status,0,c
   773  000344  37D6               	rlcf	(??_function_set+1)& (0+255),f,b
   774  000346  39D3               	swapf	function_set@num_lines& (0+255),w,b
   775  000348  42E8               	rrncf	wreg,f,c
   776  00034A  0BF8               	andlw	248
   777  00034C  11D6               	iorwf	(??_function_set+1)& (0+255),w,b
   778  00034E  11D5               	iorwf	??_function_set& (0+255),w,b
   779  000350  6FD7               	movwf	(??_function_set+2)& (0+255),b
   780  000352  C0D0  FFD9         	movff	function_set@lcd,fsr2l
   781  000356  C0D1  FFDA         	movff	function_set@lcd+1,fsr2h
   782  00035A  3BD7               	swapf	(??_function_set+2)& (0+255),f,b
   783  00035C  50DF               	movf	223,w,c
   784  00035E  19D7               	xorwf	(??_function_set+2)& (0+255),w,b
   785  000360  0B0F               	andlw	-241
   786  000362  19D7               	xorwf	(??_function_set+2)& (0+255),w,b
   787  000364  6EDF               	movwf	223,c
   788  000366                     
   789                           ; BSR set to: 0
   790                           ;lcd.c: 43:     _delay((unsigned long)((1)*(16000000/4000.0)));
   791  000366  0E06               	movlw	6
   792  000368  0100               	movlb	0	; () banked
   793  00036A  6FD5               	movwf	??_function_set& (0+255),b
   794  00036C  0E30               	movlw	48
   795  00036E                     u957:
   796  00036E  2EE8               	decfsz	wreg,f,c
   797  000370  D7FE               	bra	u957
   798  000372  2FD5               	decfsz	??_function_set& (0+255),f,b
   799  000374  D7FC               	bra	u957
   800  000376  F000               	nop	
   801  000378                     
   802                           ;lcd.c: 45:     pulso(lcd);
   803  000378  C0D0  F065         	movff	function_set@lcd,pulso@lcd
   804  00037C  C0D1  F066         	movff	function_set@lcd+1,pulso@lcd+1
   805  000380  ECF9  F003         	call	_pulso	;wreg free
   806  000384  0012               	return		;funcret
   807  000386                     __end_of_function_set:
   808                           	opt callstack 0
   809                           
   810 ;; *************** function _entry_mode_set *****************
   811 ;; Defined at:
   812 ;;		line 120 in file "lcd.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  lcd             2    0[BANK0 ] PTR struct .
   815 ;;		 -> NULL(0), PORTD(1), 
   816 ;;  move_directi    1    2[BANK0 ] unsigned char 
   817 ;;  display_shif    1    3[BANK0 ] unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   829 ;;      Params:         0       4       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0
   831 ;;      Temps:          1       0       0       0       0       0       0
   832 ;;      Totals:         1       4       0       0       0       0       0
   833 ;;Total ram usage:        5 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    6
   836 ;; This function calls:
   837 ;;		_pulso
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text2
   844  000606                     __ptext2:
   845                           	opt callstack 0
   846  000606                     _entry_mode_set:
   847                           	opt callstack 24
   848  000606                     
   849                           ;lcd.c: 121:     lcd->E = 0;
   850  000606  C0D0  FFD9         	movff	entry_mode_set@lcd,fsr2l
   851  00060A  C0D1  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   852  00060E  0100               	movlb	0	; () banked
   853  000610  94DF               	bcf	indf2,2,c
   854                           
   855                           ;lcd.c: 122:     lcd->RS = 0;
   856  000612  C0D0  FFD9         	movff	entry_mode_set@lcd,fsr2l
   857  000616  C0D1  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   858  00061A  90DF               	bcf	indf2,0,c
   859                           
   860                           ;lcd.c: 123:     lcd->R_W = 0;
   861  00061C  C0D0  FFD9         	movff	entry_mode_set@lcd,fsr2l
   862  000620  C0D1  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   863  000624  92DF               	bcf	indf2,1,c
   864  000626                     
   865                           ; BSR set to: 0
   866                           ;lcd.c: 125:     lcd->data = 0x00;
   867  000626  C0D0  FFD9         	movff	entry_mode_set@lcd,fsr2l
   868  00062A  C0D1  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   869  00062E  0E0F               	movlw	-241
   870  000630  16DF               	andwf	223,f,c
   871  000632                     
   872                           ; BSR set to: 0
   873                           ;lcd.c: 126:     _delay((unsigned long)((1)*(16000000/4000.0)));
   874  000632  0E06               	movlw	6
   875  000634  6E68               	movwf	??_entry_mode_set^0,c
   876  000636  0E30               	movlw	48
   877  000638                     u967:
   878  000638  2EE8               	decfsz	wreg,f,c
   879  00063A  D7FE               	bra	u967
   880  00063C  2E68               	decfsz	??_entry_mode_set^0,f,c
   881  00063E  D7FC               	bra	u967
   882  000640  D000               	nop2	
   883  000642                     
   884                           ;lcd.c: 128:     pulso(lcd);
   885  000642  C0D0  F065         	movff	entry_mode_set@lcd,pulso@lcd
   886  000646  C0D1  F066         	movff	entry_mode_set@lcd+1,pulso@lcd+1
   887  00064A  ECF9  F003         	call	_pulso	;wreg free
   888  00064E                     
   889                           ;lcd.c: 131:     lcd->data = 0x04|(move_direction<<1)|display_shift;
   890  00064E  0100               	movlb	0	; () banked
   891  000650  51D2               	movf	entry_mode_set@move_direction& (0+255),w,b
   892  000652  25D2               	addwf	entry_mode_set@move_direction& (0+255),w,b
   893  000654  11D3               	iorwf	entry_mode_set@display_shift& (0+255),w,b
   894  000656  6E68               	movwf	??_entry_mode_set^0,c
   895  000658  0E04               	movlw	4
   896  00065A  1268               	iorwf	??_entry_mode_set^0,f,c
   897  00065C  C0D0  FFD9         	movff	entry_mode_set@lcd,fsr2l
   898  000660  C0D1  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   899  000664  3A68               	swapf	??_entry_mode_set^0,f,c
   900  000666  50DF               	movf	223,w,c
   901  000668  1868               	xorwf	??_entry_mode_set^0,w,c
   902  00066A  0B0F               	andlw	-241
   903  00066C  1868               	xorwf	??_entry_mode_set^0,w,c
   904  00066E  6EDF               	movwf	223,c
   905  000670                     
   906                           ; BSR set to: 0
   907                           ;lcd.c: 132:     _delay((unsigned long)((1)*(16000000/4000.0)));
   908  000670  0E06               	movlw	6
   909  000672  6E68               	movwf	??_entry_mode_set^0,c
   910  000674  0E30               	movlw	48
   911  000676                     u977:
   912  000676  2EE8               	decfsz	wreg,f,c
   913  000678  D7FE               	bra	u977
   914  00067A  2E68               	decfsz	??_entry_mode_set^0,f,c
   915  00067C  D7FC               	bra	u977
   916  00067E  D000               	nop2	
   917  000680                     
   918                           ;lcd.c: 134:     pulso(lcd);
   919  000680  C0D0  F065         	movff	entry_mode_set@lcd,pulso@lcd
   920  000684  C0D1  F066         	movff	entry_mode_set@lcd+1,pulso@lcd+1
   921  000688  ECF9  F003         	call	_pulso	;wreg free
   922  00068C  0012               	return		;funcret
   923  00068E                     __end_of_entry_mode_set:
   924                           	opt callstack 0
   925                           
   926 ;; *************** function _display_onoff_control *****************
   927 ;; Defined at:
   928 ;;		line 48 in file "lcd.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  lcd             2    0[BANK0 ] PTR struct .
   931 ;;		 -> NULL(0), PORTD(1), 
   932 ;;  display_on      1    2[BANK0 ] unsigned char 
   933 ;;  cursor_on       1    3[BANK0 ] unsigned char 
   934 ;;  blink           1    4[BANK0 ] unsigned char 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         0       5       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0
   948 ;;      Temps:          2       0       0       0       0       0       0
   949 ;;      Totals:         2       5       0       0       0       0       0
   950 ;;Total ram usage:        7 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    6
   953 ;; This function calls:
   954 ;;		_pulso
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text3
   961  000574                     __ptext3:
   962                           	opt callstack 0
   963  000574                     _display_onoff_control:
   964                           	opt callstack 24
   965  000574                     
   966                           ;lcd.c: 48: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 49: 
      +                                  char cursor_on, char blink){;lcd.c: 50:     lcd->E = 0;
   967  000574  C0D0  FFD9         	movff	display_onoff_control@lcd,fsr2l
   968  000578  C0D1  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
   969  00057C  0100               	movlb	0	; () banked
   970  00057E  94DF               	bcf	indf2,2,c
   971                           
   972                           ;lcd.c: 51:     lcd->RS = 0;
   973  000580  C0D0  FFD9         	movff	display_onoff_control@lcd,fsr2l
   974  000584  C0D1  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
   975  000588  90DF               	bcf	indf2,0,c
   976                           
   977                           ;lcd.c: 52:     lcd->R_W = 0;
   978  00058A  C0D0  FFD9         	movff	display_onoff_control@lcd,fsr2l
   979  00058E  C0D1  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
   980  000592  92DF               	bcf	indf2,1,c
   981  000594                     
   982                           ; BSR set to: 0
   983                           ;lcd.c: 55:     lcd->data = 0x00;
   984  000594  C0D0  FFD9         	movff	display_onoff_control@lcd,fsr2l
   985  000598  C0D1  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
   986  00059C  0E0F               	movlw	-241
   987  00059E  16DF               	andwf	223,f,c
   988  0005A0                     
   989                           ; BSR set to: 0
   990                           ;lcd.c: 56:     _delay((unsigned long)((1)*(16000000/4000.0)));
   991  0005A0  0E06               	movlw	6
   992  0005A2  6E68               	movwf	??_display_onoff_control^0,c
   993  0005A4  0E30               	movlw	48
   994  0005A6                     u987:
   995  0005A6  2EE8               	decfsz	wreg,f,c
   996  0005A8  D7FE               	bra	u987
   997  0005AA  2E68               	decfsz	??_display_onoff_control^0,f,c
   998  0005AC  D7FC               	bra	u987
   999  0005AE  D000               	nop2	
  1000  0005B0                     
  1001                           ;lcd.c: 58:     pulso(lcd);
  1002  0005B0  C0D0  F065         	movff	display_onoff_control@lcd,pulso@lcd
  1003  0005B4  C0D1  F066         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1004  0005B8  ECF9  F003         	call	_pulso	;wreg free
  1005  0005BC                     
  1006                           ;lcd.c: 62:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  1007  0005BC  0100               	movlb	0	; () banked
  1008  0005BE  90D8               	bcf	status,0,c
  1009  0005C0  35D3               	rlcf	display_onoff_control@cursor_on& (0+255),w,b
  1010  0005C2  6E68               	movwf	??_display_onoff_control^0,c
  1011  0005C4  45D2               	rlncf	display_onoff_control@display_on& (0+255),w,b
  1012  0005C6  46E8               	rlncf	wreg,f,c
  1013  0005C8  0BFC               	andlw	252
  1014  0005CA  1068               	iorwf	??_display_onoff_control^0,w,c
  1015  0005CC  11D4               	iorwf	display_onoff_control@blink& (0+255),w,b
  1016  0005CE  6E69               	movwf	(??_display_onoff_control+1)^0,c
  1017  0005D0  0E08               	movlw	8
  1018  0005D2  1269               	iorwf	(??_display_onoff_control+1)^0,f,c
  1019  0005D4  C0D0  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1020  0005D8  C0D1  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1021  0005DC  3A69               	swapf	(??_display_onoff_control+1)^0,f,c
  1022  0005DE  50DF               	movf	223,w,c
  1023  0005E0  1869               	xorwf	(??_display_onoff_control+1)^0,w,c
  1024  0005E2  0B0F               	andlw	-241
  1025  0005E4  1869               	xorwf	(??_display_onoff_control+1)^0,w,c
  1026  0005E6  6EDF               	movwf	223,c
  1027  0005E8                     
  1028                           ; BSR set to: 0
  1029                           ;lcd.c: 63:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1030  0005E8  0E06               	movlw	6
  1031  0005EA  6E68               	movwf	??_display_onoff_control^0,c
  1032  0005EC  0E30               	movlw	48
  1033  0005EE                     u997:
  1034  0005EE  2EE8               	decfsz	wreg,f,c
  1035  0005F0  D7FE               	bra	u997
  1036  0005F2  2E68               	decfsz	??_display_onoff_control^0,f,c
  1037  0005F4  D7FC               	bra	u997
  1038  0005F6  D000               	nop2	
  1039  0005F8                     
  1040                           ;lcd.c: 65:     pulso(lcd);
  1041  0005F8  C0D0  F065         	movff	display_onoff_control@lcd,pulso@lcd
  1042  0005FC  C0D1  F066         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1043  000600  ECF9  F003         	call	_pulso	;wreg free
  1044  000604  0012               	return		;funcret
  1045  000606                     __end_of_display_onoff_control:
  1046                           	opt callstack 0
  1047                           
  1048 ;; *************** function _pulso *****************
  1049 ;; Defined at:
  1050 ;;		line 11 in file "lcd.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  lcd             2   19[COMRAM] PTR struct .
  1053 ;;		 -> NULL(0), PORTD(1), 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr2l, fsr2h, status,2
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1065 ;;      Params:         2       0       0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0       0       0
  1067 ;;      Temps:          1       0       0       0       0       0       0
  1068 ;;      Totals:         3       0       0       0       0       0       0
  1069 ;;Total ram usage:        3 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    5
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_function_set
  1076 ;;		_display_onoff_control
  1077 ;;		_entry_mode_set
  1078 ;;		_return_home
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text4
  1083  0007F2                     __ptext4:
  1084                           	opt callstack 0
  1085  0007F2                     _pulso:
  1086                           	opt callstack 24
  1087  0007F2                     
  1088                           ;lcd.c: 13:     lcd->E = 1;
  1089  0007F2  C065  FFD9         	movff	pulso@lcd,fsr2l
  1090  0007F6  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1091  0007FA  84DF               	bsf	indf2,2,c
  1092  0007FC                     
  1093                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1094  0007FC  0E06               	movlw	6
  1095  0007FE  6E67               	movwf	??_pulso^0,c
  1096  000800  0E30               	movlw	48
  1097  000802                     u1007:
  1098  000802  2EE8               	decfsz	wreg,f,c
  1099  000804  D7FE               	bra	u1007
  1100  000806  2E67               	decfsz	??_pulso^0,f,c
  1101  000808  D7FC               	bra	u1007
  1102  00080A  D000               	nop2	
  1103  00080C                     
  1104                           ;lcd.c: 17:     lcd->E = 0;
  1105  00080C  C065  FFD9         	movff	pulso@lcd,fsr2l
  1106  000810  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1107  000814  94DF               	bcf	indf2,2,c
  1108                           
  1109                           ;lcd.c: 18:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1110  000816  0E1A               	movlw	26
  1111  000818  6E67               	movwf	??_pulso^0,c
  1112  00081A  0EF8               	movlw	248
  1113  00081C                     u1017:
  1114  00081C  2EE8               	decfsz	wreg,f,c
  1115  00081E  D7FE               	bra	u1017
  1116  000820  2E67               	decfsz	??_pulso^0,f,c
  1117  000822  D7FC               	bra	u1017
  1118  000824  D000               	nop2	
  1119  000826                     
  1120                           ;lcd.c: 19:     lcd->data = 0x00;
  1121  000826  C065  FFD9         	movff	pulso@lcd,fsr2l
  1122  00082A  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1123  00082E  0E0F               	movlw	-241
  1124  000830  16DF               	andwf	indf2,f,c
  1125  000832  0012               	return		;funcret
  1126  000834                     __end_of_pulso:
  1127                           	opt callstack 0
  1128                           
  1129 ;; *************** function _int_handler *****************
  1130 ;; Defined at:
  1131 ;;		line 24 in file "main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1145 ;;      Params:         0       0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0
  1147 ;;      Temps:          2       0       0       0       0       0       0
  1148 ;;      Totals:         2       0       0       0       0       0       0
  1149 ;;Total ram usage:        2 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    4
  1152 ;; This function calls:
  1153 ;;		_le_entrada
  1154 ;; This function is called by:
  1155 ;;		Interrupt level 2
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	intcode
  1160  000008                     __pintcode:
  1161                           	opt callstack 0
  1162  000008                     _int_handler:
  1163                           	opt callstack 24
  1164                           
  1165                           ;incstack = 0
  1166  000008  826C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1167  00000A  ED5B  F004         	call	int_func,f	;refresh shadow registers
  1168                           
  1169                           	psect	intcode_body
  1170  0008B6                     __pintcode_body:
  1171                           	opt callstack 24
  1172  0008B6                     int_func:
  1173                           	opt callstack 24
  1174  0008B6  0006               	pop		; remove dummy address from shadow register refresh
  1175  0008B8  CFD9 F063          	movff	fsr2l,??_int_handler
  1176  0008BC  CFDA F064          	movff	fsr2h,??_int_handler+1
  1177  0008C0                     
  1178                           ;main.c: 26:      if(INTCONbits.TMR0IF == 1){
  1179  0008C0  A4F2               	btfss	242,2,c	;volatile
  1180  0008C2  EF65  F004         	goto	i2u62_41
  1181  0008C6  EF67  F004         	goto	i2u62_40
  1182  0008CA                     i2u62_41:
  1183  0008CA  EF6F  F004         	goto	i2l40
  1184  0008CE                     i2u62_40:
  1185  0008CE                     
  1186                           ;main.c: 27:         INTCONbits.TMR0IF = 0;
  1187  0008CE  94F2               	bcf	242,2,c	;volatile
  1188  0008D0                     
  1189                           ;main.c: 28:         TMR0 = 0xC2F7;
  1190  0008D0  0EC2               	movlw	194
  1191  0008D2  6ED7               	movwf	215,c	;volatile
  1192  0008D4  0EF7               	movlw	247
  1193  0008D6  6ED6               	movwf	214,c	;volatile
  1194  0008D8                     
  1195                           ;main.c: 29:         le_entrada();
  1196  0008D8  EC09  F000         	call	_le_entrada	;wreg free
  1197  0008DC                     
  1198                           ;main.c: 30:         PORTBbits.RB0 = 0x01;
  1199  0008DC  8081               	bsf	129,0,c	;volatile
  1200  0008DE                     i2l40:
  1201  0008DE  C064  FFDA         	movff	??_int_handler+1,fsr2h
  1202  0008E2  C063  FFD9         	movff	??_int_handler,fsr2l
  1203  0008E6  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1204  0008E8  0011               	retfie		f
  1205  0008EA                     __end_of_int_handler:
  1206                           	opt callstack 0
  1207                           
  1208 ;; *************** function _le_entrada *****************
  1209 ;; Defined at:
  1210 ;;		line 6 in file "keyboard.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1224 ;;      Params:         0       0       0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0       0       0
  1227 ;;      Totals:         2       0       0       0       0       0       0
  1228 ;;Total ram usage:        2 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    3
  1231 ;; This function calls:
  1232 ;;		_clear_display
  1233 ;;		_goto_XY
  1234 ;;		_write_char
  1235 ;; This function is called by:
  1236 ;;		_int_handler
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text6
  1241  000012                     __ptext6:
  1242                           	opt callstack 0
  1243  000012                     _le_entrada:
  1244                           	opt callstack 24
  1245  000012                     
  1246                           ;keyboard.c: 7:     clear_display(lcd);
  1247  000012  C06A  F055         	movff	_lcd,clear_display@lcd
  1248  000016  C06B  F056         	movff	_lcd+1,clear_display@lcd+1
  1249  00001A  EC47  F003         	call	_clear_display	;wreg free
  1250  00001E                     
  1251                           ;keyboard.c: 8:     if(PORTBbits.RB0 && controle == 1){
  1252  00001E  A081               	btfss	129,0,c	;volatile
  1253  000020  EF14  F000         	goto	i2u50_41
  1254  000024  EF16  F000         	goto	i2u50_40
  1255  000028                     i2u50_41:
  1256  000028  EF79  F000         	goto	i2l1500
  1257  00002C                     i2u50_40:
  1258  00002C  0451               	decf	_controle^0,w,c
  1259  00002E  A4D8               	btfss	status,2,c
  1260  000030  EF1C  F000         	goto	i2u51_41
  1261  000034  EF1E  F000         	goto	i2u51_40
  1262  000038                     i2u51_41:
  1263  000038  EF79  F000         	goto	i2l1500
  1264  00003C                     i2u51_40:
  1265  00003C                     
  1266                           ;keyboard.c: 9:         PORTBbits.RB0 = 0x00;
  1267  00003C  9081               	bcf	129,0,c	;volatile
  1268                           
  1269                           ;keyboard.c: 10:         PORTBbits.RB1 = 0x01;
  1270  00003E  8281               	bsf	129,1,c	;volatile
  1271                           
  1272                           ;keyboard.c: 11:         PORTBbits.RB2 = 0x01;
  1273  000040  8481               	bsf	129,2,c	;volatile
  1274  000042                     
  1275                           ;keyboard.c: 12:         controle = 2;
  1276  000042  0E02               	movlw	2
  1277  000044  6E51               	movwf	_controle^0,c
  1278  000046                     
  1279                           ;keyboard.c: 13:         if(PORTBbits.RB5 == 0){
  1280  000046  BA81               	btfsc	129,5,c	;volatile
  1281  000048  EF28  F000         	goto	i2u52_41
  1282  00004C  EF2A  F000         	goto	i2u52_40
  1283  000050                     i2u52_41:
  1284  000050  EF4E  F000         	goto	i2l1492
  1285  000054                     i2u52_40:
  1286  000054                     
  1287                           ;keyboard.c: 14:             goto_XY(lcd,3,1);
  1288  000054  C06A  F059         	movff	_lcd,goto_XY@lcd
  1289  000058  C06B  F05A         	movff	_lcd+1,goto_XY@lcd+1
  1290  00005C  0E03               	movlw	3
  1291  00005E  6E5B               	movwf	goto_XY@x^0,c
  1292  000060  0E01               	movlw	1
  1293  000062  6E5C               	movwf	goto_XY@y^0,c
  1294  000064  ECC3  F001         	call	_goto_XY	;wreg free
  1295                           
  1296                           ;keyboard.c: 15:             write_char(lcd,'<');
  1297  000068  C06A  F055         	movff	_lcd,write_char@lcd
  1298  00006C  C06B  F056         	movff	_lcd+1,write_char@lcd+1
  1299  000070  0E3C               	movlw	60
  1300  000072  6E57               	movwf	write_char@c^0,c
  1301  000074  EC6E  F002         	call	_write_char	;wreg free
  1302  000078                     
  1303                           ;keyboard.c: 16:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1304  000078  0E15               	movlw	21
  1305  00007A  6E62               	movwf	(??_le_entrada+1)^0,c
  1306  00007C  0E4B               	movlw	75
  1307  00007E  6E61               	movwf	??_le_entrada^0,c
  1308  000080  0EBE               	movlw	190
  1309  000082                     i2u102_47:
  1310  000082  2EE8               	decfsz	wreg,f,c
  1311  000084  D7FE               	bra	i2u102_47
  1312  000086  2E61               	decfsz	??_le_entrada^0,f,c
  1313  000088  D7FC               	bra	i2u102_47
  1314  00008A  2E62               	decfsz	(??_le_entrada+1)^0,f,c
  1315  00008C  D7FA               	bra	i2u102_47
  1316  00008E  D000               	nop2	
  1317  000090                     
  1318                           ;keyboard.c: 17:             clear_display(lcd);
  1319  000090  C06A  F055         	movff	_lcd,clear_display@lcd
  1320  000094  C06B  F056         	movff	_lcd+1,clear_display@lcd+1
  1321  000098  EC47  F003         	call	_clear_display	;wreg free
  1322  00009C                     i2l1492:
  1323                           
  1324                           ;keyboard.c: 19:         if(PORTBbits.RB7 == 0){
  1325  00009C  BE81               	btfsc	129,7,c	;volatile
  1326  00009E  EF53  F000         	goto	i2u53_41
  1327  0000A2  EF55  F000         	goto	i2u53_40
  1328  0000A6                     i2u53_41:
  1329  0000A6  EF79  F000         	goto	i2l1500
  1330  0000AA                     i2u53_40:
  1331  0000AA                     
  1332                           ;keyboard.c: 20:             goto_XY(lcd,3,1);
  1333  0000AA  C06A  F059         	movff	_lcd,goto_XY@lcd
  1334  0000AE  C06B  F05A         	movff	_lcd+1,goto_XY@lcd+1
  1335  0000B2  0E03               	movlw	3
  1336  0000B4  6E5B               	movwf	goto_XY@x^0,c
  1337  0000B6  0E01               	movlw	1
  1338  0000B8  6E5C               	movwf	goto_XY@y^0,c
  1339  0000BA  ECC3  F001         	call	_goto_XY	;wreg free
  1340                           
  1341                           ;keyboard.c: 21:             write_char(lcd,'E');
  1342  0000BE  C06A  F055         	movff	_lcd,write_char@lcd
  1343  0000C2  C06B  F056         	movff	_lcd+1,write_char@lcd+1
  1344  0000C6  0E45               	movlw	69
  1345  0000C8  6E57               	movwf	write_char@c^0,c
  1346  0000CA  EC6E  F002         	call	_write_char	;wreg free
  1347  0000CE                     
  1348                           ;keyboard.c: 22:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1349  0000CE  0E15               	movlw	21
  1350  0000D0  6E62               	movwf	(??_le_entrada+1)^0,c
  1351  0000D2  0E4B               	movlw	75
  1352  0000D4  6E61               	movwf	??_le_entrada^0,c
  1353  0000D6  0EBE               	movlw	190
  1354  0000D8                     i2u103_47:
  1355  0000D8  2EE8               	decfsz	wreg,f,c
  1356  0000DA  D7FE               	bra	i2u103_47
  1357  0000DC  2E61               	decfsz	??_le_entrada^0,f,c
  1358  0000DE  D7FC               	bra	i2u103_47
  1359  0000E0  2E62               	decfsz	(??_le_entrada+1)^0,f,c
  1360  0000E2  D7FA               	bra	i2u103_47
  1361  0000E4  D000               	nop2	
  1362  0000E6                     
  1363                           ;keyboard.c: 23:             clear_display(lcd);
  1364  0000E6  C06A  F055         	movff	_lcd,clear_display@lcd
  1365  0000EA  C06B  F056         	movff	_lcd+1,clear_display@lcd+1
  1366  0000EE  EC47  F003         	call	_clear_display	;wreg free
  1367  0000F2                     i2l1500:
  1368                           
  1369                           ;keyboard.c: 26:     if(PORTBbits.RB1 && controle == 2){
  1370  0000F2  A281               	btfss	129,1,c	;volatile
  1371  0000F4  EF7E  F000         	goto	i2u54_41
  1372  0000F8  EF80  F000         	goto	i2u54_40
  1373  0000FC                     i2u54_41:
  1374  0000FC  EFE4  F000         	goto	i2l1524
  1375  000100                     i2u54_40:
  1376  000100  0E02               	movlw	2
  1377  000102  1851               	xorwf	_controle^0,w,c
  1378  000104  A4D8               	btfss	status,2,c
  1379  000106  EF87  F000         	goto	i2u55_41
  1380  00010A  EF89  F000         	goto	i2u55_40
  1381  00010E                     i2u55_41:
  1382  00010E  EFE4  F000         	goto	i2l1524
  1383  000112                     i2u55_40:
  1384  000112                     
  1385                           ;keyboard.c: 27:         PORTBbits.RB0 = 0x01;
  1386  000112  8081               	bsf	129,0,c	;volatile
  1387                           
  1388                           ;keyboard.c: 28:         PORTBbits.RB1 = 0x00;
  1389  000114  9281               	bcf	129,1,c	;volatile
  1390                           
  1391                           ;keyboard.c: 29:         PORTBbits.RB2 = 0x01;
  1392  000116  8481               	bsf	129,2,c	;volatile
  1393  000118                     
  1394                           ;keyboard.c: 30:         controle = 3;
  1395  000118  0E03               	movlw	3
  1396  00011A  6E51               	movwf	_controle^0,c
  1397  00011C                     
  1398                           ;keyboard.c: 31:         if(PORTBbits.RB4 == 0){
  1399  00011C  B881               	btfsc	129,4,c	;volatile
  1400  00011E  EF93  F000         	goto	i2u56_41
  1401  000122  EF95  F000         	goto	i2u56_40
  1402  000126                     i2u56_41:
  1403  000126  EFB9  F000         	goto	i2l1516
  1404  00012A                     i2u56_40:
  1405  00012A                     
  1406                           ;keyboard.c: 32:             goto_XY(lcd,3,1);
  1407  00012A  C06A  F059         	movff	_lcd,goto_XY@lcd
  1408  00012E  C06B  F05A         	movff	_lcd+1,goto_XY@lcd+1
  1409  000132  0E03               	movlw	3
  1410  000134  6E5B               	movwf	goto_XY@x^0,c
  1411  000136  0E01               	movlw	1
  1412  000138  6E5C               	movwf	goto_XY@y^0,c
  1413  00013A  ECC3  F001         	call	_goto_XY	;wreg free
  1414                           
  1415                           ;keyboard.c: 33:             write_char(lcd,'C');
  1416  00013E  C06A  F055         	movff	_lcd,write_char@lcd
  1417  000142  C06B  F056         	movff	_lcd+1,write_char@lcd+1
  1418  000146  0E43               	movlw	67
  1419  000148  6E57               	movwf	write_char@c^0,c
  1420  00014A  EC6E  F002         	call	_write_char	;wreg free
  1421  00014E                     
  1422                           ;keyboard.c: 34:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1423  00014E  0E15               	movlw	21
  1424  000150  6E62               	movwf	(??_le_entrada+1)^0,c
  1425  000152  0E4B               	movlw	75
  1426  000154  6E61               	movwf	??_le_entrada^0,c
  1427  000156  0EBE               	movlw	190
  1428  000158                     i2u104_47:
  1429  000158  2EE8               	decfsz	wreg,f,c
  1430  00015A  D7FE               	bra	i2u104_47
  1431  00015C  2E61               	decfsz	??_le_entrada^0,f,c
  1432  00015E  D7FC               	bra	i2u104_47
  1433  000160  2E62               	decfsz	(??_le_entrada+1)^0,f,c
  1434  000162  D7FA               	bra	i2u104_47
  1435  000164  D000               	nop2	
  1436  000166                     
  1437                           ;keyboard.c: 35:             clear_display(lcd);
  1438  000166  C06A  F055         	movff	_lcd,clear_display@lcd
  1439  00016A  C06B  F056         	movff	_lcd+1,clear_display@lcd+1
  1440  00016E  EC47  F003         	call	_clear_display	;wreg free
  1441  000172                     i2l1516:
  1442                           
  1443                           ;keyboard.c: 37:         if(PORTBbits.RB6 == 0){
  1444  000172  BC81               	btfsc	129,6,c	;volatile
  1445  000174  EFBE  F000         	goto	i2u57_41
  1446  000178  EFC0  F000         	goto	i2u57_40
  1447  00017C                     i2u57_41:
  1448  00017C  EFE4  F000         	goto	i2l1524
  1449  000180                     i2u57_40:
  1450  000180                     
  1451                           ;keyboard.c: 38:             goto_XY(lcd,3,1);
  1452  000180  C06A  F059         	movff	_lcd,goto_XY@lcd
  1453  000184  C06B  F05A         	movff	_lcd+1,goto_XY@lcd+1
  1454  000188  0E03               	movlw	3
  1455  00018A  6E5B               	movwf	goto_XY@x^0,c
  1456  00018C  0E01               	movlw	1
  1457  00018E  6E5C               	movwf	goto_XY@y^0,c
  1458  000190  ECC3  F001         	call	_goto_XY	;wreg free
  1459                           
  1460                           ;keyboard.c: 39:             write_char(lcd,'B');
  1461  000194  C06A  F055         	movff	_lcd,write_char@lcd
  1462  000198  C06B  F056         	movff	_lcd+1,write_char@lcd+1
  1463  00019C  0E42               	movlw	66
  1464  00019E  6E57               	movwf	write_char@c^0,c
  1465  0001A0  EC6E  F002         	call	_write_char	;wreg free
  1466  0001A4                     
  1467                           ;keyboard.c: 40:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1468  0001A4  0E15               	movlw	21
  1469  0001A6  6E62               	movwf	(??_le_entrada+1)^0,c
  1470  0001A8  0E4B               	movlw	75
  1471  0001AA  6E61               	movwf	??_le_entrada^0,c
  1472  0001AC  0EBE               	movlw	190
  1473  0001AE                     i2u105_47:
  1474  0001AE  2EE8               	decfsz	wreg,f,c
  1475  0001B0  D7FE               	bra	i2u105_47
  1476  0001B2  2E61               	decfsz	??_le_entrada^0,f,c
  1477  0001B4  D7FC               	bra	i2u105_47
  1478  0001B6  2E62               	decfsz	(??_le_entrada+1)^0,f,c
  1479  0001B8  D7FA               	bra	i2u105_47
  1480  0001BA  D000               	nop2	
  1481  0001BC                     
  1482                           ;keyboard.c: 41:             clear_display(lcd);
  1483  0001BC  C06A  F055         	movff	_lcd,clear_display@lcd
  1484  0001C0  C06B  F056         	movff	_lcd+1,clear_display@lcd+1
  1485  0001C4  EC47  F003         	call	_clear_display	;wreg free
  1486  0001C8                     i2l1524:
  1487                           
  1488                           ;keyboard.c: 44:     if(PORTBbits.RB2 && controle == 3){
  1489  0001C8  A481               	btfss	129,2,c	;volatile
  1490  0001CA  EFE9  F000         	goto	i2u58_41
  1491  0001CE  EFEB  F000         	goto	i2u58_40
  1492  0001D2                     i2u58_41:
  1493  0001D2  EF4F  F001         	goto	i2l206
  1494  0001D6                     i2u58_40:
  1495  0001D6  0E03               	movlw	3
  1496  0001D8  1851               	xorwf	_controle^0,w,c
  1497  0001DA  A4D8               	btfss	status,2,c
  1498  0001DC  EFF2  F000         	goto	i2u59_41
  1499  0001E0  EFF4  F000         	goto	i2u59_40
  1500  0001E4                     i2u59_41:
  1501  0001E4  EF4F  F001         	goto	i2l206
  1502  0001E8                     i2u59_40:
  1503  0001E8                     
  1504                           ;keyboard.c: 45:         PORTBbits.RB0 = 0x01;
  1505  0001E8  8081               	bsf	129,0,c	;volatile
  1506                           
  1507                           ;keyboard.c: 46:         PORTBbits.RB1 = 0x01;
  1508  0001EA  8281               	bsf	129,1,c	;volatile
  1509                           
  1510                           ;keyboard.c: 47:         PORTBbits.RB2 = 0x00;
  1511  0001EC  9481               	bcf	129,2,c	;volatile
  1512  0001EE                     
  1513                           ;keyboard.c: 48:         controle = 1;
  1514  0001EE  0E01               	movlw	1
  1515  0001F0  6E51               	movwf	_controle^0,c
  1516  0001F2                     
  1517                           ;keyboard.c: 49:         if(PORTBbits.RB5 == 0){
  1518  0001F2  BA81               	btfsc	129,5,c	;volatile
  1519  0001F4  EFFE  F000         	goto	i2u60_41
  1520  0001F8  EF00  F001         	goto	i2u60_40
  1521  0001FC                     i2u60_41:
  1522  0001FC  EF24  F001         	goto	i2l1540
  1523  000200                     i2u60_40:
  1524  000200                     
  1525                           ;keyboard.c: 50:             goto_XY(lcd,3,1);
  1526  000200  C06A  F059         	movff	_lcd,goto_XY@lcd
  1527  000204  C06B  F05A         	movff	_lcd+1,goto_XY@lcd+1
  1528  000208  0E03               	movlw	3
  1529  00020A  6E5B               	movwf	goto_XY@x^0,c
  1530  00020C  0E01               	movlw	1
  1531  00020E  6E5C               	movwf	goto_XY@y^0,c
  1532  000210  ECC3  F001         	call	_goto_XY	;wreg free
  1533                           
  1534                           ;keyboard.c: 51:             write_char(lcd,'>');
  1535  000214  C06A  F055         	movff	_lcd,write_char@lcd
  1536  000218  C06B  F056         	movff	_lcd+1,write_char@lcd+1
  1537  00021C  0E3E               	movlw	62
  1538  00021E  6E57               	movwf	write_char@c^0,c
  1539  000220  EC6E  F002         	call	_write_char	;wreg free
  1540  000224                     
  1541                           ;keyboard.c: 52:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1542  000224  0E15               	movlw	21
  1543  000226  6E62               	movwf	(??_le_entrada+1)^0,c
  1544  000228  0E4B               	movlw	75
  1545  00022A  6E61               	movwf	??_le_entrada^0,c
  1546  00022C  0EBE               	movlw	190
  1547  00022E                     i2u106_47:
  1548  00022E  2EE8               	decfsz	wreg,f,c
  1549  000230  D7FE               	bra	i2u106_47
  1550  000232  2E61               	decfsz	??_le_entrada^0,f,c
  1551  000234  D7FC               	bra	i2u106_47
  1552  000236  2E62               	decfsz	(??_le_entrada+1)^0,f,c
  1553  000238  D7FA               	bra	i2u106_47
  1554  00023A  D000               	nop2	
  1555  00023C                     
  1556                           ;keyboard.c: 53:             clear_display(lcd);
  1557  00023C  C06A  F055         	movff	_lcd,clear_display@lcd
  1558  000240  C06B  F056         	movff	_lcd+1,clear_display@lcd+1
  1559  000244  EC47  F003         	call	_clear_display	;wreg free
  1560  000248                     i2l1540:
  1561                           
  1562                           ;keyboard.c: 55:         if(PORTBbits.RB7 == 0){
  1563  000248  BE81               	btfsc	129,7,c	;volatile
  1564  00024A  EF29  F001         	goto	i2u61_41
  1565  00024E  EF2B  F001         	goto	i2u61_40
  1566  000252                     i2u61_41:
  1567  000252  EF4F  F001         	goto	i2l206
  1568  000256                     i2u61_40:
  1569  000256                     
  1570                           ;keyboard.c: 56:             goto_XY(lcd,3,1);
  1571  000256  C06A  F059         	movff	_lcd,goto_XY@lcd
  1572  00025A  C06B  F05A         	movff	_lcd+1,goto_XY@lcd+1
  1573  00025E  0E03               	movlw	3
  1574  000260  6E5B               	movwf	goto_XY@x^0,c
  1575  000262  0E01               	movlw	1
  1576  000264  6E5C               	movwf	goto_XY@y^0,c
  1577  000266  ECC3  F001         	call	_goto_XY	;wreg free
  1578                           
  1579                           ;keyboard.c: 57:             write_char(lcd,'S');
  1580  00026A  C06A  F055         	movff	_lcd,write_char@lcd
  1581  00026E  C06B  F056         	movff	_lcd+1,write_char@lcd+1
  1582  000272  0E53               	movlw	83
  1583  000274  6E57               	movwf	write_char@c^0,c
  1584  000276  EC6E  F002         	call	_write_char	;wreg free
  1585  00027A                     
  1586                           ;keyboard.c: 58:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1587  00027A  0E15               	movlw	21
  1588  00027C  6E62               	movwf	(??_le_entrada+1)^0,c
  1589  00027E  0E4B               	movlw	75
  1590  000280  6E61               	movwf	??_le_entrada^0,c
  1591  000282  0EBE               	movlw	190
  1592  000284                     i2u107_47:
  1593  000284  2EE8               	decfsz	wreg,f,c
  1594  000286  D7FE               	bra	i2u107_47
  1595  000288  2E61               	decfsz	??_le_entrada^0,f,c
  1596  00028A  D7FC               	bra	i2u107_47
  1597  00028C  2E62               	decfsz	(??_le_entrada+1)^0,f,c
  1598  00028E  D7FA               	bra	i2u107_47
  1599  000290  D000               	nop2	
  1600  000292                     
  1601                           ;keyboard.c: 59:             clear_display(lcd);
  1602  000292  C06A  F055         	movff	_lcd,clear_display@lcd
  1603  000296  C06B  F056         	movff	_lcd+1,clear_display@lcd+1
  1604  00029A  EC47  F003         	call	_clear_display	;wreg free
  1605  00029E                     i2l206:
  1606  00029E  0012               	return		;funcret
  1607  0002A0                     __end_of_le_entrada:
  1608                           	opt callstack 0
  1609                           
  1610 ;; *************** function _write_char *****************
  1611 ;; Defined at:
  1612 ;;		line 137 in file "lcd.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  lcd             2    3[COMRAM] PTR struct .
  1615 ;;		 -> NULL(0), PORTD(1), 
  1616 ;;  c               1    5[COMRAM] unsigned char 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1628 ;;      Params:         3       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0
  1630 ;;      Temps:          1       0       0       0       0       0       0
  1631 ;;      Totals:         4       0       0       0       0       0       0
  1632 ;;Total ram usage:        4 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    1
  1635 ;; This function calls:
  1636 ;;		i2_pulso
  1637 ;; This function is called by:
  1638 ;;		_le_entrada
  1639 ;;		_creditos
  1640 ;;		_jogar
  1641 ;;		_instrucoes
  1642 ;;		_menu
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text7
  1647  0004DC                     __ptext7:
  1648                           	opt callstack 0
  1649  0004DC                     _write_char:
  1650                           	opt callstack 25
  1651  0004DC                     
  1652                           ;lcd.c: 138:     lcd->E = 0;
  1653  0004DC  C055  FFD9         	movff	write_char@lcd,fsr2l
  1654  0004E0  C056  FFDA         	movff	write_char@lcd+1,fsr2h
  1655  0004E4  94DF               	bcf	indf2,2,c
  1656                           
  1657                           ;lcd.c: 139:     lcd->RS = 1;
  1658  0004E6  C055  FFD9         	movff	write_char@lcd,fsr2l
  1659  0004EA  C056  FFDA         	movff	write_char@lcd+1,fsr2h
  1660  0004EE  80DF               	bsf	indf2,0,c
  1661                           
  1662                           ;lcd.c: 140:     lcd->R_W = 0;
  1663  0004F0  C055  FFD9         	movff	write_char@lcd,fsr2l
  1664  0004F4  C056  FFDA         	movff	write_char@lcd+1,fsr2h
  1665  0004F8  92DF               	bcf	indf2,1,c
  1666  0004FA                     
  1667                           ;lcd.c: 143:     lcd->data = (c>>4);
  1668  0004FA  C057  F058         	movff	write_char@c,??_write_char
  1669  0004FE  3A58               	swapf	??_write_char^0,f,c
  1670  000500  0E0F               	movlw	15
  1671  000502  1658               	andwf	??_write_char^0,f,c
  1672  000504  C055  FFD9         	movff	write_char@lcd,fsr2l
  1673  000508  C056  FFDA         	movff	write_char@lcd+1,fsr2h
  1674  00050C  3A58               	swapf	??_write_char^0,f,c
  1675  00050E  50DF               	movf	indf2,w,c
  1676  000510  1858               	xorwf	??_write_char^0,w,c
  1677  000512  0B0F               	andlw	-241
  1678  000514  1858               	xorwf	??_write_char^0,w,c
  1679  000516  6EDF               	movwf	indf2,c
  1680  000518                     
  1681                           ;lcd.c: 144:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1682  000518  0E06               	movlw	6
  1683  00051A  6E58               	movwf	??_write_char^0,c
  1684  00051C  0E30               	movlw	48
  1685  00051E                     i2u108_47:
  1686  00051E  2EE8               	decfsz	wreg,f,c
  1687  000520  D7FE               	bra	i2u108_47
  1688  000522  2E58               	decfsz	??_write_char^0,f,c
  1689  000524  D7FC               	bra	i2u108_47
  1690  000526  D000               	nop2	
  1691  000528                     
  1692                           ;lcd.c: 146:     pulso(lcd);
  1693  000528  C055  F052         	movff	write_char@lcd,i2pulso@lcd
  1694  00052C  C056  F053         	movff	write_char@lcd+1,i2pulso@lcd+1
  1695  000530  EC1A  F004         	call	i2_pulso	;wreg free
  1696  000534                     
  1697                           ;lcd.c: 149:     lcd->data = (c);
  1698  000534  C057  F058         	movff	write_char@c,??_write_char
  1699  000538  C055  FFD9         	movff	write_char@lcd,fsr2l
  1700  00053C  C056  FFDA         	movff	write_char@lcd+1,fsr2h
  1701  000540  3A58               	swapf	??_write_char^0,f,c
  1702  000542  50DF               	movf	indf2,w,c
  1703  000544  1858               	xorwf	??_write_char^0,w,c
  1704  000546  0B0F               	andlw	-241
  1705  000548  1858               	xorwf	??_write_char^0,w,c
  1706  00054A  6EDF               	movwf	indf2,c
  1707  00054C                     
  1708                           ;lcd.c: 150:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1709  00054C  0E06               	movlw	6
  1710  00054E  6E58               	movwf	??_write_char^0,c
  1711  000550  0E30               	movlw	48
  1712  000552                     i2u109_47:
  1713  000552  2EE8               	decfsz	wreg,f,c
  1714  000554  D7FE               	bra	i2u109_47
  1715  000556  2E58               	decfsz	??_write_char^0,f,c
  1716  000558  D7FC               	bra	i2u109_47
  1717  00055A  D000               	nop2	
  1718  00055C                     
  1719                           ;lcd.c: 152:     pulso(lcd);
  1720  00055C  C055  F052         	movff	write_char@lcd,i2pulso@lcd
  1721  000560  C056  F053         	movff	write_char@lcd+1,i2pulso@lcd+1
  1722  000564  EC1A  F004         	call	i2_pulso	;wreg free
  1723                           
  1724                           ;lcd.c: 153:     lcd->RS = 0;
  1725  000568  C055  FFD9         	movff	write_char@lcd,fsr2l
  1726  00056C  C056  FFDA         	movff	write_char@lcd+1,fsr2h
  1727  000570  90DF               	bcf	indf2,0,c
  1728  000572  0012               	return		;funcret
  1729  000574                     __end_of_write_char:
  1730                           	opt callstack 0
  1731                           
  1732 ;; *************** function _goto_XY *****************
  1733 ;; Defined at:
  1734 ;;		line 79 in file "lcd.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  lcd             2    7[COMRAM] PTR struct .
  1737 ;;		 -> NULL(0), PORTD(1), 
  1738 ;;  x               1    9[COMRAM] unsigned char 
  1739 ;;  y               1   10[COMRAM] unsigned char 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  temp            1   14[COMRAM] unsigned char 
  1742 ;;  a               1   13[COMRAM] unsigned char 
  1743 ;;  z               1   12[COMRAM] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         4       0       0       0       0       0       0
  1754 ;;      Locals:         3       0       0       0       0       0       0
  1755 ;;      Temps:          1       0       0       0       0       0       0
  1756 ;;      Totals:         8       0       0       0       0       0       0
  1757 ;;Total ram usage:        8 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    2
  1760 ;; This function calls:
  1761 ;;		_lcd_cmd
  1762 ;; This function is called by:
  1763 ;;		_le_entrada
  1764 ;;		_creditos
  1765 ;;		_jogar
  1766 ;;		_instrucoes
  1767 ;;		_menu
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text8
  1772  000386                     __ptext8:
  1773                           	opt callstack 0
  1774  000386                     _goto_XY:
  1775                           	opt callstack 24
  1776  000386                     
  1777                           ;lcd.c: 80:     unsigned char temp,z,a;;lcd.c: 81:     if(x == 1)
  1778  000386  045B               	decf	goto_XY@x^0,w,c
  1779  000388  A4D8               	btfss	status,2,c
  1780  00038A  EFC9  F001         	goto	i2u46_41
  1781  00038E  EFCB  F001         	goto	i2u46_40
  1782  000392                     i2u46_41:
  1783  000392  EFED  F001         	goto	i2l1402
  1784  000396                     i2u46_40:
  1785  000396                     
  1786                           ;lcd.c: 82:     {;lcd.c: 83:        temp = 0x80 + y - 1;
  1787  000396  505C               	movf	goto_XY@y^0,w,c
  1788  000398  0F7F               	addlw	127
  1789  00039A  6E60               	movwf	goto_XY@temp^0,c
  1790                           
  1791                           ;lcd.c: 84:        z = temp>>4;
  1792  00039C  3860               	swapf	goto_XY@temp^0,w,c
  1793  00039E  0B0F               	andlw	15
  1794  0003A0  6E5E               	movwf	goto_XY@z^0,c
  1795  0003A2                     i2l1394:
  1796                           
  1797                           ;lcd.c: 85:        a = temp;
  1798  0003A2  C060  F05F         	movff	goto_XY@temp,goto_XY@a
  1799  0003A6                     
  1800                           ;lcd.c: 86:        lcd_cmd(lcd, z);
  1801  0003A6  C059  F055         	movff	goto_XY@lcd,lcd_cmd@lcd
  1802  0003AA  C05A  F056         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1803  0003AE  C05E  F057         	movff	goto_XY@z,lcd_cmd@a
  1804  0003B2  EC3B  F004         	call	_lcd_cmd	;wreg free
  1805  0003B6                     
  1806                           ;lcd.c: 87:        _delay((unsigned long)((1)*(16000000/4000.0)));
  1807  0003B6  0E06               	movlw	6
  1808  0003B8  6E5D               	movwf	??_goto_XY^0,c
  1809  0003BA  0E30               	movlw	48
  1810  0003BC                     i2u110_47:
  1811  0003BC  2EE8               	decfsz	wreg,f,c
  1812  0003BE  D7FE               	bra	i2u110_47
  1813  0003C0  2E5D               	decfsz	??_goto_XY^0,f,c
  1814  0003C2  D7FC               	bra	i2u110_47
  1815  0003C4  D000               	nop2	
  1816  0003C6                     
  1817                           ;lcd.c: 88:        lcd_cmd(lcd, a);
  1818  0003C6  C059  F055         	movff	goto_XY@lcd,lcd_cmd@lcd
  1819  0003CA  C05A  F056         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1820  0003CE  C05F  F057         	movff	goto_XY@a,lcd_cmd@a
  1821  0003D2  EC3B  F004         	call	_lcd_cmd	;wreg free
  1822                           
  1823                           ;lcd.c: 89:     }
  1824  0003D6  EF20  F002         	goto	i2l168
  1825  0003DA                     i2l1402:
  1826  0003DA  0E02               	movlw	2
  1827  0003DC  185B               	xorwf	goto_XY@x^0,w,c
  1828  0003DE  A4D8               	btfss	status,2,c
  1829  0003E0  EFF4  F001         	goto	i2u47_41
  1830  0003E4  EFF6  F001         	goto	i2u47_40
  1831  0003E8                     i2u47_41:
  1832  0003E8  EFFE  F001         	goto	i2l1414
  1833  0003EC                     i2u47_40:
  1834  0003EC                     
  1835                           ;lcd.c: 91:     {;lcd.c: 92:        temp = 0xC0 + y - 1;
  1836  0003EC  505C               	movf	goto_XY@y^0,w,c
  1837  0003EE  0FBF               	addlw	191
  1838  0003F0  6E60               	movwf	goto_XY@temp^0,c
  1839                           
  1840                           ;lcd.c: 93:        z = temp>>4;
  1841  0003F2  3860               	swapf	goto_XY@temp^0,w,c
  1842  0003F4  0B0F               	andlw	15
  1843  0003F6  6E5E               	movwf	goto_XY@z^0,c
  1844  0003F8  EFD1  F001         	goto	i2l1394
  1845  0003FC                     i2l1414:
  1846  0003FC  0E03               	movlw	3
  1847  0003FE  185B               	xorwf	goto_XY@x^0,w,c
  1848  000400  A4D8               	btfss	status,2,c
  1849  000402  EF05  F002         	goto	i2u48_41
  1850  000406  EF07  F002         	goto	i2u48_40
  1851  00040A                     i2u48_41:
  1852  00040A  EF0F  F002         	goto	i2l1426
  1853  00040E                     i2u48_40:
  1854  00040E                     
  1855                           ;lcd.c: 100:     {;lcd.c: 101:        temp = 0x90 + y - 1;
  1856  00040E  505C               	movf	goto_XY@y^0,w,c
  1857  000410  0F8F               	addlw	143
  1858  000412  6E60               	movwf	goto_XY@temp^0,c
  1859                           
  1860                           ;lcd.c: 102:        z = temp>>4;
  1861  000414  3860               	swapf	goto_XY@temp^0,w,c
  1862  000416  0B0F               	andlw	15
  1863  000418  6E5E               	movwf	goto_XY@z^0,c
  1864  00041A  EFD1  F001         	goto	i2l1394
  1865  00041E                     i2l1426:
  1866  00041E  0E04               	movlw	4
  1867  000420  185B               	xorwf	goto_XY@x^0,w,c
  1868  000422  A4D8               	btfss	status,2,c
  1869  000424  EF16  F002         	goto	i2u49_41
  1870  000428  EF18  F002         	goto	i2u49_40
  1871  00042C                     i2u49_41:
  1872  00042C  EF20  F002         	goto	i2l164
  1873  000430                     i2u49_40:
  1874  000430                     
  1875                           ;lcd.c: 109:     {;lcd.c: 110:        temp = 0xD0 + y - 1;
  1876  000430  505C               	movf	goto_XY@y^0,w,c
  1877  000432  0FCF               	addlw	207
  1878  000434  6E60               	movwf	goto_XY@temp^0,c
  1879                           
  1880                           ;lcd.c: 111:        z = temp>>4;
  1881  000436  3860               	swapf	goto_XY@temp^0,w,c
  1882  000438  0B0F               	andlw	15
  1883  00043A  6E5E               	movwf	goto_XY@z^0,c
  1884  00043C  EFD1  F001         	goto	i2l1394
  1885  000440                     i2l164:
  1886  000440                     i2l168:
  1887  000440  0012               	return		;funcret
  1888  000442                     __end_of_goto_XY:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _lcd_cmd *****************
  1892 ;; Defined at:
  1893 ;;		line 68 in file "lcd.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  lcd             2    3[COMRAM] PTR struct .
  1896 ;;		 -> NULL(0), PORTD(1), 
  1897 ;;  a               1    5[COMRAM] unsigned char 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1909 ;;      Params:         3       0       0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0
  1911 ;;      Temps:          1       0       0       0       0       0       0
  1912 ;;      Totals:         4       0       0       0       0       0       0
  1913 ;;Total ram usage:        4 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    1
  1916 ;; This function calls:
  1917 ;;		i2_pulso
  1918 ;; This function is called by:
  1919 ;;		_goto_XY
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text9
  1924  000876                     __ptext9:
  1925                           	opt callstack 0
  1926  000876                     _lcd_cmd:
  1927                           	opt callstack 24
  1928  000876                     
  1929                           ;lcd.c: 69:     lcd->RS = 0;
  1930  000876  C055  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1931  00087A  C056  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1932  00087E  90DF               	bcf	indf2,0,c
  1933  000880                     
  1934                           ;lcd.c: 70:     lcd->data = (a);
  1935  000880  C057  F058         	movff	lcd_cmd@a,??_lcd_cmd
  1936  000884  C055  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1937  000888  C056  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1938  00088C  3A58               	swapf	??_lcd_cmd^0,f,c
  1939  00088E  50DF               	movf	indf2,w,c
  1940  000890  1858               	xorwf	??_lcd_cmd^0,w,c
  1941  000892  0B0F               	andlw	-241
  1942  000894  1858               	xorwf	??_lcd_cmd^0,w,c
  1943  000896  6EDF               	movwf	indf2,c
  1944  000898                     
  1945                           ;lcd.c: 71:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1946  000898  0E06               	movlw	6
  1947  00089A  6E58               	movwf	??_lcd_cmd^0,c
  1948  00089C  0E30               	movlw	48
  1949  00089E                     i2u111_47:
  1950  00089E  2EE8               	decfsz	wreg,f,c
  1951  0008A0  D7FE               	bra	i2u111_47
  1952  0008A2  2E58               	decfsz	??_lcd_cmd^0,f,c
  1953  0008A4  D7FC               	bra	i2u111_47
  1954  0008A6  D000               	nop2	
  1955  0008A8                     
  1956                           ;lcd.c: 73:     pulso(lcd);
  1957  0008A8  C055  F052         	movff	lcd_cmd@lcd,i2pulso@lcd
  1958  0008AC  C056  F053         	movff	lcd_cmd@lcd+1,i2pulso@lcd+1
  1959  0008B0  EC1A  F004         	call	i2_pulso	;wreg free
  1960  0008B4  0012               	return		;funcret
  1961  0008B6                     __end_of_lcd_cmd:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function _clear_display *****************
  1965 ;; Defined at:
  1966 ;;		line 156 in file "lcd.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  lcd             2    3[COMRAM] PTR struct .
  1969 ;;		 -> NULL(0), PORTD(1), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         2       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0
  1983 ;;      Temps:          1       0       0       0       0       0       0
  1984 ;;      Totals:         3       0       0       0       0       0       0
  1985 ;;Total ram usage:        3 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		i2_pulso
  1990 ;; This function is called by:
  1991 ;;		_le_entrada
  1992 ;;		_creditos
  1993 ;;		_instrucoes
  1994 ;;		_menu
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text10
  1999  00068E                     __ptext10:
  2000                           	opt callstack 0
  2001  00068E                     _clear_display:
  2002                           	opt callstack 25
  2003  00068E                     
  2004                           ;lcd.c: 157:     lcd->E = 0;
  2005  00068E  C055  FFD9         	movff	clear_display@lcd,fsr2l
  2006  000692  C056  FFDA         	movff	clear_display@lcd+1,fsr2h
  2007  000696  94DF               	bcf	indf2,2,c
  2008                           
  2009                           ;lcd.c: 158:     lcd->RS = 0;
  2010  000698  C055  FFD9         	movff	clear_display@lcd,fsr2l
  2011  00069C  C056  FFDA         	movff	clear_display@lcd+1,fsr2h
  2012  0006A0  90DF               	bcf	indf2,0,c
  2013                           
  2014                           ;lcd.c: 159:     lcd->R_W = 0;
  2015  0006A2  C055  FFD9         	movff	clear_display@lcd,fsr2l
  2016  0006A6  C056  FFDA         	movff	clear_display@lcd+1,fsr2h
  2017  0006AA  92DF               	bcf	indf2,1,c
  2018  0006AC                     
  2019                           ;lcd.c: 162:     lcd->data = 0x0;
  2020  0006AC  C055  FFD9         	movff	clear_display@lcd,fsr2l
  2021  0006B0  C056  FFDA         	movff	clear_display@lcd+1,fsr2h
  2022  0006B4  0E0F               	movlw	-241
  2023  0006B6  16DF               	andwf	indf2,f,c
  2024  0006B8                     
  2025                           ;lcd.c: 163:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2026  0006B8  0E06               	movlw	6
  2027  0006BA  6E57               	movwf	??_clear_display^0,c
  2028  0006BC  0E30               	movlw	48
  2029  0006BE                     i2u112_47:
  2030  0006BE  2EE8               	decfsz	wreg,f,c
  2031  0006C0  D7FE               	bra	i2u112_47
  2032  0006C2  2E57               	decfsz	??_clear_display^0,f,c
  2033  0006C4  D7FC               	bra	i2u112_47
  2034  0006C6  D000               	nop2	
  2035  0006C8                     
  2036                           ;lcd.c: 165:     pulso(lcd);
  2037  0006C8  C055  F052         	movff	clear_display@lcd,i2pulso@lcd
  2038  0006CC  C056  F053         	movff	clear_display@lcd+1,i2pulso@lcd+1
  2039  0006D0  EC1A  F004         	call	i2_pulso	;wreg free
  2040  0006D4                     
  2041                           ;lcd.c: 168:     lcd->data = 0x1;
  2042  0006D4  C055  FFD9         	movff	clear_display@lcd,fsr2l
  2043  0006D8  C056  FFDA         	movff	clear_display@lcd+1,fsr2h
  2044  0006DC  50DF               	movf	indf2,w,c
  2045  0006DE  0B0F               	andlw	-241
  2046  0006E0  0910               	iorlw	16
  2047  0006E2  6EDF               	movwf	indf2,c
  2048  0006E4                     
  2049                           ;lcd.c: 169:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2050  0006E4  0E06               	movlw	6
  2051  0006E6  6E57               	movwf	??_clear_display^0,c
  2052  0006E8  0E30               	movlw	48
  2053  0006EA                     i2u113_47:
  2054  0006EA  2EE8               	decfsz	wreg,f,c
  2055  0006EC  D7FE               	bra	i2u113_47
  2056  0006EE  2E57               	decfsz	??_clear_display^0,f,c
  2057  0006F0  D7FC               	bra	i2u113_47
  2058  0006F2  D000               	nop2	
  2059  0006F4                     
  2060                           ;lcd.c: 171:     pulso(lcd);
  2061  0006F4  C055  F052         	movff	clear_display@lcd,i2pulso@lcd
  2062  0006F8  C056  F053         	movff	clear_display@lcd+1,i2pulso@lcd+1
  2063  0006FC  EC1A  F004         	call	i2_pulso	;wreg free
  2064  000700  0012               	return		;funcret
  2065  000702                     __end_of_clear_display:
  2066                           	opt callstack 0
  2067                           
  2068 ;; *************** function i2_pulso *****************
  2069 ;; Defined at:
  2070 ;;		line 11 in file "lcd.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  lcd             2    0[COMRAM] PTR struct .
  2073 ;;		 -> NULL(0), PORTD(1), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr2l, fsr2h, status,2
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2085 ;;      Params:         2       0       0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0
  2087 ;;      Temps:          1       0       0       0       0       0       0
  2088 ;;      Totals:         3       0       0       0       0       0       0
  2089 ;;Total ram usage:        3 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_lcd_cmd
  2095 ;;		_write_char
  2096 ;;		_clear_display
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text11
  2101  000834                     __ptext11:
  2102                           	opt callstack 0
  2103  000834                     i2_pulso:
  2104                           	opt callstack 25
  2105  000834                     
  2106                           ;lcd.c: 13:     lcd->E = 1;
  2107  000834  C052  FFD9         	movff	i2pulso@lcd,fsr2l
  2108  000838  C053  FFDA         	movff	i2pulso@lcd+1,fsr2h
  2109  00083C  84DF               	bsf	indf2,2,c
  2110  00083E                     
  2111                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2112  00083E  0E06               	movlw	6
  2113  000840  6E54               	movwf	??i2_pulso^0,c
  2114  000842  0E30               	movlw	48
  2115  000844                     i2u114_47:
  2116  000844  2EE8               	decfsz	wreg,f,c
  2117  000846  D7FE               	bra	i2u114_47
  2118  000848  2E54               	decfsz	??i2_pulso^0,f,c
  2119  00084A  D7FC               	bra	i2u114_47
  2120  00084C  D000               	nop2	
  2121  00084E                     
  2122                           ;lcd.c: 17:     lcd->E = 0;
  2123  00084E  C052  FFD9         	movff	i2pulso@lcd,fsr2l
  2124  000852  C053  FFDA         	movff	i2pulso@lcd+1,fsr2h
  2125  000856  94DF               	bcf	indf2,2,c
  2126                           
  2127                           ;lcd.c: 18:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2128  000858  0E1A               	movlw	26
  2129  00085A  6E54               	movwf	??i2_pulso^0,c
  2130  00085C  0EF8               	movlw	248
  2131  00085E                     i2u115_47:
  2132  00085E  2EE8               	decfsz	wreg,f,c
  2133  000860  D7FE               	bra	i2u115_47
  2134  000862  2E54               	decfsz	??i2_pulso^0,f,c
  2135  000864  D7FC               	bra	i2u115_47
  2136  000866  D000               	nop2	
  2137  000868                     
  2138                           ;lcd.c: 19:     lcd->data = 0x00;
  2139  000868  C052  FFD9         	movff	i2pulso@lcd,fsr2l
  2140  00086C  C053  FFDA         	movff	i2pulso@lcd+1,fsr2h
  2141  000870  0E0F               	movlw	-241
  2142  000872  16DF               	andwf	indf2,f,c
  2143  000874  0012               	return		;funcret
  2144  000876                     __end_ofi2_pulso:
  2145                           	opt callstack 0
  2146  0000                     
  2147                           	psect	rparam
  2148  0000                     
  2149                           	psect	temp
  2150  00006C                     btemp:
  2151                           	opt callstack 0
  2152  00006C                     	ds	1
  2153  0000                     int$flags	set	btemp
  2154  0000                     wtemp8	set	btemp+1
  2155  0000                     ttemp5	set	btemp+1
  2156  0000                     ttemp6	set	btemp+4
  2157  0000                     ttemp7	set	btemp+8
  2158                           tosu	equ	0xFFF
  2159                           tosh	equ	0xFFE
  2160                           tosl	equ	0xFFD
  2161                           stkptr	equ	0xFFC
  2162                           pclatu	equ	0xFFB
  2163                           pclath	equ	0xFFA
  2164                           pcl	equ	0xFF9
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           indf0	equ	0xFEF
  2172                           postinc0	equ	0xFEE
  2173                           postdec0	equ	0xFED
  2174                           preinc0	equ	0xFEC
  2175                           plusw0	equ	0xFEB
  2176                           fsr0h	equ	0xFEA
  2177                           fsr0l	equ	0xFE9
  2178                           wreg	equ	0xFE8
  2179                           indf1	equ	0xFE7
  2180                           postinc1	equ	0xFE6
  2181                           postdec1	equ	0xFE5
  2182                           preinc1	equ	0xFE4
  2183                           plusw1	equ	0xFE3
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           bsr	equ	0xFE0
  2187                           indf2	equ	0xFDF
  2188                           postinc2	equ	0xFDE
  2189                           postdec2	equ	0xFDD
  2190                           preinc2	equ	0xFDC
  2191                           plusw2	equ	0xFDB
  2192                           fsr2h	equ	0xFDA
  2193                           fsr2l	equ	0xFD9
  2194                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        161
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24     107
    BANK0           128     10      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clear_display@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_display_onoff_control
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    _int_handler->_le_entrada
    _le_entrada->_goto_XY
    _write_char->i2_pulso
    _goto_XY->_lcd_cmd
    _lcd_cmd->i2_pulso
    _clear_display->i2_pulso

Critical Paths under _main in BANK0

    _main->_function_set

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4982
                                              8 BANK0      2     2      0
              _display_onoff_control
                     _entry_mode_set
                       _function_set
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1763
                                              0 BANK0      8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1549
                                             22 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1670
                                             22 COMRAM     2     2      0
                                              0 BANK0      5     0      5
                              _pulso
 ---------------------------------------------------------------------------------
 (2) _pulso                                                3     1      2    1000
                                             19 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int_handler                                          2     2      0   11190
                                             17 COMRAM     2     2      0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (4) _le_entrada                                           2     2      0   11190
                                             15 COMRAM     2     2      0
                      _clear_display
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (5) _write_char                                           4     1      3    3304
                                              3 COMRAM     4     1      3
                            i2_pulso
 ---------------------------------------------------------------------------------
 (5) _goto_XY                                              8     4      4    6548
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (6) _lcd_cmd                                              4     1      3    1500
                                              3 COMRAM     4     1      3
                            i2_pulso
 ---------------------------------------------------------------------------------
 (5) _clear_display                                        3     1      2    1338
                                              3 COMRAM     3     1      2
                            i2_pulso
 ---------------------------------------------------------------------------------
 (6) i2_pulso                                              3     1      2     196
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso

 _int_handler (ROOT)
   _le_entrada
     _clear_display
       i2_pulso
     _goto_XY
       _lcd_cmd
         i2_pulso
     _write_char
       i2_pulso

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      5A       5       70.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      6B       1       84.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      15        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 10 15:09:34 2020

         ?_display_onoff_control 00D0                               l45 04D4  
                             l46 04D4                      __CFG_OSC$HS 000000  
                            l152 0384                              l155 0604  
                            l171 068C                              l149 0832  
                            u927 04C6                              u937 02D8  
                            u947 0314                              u957 036E  
                            u967 0638                              u977 0676  
                            u987 05A6                              u997 05EE  
                            _lcd 006A                              wreg 000FE8  
                  write_char@lcd 0055                    creditos@F3056 0041  
                  creditos@F3059 0031                     __CFG_WDT$OFF 000000  
                           l1470 080C                             l1472 0826  
                           l1466 07F2                             l1468 07FC  
                           l1900 05E8                             l1902 05F8  
                           l1910 0642                             l1912 064E  
                           l1904 0606                             l1920 0452  
                           l1914 0670                             l1906 0626  
                           l1930 046E                             l1922 0454  
                           l1916 0680                             l1908 0632  
                           l1932 0488                             l1924 0462  
                           l1870 02A0                             l1934 04A2  
                           l1926 0464                             l1918 0442  
                           l1880 030C                             l1872 02C0  
                           l1936 04B8                             l1928 0466  
                           l1890 0574                             l1882 031E  
                           l1874 02D0                             l1938 04BA  
                           l1892 0594                             l1884 032A  
                           l1876 02E2                             l1894 05A0  
                           l1886 0366                             l1878 02EE  
                           l1896 05B0                             l1888 0378  
                           l1898 05BC                             u1007 0802  
                           u1017 081C                             i2l40 08DE  
                           _TMR0 000FD6                             _main 0442  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 006C                             start 000E  
          function_set@num_lines 00D3                  __end_ofi2_pulso 0876  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                function_set@lcd 00D0                            ?_main 0052  
                          _T0CON 000FD5                            i2l206 029E  
                          i2l164 0440                            i2l149 0874  
                          i2l158 08B4                            i2l174 0572  
                          i2l168 0440                            i2l177 0700  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0052                  __end_of_lcd_cmd 08B6  
                __end_of_goto_XY 0442                            _pulso 07F2  
                          tablat 000FF5                            ttemp5 006D  
                          ttemp6 0070                            ttemp7 0074  
                          status 000FD8                            wtemp8 006D  
                __initialization 07A4                     __end_of_main 04DC  
                     i2pulso@lcd 0052                           ??_main 00D8  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         ?_pulso 0065                           i2l1400 03C6  
                         i2l1402 03DA                           i2l1404 03EC  
                         i2l1500 00F2                           i2l1414 03FC  
                         i2l1510 012A                           i2l1502 0100  
                         i2l1416 040E                           i2l1440 04FA  
                         i2l1520 01A4                           i2l1512 014E  
                         i2l1504 0112                           i2l1600 08D0  
                         i2l1426 041E                           i2l1450 055C  
                         i2l1442 0518                           i2l1530 01EE  
                         i2l1522 01BC                           i2l1514 0166  
                         i2l1506 0118                           i2l1602 08D8  
                         i2l1380 0868                           i2l1460 06D4  
                         i2l1452 068E                           i2l1428 0430  
                         i2l1444 0528                           i2l1540 0248  
                         i2l1532 01F2                           i2l1516 0172  
                         i2l1508 011C                           i2l1524 01C8  
                         i2l1604 08DC                           i2l1374 0834  
                         i2l1462 06E4                           i2l1454 06AC  
                         i2l1382 0876                           i2l1390 0386  
                         i2l1446 0534                           i2l1438 04DC  
                         i2l1542 0256                           i2l1534 0200  
                         i2l1526 01D6                           i2l1518 0180  
                         i2l1376 083E                           i2l1464 06F4  
                         i2l1456 06B8                           i2l1384 0880  
                         i2l1392 0396                           i2l1448 054C  
                         i2l1544 027A                           i2l1536 0224  
                         i2l1528 01E8                           i2l1480 003C  
                         i2l1378 084E                           i2l1458 06C8  
                         i2l1386 0898                           i2l1394 03A2  
                         i2l1546 0292                           i2l1538 023C  
                         i2l1490 0090                           i2l1482 0042  
                         i2l1474 0012                           i2l1388 08A8  
                         i2l1396 03A6                           i2l1492 009C  
                         i2l1484 0046                           i2l1476 001E  
                         i2l1398 03B6                           i2l1494 00AA  
                         i2l1486 0054                           i2l1478 002C  
                         i2l1496 00CE                           i2l1488 0078  
                         i2l1498 00E6                           i2l1596 08C0  
                         i2l1598 08CE                        ??i2_pulso 0054  
          __end_of_clear_display 0702                      goto_XY@temp 0060  
                  ?_function_set 00D0                        ??_lcd_cmd 0058  
                      ??_goto_XY 005D                     __pdataCOMRAM 0001  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8         display_onoff_control@lcd 00D0  
                     __accesstop 0080          __end_of__initialization 07E4  
                  ___rparam_used 000001          ??_display_onoff_control 0068  
                 __pcstackCOMRAM 0052                     __pidataBANK0 0753  
                  __end_of_pulso 0834                   ??_function_set 00D5  
           __size_of_int_handler 08E2                          ??_pulso 0067  
                     __pnvCOMRAM 006A      entry_mode_set@display_shift 00D3  
                        i2u50_40 002C                          i2u50_41 0028  
                        i2u51_40 003C                          i2u51_41 0038  
                        i2u60_40 0200                          i2u52_40 0054  
                        i2u60_41 01FC                          i2u52_41 0050  
                        i2u61_40 0256                          i2u53_40 00AA  
                        i2u61_41 0252                          i2u53_41 00A6  
                        i2u46_40 0396                          i2u54_40 0100  
                        i2u62_40 08CE                          i2u46_41 0392  
                        i2u54_41 00FC                          i2u62_41 08CA  
                        i2u47_40 03EC                          i2u55_40 0112  
                        i2u47_41 03E8                          i2u55_41 010E  
                        i2u48_40 040E                          i2u56_40 012A  
                        i2u48_41 040A                          i2u56_41 0126  
                        i2u49_40 0430                          i2u57_40 0180  
                        i2u49_41 042C                          i2u57_41 017C  
                        i2u58_40 01D6                          i2u58_41 01D2  
                        i2u59_40 01E8                          i2u59_41 01E4  
                     _le_entrada 0012                          i2_pulso 0834  
        __size_of_entry_mode_set 0088                          __Hparam 0000  
 display_onoff_control@cursor_on 00D3                          __Lparam 0000  
                        __pcinit 07A4                          __ramtop 0600  
                        __ptext0 0442                          __ptext1 02A0  
                        __ptext2 0606                          __ptext3 0574  
                        __ptext4 07F2                          __ptext6 0012  
                        __ptext7 04DC                          __ptext8 0386  
                        __ptext9 0876                          _lcd_cmd 0876  
                      _T0CONbits 000FD5                          _goto_XY 0386  
                 __pintcode_body 08B6             end_of_initialization 07E4  
           __end_of_function_set 0386                    __Lmediumconst 0000  
                        int_func 08B6                          postdec1 000FE5  
                        postinc0 000FEE                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0055                      ?_le_entrada 0052  
 __size_of_display_onoff_control 0092    __end_of_display_onoff_control 0606  
                     _write_char 04DC                    __pidataCOMRAM 0702  
         __size_of_clear_display 0074              start_initialization 07A4  
                 _entry_mode_set 0606                       goto_XY@lcd 0059  
                    __pdataBANK0 0080              __size_of_le_entrada 028E  
                  ??_int_handler 0063                    __pcstackBANK0 00D0  
          __size_of_function_set 00E6                  instrucoes@F3083 0021  
                instrucoes@F3092 00C0                  instrucoes@F3086 0011  
                instrucoes@F3089 0001                         ?i2_pulso 0052  
         __end_of_entry_mode_set 068E                    _clear_display 068E  
                      __pintcode 0008                      ?_write_char 0055  
                       ?_lcd_cmd 0055                     _function_set 02A0  
                       ?_goto_XY 0059                 clear_display@lcd 0055  
                 __size_of_pulso 0042              __end_of_int_handler 08EA  
                ?_entry_mode_set 00D0                   ?_clear_display 0055  
                       i2u110_47 03BC                         i2u102_47 0082  
                       i2u111_47 089E                         i2u103_47 00D8  
                       i2u112_47 06BE                         i2u104_47 0158  
                       i2u113_47 06EA                         i2u105_47 01AE  
                       i2u114_47 0844                         i2u106_47 022E  
                       i2u115_47 085E                         i2u107_47 0284  
                       i2u108_47 051E                         i2u109_47 0552  
   entry_mode_set@move_direction 00D2  display_onoff_control@display_on 00D2  
     display_onoff_control@blink 00D4                      write_char@c 0057  
                      menu@F3101 00B0                        menu@F3110 0080  
                      menu@F3104 00A0                        menu@F3107 0090  
                   ??_le_entrada 0061                        copy_data0 07B8  
                      copy_data1 07D8              __size_of_write_char 0098  
               __size_ofi2_pulso 0042                         __Hrparam 0000  
                       __Lrparam 0000                entry_mode_set@lcd 00D0  
             __end_of_le_entrada 02A0                 __size_of_lcd_cmd 0040  
               __size_of_goto_XY 00BC                      _int_handler 0008  
                       __ptext10 068E                         __ptext11 0834  
                       _controle 0051                  ??_clear_display 0057  
                  __size_of_main 009A                         int$flags 006C  
                       lcd_cmd@a 0057            _display_onoff_control 0574  
                     _INTCONbits 000FF2                         goto_XY@a 005F  
                       goto_XY@x 005B                         goto_XY@y 005C  
                       goto_XY@z 005E                         intlevel2 0000  
        function_set@data_lenght 00D2                     ??_write_char 0058  
                       pulso@lcd 0065                 ??_entry_mode_set 0068  
          function_set@char_font 00D4               __end_of_write_char 0574  
