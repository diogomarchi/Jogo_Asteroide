

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun 14 15:04:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4520 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000CB4                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for instrucoes@F3108
    73  000CB4  32                 	db	50
    74  000CB5  2E                 	db	46
    75  000CB6  45                 	db	69
    76  000CB7  53                 	db	83
    77  000CB8  43                 	db	67
    78  000CB9  41                 	db	65
    79  000CBA  50                 	db	80
    80  000CBB  45                 	db	69
    81  000CBC  20                 	db	32
    82  000CBD  56                 	db	86
    83  000CBE  4F                 	db	79
    84  000CBF  4C                 	db	76
    85  000CC0  54                 	db	84
    86  000CC1  41                 	db	65
    87  000CC2  00                 	db	0
    88  000CC3  00                 	db	0
    89                           
    90                           ;initializer for instrucoes@F3105
    91  000CC4  4E                 	db	78
    92  000CC5  41                 	db	65
    93  000CC6  56                 	db	86
    94  000CC7  45                 	db	69
    95  000CC8  00                 	db	0
    96  000CC9  00                 	db	0
    97  000CCA  00                 	db	0
    98  000CCB  00                 	db	0
    99  000CCC  00                 	db	0
   100  000CCD  00                 	db	0
   101  000CCE  00                 	db	0
   102  000CCF  00                 	db	0
   103  000CD0  00                 	db	0
   104  000CD1  00                 	db	0
   105  000CD2  00                 	db	0
   106  000CD3  00                 	db	0
   107                           
   108                           ;initializer for instrucoes@F3102
   109  000CD4  31                 	db	49
   110  000CD5  2E                 	db	46
   111  000CD6  53                 	db	83
   112  000CD7  45                 	db	69
   113  000CD8  54                 	db	84
   114  000CD9  41                 	db	65
   115  000CDA  53                 	db	83
   116  000CDB  20                 	db	32
   117  000CDC  4D                 	db	77
   118  000CDD  4F                 	db	79
   119  000CDE  56                 	db	86
   120  000CDF  45                 	db	69
   121  000CE0  4D                 	db	77
   122  000CE1  20                 	db	32
   123  000CE2  41                 	db	65
   124  000CE3  00                 	db	0
   125                           
   126                           ;initializer for creditos@F3078
   127  000CE4  32                 	db	50
   128  000CE5  2E                 	db	46
   129  000CE6  47                 	db	71
   130  000CE7  45                 	db	69
   131  000CE8  4F                 	db	79
   132  000CE9  52                 	db	82
   133  000CEA  47                 	db	71
   134  000CEB  45                 	db	69
   135  000CEC  20                 	db	32
   136  000CED  4E                 	db	78
   137  000CEE  41                 	db	65
   138  000CEF  52                 	db	82
   139  000CF0  44                 	db	68
   140  000CF1  45                 	db	69
   141  000CF2  53                 	db	83
   142  000CF3  00                 	db	0
   143                           
   144                           ;initializer for creditos@F3075
   145  000CF4  31                 	db	49
   146  000CF5  2E                 	db	46
   147  000CF6  44                 	db	68
   148  000CF7  49                 	db	73
   149  000CF8  4F                 	db	79
   150  000CF9  47                 	db	71
   151  000CFA  4F                 	db	79
   152  000CFB  20                 	db	32
   153  000CFC  4D                 	db	77
   154  000CFD  41                 	db	65
   155  000CFE  52                 	db	82
   156  000CFF  43                 	db	67
   157  000D00  48                 	db	72
   158  000D01  49                 	db	73
   159  000D02  00                 	db	0
   160  000D03  00                 	db	0
   161                           
   162                           ;initializer for _lcd
   163  000D04  83                 	db	131
   164  000D05  0F                 	db	15
   165                           
   166                           	psect	idataBANK0
   167  000E3A                     __pidataBANK0:
   168                           	opt callstack 0
   169                           
   170                           ;initializer for instrucoes@F3111
   171  000E3A  50                 	db	80
   172  000E3B  52                 	db	82
   173  000E3C  4F                 	db	79
   174  000E3D  20                 	db	32
   175  000E3E  4D                 	db	77
   176  000E3F  45                 	db	69
   177  000E40  4E                 	db	78
   178  000E41  55                 	db	85
   179  000E42  00                 	db	0
   180  000E43  00                 	db	0
   181  000E44  00                 	db	0
   182  000E45  00                 	db	0
   183  000E46  00                 	db	0
   184  000E47  00                 	db	0
   185  000E48  00                 	db	0
   186  000E49  00                 	db	0
   187  0000                     _PORTBbits	set	3969
   188  0000                     _T0CONbits	set	4053
   189  0000                     _T0CON	set	4053
   190  0000                     _TRISD	set	3989
   191  0000                     _PORTB	set	3969
   192  0000                     _TRISB	set	3987
   193  0000                     _ADCON1	set	4033
   194  0000                     _TMR0L	set	4054
   195  0000                     _INTCONbits	set	4082
   196  0000                     _PORTD	set	3971
   197                           
   198                           	psect	smallconst
   199  000600                     __psmallconst:
   200                           	opt callstack 0
   201  000600  00                 	db	0
   202  000601                     STR_1:
   203  000601  31                 	db	49	;'1'
   204  000602  2E                 	db	46
   205  000603  4A                 	db	74	;'J'
   206  000604  4F                 	db	79	;'O'
   207  000605  47                 	db	71	;'G'
   208  000606  41                 	db	65	;'A'
   209  000607  52                 	db	82	;'R'
   210  000608  2E                 	db	46
   211  000609  2E                 	db	46
   212  00060A  2E                 	db	46
   213  00060B  2E                 	db	46
   214  00060C  2E                 	db	46
   215  00060D  2E                 	db	46
   216  00060E  2E                 	db	46
   217  00060F  2E                 	db	46
   218  000610  00                 	db	0
   219  000611                     STR_3:
   220  000611  33                 	db	51	;'3'
   221  000612  2E                 	db	46
   222  000613  43                 	db	67	;'C'
   223  000614  52                 	db	82	;'R'
   224  000615  45                 	db	69	;'E'
   225  000616  44                 	db	68	;'D'
   226  000617  49                 	db	73	;'I'
   227  000618  54                 	db	84	;'T'
   228  000619  4F                 	db	79	;'O'
   229  00061A  53                 	db	83	;'S'
   230  00061B  2E                 	db	46
   231  00061C  2E                 	db	46
   232  00061D  2E                 	db	46
   233  00061E  2E                 	db	46
   234  00061F  2E                 	db	46
   235  000620  00                 	db	0
   236  000621                     STR_4:
   237  000621  34                 	db	52	;'4'
   238  000622  2E                 	db	46
   239  000623  46                 	db	70	;'F'
   240  000624  49                 	db	73	;'I'
   241  000625  4E                 	db	78	;'N'
   242  000626  41                 	db	65	;'A'
   243  000627  4C                 	db	76	;'L'
   244  000628  49                 	db	73	;'I'
   245  000629  5A                 	db	90	;'Z'
   246  00062A  41                 	db	65	;'A'
   247  00062B  52                 	db	82	;'R'
   248  00062C  2E                 	db	46
   249  00062D  2E                 	db	46
   250  00062E  2E                 	db	46
   251  00062F  2E                 	db	46
   252  000630  00                 	db	0
   253  000631                     STR_2:
   254  000631  32                 	db	50	;'2'
   255  000632  2E                 	db	46
   256  000633  49                 	db	73	;'I'
   257  000634  4E                 	db	78	;'N'
   258  000635  53                 	db	83	;'S'
   259  000636  54                 	db	84	;'T'
   260  000637  52                 	db	82	;'R'
   261  000638  55                 	db	85	;'U'
   262  000639  43                 	db	67	;'C'
   263  00063A  4F                 	db	79	;'O'
   264  00063B  45                 	db	69	;'E'
   265  00063C  53                 	db	83	;'S'
   266  00063D  2E                 	db	46
   267  00063E  2E                 	db	46
   268  00063F  2E                 	db	46
   269  000640  00                 	db	0
   270                           
   271                           ; #config settings
   272  000641  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           	psect	cinit
   275  000C52                     __pcinit:
   276                           	opt callstack 0
   277  000C52                     start_initialization:
   278                           	opt callstack 0
   279  000C52                     __initialization:
   280                           	opt callstack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (16 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  000C52  0E3A               	movlw	low __pidataBANK0
   285  000C54  6EF6               	movwf	tblptrl,c
   286  000C56  0E0E               	movlw	high __pidataBANK0
   287  000C58  6EF7               	movwf	tblptrh,c
   288  000C5A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  000C5C  6EF8               	movwf	tblptru,c
   290  000C5E  EE00  F0C0         	lfsr	0,__pdataBANK0
   291  000C62  EE10 F010          	lfsr	1,16
   292  000C66                     copy_data0:
   293  000C66  0009               	tblrd		*+
   294  000C68  CFF5 FFEE          	movff	tablat,postinc0
   295  000C6C  50E5               	movf	postdec1,w,c
   296  000C6E  50E1               	movf	fsr1l,w,c
   297  000C70  E1FA               	bnz	copy_data0
   298                           
   299                           ; Initialize objects allocated to COMRAM (82 bytes)
   300                           ; load TBLPTR registers with __pidataCOMRAM
   301  000C72  0EB4               	movlw	low __pidataCOMRAM
   302  000C74  6EF6               	movwf	tblptrl,c
   303  000C76  0E0C               	movlw	high __pidataCOMRAM
   304  000C78  6EF7               	movwf	tblptrh,c
   305  000C7A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   306  000C7C  6EF8               	movwf	tblptru,c
   307  000C7E  EE00  F001         	lfsr	0,__pdataCOMRAM
   308  000C82  EE10 F052          	lfsr	1,82
   309  000C86                     copy_data1:
   310  000C86  0009               	tblrd		*+
   311  000C88  CFF5 FFEE          	movff	tablat,postinc0
   312  000C8C  50E5               	movf	postdec1,w,c
   313  000C8E  50E1               	movf	fsr1l,w,c
   314  000C90  E1FA               	bnz	copy_data1
   315                           
   316                           ; Clear objects allocated to BANK0 (64 bytes)
   317  000C92  EE00  F080         	lfsr	0,__pbssBANK0
   318  000C96  0E40               	movlw	64
   319  000C98                     clear_0:
   320  000C98  6AEE               	clrf	postinc0,c
   321  000C9A  06E8               	decf	wreg,f,c
   322  000C9C  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to COMRAM (2 bytes)
   325  000C9E  6A73               	clrf	(__pbssCOMRAM+1)& (0+255),c
   326  000CA0  6A72               	clrf	__pbssCOMRAM& (0+255),c
   327  000CA2                     end_of_initialization:
   328                           	opt callstack 0
   329  000CA2                     __end_of__initialization:
   330                           	opt callstack 0
   331  000CA2  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   332  000CA4  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   333  000CA6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   334  000CA8  6EF8               	movwf	tblptru,c
   335  000CAA  0E06               	movlw	high __Lsmallconst
   336  000CAC  6EF7               	movwf	tblptrh,c
   337  000CAE  0100               	movlb	0
   338  000CB0  EFEF  F005         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341  000072                     __pbssCOMRAM:
   342                           	opt callstack 0
   343  000072                     _op:
   344                           	opt callstack 0
   345  000072                     	ds	1
   346  000073                     _botoes:
   347                           	opt callstack 0
   348  000073                     	ds	1
   349                           
   350                           	psect	dataCOMRAM
   351  000001                     __pdataCOMRAM:
   352                           	opt callstack 0
   353  000001                     instrucoes@F3108:
   354                           	opt callstack 0
   355  000001                     	ds	16
   356  000011                     instrucoes@F3105:
   357                           	opt callstack 0
   358  000011                     	ds	16
   359  000021                     instrucoes@F3102:
   360                           	opt callstack 0
   361  000021                     	ds	16
   362  000031                     creditos@F3078:
   363                           	opt callstack 0
   364  000031                     	ds	16
   365  000041                     creditos@F3075:
   366                           	opt callstack 0
   367  000041                     	ds	16
   368  000051                     _lcd:
   369                           	opt callstack 0
   370  000051                     	ds	2
   371                           
   372                           	psect	bssBANK0
   373  000080                     __pbssBANK0:
   374                           	opt callstack 0
   375  000080                     _mat_disp:
   376                           	opt callstack 0
   377  000080                     	ds	64
   378                           
   379                           	psect	dataBANK0
   380  0000C0                     __pdataBANK0:
   381                           	opt callstack 0
   382  0000C0                     instrucoes@F3111:
   383                           	opt callstack 0
   384  0000C0                     	ds	16
   385                           
   386                           	psect	cstackCOMRAM
   387  000053                     __pcstackCOMRAM:
   388                           	opt callstack 0
   389  000053                     pulso@lcd:
   390                           	opt callstack 0
   391  000053                     write_char@lcd:
   392                           	opt callstack 0
   393  000053                     strcpy@dest:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x0
   397  000053                     	ds	2
   398  000055                     ??_pulso:
   399  000055                     write_char@c:
   400                           	opt callstack 0
   401  000055                     strcpy@src:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405  000055                     	ds	1
   406  000056                     ??_write_char:
   407  000056                     function_set@lcd:
   408                           	opt callstack 0
   409  000056                     display_onoff_control@lcd:
   410                           	opt callstack 0
   411  000056                     lcd_cmd@lcd:
   412                           	opt callstack 0
   413  000056                     entry_mode_set@lcd:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x3
   417  000056                     	ds	1
   418  000057                     strcpy@s:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x4
   422  000057                     	ds	1
   423  000058                     function_set@data_lenght:
   424                           	opt callstack 0
   425  000058                     display_onoff_control@display_on:
   426                           	opt callstack 0
   427  000058                     lcd_cmd@a:
   428                           	opt callstack 0
   429  000058                     entry_mode_set@move_direction:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000058                     	ds	1
   434  000059                     ??_lcd_cmd:
   435  000059                     function_set@num_lines:
   436                           	opt callstack 0
   437  000059                     display_onoff_control@cursor_on:
   438                           	opt callstack 0
   439  000059                     entry_mode_set@display_shift:
   440                           	opt callstack 0
   441  000059                     strcpy@d:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x6
   445  000059                     	ds	1
   446  00005A                     ??_entry_mode_set:
   447  00005A                     function_set@char_font:
   448                           	opt callstack 0
   449  00005A                     display_onoff_control@blink:
   450                           	opt callstack 0
   451  00005A                     goto_XY@lcd:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x7
   455  00005A                     	ds	1
   456  00005B                     ??_function_set:
   457  00005B                     ??_display_onoff_control:
   458                           
   459                           ; 1 bytes @ 0x8
   460  00005B                     	ds	1
   461  00005C                     goto_XY@x:
   462                           	opt callstack 0
   463                           
   464                           ; 1 bytes @ 0x9
   465  00005C                     	ds	1
   466  00005D                     goto_XY@y:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0xA
   470  00005D                     	ds	1
   471  00005E                     ??_goto_XY:
   472                           
   473                           ; 1 bytes @ 0xB
   474  00005E                     	ds	1
   475  00005F                     goto_XY@z:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0xC
   479  00005F                     	ds	1
   480  000060                     goto_XY@a:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0xD
   484  000060                     	ds	1
   485  000061                     goto_XY@temp:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0xE
   489  000061                     	ds	1
   490  000062                     print_mat@lcd:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0xF
   494  000062                     	ds	2
   495  000064                     ??_print_mat:
   496                           
   497                           ; 1 bytes @ 0x11
   498  000064                     	ds	4
   499  000068                     print_mat@j:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x15
   503  000068                     	ds	2
   504  00006A                     print_mat@i:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x17
   508  00006A                     	ds	2
   509  00006C                     menu@lcd:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x19
   513  00006C                     	ds	2
   514  00006E                     ??_menu:
   515                           
   516                           ; 1 bytes @ 0x1B
   517  00006E                     	ds	2
   518  000070                     gerenciador@lcd:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x1D
   522  000070                     	ds	2
   523  000072                     
   524                           ; 1 bytes @ 0x1F
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 33 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   544 ;;      Params:         0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels required when called:    8
   550 ;; This function calls:
   551 ;;		_display_onoff_control
   552 ;;		_entry_mode_set
   553 ;;		_function_set
   554 ;;		_gerenciador
   555 ;; This function is called by:
   556 ;;		Startup code after reset
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text0
   561  000BDE                     __ptext0:
   562                           	opt callstack 0
   563  000BDE                     _main:
   564                           	opt callstack 23
   565  000BDE                     
   566                           ;main.c: 35:     ADCON1 = 0x0F;
   567  000BDE  0E0F               	movlw	15
   568  000BE0  6EC1               	movwf	193,c	;volatile
   569                           
   570                           ;main.c: 40:     TRISB = 0x0F;
   571  000BE2  0E0F               	movlw	15
   572  000BE4  6E93               	movwf	147,c	;volatile
   573                           
   574                           ;main.c: 43:     PORTB = 0x00;
   575  000BE6  0E00               	movlw	0
   576  000BE8  6E81               	movwf	129,c	;volatile
   577                           
   578                           ;main.c: 46:     TRISD = 0x00;
   579  000BEA  0E00               	movlw	0
   580  000BEC  6E95               	movwf	149,c	;volatile
   581                           
   582                           ;main.c: 49:     T0CON = 0x47;
   583  000BEE  0E47               	movlw	71
   584  000BF0  6ED5               	movwf	213,c	;volatile
   585                           
   586                           ;main.c: 52:     TMR0L = 0x63;
   587  000BF2  0E63               	movlw	99
   588  000BF4  6ED6               	movwf	214,c	;volatile
   589  000BF6                     
   590                           ;main.c: 55:     INTCONbits.TMR0IF = 0;
   591  000BF6  94F2               	bcf	242,2,c	;volatile
   592  000BF8                     
   593                           ;main.c: 56:     INTCONbits.TMR0IE = 1;
   594  000BF8  8AF2               	bsf	242,5,c	;volatile
   595  000BFA                     
   596                           ;main.c: 57:     INTCONbits.GIE = 1;
   597  000BFA  8EF2               	bsf	242,7,c	;volatile
   598  000BFC                     
   599                           ;main.c: 59:     function_set(lcd, 0, 1, 0);
   600  000BFC  0E83               	movlw	131
   601  000BFE  6E56               	movwf	function_set@lcd^0,c
   602  000C00  0E0F               	movlw	15
   603  000C02  6E57               	movwf	(function_set@lcd+1)^0,c
   604  000C04  0E00               	movlw	0
   605  000C06  6E58               	movwf	function_set@data_lenght^0,c
   606  000C08  0E01               	movlw	1
   607  000C0A  6E59               	movwf	function_set@num_lines^0,c
   608  000C0C  0E00               	movlw	0
   609  000C0E  6E5A               	movwf	function_set@char_font^0,c
   610  000C10  EC45  F004         	call	_function_set	;wreg free
   611  000C14                     
   612                           ;main.c: 60:     display_onoff_control(lcd, 1, 1, 0);
   613  000C14  0E83               	movlw	131
   614  000C16  6E56               	movwf	display_onoff_control@lcd^0,c
   615  000C18  0E0F               	movlw	15
   616  000C1A  6E57               	movwf	(display_onoff_control@lcd+1)^0,c
   617  000C1C  0E01               	movlw	1
   618  000C1E  6E58               	movwf	display_onoff_control@display_on^0,c
   619  000C20  0E01               	movlw	1
   620  000C22  6E59               	movwf	display_onoff_control@cursor_on^0,c
   621  000C24  0E00               	movlw	0
   622  000C26  6E5A               	movwf	display_onoff_control@blink^0,c
   623  000C28  EC66  F005         	call	_display_onoff_control	;wreg free
   624  000C2C                     
   625                           ;main.c: 61:     entry_mode_set(lcd, 1,0);
   626  000C2C  0E83               	movlw	131
   627  000C2E  6E56               	movwf	entry_mode_set@lcd^0,c
   628  000C30  0E0F               	movlw	15
   629  000C32  6E57               	movwf	(entry_mode_set@lcd+1)^0,c
   630  000C34  0E01               	movlw	1
   631  000C36  6E58               	movwf	entry_mode_set@move_direction^0,c
   632  000C38  0E00               	movlw	0
   633  000C3A  6E59               	movwf	entry_mode_set@display_shift^0,c
   634  000C3C  ECAD  F005         	call	_entry_mode_set	;wreg free
   635  000C40                     
   636                           ;main.c: 63:     T0CONbits.TMR0ON = 1;
   637  000C40  8ED5               	bsf	213,7,c	;volatile
   638  000C42                     
   639                           ;main.c: 65:     gerenciador(lcd);
   640  000C42  0E83               	movlw	131
   641  000C44  6E70               	movwf	gerenciador@lcd^0,c
   642  000C46  0E0F               	movlw	15
   643  000C48  6E71               	movwf	(gerenciador@lcd+1)^0,c
   644  000C4A  EC14  F007         	call	_gerenciador	;wreg free
   645  000C4E  EF07  F000         	goto	start
   646  000C52                     __end_of_main:
   647                           	opt callstack 0
   648                           
   649 ;; *************** function _gerenciador *****************
   650 ;; Defined at:
   651 ;;		line 15 in file "task_manager.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  lcd             2   29[COMRAM] PTR struct .
   654 ;;		 -> PORTD(1), 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   666 ;;      Params:         2       0       0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0
   669 ;;      Totals:         2       0       0       0       0       0       0
   670 ;;Total ram usage:        2 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    7
   673 ;; This function calls:
   674 ;;		_menu
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text1
   681  000E28                     __ptext1:
   682                           	opt callstack 0
   683  000E28                     _gerenciador:
   684                           	opt callstack 23
   685  000E28                     
   686                           ;task_manager.c: 17:     menu(lcd);
   687  000E28  C070  F06C         	movff	gerenciador@lcd,menu@lcd
   688  000E2C  C071  F06D         	movff	gerenciador@lcd+1,menu@lcd+1
   689  000E30  EC21  F003         	call	_menu	;wreg free
   690  000E34                     l131:
   691  000E34  EF1A  F007         	goto	l131
   692  000E38  0012               	return		;funcret
   693  000E3A                     __end_of_gerenciador:
   694                           	opt callstack 0
   695                           
   696 ;; *************** function _menu *****************
   697 ;; Defined at:
   698 ;;		line 126 in file "task_manager.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  lcd             2   25[COMRAM] PTR struct .
   701 ;;		 -> PORTD(1), 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      unsigned char 
   706 ;; Registers used:
   707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   713 ;;      Params:         2       0       0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0
   715 ;;      Temps:          2       0       0       0       0       0       0
   716 ;;      Totals:         4       0       0       0       0       0       0
   717 ;;Total ram usage:        4 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    6
   720 ;; This function calls:
   721 ;;		_print_mat
   722 ;;		_strcpy
   723 ;; This function is called by:
   724 ;;		_gerenciador
   725 ;;		_creditos
   726 ;;		_instrucoes
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text2
   731  000642                     __ptext2:
   732                           	opt callstack 0
   733  000642                     _menu:
   734                           	opt callstack 23
   735  000642                     
   736                           ;task_manager.c: 127:     strcpy(mat_disp[0], "1.JOGAR........");
   737  000642  0E80               	movlw	low _mat_disp
   738  000644  6E53               	movwf	strcpy@dest^0,c
   739  000646  0E00               	movlw	high _mat_disp
   740  000648  6E54               	movwf	(strcpy@dest+1)^0,c
   741  00064A  0E01               	movlw	low STR_1
   742  00064C  6E55               	movwf	strcpy@src^0,c
   743  00064E  0E06               	movlw	high STR_1
   744  000650  6E56               	movwf	(strcpy@src+1)^0,c
   745  000652  ECAA  F006         	call	_strcpy	;wreg free
   746                           
   747                           ;task_manager.c: 128:     strcpy(mat_disp[1], "2.INSTRUCOES...");
   748  000656  0E90               	movlw	low (_mat_disp+16)
   749  000658  6E53               	movwf	strcpy@dest^0,c
   750  00065A  0E00               	movlw	high (_mat_disp+16)
   751  00065C  6E54               	movwf	(strcpy@dest+1)^0,c
   752  00065E  0E31               	movlw	low STR_2
   753  000660  6E55               	movwf	strcpy@src^0,c
   754  000662  0E06               	movlw	high STR_2
   755  000664  6E56               	movwf	(strcpy@src+1)^0,c
   756  000666  ECAA  F006         	call	_strcpy	;wreg free
   757                           
   758                           ;task_manager.c: 129:     strcpy(mat_disp[2], "3.CREDITOS.....");
   759  00066A  0EA0               	movlw	low (_mat_disp+32)
   760  00066C  6E53               	movwf	strcpy@dest^0,c
   761  00066E  0E00               	movlw	high (_mat_disp+32)
   762  000670  6E54               	movwf	(strcpy@dest+1)^0,c
   763  000672  0E11               	movlw	low STR_3
   764  000674  6E55               	movwf	strcpy@src^0,c
   765  000676  0E06               	movlw	high STR_3
   766  000678  6E56               	movwf	(strcpy@src+1)^0,c
   767  00067A  ECAA  F006         	call	_strcpy	;wreg free
   768                           
   769                           ;task_manager.c: 130:     strcpy(mat_disp[3], "4.FINALIZAR....");
   770  00067E  0EB0               	movlw	low (_mat_disp+48)
   771  000680  6E53               	movwf	strcpy@dest^0,c
   772  000682  0E00               	movlw	high (_mat_disp+48)
   773  000684  6E54               	movwf	(strcpy@dest+1)^0,c
   774  000686  0E21               	movlw	low STR_4
   775  000688  6E55               	movwf	strcpy@src^0,c
   776  00068A  0E06               	movlw	high STR_4
   777  00068C  6E56               	movwf	(strcpy@src+1)^0,c
   778  00068E  ECAA  F006         	call	_strcpy	;wreg free
   779  000692                     
   780                           ;task_manager.c: 133:     mat_disp[op][15] = '<';
   781  000692  5072               	movf	_op^0,w,c
   782  000694  0D10               	mullw	16
   783  000696  0E8F               	movlw	low (_mat_disp+15)
   784  000698  24F3               	addwf	243,w,c
   785  00069A  6ED9               	movwf	fsr2l,c
   786  00069C  0E00               	movlw	high (_mat_disp+15)
   787  00069E  20F4               	addwfc	prodh,w,c
   788  0006A0  6EDA               	movwf	fsr2h,c
   789  0006A2  0E3C               	movlw	60
   790  0006A4  6EDF               	movwf	indf2,c
   791  0006A6                     
   792                           ;task_manager.c: 134:     print_mat(lcd);
   793  0006A6  C06C  F062         	movff	menu@lcd,print_mat@lcd
   794  0006AA  C06D  F063         	movff	menu@lcd+1,print_mat@lcd+1
   795  0006AE  EC10  F005         	call	_print_mat	;wreg free
   796                           
   797                           ;task_manager.c: 136:     while(!botoes.Enter){
   798  0006B2  EFC9  F003         	goto	l1467
   799  0006B6                     l193:
   800                           
   801                           ;task_manager.c: 137:         if((botoes.U) && (op > 0)){
   802  0006B6  A073               	btfss	_botoes^0,0,c
   803  0006B8  EF60  F003         	goto	u501
   804  0006BC  EF62  F003         	goto	u500
   805  0006C0                     u501:
   806  0006C0  EF92  F003         	goto	l1451
   807  0006C4                     u500:
   808  0006C4  5072               	movf	_op^0,w,c
   809  0006C6  B4D8               	btfsc	status,2,c
   810  0006C8  EF68  F003         	goto	u511
   811  0006CC  EF6A  F003         	goto	u510
   812  0006D0                     u511:
   813  0006D0  EF92  F003         	goto	l1451
   814  0006D4                     u510:
   815  0006D4                     
   816                           ;task_manager.c: 138:             mat_disp[op][15] = '.';
   817  0006D4  5072               	movf	_op^0,w,c
   818  0006D6  0D10               	mullw	16
   819  0006D8  0E8F               	movlw	low (_mat_disp+15)
   820  0006DA  24F3               	addwf	243,w,c
   821  0006DC  6ED9               	movwf	fsr2l,c
   822  0006DE  0E00               	movlw	high (_mat_disp+15)
   823  0006E0  20F4               	addwfc	prodh,w,c
   824  0006E2  6EDA               	movwf	fsr2h,c
   825  0006E4  0E2E               	movlw	46
   826  0006E6  6EDF               	movwf	indf2,c
   827  0006E8                     
   828                           ;task_manager.c: 139:             op--;
   829  0006E8  0672               	decf	_op^0,f,c
   830  0006EA                     
   831                           ;task_manager.c: 140:             botoes.U = 0;
   832  0006EA  9073               	bcf	_botoes^0,0,c
   833  0006EC                     
   834                           ;task_manager.c: 141:             mat_disp[op][15] = '<';
   835  0006EC  5072               	movf	_op^0,w,c
   836  0006EE  0D10               	mullw	16
   837  0006F0  0E8F               	movlw	low (_mat_disp+15)
   838  0006F2  24F3               	addwf	243,w,c
   839  0006F4  6ED9               	movwf	fsr2l,c
   840  0006F6  0E00               	movlw	high (_mat_disp+15)
   841  0006F8  20F4               	addwfc	prodh,w,c
   842  0006FA  6EDA               	movwf	fsr2h,c
   843  0006FC  0E3C               	movlw	60
   844  0006FE  6EDF               	movwf	indf2,c
   845  000700                     
   846                           ;task_manager.c: 142:             print_mat(lcd);
   847  000700  C06C  F062         	movff	menu@lcd,print_mat@lcd
   848  000704  C06D  F063         	movff	menu@lcd+1,print_mat@lcd+1
   849  000708  EC10  F005         	call	_print_mat	;wreg free
   850  00070C                     
   851                           ;task_manager.c: 143:             _delay((unsigned long)((100)*(16000000/4000.0)));
   852  00070C  0E03               	movlw	3
   853  00070E  6E6F               	movwf	(??_menu+1)^0,c
   854  000710  0E08               	movlw	8
   855  000712  6E6E               	movwf	??_menu^0,c
   856  000714  0E77               	movlw	119
   857  000716                     u777:
   858  000716  2EE8               	decfsz	wreg,f,c
   859  000718  D7FE               	bra	u777
   860  00071A  2E6E               	decfsz	??_menu^0,f,c
   861  00071C  D7FC               	bra	u777
   862  00071E  2E6F               	decfsz	(??_menu+1)^0,f,c
   863  000720  D7FA               	bra	u777
   864  000722  F000               	nop	
   865  000724                     l1451:
   866                           
   867                           ;task_manager.c: 145:         if((botoes.D) && (op < 3)){
   868  000724  A273               	btfss	_botoes^0,1,c
   869  000726  EF97  F003         	goto	u521
   870  00072A  EF99  F003         	goto	u520
   871  00072E                     u521:
   872  00072E  EFC9  F003         	goto	l1467
   873  000732                     u520:
   874  000732  0E03               	movlw	3
   875  000734  6072               	cpfslt	_op^0,c
   876  000736  EF9F  F003         	goto	u531
   877  00073A  EFA1  F003         	goto	u530
   878  00073E                     u531:
   879  00073E  EFC9  F003         	goto	l1467
   880  000742                     u530:
   881  000742                     
   882                           ;task_manager.c: 146:             mat_disp[op][15] = '.';
   883  000742  5072               	movf	_op^0,w,c
   884  000744  0D10               	mullw	16
   885  000746  0E8F               	movlw	low (_mat_disp+15)
   886  000748  24F3               	addwf	243,w,c
   887  00074A  6ED9               	movwf	fsr2l,c
   888  00074C  0E00               	movlw	high (_mat_disp+15)
   889  00074E  20F4               	addwfc	prodh,w,c
   890  000750  6EDA               	movwf	fsr2h,c
   891  000752  0E2E               	movlw	46
   892  000754  6EDF               	movwf	indf2,c
   893  000756                     
   894                           ;task_manager.c: 147:             op++;
   895  000756  2A72               	incf	_op^0,f,c
   896  000758                     
   897                           ;task_manager.c: 148:             botoes.D = 0;
   898  000758  9273               	bcf	_botoes^0,1,c
   899  00075A                     
   900                           ;task_manager.c: 149:             mat_disp[op][15] = '<';
   901  00075A  5072               	movf	_op^0,w,c
   902  00075C  0D10               	mullw	16
   903  00075E  0E8F               	movlw	low (_mat_disp+15)
   904  000760  24F3               	addwf	243,w,c
   905  000762  6ED9               	movwf	fsr2l,c
   906  000764  0E00               	movlw	high (_mat_disp+15)
   907  000766  20F4               	addwfc	prodh,w,c
   908  000768  6EDA               	movwf	fsr2h,c
   909  00076A  0E3C               	movlw	60
   910  00076C  6EDF               	movwf	indf2,c
   911  00076E                     
   912                           ;task_manager.c: 150:             print_mat(lcd);
   913  00076E  C06C  F062         	movff	menu@lcd,print_mat@lcd
   914  000772  C06D  F063         	movff	menu@lcd+1,print_mat@lcd+1
   915  000776  EC10  F005         	call	_print_mat	;wreg free
   916  00077A                     
   917                           ;task_manager.c: 151:             _delay((unsigned long)((100)*(16000000/4000.0)));
   918  00077A  0E03               	movlw	3
   919  00077C  6E6F               	movwf	(??_menu+1)^0,c
   920  00077E  0E08               	movlw	8
   921  000780  6E6E               	movwf	??_menu^0,c
   922  000782  0E77               	movlw	119
   923  000784                     u787:
   924  000784  2EE8               	decfsz	wreg,f,c
   925  000786  D7FE               	bra	u787
   926  000788  2E6E               	decfsz	??_menu^0,f,c
   927  00078A  D7FC               	bra	u787
   928  00078C  2E6F               	decfsz	(??_menu+1)^0,f,c
   929  00078E  D7FA               	bra	u787
   930  000790  F000               	nop	
   931  000792                     l1467:
   932                           
   933                           ;task_manager.c: 136:     while(!botoes.Enter){
   934  000792  A873               	btfss	_botoes^0,4,c
   935  000794  EFCE  F003         	goto	u541
   936  000798  EFD0  F003         	goto	u540
   937  00079C                     u541:
   938  00079C  EF5B  F003         	goto	l193
   939  0007A0                     u540:
   940  0007A0  0012               	return		;funcret
   941  0007A2                     __end_of_menu:
   942                           	opt callstack 0
   943                           
   944 ;; *************** function _strcpy *****************
   945 ;; Defined at:
   946 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  dest            2    0[COMRAM] PTR unsigned char 
   949 ;;		 -> mat_disp(64), 
   950 ;;  src             2    2[COMRAM] PTR const unsigned char 
   951 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  d               2    6[COMRAM] PTR unsigned char 
   954 ;;		 -> mat_disp(64), 
   955 ;;  s               2    4[COMRAM] PTR const unsigned char 
   956 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2    0[COMRAM] PTR unsigned char 
   959 ;; Registers used:
   960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   966 ;;      Params:         4       0       0       0       0       0       0
   967 ;;      Locals:         4       0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0
   969 ;;      Totals:         8       0       0       0       0       0       0
   970 ;;Total ram usage:        8 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    2
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_menu
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text3
   981  000D54                     __ptext3:
   982                           	opt callstack 0
   983  000D54                     _strcpy:
   984                           	opt callstack 26
   985  000D54  C055  F057         	movff	strcpy@src,strcpy@s
   986  000D58  C056  F058         	movff	strcpy@src+1,strcpy@s+1
   987  000D5C  C053  F059         	movff	strcpy@dest,strcpy@d
   988  000D60  C054  F05A         	movff	strcpy@dest+1,strcpy@d+1
   989  000D64                     l1429:
   990  000D64  C057  FFF6         	movff	strcpy@s,tblptrl
   991  000D68  C058  FFF7         	movff	strcpy@s+1,tblptrh
   992  000D6C  4A57               	infsnz	strcpy@s^0,f,c
   993  000D6E  2A58               	incf	(strcpy@s+1)^0,f,c
   994  000D70                     	if	0	;tblptru may be non-zero
   995  000D70                     	endif
   996  000D70                     	if	0	;tblptru may be non-zero
   997  000D70                     	endif
   998  000D70  C059  FFD9         	movff	strcpy@d,fsr2l
   999  000D74  C05A  FFDA         	movff	strcpy@d+1,fsr2h
  1000  000D78  4A59               	infsnz	strcpy@d^0,f,c
  1001  000D7A  2A5A               	incf	(strcpy@d+1)^0,f,c
  1002  000D7C  0008               	tblrd		*
  1003  000D7E  CFF5 FFDF          	movff	tablat,indf2
  1004  000D82  50DF               	movf	indf2,w,c
  1005  000D84  A4D8               	btfss	status,2,c
  1006  000D86  EFC7  F006         	goto	u491
  1007  000D8A  EFC9  F006         	goto	u490
  1008  000D8E                     u491:
  1009  000D8E  EFB2  F006         	goto	l1429
  1010  000D92                     u490:
  1011  000D92  0012               	return		;funcret
  1012  000D94                     __end_of_strcpy:
  1013                           	opt callstack 0
  1014                           
  1015 ;; *************** function _print_mat *****************
  1016 ;; Defined at:
  1017 ;;		line 217 in file "lcd.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  lcd             2   15[COMRAM] PTR struct .
  1020 ;;		 -> PORTD(1), 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  j               2   21[COMRAM] int 
  1023 ;;  i               2   23[COMRAM] int 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1033 ;;      Params:         2       0       0       0       0       0       0
  1034 ;;      Locals:         4       0       0       0       0       0       0
  1035 ;;      Temps:          4       0       0       0       0       0       0
  1036 ;;      Totals:        10       0       0       0       0       0       0
  1037 ;;Total ram usage:       10 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    5
  1040 ;; This function calls:
  1041 ;;		_goto_XY
  1042 ;;		_write_char
  1043 ;; This function is called by:
  1044 ;;		_menu
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text4
  1049  000A20                     __ptext4:
  1050                           	opt callstack 0
  1051  000A20                     _print_mat:
  1052                           	opt callstack 23
  1053  000A20                     
  1054                           ;lcd.c: 218:     for(int i = 0; i<4; i++){
  1055  000A20  0E00               	movlw	0
  1056  000A22  6E6B               	movwf	(print_mat@i+1)^0,c
  1057  000A24  0E00               	movlw	0
  1058  000A26  6E6A               	movwf	print_mat@i^0,c
  1059  000A28                     l1409:
  1060                           
  1061                           ;lcd.c: 219:         goto_XY(lcd, i+1, 1);
  1062  000A28  C062  F05A         	movff	print_mat@lcd,goto_XY@lcd
  1063  000A2C  C063  F05B         	movff	print_mat@lcd+1,goto_XY@lcd+1
  1064  000A30  286A               	incf	print_mat@i^0,w,c
  1065  000A32  6E5C               	movwf	goto_XY@x^0,c
  1066  000A34  0E01               	movlw	1
  1067  000A36  6E5D               	movwf	goto_XY@y^0,c
  1068  000A38  ECB2  F004         	call	_goto_XY	;wreg free
  1069  000A3C                     
  1070                           ;lcd.c: 220:         for(int j=0; j<16; j++)
  1071  000A3C  0E00               	movlw	0
  1072  000A3E  6E69               	movwf	(print_mat@j+1)^0,c
  1073  000A40  0E00               	movlw	0
  1074  000A42  6E68               	movwf	print_mat@j^0,c
  1075  000A44                     l1417:
  1076                           
  1077                           ;lcd.c: 221:             write_char(lcd, mat_disp[i][j]);
  1078  000A44  C062  F053         	movff	print_mat@lcd,write_char@lcd
  1079  000A48  C063  F054         	movff	print_mat@lcd+1,write_char@lcd+1
  1080  000A4C  C06A  F064         	movff	print_mat@i,??_print_mat
  1081  000A50  C06B  F065         	movff	print_mat@i+1,??_print_mat+1
  1082  000A54  3A64               	swapf	??_print_mat^0,f,c
  1083  000A56  3A65               	swapf	(??_print_mat+1)^0,f,c
  1084  000A58  0EF0               	movlw	240
  1085  000A5A  1665               	andwf	(??_print_mat+1)^0,f,c
  1086  000A5C  5064               	movf	??_print_mat^0,w,c
  1087  000A5E  0B0F               	andlw	15
  1088  000A60  1265               	iorwf	(??_print_mat+1)^0,f,c
  1089  000A62  0EF0               	movlw	240
  1090  000A64  1664               	andwf	??_print_mat^0,f,c
  1091  000A66  0E80               	movlw	low _mat_disp
  1092  000A68  6E66               	movwf	(??_print_mat+2)^0,c
  1093  000A6A  0E00               	movlw	high _mat_disp
  1094  000A6C  6E67               	movwf	(??_print_mat+3)^0,c
  1095  000A6E  5064               	movf	??_print_mat^0,w,c
  1096  000A70  2666               	addwf	(??_print_mat+2)^0,f,c
  1097  000A72  5065               	movf	(??_print_mat+1)^0,w,c
  1098  000A74  2267               	addwfc	(??_print_mat+3)^0,f,c
  1099  000A76  5068               	movf	print_mat@j^0,w,c
  1100  000A78  2466               	addwf	(??_print_mat+2)^0,w,c
  1101  000A7A  6ED9               	movwf	fsr2l,c
  1102  000A7C  5069               	movf	(print_mat@j+1)^0,w,c
  1103  000A7E  2067               	addwfc	(??_print_mat+3)^0,w,c
  1104  000A80  6EDA               	movwf	fsr2h,c
  1105  000A82  50DF               	movf	indf2,w,c
  1106  000A84  6E55               	movwf	write_char@c^0,c
  1107  000A86  ECD1  F003         	call	_write_char	;wreg free
  1108  000A8A  4A68               	infsnz	print_mat@j^0,f,c
  1109  000A8C  2A69               	incf	(print_mat@j+1)^0,f,c
  1110  000A8E  BE69               	btfsc	(print_mat@j+1)^0,7,c
  1111  000A90  EF53  F005         	goto	u471
  1112  000A94  5069               	movf	(print_mat@j+1)^0,w,c
  1113  000A96  E109               	bnz	u470
  1114  000A98  0E10               	movlw	16
  1115  000A9A  5C68               	subwf	print_mat@j^0,w,c
  1116  000A9C  A0D8               	btfss	status,0,c
  1117  000A9E  EF53  F005         	goto	u471
  1118  000AA2  EF55  F005         	goto	u470
  1119  000AA6                     u471:
  1120  000AA6  EF22  F005         	goto	l1417
  1121  000AAA                     u470:
  1122  000AAA                     
  1123                           ;lcd.c: 222:     }
  1124  000AAA  4A6A               	infsnz	print_mat@i^0,f,c
  1125  000AAC  2A6B               	incf	(print_mat@i+1)^0,f,c
  1126  000AAE  BE6B               	btfsc	(print_mat@i+1)^0,7,c
  1127  000AB0  EF63  F005         	goto	u481
  1128  000AB4  506B               	movf	(print_mat@i+1)^0,w,c
  1129  000AB6  E109               	bnz	u480
  1130  000AB8  0E04               	movlw	4
  1131  000ABA  5C6A               	subwf	print_mat@i^0,w,c
  1132  000ABC  A0D8               	btfss	status,0,c
  1133  000ABE  EF63  F005         	goto	u481
  1134  000AC2  EF65  F005         	goto	u480
  1135  000AC6                     u481:
  1136  000AC6  EF14  F005         	goto	l1409
  1137  000ACA                     u480:
  1138  000ACA  0012               	return		;funcret
  1139  000ACC                     __end_of_print_mat:
  1140                           	opt callstack 0
  1141                           
  1142 ;; *************** function _write_char *****************
  1143 ;; Defined at:
  1144 ;;		line 151 in file "lcd.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  lcd             2    0[COMRAM] PTR struct .
  1147 ;;		 -> PORTD(1), 
  1148 ;;  c               1    2[COMRAM] unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1160 ;;      Params:         3       0       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0
  1162 ;;      Temps:          1       0       0       0       0       0       0
  1163 ;;      Totals:         4       0       0       0       0       0       0
  1164 ;;Total ram usage:        4 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    2
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_print_mat
  1171 ;;		_creditos
  1172 ;;		_jogar
  1173 ;;		_instrucoes
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text5
  1178  0007A2                     __ptext5:
  1179                           	opt callstack 0
  1180  0007A2                     _write_char:
  1181                           	opt callstack 25
  1182  0007A2                     
  1183                           ;lcd.c: 152:     lcd->E = 0;
  1184  0007A2  C053  FFD9         	movff	write_char@lcd,fsr2l
  1185  0007A6  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1186  0007AA  94DF               	bcf	indf2,2,c
  1187                           
  1188                           ;lcd.c: 153:     lcd->RS = 1;
  1189  0007AC  C053  FFD9         	movff	write_char@lcd,fsr2l
  1190  0007B0  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1191  0007B4  80DF               	bsf	indf2,0,c
  1192                           
  1193                           ;lcd.c: 154:     lcd->R_W = 0;
  1194  0007B6  C053  FFD9         	movff	write_char@lcd,fsr2l
  1195  0007BA  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1196  0007BE  92DF               	bcf	indf2,1,c
  1197  0007C0                     
  1198                           ;lcd.c: 157:     lcd->data = (c>>4);
  1199  0007C0  C055  F056         	movff	write_char@c,??_write_char
  1200  0007C4  3A56               	swapf	??_write_char^0,f,c
  1201  0007C6  0E0F               	movlw	15
  1202  0007C8  1656               	andwf	??_write_char^0,f,c
  1203  0007CA  C053  FFD9         	movff	write_char@lcd,fsr2l
  1204  0007CE  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1205  0007D2  3A56               	swapf	??_write_char^0,f,c
  1206  0007D4  50DF               	movf	indf2,w,c
  1207  0007D6  1856               	xorwf	??_write_char^0,w,c
  1208  0007D8  0B0F               	andlw	-241
  1209  0007DA  1856               	xorwf	??_write_char^0,w,c
  1210  0007DC  6EDF               	movwf	indf2,c
  1211  0007DE                     
  1212                           ;lcd.c: 158:     lcd->E = 1;
  1213  0007DE  C053  FFD9         	movff	write_char@lcd,fsr2l
  1214  0007E2  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1215  0007E6  84DF               	bsf	indf2,2,c
  1216  0007E8                     
  1217                           ;lcd.c: 159:     lcd->E = 0;
  1218  0007E8  C053  FFD9         	movff	write_char@lcd,fsr2l
  1219  0007EC  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1220  0007F0  94DF               	bcf	indf2,2,c
  1221  0007F2                     
  1222                           ;lcd.c: 162:     lcd->data = (c);
  1223  0007F2  C055  F056         	movff	write_char@c,??_write_char
  1224  0007F6  C053  FFD9         	movff	write_char@lcd,fsr2l
  1225  0007FA  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1226  0007FE  3A56               	swapf	??_write_char^0,f,c
  1227  000800  50DF               	movf	indf2,w,c
  1228  000802  1856               	xorwf	??_write_char^0,w,c
  1229  000804  0B0F               	andlw	-241
  1230  000806  1856               	xorwf	??_write_char^0,w,c
  1231  000808  6EDF               	movwf	indf2,c
  1232                           
  1233                           ;lcd.c: 163:     lcd->E = 1;
  1234  00080A  C053  FFD9         	movff	write_char@lcd,fsr2l
  1235  00080E  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1236  000812  84DF               	bsf	indf2,2,c
  1237                           
  1238                           ;lcd.c: 164:     lcd->E = 0;
  1239  000814  C053  FFD9         	movff	write_char@lcd,fsr2l
  1240  000818  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1241  00081C  94DF               	bcf	indf2,2,c
  1242  00081E                     
  1243                           ;lcd.c: 167:     TRISD = 0xF0;
  1244  00081E  0EF0               	movlw	240
  1245  000820  6E95               	movwf	149,c	;volatile
  1246  000822                     
  1247                           ;lcd.c: 168:     lcd->RS = 0;
  1248  000822  C053  FFD9         	movff	write_char@lcd,fsr2l
  1249  000826  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1250  00082A  90DF               	bcf	indf2,0,c
  1251  00082C                     
  1252                           ;lcd.c: 169:     lcd->R_W = 1;
  1253  00082C  C053  FFD9         	movff	write_char@lcd,fsr2l
  1254  000830  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1255  000834  82DF               	bsf	indf2,1,c
  1256  000836                     l1389:
  1257                           
  1258                           ;lcd.c: 171:        lcd->E = 1;
  1259  000836  C053  FFD9         	movff	write_char@lcd,fsr2l
  1260  00083A  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1261  00083E  84DF               	bsf	indf2,2,c
  1262  000840                     
  1263                           ;lcd.c: 172:        lcd->E = 0;
  1264  000840  C053  FFD9         	movff	write_char@lcd,fsr2l
  1265  000844  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1266  000848  94DF               	bcf	indf2,2,c
  1267  00084A                     
  1268                           ;lcd.c: 173:        lcd->E = 1;
  1269  00084A  C053  FFD9         	movff	write_char@lcd,fsr2l
  1270  00084E  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1271  000852  84DF               	bsf	indf2,2,c
  1272  000854                     
  1273                           ;lcd.c: 174:        lcd->E = 0;
  1274  000854  C053  FFD9         	movff	write_char@lcd,fsr2l
  1275  000858  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1276  00085C  94DF               	bcf	indf2,2,c
  1277  00085E                     
  1278                           ;lcd.c: 175:     } while(lcd->data&0x08);
  1279  00085E  C053  FFD9         	movff	write_char@lcd,fsr2l
  1280  000862  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1281  000866  38DF               	swapf	indf2,w,c
  1282  000868  0B0F               	andlw	15
  1283  00086A  6E56               	movwf	??_write_char^0,c
  1284  00086C  B656               	btfsc	??_write_char^0,3,c
  1285  00086E  EF3B  F004         	goto	u461
  1286  000872  EF3D  F004         	goto	u460
  1287  000876                     u461:
  1288  000876  EF1B  F004         	goto	l1389
  1289  00087A                     u460:
  1290  00087A                     
  1291                           ;lcd.c: 176:     lcd->R_W = 0;
  1292  00087A  C053  FFD9         	movff	write_char@lcd,fsr2l
  1293  00087E  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1294  000882  92DF               	bcf	indf2,1,c
  1295  000884                     
  1296                           ;lcd.c: 177:     TRISD = 0x00;
  1297  000884  0E00               	movlw	0
  1298  000886  6E95               	movwf	149,c	;volatile
  1299  000888  0012               	return		;funcret
  1300  00088A                     __end_of_write_char:
  1301                           	opt callstack 0
  1302                           
  1303 ;; *************** function _goto_XY *****************
  1304 ;; Defined at:
  1305 ;;		line 76 in file "lcd.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  lcd             2    7[COMRAM] PTR struct .
  1308 ;;		 -> PORTD(1), 
  1309 ;;  x               1    9[COMRAM] unsigned char 
  1310 ;;  y               1   10[COMRAM] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  temp            1   14[COMRAM] unsigned char 
  1313 ;;  a               1   13[COMRAM] unsigned char 
  1314 ;;  z               1   12[COMRAM] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1324 ;;      Params:         4       0       0       0       0       0       0
  1325 ;;      Locals:         3       0       0       0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0       0       0
  1327 ;;      Totals:         8       0       0       0       0       0       0
  1328 ;;Total ram usage:        8 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    4
  1331 ;; This function calls:
  1332 ;;		_lcd_cmd
  1333 ;; This function is called by:
  1334 ;;		_print_mat
  1335 ;;		_creditos
  1336 ;;		_jogar
  1337 ;;		_instrucoes
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text6
  1342  000964                     __ptext6:
  1343                           	opt callstack 0
  1344  000964                     _goto_XY:
  1345                           	opt callstack 23
  1346  000964                     
  1347                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  1348  000964  045C               	decf	goto_XY@x^0,w,c
  1349  000966  A4D8               	btfss	status,2,c
  1350  000968  EFB8  F004         	goto	u421
  1351  00096C  EFBA  F004         	goto	u420
  1352  000970                     u421:
  1353  000970  EFDC  F004         	goto	l1337
  1354  000974                     u420:
  1355  000974                     
  1356                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  1357  000974  505D               	movf	goto_XY@y^0,w,c
  1358  000976  0F7F               	addlw	127
  1359  000978  6E61               	movwf	goto_XY@temp^0,c
  1360                           
  1361                           ;lcd.c: 81:        z = temp>>4;
  1362  00097A  3861               	swapf	goto_XY@temp^0,w,c
  1363  00097C  0B0F               	andlw	15
  1364  00097E  6E5F               	movwf	goto_XY@z^0,c
  1365  000980                     l1329:
  1366                           
  1367                           ;lcd.c: 82:        a = temp;
  1368  000980  C061  F060         	movff	goto_XY@temp,goto_XY@a
  1369  000984                     
  1370                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  1371  000984  C05A  F056         	movff	goto_XY@lcd,lcd_cmd@lcd
  1372  000988  C05B  F057         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1373  00098C  C05F  F058         	movff	goto_XY@z,lcd_cmd@a
  1374  000990  ECCA  F006         	call	_lcd_cmd	;wreg free
  1375  000994                     
  1376                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  1377  000994  0E06               	movlw	6
  1378  000996  6E5E               	movwf	??_goto_XY^0,c
  1379  000998  0E30               	movlw	48
  1380  00099A                     u797:
  1381  00099A  2EE8               	decfsz	wreg,f,c
  1382  00099C  D7FE               	bra	u797
  1383  00099E  2E5E               	decfsz	??_goto_XY^0,f,c
  1384  0009A0  D7FC               	bra	u797
  1385  0009A2  D000               	nop2	
  1386  0009A4                     
  1387                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  1388  0009A4  C05A  F056         	movff	goto_XY@lcd,lcd_cmd@lcd
  1389  0009A8  C05B  F057         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1390  0009AC  C060  F058         	movff	goto_XY@a,lcd_cmd@a
  1391  0009B0  ECCA  F006         	call	_lcd_cmd	;wreg free
  1392                           
  1393                           ;lcd.c: 86:     }
  1394  0009B4  EF0F  F005         	goto	l73
  1395  0009B8                     l1337:
  1396  0009B8  0E02               	movlw	2
  1397  0009BA  185C               	xorwf	goto_XY@x^0,w,c
  1398  0009BC  A4D8               	btfss	status,2,c
  1399  0009BE  EFE3  F004         	goto	u431
  1400  0009C2  EFE5  F004         	goto	u430
  1401  0009C6                     u431:
  1402  0009C6  EFED  F004         	goto	l1349
  1403  0009CA                     u430:
  1404  0009CA                     
  1405                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  1406  0009CA  505D               	movf	goto_XY@y^0,w,c
  1407  0009CC  0FBF               	addlw	191
  1408  0009CE  6E61               	movwf	goto_XY@temp^0,c
  1409                           
  1410                           ;lcd.c: 90:        z = temp>>4;
  1411  0009D0  3861               	swapf	goto_XY@temp^0,w,c
  1412  0009D2  0B0F               	andlw	15
  1413  0009D4  6E5F               	movwf	goto_XY@z^0,c
  1414  0009D6  EFC0  F004         	goto	l1329
  1415  0009DA                     l1349:
  1416  0009DA  0E03               	movlw	3
  1417  0009DC  185C               	xorwf	goto_XY@x^0,w,c
  1418  0009DE  A4D8               	btfss	status,2,c
  1419  0009E0  EFF4  F004         	goto	u441
  1420  0009E4  EFF6  F004         	goto	u440
  1421  0009E8                     u441:
  1422  0009E8  EFFE  F004         	goto	l1361
  1423  0009EC                     u440:
  1424  0009EC                     
  1425                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  1426  0009EC  505D               	movf	goto_XY@y^0,w,c
  1427  0009EE  0F8F               	addlw	143
  1428  0009F0  6E61               	movwf	goto_XY@temp^0,c
  1429                           
  1430                           ;lcd.c: 99:        z = temp>>4;
  1431  0009F2  3861               	swapf	goto_XY@temp^0,w,c
  1432  0009F4  0B0F               	andlw	15
  1433  0009F6  6E5F               	movwf	goto_XY@z^0,c
  1434  0009F8  EFC0  F004         	goto	l1329
  1435  0009FC                     l1361:
  1436  0009FC  0E04               	movlw	4
  1437  0009FE  185C               	xorwf	goto_XY@x^0,w,c
  1438  000A00  A4D8               	btfss	status,2,c
  1439  000A02  EF05  F005         	goto	u451
  1440  000A06  EF07  F005         	goto	u450
  1441  000A0A                     u451:
  1442  000A0A  EF0F  F005         	goto	l69
  1443  000A0E                     u450:
  1444  000A0E                     
  1445                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  1446  000A0E  505D               	movf	goto_XY@y^0,w,c
  1447  000A10  0FCF               	addlw	207
  1448  000A12  6E61               	movwf	goto_XY@temp^0,c
  1449                           
  1450                           ;lcd.c: 108:        z = temp>>4;
  1451  000A14  3861               	swapf	goto_XY@temp^0,w,c
  1452  000A16  0B0F               	andlw	15
  1453  000A18  6E5F               	movwf	goto_XY@z^0,c
  1454  000A1A  EFC0  F004         	goto	l1329
  1455  000A1E                     l69:
  1456  000A1E                     l73:
  1457  000A1E  0012               	return		;funcret
  1458  000A20                     __end_of_goto_XY:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function _lcd_cmd *****************
  1462 ;; Defined at:
  1463 ;;		line 67 in file "lcd.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  lcd             2    3[COMRAM] PTR struct .
  1466 ;;		 -> PORTD(1), 
  1467 ;;  a               1    5[COMRAM] unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1479 ;;      Params:         3       0       0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0
  1481 ;;      Temps:          1       0       0       0       0       0       0
  1482 ;;      Totals:         4       0       0       0       0       0       0
  1483 ;;Total ram usage:        4 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    3
  1486 ;; This function calls:
  1487 ;;		_pulso
  1488 ;; This function is called by:
  1489 ;;		_goto_XY
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text7
  1494  000D94                     __ptext7:
  1495                           	opt callstack 0
  1496  000D94                     _lcd_cmd:
  1497                           	opt callstack 23
  1498  000D94                     
  1499                           ;lcd.c: 68:     lcd->RS = 0;
  1500  000D94  C056  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1501  000D98  C057  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1502  000D9C  90DF               	bcf	indf2,0,c
  1503  000D9E                     
  1504                           ;lcd.c: 69:     lcd->data = (a);
  1505  000D9E  C058  F059         	movff	lcd_cmd@a,??_lcd_cmd
  1506  000DA2  C056  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1507  000DA6  C057  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1508  000DAA  3A59               	swapf	??_lcd_cmd^0,f,c
  1509  000DAC  50DF               	movf	indf2,w,c
  1510  000DAE  1859               	xorwf	??_lcd_cmd^0,w,c
  1511  000DB0  0B0F               	andlw	-241
  1512  000DB2  1859               	xorwf	??_lcd_cmd^0,w,c
  1513  000DB4  6EDF               	movwf	indf2,c
  1514  000DB6                     
  1515                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1516  000DB6  0E06               	movlw	6
  1517  000DB8  6E59               	movwf	??_lcd_cmd^0,c
  1518  000DBA  0E30               	movlw	48
  1519  000DBC                     u807:
  1520  000DBC  2EE8               	decfsz	wreg,f,c
  1521  000DBE  D7FE               	bra	u807
  1522  000DC0  2E59               	decfsz	??_lcd_cmd^0,f,c
  1523  000DC2  D7FC               	bra	u807
  1524  000DC4  D000               	nop2	
  1525  000DC6                     
  1526                           ;lcd.c: 72:     pulso(lcd);
  1527  000DC6  C056  F053         	movff	lcd_cmd@lcd,pulso@lcd
  1528  000DCA  C057  F054         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  1529  000DCE  ECEA  F006         	call	_pulso	;wreg free
  1530  000DD2  0012               	return		;funcret
  1531  000DD4                     __end_of_lcd_cmd:
  1532                           	opt callstack 0
  1533                           
  1534 ;; *************** function _function_set *****************
  1535 ;; Defined at:
  1536 ;;		line 21 in file "lcd.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  lcd             2    3[COMRAM] PTR struct .
  1539 ;;		 -> PORTD(1), 
  1540 ;;  data_lenght     1    5[COMRAM] unsigned char 
  1541 ;;  num_lines       1    6[COMRAM] unsigned char 
  1542 ;;  char_font       1    7[COMRAM] unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1554 ;;      Params:         5       0       0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0
  1556 ;;      Temps:          3       0       0       0       0       0       0
  1557 ;;      Totals:         8       0       0       0       0       0       0
  1558 ;;Total ram usage:        8 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    3
  1561 ;; This function calls:
  1562 ;;		_pulso
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text8
  1569  00088A                     __ptext8:
  1570                           	opt callstack 0
  1571  00088A                     _function_set:
  1572                           	opt callstack 27
  1573  00088A                     
  1574                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  1575  00088A  C056  FFD9         	movff	function_set@lcd,fsr2l
  1576  00088E  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1577  000892  94DF               	bcf	indf2,2,c
  1578                           
  1579                           ;lcd.c: 24:     lcd->RS = 0;
  1580  000894  C056  FFD9         	movff	function_set@lcd,fsr2l
  1581  000898  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1582  00089C  90DF               	bcf	indf2,0,c
  1583                           
  1584                           ;lcd.c: 25:     lcd->R_W = 0;
  1585  00089E  C056  FFD9         	movff	function_set@lcd,fsr2l
  1586  0008A2  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1587  0008A6  92DF               	bcf	indf2,1,c
  1588  0008A8                     
  1589                           ;lcd.c: 28:     lcd->data = 0x02;
  1590  0008A8  C056  FFD9         	movff	function_set@lcd,fsr2l
  1591  0008AC  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1592  0008B0  50DF               	movf	indf2,w,c
  1593  0008B2  0B0F               	andlw	-241
  1594  0008B4  0920               	iorlw	32
  1595  0008B6  6EDF               	movwf	indf2,c
  1596  0008B8                     
  1597                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1598  0008B8  0E06               	movlw	6
  1599  0008BA  6E5B               	movwf	??_function_set^0,c
  1600  0008BC  0E30               	movlw	48
  1601  0008BE                     u817:
  1602  0008BE  2EE8               	decfsz	wreg,f,c
  1603  0008C0  D7FE               	bra	u817
  1604  0008C2  2E5B               	decfsz	??_function_set^0,f,c
  1605  0008C4  D7FC               	bra	u817
  1606  0008C6  D000               	nop2	
  1607  0008C8                     
  1608                           ;lcd.c: 31:     pulso(lcd);
  1609  0008C8  C056  F053         	movff	function_set@lcd,pulso@lcd
  1610  0008CC  C057  F054         	movff	function_set@lcd+1,pulso@lcd+1
  1611  0008D0  ECEA  F006         	call	_pulso	;wreg free
  1612  0008D4                     
  1613                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  1614  0008D4  C058  F05B         	movff	function_set@data_lenght,??_function_set
  1615  0008D8  0E02               	movlw	2
  1616  0008DA  125B               	iorwf	??_function_set^0,f,c
  1617  0008DC  C056  FFD9         	movff	function_set@lcd,fsr2l
  1618  0008E0  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1619  0008E4  3A5B               	swapf	??_function_set^0,f,c
  1620  0008E6  50DF               	movf	indf2,w,c
  1621  0008E8  185B               	xorwf	??_function_set^0,w,c
  1622  0008EA  0B0F               	andlw	-241
  1623  0008EC  185B               	xorwf	??_function_set^0,w,c
  1624  0008EE  6EDF               	movwf	indf2,c
  1625  0008F0                     
  1626                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1627  0008F0  0E06               	movlw	6
  1628  0008F2  6E5B               	movwf	??_function_set^0,c
  1629  0008F4  0E30               	movlw	48
  1630  0008F6                     u827:
  1631  0008F6  2EE8               	decfsz	wreg,f,c
  1632  0008F8  D7FE               	bra	u827
  1633  0008FA  2E5B               	decfsz	??_function_set^0,f,c
  1634  0008FC  D7FC               	bra	u827
  1635  0008FE  D000               	nop2	
  1636  000900                     
  1637                           ;lcd.c: 37:     pulso(lcd);
  1638  000900  C056  F053         	movff	function_set@lcd,pulso@lcd
  1639  000904  C057  F054         	movff	function_set@lcd+1,pulso@lcd+1
  1640  000908  ECEA  F006         	call	_pulso	;wreg free
  1641  00090C                     
  1642                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  1643  00090C  C056  FFD9         	movff	function_set@lcd,fsr2l
  1644  000910  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1645  000914  38DF               	swapf	indf2,w,c
  1646  000916  0B0F               	andlw	15
  1647  000918  6E5B               	movwf	??_function_set^0,c
  1648  00091A  C05A  F05C         	movff	function_set@char_font,??_function_set+1
  1649  00091E  90D8               	bcf	status,0,c
  1650  000920  365C               	rlcf	(??_function_set+1)^0,f,c
  1651  000922  90D8               	bcf	status,0,c
  1652  000924  365C               	rlcf	(??_function_set+1)^0,f,c
  1653  000926  3859               	swapf	function_set@num_lines^0,w,c
  1654  000928  42E8               	rrncf	wreg,f,c
  1655  00092A  0BF8               	andlw	248
  1656  00092C  105C               	iorwf	(??_function_set+1)^0,w,c
  1657  00092E  105B               	iorwf	??_function_set^0,w,c
  1658  000930  6E5D               	movwf	(??_function_set+2)^0,c
  1659  000932  C056  FFD9         	movff	function_set@lcd,fsr2l
  1660  000936  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1661  00093A  3A5D               	swapf	(??_function_set+2)^0,f,c
  1662  00093C  50DF               	movf	indf2,w,c
  1663  00093E  185D               	xorwf	(??_function_set+2)^0,w,c
  1664  000940  0B0F               	andlw	-241
  1665  000942  185D               	xorwf	(??_function_set+2)^0,w,c
  1666  000944  6EDF               	movwf	indf2,c
  1667  000946                     
  1668                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1669  000946  0E06               	movlw	6
  1670  000948  6E5B               	movwf	??_function_set^0,c
  1671  00094A  0E30               	movlw	48
  1672  00094C                     u837:
  1673  00094C  2EE8               	decfsz	wreg,f,c
  1674  00094E  D7FE               	bra	u837
  1675  000950  2E5B               	decfsz	??_function_set^0,f,c
  1676  000952  D7FC               	bra	u837
  1677  000954  D000               	nop2	
  1678  000956                     
  1679                           ;lcd.c: 44:     pulso(lcd);
  1680  000956  C056  F053         	movff	function_set@lcd,pulso@lcd
  1681  00095A  C057  F054         	movff	function_set@lcd+1,pulso@lcd+1
  1682  00095E  ECEA  F006         	call	_pulso	;wreg free
  1683  000962  0012               	return		;funcret
  1684  000964                     __end_of_function_set:
  1685                           	opt callstack 0
  1686                           
  1687 ;; *************** function _entry_mode_set *****************
  1688 ;; Defined at:
  1689 ;;		line 116 in file "lcd.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  lcd             2    3[COMRAM] PTR struct .
  1692 ;;		 -> PORTD(1), 
  1693 ;;  move_directi    1    5[COMRAM] unsigned char 
  1694 ;;  display_shif    1    6[COMRAM] unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1706 ;;      Params:         4       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0
  1708 ;;      Temps:          1       0       0       0       0       0       0
  1709 ;;      Totals:         5       0       0       0       0       0       0
  1710 ;;Total ram usage:        5 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    3
  1713 ;; This function calls:
  1714 ;;		_pulso
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text9
  1721  000B5A                     __ptext9:
  1722                           	opt callstack 0
  1723  000B5A                     _entry_mode_set:
  1724                           	opt callstack 27
  1725  000B5A                     
  1726                           ;lcd.c: 117:     lcd->E = 0;
  1727  000B5A  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1728  000B5E  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1729  000B62  94DF               	bcf	indf2,2,c
  1730                           
  1731                           ;lcd.c: 118:     lcd->RS = 0;
  1732  000B64  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1733  000B68  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1734  000B6C  90DF               	bcf	indf2,0,c
  1735                           
  1736                           ;lcd.c: 119:     lcd->R_W = 0;
  1737  000B6E  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1738  000B72  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1739  000B76  92DF               	bcf	indf2,1,c
  1740  000B78                     
  1741                           ;lcd.c: 121:     lcd->data = 0x00;
  1742  000B78  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1743  000B7C  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1744  000B80  0E0F               	movlw	-241
  1745  000B82  16DF               	andwf	indf2,f,c
  1746  000B84                     
  1747                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1748  000B84  0E06               	movlw	6
  1749  000B86  6E5A               	movwf	??_entry_mode_set^0,c
  1750  000B88  0E30               	movlw	48
  1751  000B8A                     u847:
  1752  000B8A  2EE8               	decfsz	wreg,f,c
  1753  000B8C  D7FE               	bra	u847
  1754  000B8E  2E5A               	decfsz	??_entry_mode_set^0,f,c
  1755  000B90  D7FC               	bra	u847
  1756  000B92  D000               	nop2	
  1757  000B94                     
  1758                           ;lcd.c: 124:     pulso(lcd);
  1759  000B94  C056  F053         	movff	entry_mode_set@lcd,pulso@lcd
  1760  000B98  C057  F054         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1761  000B9C  ECEA  F006         	call	_pulso	;wreg free
  1762  000BA0                     
  1763                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  1764  000BA0  5058               	movf	entry_mode_set@move_direction^0,w,c
  1765  000BA2  2458               	addwf	entry_mode_set@move_direction^0,w,c
  1766  000BA4  1059               	iorwf	entry_mode_set@display_shift^0,w,c
  1767  000BA6  6E5A               	movwf	??_entry_mode_set^0,c
  1768  000BA8  0E04               	movlw	4
  1769  000BAA  125A               	iorwf	??_entry_mode_set^0,f,c
  1770  000BAC  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1771  000BB0  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1772  000BB4  3A5A               	swapf	??_entry_mode_set^0,f,c
  1773  000BB6  50DF               	movf	indf2,w,c
  1774  000BB8  185A               	xorwf	??_entry_mode_set^0,w,c
  1775  000BBA  0B0F               	andlw	-241
  1776  000BBC  185A               	xorwf	??_entry_mode_set^0,w,c
  1777  000BBE  6EDF               	movwf	indf2,c
  1778  000BC0                     
  1779                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1780  000BC0  0E06               	movlw	6
  1781  000BC2  6E5A               	movwf	??_entry_mode_set^0,c
  1782  000BC4  0E30               	movlw	48
  1783  000BC6                     u857:
  1784  000BC6  2EE8               	decfsz	wreg,f,c
  1785  000BC8  D7FE               	bra	u857
  1786  000BCA  2E5A               	decfsz	??_entry_mode_set^0,f,c
  1787  000BCC  D7FC               	bra	u857
  1788  000BCE  D000               	nop2	
  1789  000BD0                     
  1790                           ;lcd.c: 130:     pulso(lcd);
  1791  000BD0  C056  F053         	movff	entry_mode_set@lcd,pulso@lcd
  1792  000BD4  C057  F054         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1793  000BD8  ECEA  F006         	call	_pulso	;wreg free
  1794  000BDC  0012               	return		;funcret
  1795  000BDE                     __end_of_entry_mode_set:
  1796                           	opt callstack 0
  1797                           
  1798 ;; *************** function _display_onoff_control *****************
  1799 ;; Defined at:
  1800 ;;		line 47 in file "lcd.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  lcd             2    3[COMRAM] PTR struct .
  1803 ;;		 -> PORTD(1), 
  1804 ;;  display_on      1    5[COMRAM] unsigned char 
  1805 ;;  cursor_on       1    6[COMRAM] unsigned char 
  1806 ;;  blink           1    7[COMRAM] unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1818 ;;      Params:         5       0       0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0
  1820 ;;      Temps:          2       0       0       0       0       0       0
  1821 ;;      Totals:         7       0       0       0       0       0       0
  1822 ;;Total ram usage:        7 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    3
  1825 ;; This function calls:
  1826 ;;		_pulso
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text10
  1833  000ACC                     __ptext10:
  1834                           	opt callstack 0
  1835  000ACC                     _display_onoff_control:
  1836                           	opt callstack 27
  1837  000ACC                     
  1838                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  1839  000ACC  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1840  000AD0  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1841  000AD4  94DF               	bcf	indf2,2,c
  1842                           
  1843                           ;lcd.c: 50:     lcd->RS = 0;
  1844  000AD6  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1845  000ADA  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1846  000ADE  90DF               	bcf	indf2,0,c
  1847                           
  1848                           ;lcd.c: 51:     lcd->R_W = 0;
  1849  000AE0  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1850  000AE4  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1851  000AE8  92DF               	bcf	indf2,1,c
  1852  000AEA                     
  1853                           ;lcd.c: 54:     lcd->data = 0x00;
  1854  000AEA  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1855  000AEE  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1856  000AF2  0E0F               	movlw	-241
  1857  000AF4  16DF               	andwf	indf2,f,c
  1858  000AF6                     
  1859                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1860  000AF6  0E06               	movlw	6
  1861  000AF8  6E5B               	movwf	??_display_onoff_control^0,c
  1862  000AFA  0E30               	movlw	48
  1863  000AFC                     u867:
  1864  000AFC  2EE8               	decfsz	wreg,f,c
  1865  000AFE  D7FE               	bra	u867
  1866  000B00  2E5B               	decfsz	??_display_onoff_control^0,f,c
  1867  000B02  D7FC               	bra	u867
  1868  000B04  D000               	nop2	
  1869  000B06                     
  1870                           ;lcd.c: 57:     pulso(lcd);
  1871  000B06  C056  F053         	movff	display_onoff_control@lcd,pulso@lcd
  1872  000B0A  C057  F054         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1873  000B0E  ECEA  F006         	call	_pulso	;wreg free
  1874  000B12                     
  1875                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  1876  000B12  90D8               	bcf	status,0,c
  1877  000B14  3459               	rlcf	display_onoff_control@cursor_on^0,w,c
  1878  000B16  6E5B               	movwf	??_display_onoff_control^0,c
  1879  000B18  4458               	rlncf	display_onoff_control@display_on^0,w,c
  1880  000B1A  46E8               	rlncf	wreg,f,c
  1881  000B1C  0BFC               	andlw	252
  1882  000B1E  105B               	iorwf	??_display_onoff_control^0,w,c
  1883  000B20  105A               	iorwf	display_onoff_control@blink^0,w,c
  1884  000B22  6E5C               	movwf	(??_display_onoff_control+1)^0,c
  1885  000B24  0E08               	movlw	8
  1886  000B26  125C               	iorwf	(??_display_onoff_control+1)^0,f,c
  1887  000B28  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1888  000B2C  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1889  000B30  3A5C               	swapf	(??_display_onoff_control+1)^0,f,c
  1890  000B32  50DF               	movf	indf2,w,c
  1891  000B34  185C               	xorwf	(??_display_onoff_control+1)^0,w,c
  1892  000B36  0B0F               	andlw	-241
  1893  000B38  185C               	xorwf	(??_display_onoff_control+1)^0,w,c
  1894  000B3A  6EDF               	movwf	indf2,c
  1895  000B3C                     
  1896                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1897  000B3C  0E06               	movlw	6
  1898  000B3E  6E5B               	movwf	??_display_onoff_control^0,c
  1899  000B40  0E30               	movlw	48
  1900  000B42                     u877:
  1901  000B42  2EE8               	decfsz	wreg,f,c
  1902  000B44  D7FE               	bra	u877
  1903  000B46  2E5B               	decfsz	??_display_onoff_control^0,f,c
  1904  000B48  D7FC               	bra	u877
  1905  000B4A  D000               	nop2	
  1906  000B4C                     
  1907                           ;lcd.c: 64:     pulso(lcd);
  1908  000B4C  C056  F053         	movff	display_onoff_control@lcd,pulso@lcd
  1909  000B50  C057  F054         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1910  000B54  ECEA  F006         	call	_pulso	;wreg free
  1911  000B58  0012               	return		;funcret
  1912  000B5A                     __end_of_display_onoff_control:
  1913                           	opt callstack 0
  1914                           
  1915 ;; *************** function _pulso *****************
  1916 ;; Defined at:
  1917 ;;		line 11 in file "lcd.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  lcd             2    0[COMRAM] PTR struct .
  1920 ;;		 -> PORTD(1), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr2l, fsr2h
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         2       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0
  1934 ;;      Temps:          1       0       0       0       0       0       0
  1935 ;;      Totals:         3       0       0       0       0       0       0
  1936 ;;Total ram usage:        3 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    2
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_function_set
  1943 ;;		_display_onoff_control
  1944 ;;		_lcd_cmd
  1945 ;;		_entry_mode_set
  1946 ;;		_waitFlag
  1947 ;;		_clear_display
  1948 ;;		_return_home
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text11
  1953  000DD4                     __ptext11:
  1954                           	opt callstack 0
  1955  000DD4                     _pulso:
  1956                           	opt callstack 23
  1957  000DD4                     
  1958                           ;lcd.c: 13:     lcd->E = 1;
  1959  000DD4  C053  FFD9         	movff	pulso@lcd,fsr2l
  1960  000DD8  C054  FFDA         	movff	pulso@lcd+1,fsr2h
  1961  000DDC  84DF               	bsf	indf2,2,c
  1962  000DDE                     
  1963                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1964  000DDE  0E06               	movlw	6
  1965  000DE0  6E55               	movwf	??_pulso^0,c
  1966  000DE2  0E30               	movlw	48
  1967  000DE4                     u887:
  1968  000DE4  2EE8               	decfsz	wreg,f,c
  1969  000DE6  D7FE               	bra	u887
  1970  000DE8  2E55               	decfsz	??_pulso^0,f,c
  1971  000DEA  D7FC               	bra	u887
  1972  000DEC  D000               	nop2	
  1973  000DEE                     
  1974                           ;lcd.c: 17:     lcd->E = 0;
  1975  000DEE  C053  FFD9         	movff	pulso@lcd,fsr2l
  1976  000DF2  C054  FFDA         	movff	pulso@lcd+1,fsr2h
  1977  000DF6  94DF               	bcf	indf2,2,c
  1978                           
  1979                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1980  000DF8  0E06               	movlw	6
  1981  000DFA  6E55               	movwf	??_pulso^0,c
  1982  000DFC  0E30               	movlw	48
  1983  000DFE                     u897:
  1984  000DFE  2EE8               	decfsz	wreg,f,c
  1985  000E00  D7FE               	bra	u897
  1986  000E02  2E55               	decfsz	??_pulso^0,f,c
  1987  000E04  D7FC               	bra	u897
  1988  000E06  D000               	nop2	
  1989  000E08  0012               	return		;funcret
  1990  000E0A                     __end_of_pulso:
  1991                           	opt callstack 0
  1992                           
  1993 ;; *************** function _int_handler *****************
  1994 ;; Defined at:
  1995 ;;		line 24 in file "main.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2009 ;;      Params:         0       0       0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    1
  2016 ;; This function calls:
  2017 ;;		_le_entrada
  2018 ;; This function is called by:
  2019 ;;		Interrupt level 2
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	intcode
  2024  000008                     __pintcode:
  2025                           	opt callstack 0
  2026  000008                     _int_handler:
  2027                           	opt callstack 23
  2028                           
  2029                           ;incstack = 0
  2030  000008  8274               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2031  00000A  ED05  F007         	call	int_func,f	;refresh shadow registers
  2032                           
  2033                           	psect	intcode_body
  2034  000E0A                     __pintcode_body:
  2035                           	opt callstack 23
  2036  000E0A                     int_func:
  2037                           	opt callstack 23
  2038  000E0A  0006               	pop		; remove dummy address from shadow register refresh
  2039  000E0C                     
  2040                           ;main.c: 26:      if(INTCONbits.TMR0IF == 1){
  2041  000E0C  A4F2               	btfss	242,2,c	;volatile
  2042  000E0E  EF0B  F007         	goto	i2u20_41
  2043  000E12  EF0D  F007         	goto	i2u20_40
  2044  000E16                     i2u20_41:
  2045  000E16  EF12  F007         	goto	i2l40
  2046  000E1A                     i2u20_40:
  2047  000E1A                     
  2048                           ;main.c: 27:         TMR0L = 0x63;
  2049  000E1A  0E63               	movlw	99
  2050  000E1C  6ED6               	movwf	214,c	;volatile
  2051  000E1E                     
  2052                           ;main.c: 28:         le_entrada();
  2053  000E1E  EC83  F006         	call	_le_entrada	;wreg free
  2054  000E22                     
  2055                           ;main.c: 29:         INTCONbits.TMR0IF = 0;
  2056  000E22  94F2               	bcf	242,2,c	;volatile
  2057  000E24                     i2l40:
  2058  000E24  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2059  000E26  0011               	retfie		f
  2060  000E28                     __end_of_int_handler:
  2061                           	opt callstack 0
  2062                           
  2063 ;; *************** function _le_entrada *****************
  2064 ;; Defined at:
  2065 ;;		line 4 in file "keyboard.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		None
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2079 ;;      Params:         0       0       0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0
  2082 ;;      Totals:         0       0       0       0       0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_int_handler
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text13
  2093  000D06                     __ptext13:
  2094                           	opt callstack 0
  2095  000D06                     _le_entrada:
  2096                           	opt callstack 23
  2097  000D06                     
  2098                           ;keyboard.c: 6:     PORTBbits.RB7 = 1;
  2099  000D06  8E81               	bsf	129,7,c	;volatile
  2100                           
  2101                           ;keyboard.c: 7:     botoes.U = PORTBbits.RB1;
  2102  000D08  A281               	btfss	129,1,c	;volatile
  2103  000D0A  D002               	bra	i2u14_45
  2104  000D0C  8073               	bsf	_botoes^0,0,c
  2105  000D0E  D001               	bra	i2u14_47
  2106  000D10                     i2u14_45:
  2107  000D10  9073               	bcf	_botoes^0,0,c
  2108  000D12                     i2u14_47:
  2109                           
  2110                           ;keyboard.c: 8:     PORTBbits.RB7 = 0;
  2111  000D12  9E81               	bcf	129,7,c	;volatile
  2112                           
  2113                           ;keyboard.c: 10:     PORTBbits.RB6 = 1;
  2114  000D14  8C81               	bsf	129,6,c	;volatile
  2115                           
  2116                           ;keyboard.c: 11:     botoes.L = PORTBbits.RB0;
  2117  000D16  A081               	btfss	129,0,c	;volatile
  2118  000D18  D002               	bra	i2u15_45
  2119  000D1A  8473               	bsf	_botoes^0,2,c
  2120  000D1C  D001               	bra	i2u15_47
  2121  000D1E                     i2u15_45:
  2122  000D1E  9473               	bcf	_botoes^0,2,c
  2123  000D20                     i2u15_47:
  2124                           
  2125                           ;keyboard.c: 12:     botoes.R = PORTBbits.RB2;
  2126  000D20  A481               	btfss	129,2,c	;volatile
  2127  000D22  D002               	bra	i2u16_45
  2128  000D24  8673               	bsf	_botoes^0,3,c
  2129  000D26  D001               	bra	i2u16_47
  2130  000D28                     i2u16_45:
  2131  000D28  9673               	bcf	_botoes^0,3,c
  2132  000D2A                     i2u16_47:
  2133                           
  2134                           ;keyboard.c: 13:     PORTBbits.RB6 = 0;
  2135  000D2A  9C81               	bcf	129,6,c	;volatile
  2136                           
  2137                           ;keyboard.c: 15:     PORTBbits.RB5 = 1;
  2138  000D2C  8A81               	bsf	129,5,c	;volatile
  2139                           
  2140                           ;keyboard.c: 16:     botoes.D = PORTBbits.RB1;
  2141  000D2E  A281               	btfss	129,1,c	;volatile
  2142  000D30  D002               	bra	i2u17_45
  2143  000D32  8273               	bsf	_botoes^0,1,c
  2144  000D34  D001               	bra	i2u17_47
  2145  000D36                     i2u17_45:
  2146  000D36  9273               	bcf	_botoes^0,1,c
  2147  000D38                     i2u17_47:
  2148                           
  2149                           ;keyboard.c: 17:     PORTBbits.RB5 = 0;
  2150  000D38  9A81               	bcf	129,5,c	;volatile
  2151                           
  2152                           ;keyboard.c: 19:     PORTBbits.RB4 = 1;
  2153  000D3A  8881               	bsf	129,4,c	;volatile
  2154                           
  2155                           ;keyboard.c: 20:     botoes.Enter = PORTBbits.RB0;
  2156  000D3C  A081               	btfss	129,0,c	;volatile
  2157  000D3E  D002               	bra	i2u18_45
  2158  000D40  8873               	bsf	_botoes^0,4,c
  2159  000D42  D001               	bra	i2u18_47
  2160  000D44                     i2u18_45:
  2161  000D44  9873               	bcf	_botoes^0,4,c
  2162  000D46                     i2u18_47:
  2163                           
  2164                           ;keyboard.c: 21:     botoes.Esc = PORTBbits.RB2;
  2165  000D46  A481               	btfss	129,2,c	;volatile
  2166  000D48  D002               	bra	i2u19_45
  2167  000D4A  8A73               	bsf	_botoes^0,5,c
  2168  000D4C  D001               	bra	i2u19_47
  2169  000D4E                     i2u19_45:
  2170  000D4E  9A73               	bcf	_botoes^0,5,c
  2171  000D50                     i2u19_47:
  2172                           
  2173                           ;keyboard.c: 22:     PORTBbits.RB4 = 0;
  2174  000D50  9881               	bcf	129,4,c	;volatile
  2175  000D52  0012               	return		;funcret
  2176  000D54                     __end_of_le_entrada:
  2177                           	opt callstack 0
  2178                           
  2179                           	psect	rparam
  2180  0000                     
  2181                           	psect	temp
  2182  000074                     btemp:
  2183                           	opt callstack 0
  2184  000074                     	ds	1
  2185  0000                     int$flags	set	btemp
  2186  0000                     wtemp8	set	btemp+1
  2187  0000                     ttemp5	set	btemp+1
  2188  0000                     ttemp6	set	btemp+4
  2189  0000                     ttemp7	set	btemp+8
  2190                           tosu	equ	0xFFF
  2191                           tosh	equ	0xFFE
  2192                           tosl	equ	0xFFD
  2193                           stkptr	equ	0xFFC
  2194                           pclatu	equ	0xFFB
  2195                           pclath	equ	0xFFA
  2196                           pcl	equ	0xFF9
  2197                           tblptru	equ	0xFF8
  2198                           tblptrh	equ	0xFF7
  2199                           tblptrl	equ	0xFF6
  2200                           tablat	equ	0xFF5
  2201                           prodh	equ	0xFF4
  2202                           prodl	equ	0xFF3
  2203                           indf0	equ	0xFEF
  2204                           postinc0	equ	0xFEE
  2205                           postdec0	equ	0xFED
  2206                           preinc0	equ	0xFEC
  2207                           plusw0	equ	0xFEB
  2208                           fsr0h	equ	0xFEA
  2209                           fsr0l	equ	0xFE9
  2210                           wreg	equ	0xFE8
  2211                           indf1	equ	0xFE7
  2212                           postinc1	equ	0xFE6
  2213                           postdec1	equ	0xFE5
  2214                           preinc1	equ	0xFE4
  2215                           plusw1	equ	0xFE3
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           bsr	equ	0xFE0
  2219                           indf2	equ	0xFDF
  2220                           postinc2	equ	0xFDE
  2221                           postdec2	equ	0xFDD
  2222                           preinc2	equ	0xFDC
  2223                           plusw2	equ	0xFDB
  2224                           fsr2h	equ	0xFDA
  2225                           fsr2l	equ	0xFD9
  2226                           status	equ	0xFD8


Data Sizes:
    Strings     64
    Constant    0
    Data        98
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     31     115
    BANK0           128      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_menu
    _menu->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13432
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2    8796
                                             29 COMRAM     2     0      2
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 4     2      2    8698
                                             25 COMRAM     4     2      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4     704
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    7700
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3    1938
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    5332
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2336
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1622
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1458
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1556
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2    1032
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      50       5       62.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1F      73       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C3      15        0.0%
DATA                 0      0      C3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun 14 15:04:27 2020

         ?_display_onoff_control 0056                               l60 0B58  
                             l45 0C4E                               l54 0E08  
                             l63 0DD2                               l57 0962  
                             l73 0A1E                               l76 0BDC  
                             l69 0A1E                               l86 0888  
                             l99 0ACA                               _op 0072  
                    __CFG_OSC$HS 000000                              l131 0E34  
                            l132 0E34                              l193 06B6  
                            l197 07A0                              l877 0D92  
                            u420 0974                              u500 06C4  
                            u421 0970                              u501 06C0  
                            u430 09CA                              u510 06D4  
                            u431 09C6                              u511 06D0  
                            u440 09EC                              u520 0732  
                            u441 09E8                              u521 072E  
                            u450 0A0E                              u530 0742  
                            u451 0A0A                              u531 073E  
                            u460 087A                              u540 07A0  
                            u461 0876                              u541 079C  
                            u470 0AAA                              u471 0AA6  
                            u480 0ACA                              u481 0AC6  
                            u490 0D92                              u491 0D8E  
                            u807 0DBC                              u817 08BE  
                            u827 08F6                              u837 094C  
                            u847 0B8A                              u857 0BC6  
                            u777 0716                              u867 0AFC  
                            u787 0784                              u877 0B42  
                            u797 099A                              u887 0DE4  
                            u897 0DFE                              _lcd 0051  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0053                    creditos@F3075 0041  
                  creditos@F3078 0031                     __CFG_WDT$OFF 000000  
                           l1311 0DD4                             l1313 0DDE  
                           l1321 0DB6                             l1401 0884  
                           l1315 0DEE                             l1323 0DC6  
                           l1331 0984                             l1411 0A3C  
                           l1403 0A20                             l1501 0B4C  
                           l1317 0D94                             l1333 0994  
                           l1325 0964                             l1421 0A8E  
                           l1511 0BA0                             l1503 0B5A  
                           l1319 0D9E                             l1351 09EC  
                           l1335 09A4                             l1327 0974  
                           l1423 0AAA                             l1431 0642  
                           l1513 0BC0                             l1505 0B78  
                           l1361 09FC                             l1329 0980  
                           l1337 09B8                             l1425 0AAE  
                           l1417 0A44                             l1409 0A28  
                           l1441 06E8                             l1433 0692  
                           l1515 0BD0                             l1507 0B84  
                           l1363 0A0E                             l1339 09CA  
                           l1419 0A8A                             l1427 0D54  
                           l1443 06EA                             l1451 0724  
                           l1435 06A6                             l1509 0B94  
                           l1349 09DA                             l1381 07F2  
                           l1373 07A2                             l1429 0D64  
                           l1461 075A                             l1453 0732  
                           l1445 06EC                             l1437 06C4  
                           l1517 0E28                             l1541 0BFC  
                           l1533 0BDE                             l1471 08A8  
                           l1391 0840                             l1383 081E  
                           l1375 07C0                             l1463 076E  
                           l1455 0742                             l1447 0700  
                           l1439 06D4                             l1543 0C14  
                           l1535 0BF6                             l1481 0900  
                           l1473 08B8                             l1393 084A  
                           l1385 0822                             l1377 07DE  
                           l1465 077A                             l1457 0756  
                           l1449 070C                             l1545 0C2C  
                           l1537 0BF8                             l1491 0AEA  
                           l1483 090C                             l1475 08C8  
                           l1395 0854                             l1387 082C  
                           l1379 07E8                             l1459 0758  
                           l1467 0792                             l1547 0C40  
                           l1539 0BFA                             l1493 0AF6  
                           l1485 0946                             l1477 08D4  
                           l1469 088A                             l1397 085E  
                           l1389 0836                             l1549 0C42  
                           l1495 0B06                             l1487 0956  
                           l1479 08F0                             l1399 087A  
                           l1497 0B12                             l1489 0ACC  
                           l1499 0B3C                             STR_1 0601  
                           STR_2 0631                             STR_3 0611  
                           STR_4 0621                             i2l40 0E24  
                           _main 0BDE                             _menu 0642  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0074                             prodl 000FF3  
                           start 000E            function_set@num_lines 0059  
                   print_mat@lcd 0062                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 0056  
                          ?_main 0053                            ?_menu 006C  
                          _T0CON 000FD5                            i2l106 0D52  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0053  
                __end_of_lcd_cmd 0DD4                  __end_of_goto_XY 0A20  
                          _pulso 0DD4                            tablat 000FF5  
                          ttemp5 0075                            ttemp6 0078  
                          ttemp7 007C                            status 000FD8  
                          wtemp8 0075                  __initialization 0C52  
                   __end_of_main 0C52                     __end_of_menu 07A2  
                         ??_main 0072                           ??_menu 006E  
                  __activetblptr 000001                           _ADCON1 000FC1  
                         ?_pulso 0053                           i2l1111 0E1A  
                         i2l1113 0E1E                           i2l1043 0D06  
                         i2l1115 0E22                           i2l1109 0E0C  
                    goto_XY@temp 0061             __size_of_gerenciador 0012  
                         _botoes 0073                           clear_0 0C98  
                  ?_function_set 0056                        ??_lcd_cmd 0059  
                         _strcpy 0D54                        ??_goto_XY 005E  
                   __pdataCOMRAM 0001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8         display_onoff_control@lcd 0056  
                     __accesstop 0080          __end_of__initialization 0CA2  
                  ___rparam_used 000001          ??_display_onoff_control 005B  
                 __pcstackCOMRAM 0053                     __pidataBANK0 0E3A  
                 gerenciador@lcd 0070                    __end_of_pulso 0E0A  
                 ??_function_set 005B             __size_of_int_handler 0E20  
                        ??_pulso 0055                       __pbssBANK0 0080  
                        ?_strcpy 0053               __size_of_print_mat 00AC  
    entry_mode_set@display_shift 0059                          i2u20_40 0E1A  
                        i2u20_41 0E16                          i2u14_45 0D10  
                        i2u14_47 0D12                          i2u15_45 0D1E  
                        i2u15_47 0D20                          i2u16_45 0D28  
                        i2u16_47 0D2A                          i2u17_45 0D36  
                        i2u17_47 0D38                          i2u18_45 0D44  
                        i2u18_47 0D46                          i2u19_45 0D4E  
                        i2u19_47 0D50                       _le_entrada 0D06  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 0059                          __Lparam 0000  
                   __psmallconst 0600                          __pcinit 0C52  
                        __ramtop 0600                          __ptext0 0BDE  
                        __ptext1 0E28                          __ptext2 0642  
                        __ptext3 0D54                          __ptext4 0A20  
                        __ptext5 07A2                          __ptext6 0964  
                        __ptext7 0D94                          __ptext8 088A  
                        __ptext9 0B5A                          _lcd_cmd 0D94  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 0964                   __pintcode_body 0E0A  
           end_of_initialization 0CA2                          menu@lcd 006C  
           __end_of_function_set 0964                          int_func 0E0A  
              __end_of_print_mat 0ACC                          postdec1 000FE5  
                        postinc0 000FEE                          strcpy@d 0059  
                        strcpy@s 0057                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0056                      ?_le_entrada 0053  
                  ??_gerenciador 0072   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 0B5A                       _write_char 07A2  
                  __pidataCOMRAM 0CB4                   __end_of_strcpy 0D94  
            start_initialization 0C52                   _entry_mode_set 0B5A  
                     goto_XY@lcd 005A                      __pdataBANK0 00C0  
            __size_of_le_entrada 004E              __end_of_gerenciador 0E3A  
                       ??_strcpy 0057                      __pbssCOMRAM 0072  
                  ??_int_handler 0053            __size_of_function_set 00DA  
                instrucoes@F3102 0021                  instrucoes@F3111 00C0  
                instrucoes@F3105 0011                  instrucoes@F3108 0001  
         __end_of_entry_mode_set 0BDE                        __pintcode 0008  
                    ?_write_char 0053                         ?_lcd_cmd 0056  
                   _function_set 088A                      __smallconst 0600  
                       ?_goto_XY 005A                   __size_of_pulso 0036  
            __end_of_int_handler 0E28                  ?_entry_mode_set 0056  
                    _gerenciador 0E28     entry_mode_set@move_direction 0058  
                      _print_mat 0A20  display_onoff_control@display_on 0058  
     display_onoff_control@blink 005A                      write_char@c 0055  
                     print_mat@i 006A                       print_mat@j 0068  
                   ??_le_entrada 0053                        copy_data0 0C66  
                      copy_data1 0C86              __size_of_write_char 00E8  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0600                entry_mode_set@lcd 0056  
                     ?_print_mat 0062               __end_of_le_entrada 0D54  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 0ACC  
                       __ptext11 0DD4                         __ptext13 0D06  
                     strcpy@dest 0053                         _mat_disp 0080  
                  __size_of_main 0074                    __size_of_menu 0160  
                       int$flags 0074                         lcd_cmd@a 0058  
          _display_onoff_control 0ACC                       _INTCONbits 000FF2  
                       goto_XY@a 0060                         goto_XY@x 005C  
                       goto_XY@y 005D                         goto_XY@z 005F  
                       intlevel2 0000                        strcpy@src 0055  
        function_set@data_lenght 0058                      ??_print_mat 0064  
                   ??_write_char 0056                         pulso@lcd 0053  
               ??_entry_mode_set 005A            function_set@char_font 005A  
             __end_of_write_char 088A                     ?_gerenciador 0070  
