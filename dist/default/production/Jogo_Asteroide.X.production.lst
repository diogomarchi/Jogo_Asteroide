

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 21:41:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  0013E4                     __pidataCOMRAM:
    77                           	opt callstack 0
    78                           
    79                           ;initializer for _lcd
    80  0013E4  83                 	db	131
    81  0013E5  0F                 	db	15
    82                           
    83                           ;initializer for _x
    84  0013E6  01                 	db	1
    85  0000                     _PORTBbits	set	3969
    86  0000                     _T0CONbits	set	4053
    87  0000                     _T0CON	set	4053
    88  0000                     _TRISD	set	3989
    89  0000                     _PORTB	set	3969
    90  0000                     _TRISB	set	3987
    91  0000                     _ADCON1	set	4033
    92  0000                     _TMR0L	set	4054
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTD	set	3971
    95                           
    96                           	psect	mediumconst
    97  007EF4                     __pmediumconst:
    98                           	opt callstack 0
    99  007EF4  00                 	db	0
   100  007EF5                     STR_10:
   101  007EF5  20                 	db	32
   102  007EF6  20                 	db	32
   103  007EF7  20                 	db	32
   104  007EF8  20                 	db	32
   105  007EF9  20                 	db	32
   106  007EFA  20                 	db	32
   107  007EFB  20                 	db	32
   108  007EFC  20                 	db	32
   109  007EFD  20                 	db	32
   110  007EFE  20                 	db	32
   111  007EFF  20                 	db	32
   112  007F00  20                 	db	32
   113  007F01  20                 	db	32
   114  007F02  20                 	db	32
   115  007F03  20                 	db	32
   116  007F04  20                 	db	32
   117  007F05  00                 	db	0
   118  007F06                     STR_15:
   119  007F06  50                 	db	80	;'P'
   120  007F07  41                 	db	65	;'A'
   121  007F08  52                 	db	82	;'R'
   122  007F09  41                 	db	65	;'A'
   123  007F0A  20                 	db	32
   124  007F0B  53                 	db	83	;'S'
   125  007F0C  41                 	db	65	;'A'
   126  007F0D  49                 	db	73	;'I'
   127  007F0E  52                 	db	82	;'R'
   128  007F0F  20                 	db	32
   129  007F10  20                 	db	32
   130  007F11  20                 	db	32
   131  007F12  20                 	db	32
   132  007F13  20                 	db	32
   133  007F14  20                 	db	32
   134  007F15  20                 	db	32
   135  007F16  00                 	db	0
   136  007F17                     STR_14:
   137  007F17  41                 	db	65	;'A'
   138  007F18  50                 	db	80	;'P'
   139  007F19  45                 	db	69	;'E'
   140  007F1A  52                 	db	82	;'R'
   141  007F1B  54                 	db	84	;'T'
   142  007F1C  45                 	db	69	;'E'
   143  007F1D  20                 	db	32
   144  007F1E  45                 	db	69	;'E'
   145  007F1F  53                 	db	83	;'S'
   146  007F20  43                 	db	67	;'C'
   147  007F21  20                 	db	32
   148  007F22  20                 	db	32
   149  007F23  20                 	db	32
   150  007F24  20                 	db	32
   151  007F25  20                 	db	32
   152  007F26  20                 	db	32
   153  007F27  00                 	db	0
   154  007F28                     STR_9:
   155  007F28  20                 	db	32
   156  007F29  20                 	db	32
   157  007F2A  20                 	db	32
   158  007F2B  20                 	db	32
   159  007F2C  20                 	db	32
   160  007F2D  20                 	db	32
   161  007F2E  53                 	db	83	;'S'
   162  007F2F  43                 	db	67	;'C'
   163  007F30  4F                 	db	79	;'O'
   164  007F31  52                 	db	82	;'R'
   165  007F32  45                 	db	69	;'E'
   166  007F33  3A                 	db	58	;':'
   167  007F34  20                 	db	32
   168  007F35  20                 	db	32
   169  007F36  20                 	db	32
   170  007F37  20                 	db	32
   171  007F38  00                 	db	0
   172  007F39                     STR_13:
   173  007F39  21                 	db	33
   174  007F3A  21                 	db	33
   175  007F3B  21                 	db	33
   176  007F3C  56                 	db	86	;'V'
   177  007F3D  4F                 	db	79	;'O'
   178  007F3E  43                 	db	67	;'C'
   179  007F3F  45                 	db	69	;'E'
   180  007F40  20                 	db	32
   181  007F41  42                 	db	66	;'B'
   182  007F42  41                 	db	65	;'A'
   183  007F43  54                 	db	84	;'T'
   184  007F44  45                 	db	69	;'E'
   185  007F45  55                 	db	85	;'U'
   186  007F46  21                 	db	33
   187  007F47  21                 	db	33
   188  007F48  21                 	db	33
   189  007F49  00                 	db	0
   190  007F4A                     STR_21:
   191  007F4A  31                 	db	49	;'1'
   192  007F4B  2E                 	db	46
   193  007F4C  4A                 	db	74	;'J'
   194  007F4D  4F                 	db	79	;'O'
   195  007F4E  47                 	db	71	;'G'
   196  007F4F  41                 	db	65	;'A'
   197  007F50  52                 	db	82	;'R'
   198  007F51  2E                 	db	46
   199  007F52  2E                 	db	46
   200  007F53  2E                 	db	46
   201  007F54  2E                 	db	46
   202  007F55  2E                 	db	46
   203  007F56  2E                 	db	46
   204  007F57  2E                 	db	46
   205  007F58  2E                 	db	46
   206  007F59  2E                 	db	46
   207  007F5A  00                 	db	0
   208  007F5B                     STR_23:
   209  007F5B  33                 	db	51	;'3'
   210  007F5C  2E                 	db	46
   211  007F5D  43                 	db	67	;'C'
   212  007F5E  52                 	db	82	;'R'
   213  007F5F  45                 	db	69	;'E'
   214  007F60  44                 	db	68	;'D'
   215  007F61  49                 	db	73	;'I'
   216  007F62  54                 	db	84	;'T'
   217  007F63  4F                 	db	79	;'O'
   218  007F64  53                 	db	83	;'S'
   219  007F65  2E                 	db	46
   220  007F66  2E                 	db	46
   221  007F67  2E                 	db	46
   222  007F68  2E                 	db	46
   223  007F69  2E                 	db	46
   224  007F6A  2E                 	db	46
   225  007F6B  00                 	db	0
   226  007F6C                     STR_24:
   227  007F6C  34                 	db	52	;'4'
   228  007F6D  2E                 	db	46
   229  007F6E  46                 	db	70	;'F'
   230  007F6F  49                 	db	73	;'I'
   231  007F70  4E                 	db	78	;'N'
   232  007F71  41                 	db	65	;'A'
   233  007F72  4C                 	db	76	;'L'
   234  007F73  49                 	db	73	;'I'
   235  007F74  5A                 	db	90	;'Z'
   236  007F75  41                 	db	65	;'A'
   237  007F76  52                 	db	82	;'R'
   238  007F77  2E                 	db	46
   239  007F78  2E                 	db	46
   240  007F79  2E                 	db	46
   241  007F7A  2E                 	db	46
   242  007F7B  2E                 	db	46
   243  007F7C  00                 	db	0
   244  007F7D                     STR_22:
   245  007F7D  32                 	db	50	;'2'
   246  007F7E  2E                 	db	46
   247  007F7F  49                 	db	73	;'I'
   248  007F80  4E                 	db	78	;'N'
   249  007F81  53                 	db	83	;'S'
   250  007F82  54                 	db	84	;'T'
   251  007F83  52                 	db	82	;'R'
   252  007F84  55                 	db	85	;'U'
   253  007F85  43                 	db	67	;'C'
   254  007F86  4F                 	db	79	;'O'
   255  007F87  45                 	db	69	;'E'
   256  007F88  53                 	db	83	;'S'
   257  007F89  2E                 	db	46
   258  007F8A  2E                 	db	46
   259  007F8B  2E                 	db	46
   260  007F8C  2E                 	db	46
   261  007F8D  00                 	db	0
   262  007F8E                     STR_18:
   263  007F8E  4E                 	db	78	;'N'
   264  007F8F  41                 	db	65	;'A'
   265  007F90  56                 	db	86	;'V'
   266  007F91  45                 	db	69	;'E'
   267  007F92  20                 	db	32
   268  007F93  20                 	db	32
   269  007F94  20                 	db	32
   270  007F95  20                 	db	32
   271  007F96  20                 	db	32
   272  007F97  20                 	db	32
   273  007F98  20                 	db	32
   274  007F99  20                 	db	32
   275  007F9A  20                 	db	32
   276  007F9B  20                 	db	32
   277  007F9C  20                 	db	32
   278  007F9D  00                 	db	0
   279  007F9E                     STR_20:
   280  007F9E  4D                 	db	77	;'M'
   281  007F9F  45                 	db	69	;'E'
   282  007FA0  4E                 	db	78	;'N'
   283  007FA1  55                 	db	85	;'U'
   284  007FA2  20                 	db	32
   285  007FA3  20                 	db	32
   286  007FA4  20                 	db	32
   287  007FA5  20                 	db	32
   288  007FA6  20                 	db	32
   289  007FA7  20                 	db	32
   290  007FA8  20                 	db	32
   291  007FA9  20                 	db	32
   292  007FAA  20                 	db	32
   293  007FAB  20                 	db	32
   294  007FAC  20                 	db	32
   295  007FAD  00                 	db	0
   296  007FAE                     STR_19:
   297  007FAE  32                 	db	50	;'2'
   298  007FAF  2E                 	db	46
   299  007FB0  45                 	db	69	;'E'
   300  007FB1  53                 	db	83	;'S'
   301  007FB2  43                 	db	67	;'C'
   302  007FB3  41                 	db	65	;'A'
   303  007FB4  50                 	db	80	;'P'
   304  007FB5  45                 	db	69	;'E'
   305  007FB6  20                 	db	32
   306  007FB7  56                 	db	86	;'V'
   307  007FB8  4F                 	db	79	;'O'
   308  007FB9  4C                 	db	76	;'L'
   309  007FBA  54                 	db	84	;'T'
   310  007FBB  41                 	db	65	;'A'
   311  007FBC  20                 	db	32
   312  007FBD  00                 	db	0
   313  007FBE                     STR_5:
   314  007FBE  48                 	db	72	;'H'
   315  007FBF  49                 	db	73	;'I'
   316  007FC0  42                 	db	66	;'B'
   317  007FC1  45                 	db	69	;'E'
   318  007FC2  52                 	db	82	;'R'
   319  007FC3  4E                 	db	78	;'N'
   320  007FC4  41                 	db	65	;'A'
   321  007FC5  4E                 	db	78	;'N'
   322  007FC6  44                 	db	68	;'D'
   323  007FC7  4F                 	db	79	;'O'
   324  007FC8  2E                 	db	46
   325  007FC9  2E                 	db	46
   326  007FCA  2E                 	db	46
   327  007FCB  2E                 	db	46
   328  007FCC  2E                 	db	46
   329  007FCD  00                 	db	0
   330  007FCE                     STR_1:
   331  007FCE  31                 	db	49	;'1'
   332  007FCF  2E                 	db	46
   333  007FD0  44                 	db	68	;'D'
   334  007FD1  49                 	db	73	;'I'
   335  007FD2  4F                 	db	79	;'O'
   336  007FD3  47                 	db	71	;'G'
   337  007FD4  4F                 	db	79	;'O'
   338  007FD5  20                 	db	32
   339  007FD6  4D                 	db	77	;'M'
   340  007FD7  41                 	db	65	;'A'
   341  007FD8  52                 	db	82	;'R'
   342  007FD9  43                 	db	67	;'C'
   343  007FDA  48                 	db	72	;'H'
   344  007FDB  49                 	db	73	;'I'
   345  007FDC  2E                 	db	46
   346  007FDD  00                 	db	0
   347  007FDE                     STR_17:
   348  007FDE  31                 	db	49	;'1'
   349  007FDF  2E                 	db	46
   350  007FE0  53                 	db	83	;'S'
   351  007FE1  45                 	db	69	;'E'
   352  007FE2  54                 	db	84	;'T'
   353  007FE3  41                 	db	65	;'A'
   354  007FE4  53                 	db	83	;'S'
   355  007FE5  20                 	db	32
   356  007FE6  4D                 	db	77	;'M'
   357  007FE7  4F                 	db	79	;'O'
   358  007FE8  56                 	db	86	;'V'
   359  007FE9  45                 	db	69	;'E'
   360  007FEA  4D                 	db	77	;'M'
   361  007FEB  20                 	db	32
   362  007FEC  41                 	db	65	;'A'
   363  007FED  00                 	db	0
   364  007FEE                     STR_2:
   365  007FEE  32                 	db	50	;'2'
   366  007FEF  2E                 	db	46
   367  007FF0  47                 	db	71	;'G'
   368  007FF1  45                 	db	69	;'E'
   369  007FF2  4F                 	db	79	;'O'
   370  007FF3  52                 	db	82	;'R'
   371  007FF4  47                 	db	71	;'G'
   372  007FF5  45                 	db	69	;'E'
   373  007FF6  20                 	db	32
   374  007FF7  4E                 	db	78	;'N'
   375  007FF8  41                 	db	65	;'A'
   376  007FF9  52                 	db	82	;'R'
   377  007FFA  44                 	db	68	;'D'
   378  007FFB  45                 	db	69	;'E'
   379  007FFC  53                 	db	83	;'S'
   380  007FFD  00                 	db	0
   381  0000                     
   382                           ; #config settings
   383  007FFE  00                 	db	0	; dummy byte at the end
   384  0000                     
   385                           	psect	cinit
   386  00128C                     __pcinit:
   387                           	opt callstack 0
   388  00128C                     start_initialization:
   389                           	opt callstack 0
   390  00128C                     __initialization:
   391                           	opt callstack 0
   392                           
   393                           ; Initialize objects allocated to COMRAM (3 bytes)
   394                           ; load TBLPTR registers with __pidataCOMRAM
   395  00128C  0EE4               	movlw	low __pidataCOMRAM
   396  00128E  6EF6               	movwf	tblptrl,c
   397  001290  0E13               	movlw	high __pidataCOMRAM
   398  001292  6EF7               	movwf	tblptrh,c
   399  001294  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   400  001296  6EF8               	movwf	tblptru,c
   401  001298  0009               	tblrd		*+	;fetch initializer
   402  00129A  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   403  00129E  0009               	tblrd		*+	;fetch initializer
   404  0012A0  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   405  0012A4  0009               	tblrd		*+	;fetch initializer
   406  0012A6  CFF5 F050          	movff	tablat,__pdataCOMRAM+2
   407                           
   408                           ; Clear objects allocated to BANK0 (64 bytes)
   409  0012AA  EE00  F080         	lfsr	0,__pbssBANK0
   410  0012AE  0E40               	movlw	64
   411  0012B0                     clear_0:
   412  0012B0  6AEE               	clrf	postinc0,c
   413  0012B2  06E8               	decf	wreg,f,c
   414  0012B4  E1FD               	bnz	clear_0
   415                           
   416                           ; Clear objects allocated to COMRAM (17 bytes)
   417  0012B6  EE00  F03D         	lfsr	0,__pbssCOMRAM
   418  0012BA  0E11               	movlw	17
   419  0012BC                     clear_1:
   420  0012BC  6AEE               	clrf	postinc0,c
   421  0012BE  06E8               	decf	wreg,f,c
   422  0012C0  E1FD               	bnz	clear_1
   423  0012C2                     end_of_initialization:
   424                           	opt callstack 0
   425  0012C2                     __end_of__initialization:
   426                           	opt callstack 0
   427  0012C2  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   428  0012C4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   429  0012C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   430  0012C8  6EF8               	movwf	tblptru,c
   431  0012CA  0100               	movlb	0
   432  0012CC  EF48  F008         	goto	_main	;jump to C main() function
   433                           
   434                           	psect	bssCOMRAM
   435  00003D                     __pbssCOMRAM:
   436                           	opt callstack 0
   437  00003D                     _contador:
   438                           	opt callstack 0
   439  00003D                     	ds	1
   440  00003E                     _y:
   441                           	opt callstack 0
   442  00003E                     	ds	1
   443  00003F                     _op:
   444                           	opt callstack 0
   445  00003F                     	ds	1
   446  000040                     _cont_r:
   447                           	opt callstack 0
   448  000040                     	ds	1
   449  000041                     _cont_l:
   450                           	opt callstack 0
   451  000041                     	ds	1
   452  000042                     _cont_d:
   453                           	opt callstack 0
   454  000042                     	ds	1
   455  000043                     _cont_u:
   456                           	opt callstack 0
   457  000043                     	ds	1
   458  000044                     _botoes_ant:
   459                           	opt callstack 0
   460  000044                     	ds	1
   461  000045                     _botoes:
   462                           	opt callstack 0
   463  000045                     	ds	1
   464  000046                     _seed:
   465                           	opt callstack 0
   466  000046                     	ds	8
   467                           
   468                           	psect	dataCOMRAM
   469  00004E                     __pdataCOMRAM:
   470                           	opt callstack 0
   471  00004E                     _lcd:
   472                           	opt callstack 0
   473  00004E                     	ds	2
   474  000050                     _x:
   475                           	opt callstack 0
   476  000050                     	ds	1
   477                           
   478                           	psect	bssBANK0
   479  000080                     __pbssBANK0:
   480                           	opt callstack 0
   481  000080                     _mat_disp:
   482                           	opt callstack 0
   483  000080                     	ds	64
   484                           
   485                           	psect	cstackCOMRAM
   486  000001                     __pcstackCOMRAM:
   487                           	opt callstack 0
   488  000001                     ?_time:
   489                           	opt callstack 0
   490  000001                     ?___omul:
   491                           	opt callstack 0
   492  000001                     pulso@lcd:
   493                           	opt callstack 0
   494  000001                     write_char@lcd:
   495                           	opt callstack 0
   496  000001                     strcpy@dest:
   497                           	opt callstack 0
   498  000001                     time@t:
   499                           	opt callstack 0
   500  000001                     ___omul@multiplier:
   501                           	opt callstack 0
   502                           
   503                           ; 8 bytes @ 0x0
   504  000001                     	ds	2
   505  000003                     ??_pulso:
   506  000003                     write_char@c:
   507                           	opt callstack 0
   508  000003                     strcpy@src:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x2
   512  000003                     	ds	1
   513  000004                     ??_write_char:
   514  000004                     function_set@lcd:
   515                           	opt callstack 0
   516  000004                     display_onoff_control@lcd:
   517                           	opt callstack 0
   518  000004                     lcd_cmd@lcd:
   519                           	opt callstack 0
   520  000004                     entry_mode_set@lcd:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x3
   524  000004                     	ds	1
   525  000005                     strcpy@s:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x4
   529  000005                     	ds	1
   530  000006                     function_set@data_lenght:
   531                           	opt callstack 0
   532  000006                     display_onoff_control@display_on:
   533                           	opt callstack 0
   534  000006                     lcd_cmd@a:
   535                           	opt callstack 0
   536  000006                     entry_mode_set@move_direction:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x5
   540  000006                     	ds	1
   541  000007                     ??_lcd_cmd:
   542  000007                     function_set@num_lines:
   543                           	opt callstack 0
   544  000007                     display_onoff_control@cursor_on:
   545                           	opt callstack 0
   546  000007                     entry_mode_set@display_shift:
   547                           	opt callstack 0
   548  000007                     strcpy@d:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x6
   552  000007                     	ds	1
   553  000008                     ??_entry_mode_set:
   554  000008                     function_set@char_font:
   555                           	opt callstack 0
   556  000008                     display_onoff_control@blink:
   557                           	opt callstack 0
   558  000008                     goto_XY@lcd:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x7
   562  000008                     	ds	1
   563  000009                     ??_function_set:
   564  000009                     ??_display_onoff_control:
   565  000009                     srand@s:
   566                           	opt callstack 0
   567  000009                     ___omul@multiplicand:
   568                           	opt callstack 0
   569                           
   570                           ; 8 bytes @ 0x8
   571  000009                     	ds	1
   572  00000A                     goto_XY@x:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x9
   576  00000A                     	ds	1
   577  00000B                     ??_srand:
   578  00000B                     goto_XY@y:
   579                           	opt callstack 0
   580                           
   581                           ; 1 bytes @ 0xA
   582  00000B                     	ds	1
   583  00000C                     ??_goto_XY:
   584                           
   585                           ; 1 bytes @ 0xB
   586  00000C                     	ds	1
   587  00000D                     goto_XY@z:
   588                           	opt callstack 0
   589                           
   590                           ; 1 bytes @ 0xC
   591  00000D                     	ds	1
   592  00000E                     goto_XY@a:
   593                           	opt callstack 0
   594                           
   595                           ; 1 bytes @ 0xD
   596  00000E                     	ds	1
   597  00000F                     goto_XY@temp:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0xE
   601  00000F                     	ds	1
   602  000010                     print_mat@lcd:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0xF
   606  000010                     	ds	1
   607  000011                     ___omul@product:
   608                           	opt callstack 0
   609                           
   610                           ; 8 bytes @ 0x10
   611  000011                     	ds	1
   612  000012                     ??_print_mat:
   613                           
   614                           ; 1 bytes @ 0x11
   615  000012                     	ds	4
   616  000016                     print_mat@j:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x15
   620  000016                     	ds	2
   621  000018                     print_mat@i:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x17
   625  000018                     	ds	1
   626  000019                     ?_rand:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0x18
   630  000019                     	ds	1
   631  00001A                     creditos@lcd:
   632                           	opt callstack 0
   633  00001A                     finaliza@lcd:
   634                           	opt callstack 0
   635  00001A                     instrucoes@lcd:
   636                           	opt callstack 0
   637  00001A                     menu@lcd:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x19
   641  00001A                     	ds	1
   642  00001B                     ??_rand:
   643                           
   644                           ; 1 bytes @ 0x1A
   645  00001B                     	ds	1
   646  00001C                     
   647                           ; 1 bytes @ 0x1B
   648  00001C                     	ds	7
   649  000023                     ?___awmod:
   650                           	opt callstack 0
   651  000023                     ___awmod@dividend:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x22
   655  000023                     	ds	2
   656  000025                     ___awmod@divisor:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x24
   660  000025                     	ds	2
   661  000027                     ___awmod@counter:
   662                           	opt callstack 0
   663                           
   664                           ; 1 bytes @ 0x26
   665  000027                     	ds	1
   666  000028                     ___awmod@sign:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x27
   670  000028                     	ds	1
   671  000029                     jogar@lcd:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x28
   675  000029                     	ds	2
   676  00002B                     ??_jogar:
   677                           
   678                           ; 1 bytes @ 0x2A
   679  00002B                     	ds	8
   680  000033                     jogar@linha_aleatoria:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x32
   684  000033                     	ds	2
   685  000035                     jogar@bateu:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x34
   689  000035                     	ds	2
   690  000037                     jogar@j:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x36
   694  000037                     	ds	2
   695  000039                     jogar@i:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x38
   699  000039                     	ds	2
   700  00003B                     gerenciador@lcd:
   701                           	opt callstack 0
   702                           
   703                           ; 2 bytes @ 0x3A
   704  00003B                     	ds	2
   705  00003D                     
   706                           ; 1 bytes @ 0x3C
   707 ;;
   708 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   709 ;;
   710 ;; *************** function _main *****************
   711 ;; Defined at:
   712 ;;		line 36 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   726 ;;      Params:         0       0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels required when called:    8
   732 ;; This function calls:
   733 ;;		_display_onoff_control
   734 ;;		_entry_mode_set
   735 ;;		_function_set
   736 ;;		_gerenciador
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text0
   743  001090                     __ptext0:
   744                           	opt callstack 0
   745  001090                     _main:
   746                           	opt callstack 23
   747  001090                     
   748                           ;main.c: 38:     ADCON1 = 0x0F;
   749  001090  0E0F               	movlw	15
   750  001092  6EC1               	movwf	193,c	;volatile
   751                           
   752                           ;main.c: 43:     TRISB = 0x0F;
   753  001094  0E0F               	movlw	15
   754  001096  6E93               	movwf	147,c	;volatile
   755                           
   756                           ;main.c: 46:     PORTB = 0x00;
   757  001098  0E00               	movlw	0
   758  00109A  6E81               	movwf	129,c	;volatile
   759                           
   760                           ;main.c: 49:     TRISD = 0x00;
   761  00109C  0E00               	movlw	0
   762  00109E  6E95               	movwf	149,c	;volatile
   763                           
   764                           ;main.c: 52:     T0CON = 0x47;
   765  0010A0  0E47               	movlw	71
   766  0010A2  6ED5               	movwf	213,c	;volatile
   767                           
   768                           ;main.c: 55:     TMR0L = 0x63;
   769  0010A4  0E63               	movlw	99
   770  0010A6  6ED6               	movwf	214,c	;volatile
   771  0010A8                     
   772                           ;main.c: 58:     INTCONbits.TMR0IF = 0;
   773  0010A8  94F2               	bcf	242,2,c	;volatile
   774  0010AA                     
   775                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   776  0010AA  8AF2               	bsf	242,5,c	;volatile
   777  0010AC                     
   778                           ;main.c: 60:     INTCONbits.INT0IE = 1;
   779  0010AC  88F2               	bsf	242,4,c	;volatile
   780  0010AE                     
   781                           ;main.c: 61:     INTCONbits.INT0IF = 0;
   782  0010AE  92F2               	bcf	242,1,c	;volatile
   783  0010B0                     
   784                           ;main.c: 62:     INTCONbits.GIE = 1;
   785  0010B0  8EF2               	bsf	242,7,c	;volatile
   786  0010B2                     
   787                           ;main.c: 64:     function_set(lcd, 0, 1, 0);
   788  0010B2  0E83               	movlw	131
   789  0010B4  6E04               	movwf	function_set@lcd^0,c
   790  0010B6  0E0F               	movlw	15
   791  0010B8  6E05               	movwf	(function_set@lcd+1)^0,c
   792  0010BA  0E00               	movlw	0
   793  0010BC  6E06               	movwf	function_set@data_lenght^0,c
   794  0010BE  0E01               	movlw	1
   795  0010C0  6E07               	movwf	function_set@num_lines^0,c
   796  0010C2  0E00               	movlw	0
   797  0010C4  6E08               	movwf	function_set@char_font^0,c
   798  0010C6  ECAC  F005         	call	_function_set	;wreg free
   799  0010CA                     
   800                           ;main.c: 65:     display_onoff_control(lcd, 1, 0, 0);
   801  0010CA  0E83               	movlw	131
   802  0010CC  6E04               	movwf	display_onoff_control@lcd^0,c
   803  0010CE  0E0F               	movlw	15
   804  0010D0  6E05               	movwf	(display_onoff_control@lcd+1)^0,c
   805  0010D2  0E01               	movlw	1
   806  0010D4  6E06               	movwf	display_onoff_control@display_on^0,c
   807  0010D6  0E00               	movlw	0
   808  0010D8  6E07               	movwf	display_onoff_control@cursor_on^0,c
   809  0010DA  0E00               	movlw	0
   810  0010DC  6E08               	movwf	display_onoff_control@blink^0,c
   811  0010DE  ECBF  F007         	call	_display_onoff_control	;wreg free
   812  0010E2                     
   813                           ;main.c: 66:     entry_mode_set(lcd, 1,0);
   814  0010E2  0E83               	movlw	131
   815  0010E4  6E04               	movwf	entry_mode_set@lcd^0,c
   816  0010E6  0E0F               	movlw	15
   817  0010E8  6E05               	movwf	(entry_mode_set@lcd+1)^0,c
   818  0010EA  0E01               	movlw	1
   819  0010EC  6E06               	movwf	entry_mode_set@move_direction^0,c
   820  0010EE  0E00               	movlw	0
   821  0010F0  6E07               	movwf	entry_mode_set@display_shift^0,c
   822  0010F2  EC06  F008         	call	_entry_mode_set	;wreg free
   823  0010F6                     
   824                           ;main.c: 68:     T0CONbits.TMR0ON = 1;
   825  0010F6  8ED5               	bsf	213,7,c	;volatile
   826  0010F8                     
   827                           ;main.c: 70:     gerenciador(lcd);
   828  0010F8  0E83               	movlw	131
   829  0010FA  6E3B               	movwf	gerenciador@lcd^0,c
   830  0010FC  0E0F               	movlw	15
   831  0010FE  6E3C               	movwf	(gerenciador@lcd+1)^0,c
   832  001100  EC74  F007         	call	_gerenciador	;wreg free
   833  001104  EF07  F000         	goto	start
   834  001108                     __end_of_main:
   835                           	opt callstack 0
   836                           
   837 ;; *************** function _gerenciador *****************
   838 ;; Defined at:
   839 ;;		line 16 in file "task_manager.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  lcd             2   58[COMRAM] PTR struct .
   842 ;;		 -> PORTD(1), 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   854 ;;      Params:         2       0       0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0
   857 ;;      Totals:         2       0       0       0       0       0       0
   858 ;;Total ram usage:        2 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    7
   861 ;; This function calls:
   862 ;;		_creditos
   863 ;;		_finaliza
   864 ;;		_instrucoes
   865 ;;		_jogar
   866 ;;		_menu
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text1
   873  000EE8                     __ptext1:
   874                           	opt callstack 0
   875  000EE8                     _gerenciador:
   876                           	opt callstack 23
   877  000EE8                     l183:
   878  000EE8                     
   879                           ;task_manager.c: 18:         menu(lcd);
   880  000EE8  C03B  F01A         	movff	gerenciador@lcd,menu@lcd
   881  000EEC  C03C  F01B         	movff	gerenciador@lcd+1,menu@lcd+1
   882  000EF0  EC40  F004         	call	_menu	;wreg free
   883  000EF4                     
   884                           ;task_manager.c: 19:         if(op == 0) jogar(lcd);
   885  000EF4  503F               	movf	_op^0,w,c
   886  000EF6  A4D8               	btfss	status,2,c
   887  000EF8  EF80  F007         	goto	u1391
   888  000EFC  EF82  F007         	goto	u1390
   889  000F00                     u1391:
   890  000F00  EF8A  F007         	goto	l1985
   891  000F04                     u1390:
   892  000F04  C03B  F029         	movff	gerenciador@lcd,jogar@lcd
   893  000F08  C03C  F02A         	movff	gerenciador@lcd+1,jogar@lcd+1
   894  000F0C  EC09  F000         	call	_jogar	;wreg free
   895  000F10  EF74  F007         	goto	l183
   896  000F14                     l1985:
   897  000F14  043F               	decf	_op^0,w,c
   898  000F16  A4D8               	btfss	status,2,c
   899  000F18  EF90  F007         	goto	u1401
   900  000F1C  EF92  F007         	goto	u1400
   901  000F20                     u1401:
   902  000F20  EF9A  F007         	goto	l1989
   903  000F24                     u1400:
   904  000F24  C03B  F01A         	movff	gerenciador@lcd,instrucoes@lcd
   905  000F28  C03C  F01B         	movff	gerenciador@lcd+1,instrucoes@lcd+1
   906  000F2C  EC84  F008         	call	_instrucoes	;wreg free
   907  000F30  EF74  F007         	goto	l183
   908  000F34                     l1989:
   909  000F34  0E02               	movlw	2
   910  000F36  183F               	xorwf	_op^0,w,c
   911  000F38  A4D8               	btfss	status,2,c
   912  000F3A  EFA1  F007         	goto	u1411
   913  000F3E  EFA3  F007         	goto	u1410
   914  000F42                     u1411:
   915  000F42  EFAB  F007         	goto	l1993
   916  000F46                     u1410:
   917  000F46  C03B  F01A         	movff	gerenciador@lcd,creditos@lcd
   918  000F4A  C03C  F01B         	movff	gerenciador@lcd+1,creditos@lcd+1
   919  000F4E  ECBA  F008         	call	_creditos	;wreg free
   920  000F52  EF74  F007         	goto	l183
   921  000F56                     l1993:
   922  000F56  0E03               	movlw	3
   923  000F58  183F               	xorwf	_op^0,w,c
   924  000F5A  A4D8               	btfss	status,2,c
   925  000F5C  EFB2  F007         	goto	u1421
   926  000F60  EFB4  F007         	goto	u1420
   927  000F64                     u1421:
   928  000F64  EFBC  F007         	goto	l185
   929  000F68                     u1420:
   930  000F68  C03B  F01A         	movff	gerenciador@lcd,finaliza@lcd
   931  000F6C  C03C  F01B         	movff	gerenciador@lcd+1,finaliza@lcd+1
   932  000F70  ECF0  F008         	call	_finaliza	;wreg free
   933  000F74  EF74  F007         	goto	l183
   934  000F78                     l185:
   935  000F78  EF74  F007         	goto	l183
   936  000F7C  0012               	return		;funcret
   937  000F7E                     __end_of_gerenciador:
   938                           	opt callstack 0
   939                           
   940 ;; *************** function _menu *****************
   941 ;; Defined at:
   942 ;;		line 171 in file "task_manager.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  lcd             2   25[COMRAM] PTR struct .
   945 ;;		 -> PORTD(1), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      unsigned char 
   950 ;; Registers used:
   951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         2       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:         2       0       0       0       0       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    6
   964 ;; This function calls:
   965 ;;		_print_mat
   966 ;;		_strcpy
   967 ;; This function is called by:
   968 ;;		_gerenciador
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text2
   973  000880                     __ptext2:
   974                           	opt callstack 0
   975  000880                     _menu:
   976                           	opt callstack 23
   977  000880                     
   978                           ;task_manager.c: 172:     strcpy(mat_disp[0], "1.JOGAR.........");
   979  000880  0E80               	movlw	low _mat_disp
   980  000882  6E01               	movwf	strcpy@dest^0,c
   981  000884  0E00               	movlw	high _mat_disp
   982  000886  6E02               	movwf	(strcpy@dest+1)^0,c
   983  000888  0E4A               	movlw	low STR_21
   984  00088A  6E03               	movwf	strcpy@src^0,c
   985  00088C  0E7F               	movlw	high STR_21
   986  00088E  6E04               	movwf	(strcpy@src+1)^0,c
   987  000890  EC68  F009         	call	_strcpy	;wreg free
   988                           
   989                           ;task_manager.c: 173:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   990  000894  0E90               	movlw	low (_mat_disp+16)
   991  000896  6E01               	movwf	strcpy@dest^0,c
   992  000898  0E00               	movlw	high (_mat_disp+16)
   993  00089A  6E02               	movwf	(strcpy@dest+1)^0,c
   994  00089C  0E7D               	movlw	low STR_22
   995  00089E  6E03               	movwf	strcpy@src^0,c
   996  0008A0  0E7F               	movlw	high STR_22
   997  0008A2  6E04               	movwf	(strcpy@src+1)^0,c
   998  0008A4  EC68  F009         	call	_strcpy	;wreg free
   999                           
  1000                           ;task_manager.c: 174:     strcpy(mat_disp[2], "3.CREDITOS......");
  1001  0008A8  0EA0               	movlw	low (_mat_disp+32)
  1002  0008AA  6E01               	movwf	strcpy@dest^0,c
  1003  0008AC  0E00               	movlw	high (_mat_disp+32)
  1004  0008AE  6E02               	movwf	(strcpy@dest+1)^0,c
  1005  0008B0  0E5B               	movlw	low STR_23
  1006  0008B2  6E03               	movwf	strcpy@src^0,c
  1007  0008B4  0E7F               	movlw	high STR_23
  1008  0008B6  6E04               	movwf	(strcpy@src+1)^0,c
  1009  0008B8  EC68  F009         	call	_strcpy	;wreg free
  1010                           
  1011                           ;task_manager.c: 175:     strcpy(mat_disp[3], "4.FINALIZAR.....");
  1012  0008BC  0EB0               	movlw	low (_mat_disp+48)
  1013  0008BE  6E01               	movwf	strcpy@dest^0,c
  1014  0008C0  0E00               	movlw	high (_mat_disp+48)
  1015  0008C2  6E02               	movwf	(strcpy@dest+1)^0,c
  1016  0008C4  0E6C               	movlw	low STR_24
  1017  0008C6  6E03               	movwf	strcpy@src^0,c
  1018  0008C8  0E7F               	movlw	high STR_24
  1019  0008CA  6E04               	movwf	(strcpy@src+1)^0,c
  1020  0008CC  EC68  F009         	call	_strcpy	;wreg free
  1021  0008D0                     l1725:
  1022                           
  1023                           ;task_manager.c: 178:     mat_disp[op][15] = '<';
  1024  0008D0  503F               	movf	_op^0,w,c
  1025  0008D2  0D10               	mullw	16
  1026  0008D4  0E8F               	movlw	low (_mat_disp+15)
  1027  0008D6  24F3               	addwf	243,w,c
  1028  0008D8  6ED9               	movwf	fsr2l,c
  1029  0008DA  0E00               	movlw	high (_mat_disp+15)
  1030  0008DC  20F4               	addwfc	prodh,w,c
  1031  0008DE  6EDA               	movwf	fsr2h,c
  1032  0008E0  0E3C               	movlw	60
  1033  0008E2  6EDF               	movwf	indf2,c
  1034  0008E4                     
  1035                           ;task_manager.c: 179:     print_mat(lcd);
  1036  0008E4  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1037  0008E8  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1038  0008EC  ECCF  F006         	call	_print_mat	;wreg free
  1039                           
  1040                           ;task_manager.c: 180:     while(!botoes.Enter){
  1041  0008F0  EFC2  F004         	goto	l1755
  1042  0008F4                     l243:
  1043                           
  1044                           ;task_manager.c: 181:         if((botoes.U) && (op > 0)){
  1045  0008F4  A045               	btfss	_botoes^0,0,c
  1046  0008F6  EF7F  F004         	goto	u1051
  1047  0008FA  EF81  F004         	goto	u1050
  1048  0008FE                     u1051:
  1049  0008FE  EFA5  F004         	goto	l1741
  1050  000902                     u1050:
  1051  000902  503F               	movf	_op^0,w,c
  1052  000904  B4D8               	btfsc	status,2,c
  1053  000906  EF87  F004         	goto	u1061
  1054  00090A  EF89  F004         	goto	u1060
  1055  00090E                     u1061:
  1056  00090E  EFA5  F004         	goto	l1741
  1057  000912                     u1060:
  1058  000912                     
  1059                           ;task_manager.c: 182:             mat_disp[op][15] = '.';
  1060  000912  503F               	movf	_op^0,w,c
  1061  000914  0D10               	mullw	16
  1062  000916  0E8F               	movlw	low (_mat_disp+15)
  1063  000918  24F3               	addwf	243,w,c
  1064  00091A  6ED9               	movwf	fsr2l,c
  1065  00091C  0E00               	movlw	high (_mat_disp+15)
  1066  00091E  20F4               	addwfc	prodh,w,c
  1067  000920  6EDA               	movwf	fsr2h,c
  1068  000922  0E2E               	movlw	46
  1069  000924  6EDF               	movwf	indf2,c
  1070  000926                     
  1071                           ;task_manager.c: 183:             op--;
  1072  000926  063F               	decf	_op^0,f,c
  1073  000928                     
  1074                           ;task_manager.c: 184:             botoes.U = 0;
  1075  000928  9045               	bcf	_botoes^0,0,c
  1076  00092A                     
  1077                           ;task_manager.c: 185:             mat_disp[op][15] = '<';
  1078  00092A  503F               	movf	_op^0,w,c
  1079  00092C  0D10               	mullw	16
  1080  00092E  0E8F               	movlw	low (_mat_disp+15)
  1081  000930  24F3               	addwf	243,w,c
  1082  000932  6ED9               	movwf	fsr2l,c
  1083  000934  0E00               	movlw	high (_mat_disp+15)
  1084  000936  20F4               	addwfc	prodh,w,c
  1085  000938  6EDA               	movwf	fsr2h,c
  1086  00093A  0E3C               	movlw	60
  1087  00093C  6EDF               	movwf	indf2,c
  1088  00093E                     
  1089                           ;task_manager.c: 186:             print_mat(lcd);
  1090  00093E  C01A  F010         	movff	menu@lcd,print_mat@lcd
  1091  000942  C01B  F011         	movff	menu@lcd+1,print_mat@lcd+1
  1092  000946  ECCF  F006         	call	_print_mat	;wreg free
  1093  00094A                     l1741:
  1094                           
  1095                           ;task_manager.c: 188:         if((botoes.D) && (op < 3)){
  1096  00094A  A245               	btfss	_botoes^0,1,c
  1097  00094C  EFAA  F004         	goto	u1071
  1098  000950  EFAC  F004         	goto	u1070
  1099  000954                     u1071:
  1100  000954  EFC2  F004         	goto	l1755
  1101  000958                     u1070:
  1102  000958  0E03               	movlw	3
  1103  00095A  603F               	cpfslt	_op^0,c
  1104  00095C  EFB2  F004         	goto	u1081
  1105  000960  EFB4  F004         	goto	u1080
  1106  000964                     u1081:
  1107  000964  EFC2  F004         	goto	l1755
  1108  000968                     u1080:
  1109  000968                     
  1110                           ;task_manager.c: 189:             mat_disp[op][15] = '.';
  1111  000968  503F               	movf	_op^0,w,c
  1112  00096A  0D10               	mullw	16
  1113  00096C  0E8F               	movlw	low (_mat_disp+15)
  1114  00096E  24F3               	addwf	243,w,c
  1115  000970  6ED9               	movwf	fsr2l,c
  1116  000972  0E00               	movlw	high (_mat_disp+15)
  1117  000974  20F4               	addwfc	prodh,w,c
  1118  000976  6EDA               	movwf	fsr2h,c
  1119  000978  0E2E               	movlw	46
  1120  00097A  6EDF               	movwf	indf2,c
  1121  00097C                     
  1122                           ;task_manager.c: 190:             op++;
  1123  00097C  2A3F               	incf	_op^0,f,c
  1124  00097E                     
  1125                           ;task_manager.c: 191:             botoes.D = 0;
  1126  00097E  9245               	bcf	_botoes^0,1,c
  1127  000980  EF68  F004         	goto	l1725
  1128  000984                     l1755:
  1129                           
  1130                           ;task_manager.c: 180:     while(!botoes.Enter){
  1131  000984  A845               	btfss	_botoes^0,4,c
  1132  000986  EFC7  F004         	goto	u1091
  1133  00098A  EFC9  F004         	goto	u1090
  1134  00098E                     u1091:
  1135  00098E  EF7A  F004         	goto	l243
  1136  000992                     u1090:
  1137  000992  0012               	return		;funcret
  1138  000994                     __end_of_menu:
  1139                           	opt callstack 0
  1140                           
  1141 ;; *************** function _jogar *****************
  1142 ;; Defined at:
  1143 ;;		line 47 in file "task_manager.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  lcd             2   40[COMRAM] PTR struct .
  1146 ;;		 -> PORTD(1), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  j               2   54[COMRAM] int 
  1149 ;;  i               2   56[COMRAM] int 
  1150 ;;  bateu           2   52[COMRAM] int 
  1151 ;;  linha_aleato    2   50[COMRAM] int 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1161 ;;      Params:         2       0       0       0       0       0       0
  1162 ;;      Locals:         8       0       0       0       0       0       0
  1163 ;;      Temps:          8       0       0       0       0       0       0
  1164 ;;      Totals:        18       0       0       0       0       0       0
  1165 ;;Total ram usage:       18 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    6
  1168 ;; This function calls:
  1169 ;;		___awmod
  1170 ;;		_print_mat
  1171 ;;		_rand
  1172 ;;		_srand
  1173 ;;		_strcpy
  1174 ;;		_time
  1175 ;; This function is called by:
  1176 ;;		_gerenciador
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text3
  1181  000012                     __ptext3:
  1182                           	opt callstack 0
  1183  000012                     _jogar:
  1184                           	opt callstack 23
  1185  000012                     
  1186                           ;task_manager.c: 48:     srand(time(((void*)0)));
  1187  000012  0E00               	movlw	0
  1188  000014  6E01               	movwf	time@t^0,c
  1189  000016  0E00               	movlw	0
  1190  000018  6E02               	movwf	(time@t+1)^0,c
  1191  00001A  EC20  F009         	call	_time	;wreg free
  1192  00001E  C001  F02B         	movff	?_time,??_jogar
  1193  000022  C002  F02C         	movff	?_time+1,??_jogar+1
  1194  000026  C003  F02D         	movff	?_time+2,??_jogar+2
  1195  00002A  C004  F02E         	movff	?_time+3,??_jogar+3
  1196  00002E  C005  F02F         	movff	?_time+4,??_jogar+4
  1197  000032  C006  F030         	movff	?_time+5,??_jogar+5
  1198  000036  C007  F031         	movff	?_time+6,??_jogar+6
  1199  00003A  C008  F032         	movff	?_time+7,??_jogar+7
  1200  00003E  C02B  F009         	movff	??_jogar,srand@s
  1201  000042  C02D  F00A         	movff	??_jogar+2,srand@s+1
  1202  000046  ECDB  F009         	call	_srand	;wreg free
  1203  00004A                     
  1204                           ;task_manager.c: 49:     int bateu = 0;
  1205  00004A  0E00               	movlw	0
  1206  00004C  6E36               	movwf	(jogar@bateu+1)^0,c
  1207  00004E  0E00               	movlw	0
  1208  000050  6E35               	movwf	jogar@bateu^0,c
  1209  000052                     
  1210                           ;task_manager.c: 53:     strcpy(mat_disp[0], "      SCORE:    ");
  1211  000052  0E80               	movlw	low _mat_disp
  1212  000054  6E01               	movwf	strcpy@dest^0,c
  1213  000056  0E00               	movlw	high _mat_disp
  1214  000058  6E02               	movwf	(strcpy@dest+1)^0,c
  1215  00005A  0E28               	movlw	low STR_9
  1216  00005C  6E03               	movwf	strcpy@src^0,c
  1217  00005E  0E7F               	movlw	high STR_9
  1218  000060  6E04               	movwf	(strcpy@src+1)^0,c
  1219  000062  EC68  F009         	call	_strcpy	;wreg free
  1220  000066                     
  1221                           ;task_manager.c: 54:     strcpy(mat_disp[1], "                ");
  1222  000066  0E90               	movlw	low (_mat_disp+16)
  1223  000068  6E01               	movwf	strcpy@dest^0,c
  1224  00006A  0E00               	movlw	high (_mat_disp+16)
  1225  00006C  6E02               	movwf	(strcpy@dest+1)^0,c
  1226  00006E  0EF5               	movlw	low STR_10
  1227  000070  6E03               	movwf	strcpy@src^0,c
  1228  000072  0E7E               	movlw	high STR_10
  1229  000074  6E04               	movwf	(strcpy@src+1)^0,c
  1230  000076  EC68  F009         	call	_strcpy	;wreg free
  1231  00007A                     
  1232                           ;task_manager.c: 55:     strcpy(mat_disp[2], "                ");
  1233  00007A  0EA0               	movlw	low (_mat_disp+32)
  1234  00007C  6E01               	movwf	strcpy@dest^0,c
  1235  00007E  0E00               	movlw	high (_mat_disp+32)
  1236  000080  6E02               	movwf	(strcpy@dest+1)^0,c
  1237  000082  0EF5               	movlw	low STR_10
  1238  000084  6E03               	movwf	strcpy@src^0,c
  1239  000086  0E7E               	movlw	high STR_10
  1240  000088  6E04               	movwf	(strcpy@src+1)^0,c
  1241  00008A  EC68  F009         	call	_strcpy	;wreg free
  1242  00008E                     
  1243                           ;task_manager.c: 56:     strcpy(mat_disp[3], "                ");
  1244  00008E  0EB0               	movlw	low (_mat_disp+48)
  1245  000090  6E01               	movwf	strcpy@dest^0,c
  1246  000092  0E00               	movlw	high (_mat_disp+48)
  1247  000094  6E02               	movwf	(strcpy@dest+1)^0,c
  1248  000096  0EF5               	movlw	low STR_10
  1249  000098  6E03               	movwf	strcpy@src^0,c
  1250  00009A  0E7E               	movlw	high STR_10
  1251  00009C  6E04               	movwf	(strcpy@src+1)^0,c
  1252  00009E  EC68  F009         	call	_strcpy	;wreg free
  1253  0000A2                     
  1254                           ;task_manager.c: 59:     mat_disp[0][15] = 0x30;
  1255  0000A2  0E30               	movlw	48
  1256  0000A4  0100               	movlb	0	; () banked
  1257  0000A6  6F8F               	movwf	(_mat_disp+15)& (0+255),b
  1258  0000A8                     
  1259                           ; BSR set to: 0
  1260                           ;task_manager.c: 60:     mat_disp[0][14] = 0x30;
  1261  0000A8  0E30               	movlw	48
  1262  0000AA  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1263  0000AC                     
  1264                           ; BSR set to: 0
  1265                           ;task_manager.c: 61:     mat_disp[0][13] = 0x30;
  1266  0000AC  0E30               	movlw	48
  1267  0000AE  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1268  0000B0                     
  1269                           ; BSR set to: 0
  1270                           ;task_manager.c: 62:     mat_disp[0][12] = 0x30;
  1271  0000B0  0E30               	movlw	48
  1272  0000B2  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1273                           
  1274                           ;task_manager.c: 64:     print_mat(lcd);
  1275  0000B4  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1276  0000B8  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1277  0000BC  ECCF  F006         	call	_print_mat	;wreg free
  1278                           
  1279                           ;task_manager.c: 66:     while(!botoes.Esc && bateu == 0){
  1280  0000C0  EF00  F003         	goto	l1907
  1281  0000C4                     l1779:
  1282                           
  1283                           ;task_manager.c: 67:         contador ++;
  1284  0000C4  2A3D               	incf	_contador^0,f,c
  1285  0000C6                     
  1286                           ;task_manager.c: 68:         if(contador%20 == 0){
  1287  0000C6  C03D  F023         	movff	_contador,___awmod@dividend
  1288  0000CA  6A24               	clrf	(___awmod@dividend+1)^0,c
  1289  0000CC  0E00               	movlw	0
  1290  0000CE  6E26               	movwf	(___awmod@divisor+1)^0,c
  1291  0000D0  0E14               	movlw	20
  1292  0000D2  6E25               	movwf	___awmod@divisor^0,c
  1293  0000D4  EC77  F006         	call	___awmod	;wreg free
  1294  0000D8  5023               	movf	?___awmod^0,w,c
  1295  0000DA  1024               	iorwf	(?___awmod+1)^0,w,c
  1296  0000DC  A4D8               	btfss	status,2,c
  1297  0000DE  EF73  F000         	goto	u1101
  1298  0000E2  EF75  F000         	goto	u1100
  1299  0000E6                     u1101:
  1300  0000E6  EF9C  F000         	goto	l1787
  1301  0000EA                     u1100:
  1302  0000EA                     
  1303                           ;task_manager.c: 69:             linha_aleatoria = (rand()%3) + 1 ;
  1304  0000EA  EC3E  F005         	call	_rand	;wreg free
  1305  0000EE  C019  F023         	movff	?_rand,___awmod@dividend
  1306  0000F2  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
  1307  0000F6  0E00               	movlw	0
  1308  0000F8  6E26               	movwf	(___awmod@divisor+1)^0,c
  1309  0000FA  0E03               	movlw	3
  1310  0000FC  6E25               	movwf	___awmod@divisor^0,c
  1311  0000FE  EC77  F006         	call	___awmod	;wreg free
  1312  000102  0E01               	movlw	1
  1313  000104  2423               	addwf	?___awmod^0,w,c
  1314  000106  6E33               	movwf	jogar@linha_aleatoria^0,c
  1315  000108  0E00               	movlw	0
  1316  00010A  2024               	addwfc	(?___awmod+1)^0,w,c
  1317  00010C  6E34               	movwf	(jogar@linha_aleatoria+1)^0,c
  1318  00010E                     
  1319                           ;task_manager.c: 70:             mat_disp[linha_aleatoria][15] = '*';
  1320  00010E  C033  F02B         	movff	jogar@linha_aleatoria,??_jogar
  1321  000112  C034  F02C         	movff	jogar@linha_aleatoria+1,??_jogar+1
  1322  000116  3A2B               	swapf	??_jogar^0,f,c
  1323  000118  3A2C               	swapf	(??_jogar+1)^0,f,c
  1324  00011A  0EF0               	movlw	240
  1325  00011C  162C               	andwf	(??_jogar+1)^0,f,c
  1326  00011E  502B               	movf	??_jogar^0,w,c
  1327  000120  0B0F               	andlw	15
  1328  000122  122C               	iorwf	(??_jogar+1)^0,f,c
  1329  000124  0EF0               	movlw	240
  1330  000126  162B               	andwf	??_jogar^0,f,c
  1331  000128  0E8F               	movlw	low (_mat_disp+15)
  1332  00012A  242B               	addwf	??_jogar^0,w,c
  1333  00012C  6ED9               	movwf	fsr2l,c
  1334  00012E  0E00               	movlw	high (_mat_disp+15)
  1335  000130  202C               	addwfc	(??_jogar+1)^0,w,c
  1336  000132  6EDA               	movwf	fsr2h,c
  1337  000134  0E2A               	movlw	42
  1338  000136  6EDF               	movwf	indf2,c
  1339  000138                     l1787:
  1340                           
  1341                           ;task_manager.c: 72:         if(contador%4 == 0){
  1342  000138  C03D  F02B         	movff	_contador,??_jogar
  1343  00013C  0E03               	movlw	3
  1344  00013E  162B               	andwf	??_jogar^0,f,c
  1345  000140  A4D8               	btfss	status,2,c
  1346  000142  EFA5  F000         	goto	u1111
  1347  000146  EFA7  F000         	goto	u1110
  1348  00014A                     u1111:
  1349  00014A  EF4C  F001         	goto	l1815
  1350  00014E                     u1110:
  1351  00014E                     
  1352                           ;task_manager.c: 73:             for(int i = 1; i <= 3; i++){
  1353  00014E  0E00               	movlw	0
  1354  000150  6E3A               	movwf	(jogar@i+1)^0,c
  1355  000152  0E01               	movlw	1
  1356  000154  6E39               	movwf	jogar@i^0,c
  1357  000156                     l1795:
  1358                           
  1359                           ;task_manager.c: 74:                 for(int j = 0; j < 15; j++)
  1360  000156  0E00               	movlw	0
  1361  000158  6E38               	movwf	(jogar@j+1)^0,c
  1362  00015A  0E00               	movlw	0
  1363  00015C  6E37               	movwf	jogar@j^0,c
  1364  00015E                     l1801:
  1365                           
  1366                           ;task_manager.c: 75:                     mat_disp[i][j] = mat_disp[i][j+1];
  1367  00015E  C039  F02B         	movff	jogar@i,??_jogar
  1368  000162  C03A  F02C         	movff	jogar@i+1,??_jogar+1
  1369  000166  3A2B               	swapf	??_jogar^0,f,c
  1370  000168  3A2C               	swapf	(??_jogar+1)^0,f,c
  1371  00016A  0EF0               	movlw	240
  1372  00016C  162C               	andwf	(??_jogar+1)^0,f,c
  1373  00016E  502B               	movf	??_jogar^0,w,c
  1374  000170  0B0F               	andlw	15
  1375  000172  122C               	iorwf	(??_jogar+1)^0,f,c
  1376  000174  0EF0               	movlw	240
  1377  000176  162B               	andwf	??_jogar^0,f,c
  1378  000178  0E80               	movlw	low _mat_disp
  1379  00017A  6E2D               	movwf	(??_jogar+2)^0,c
  1380  00017C  0E00               	movlw	high _mat_disp
  1381  00017E  6E2E               	movwf	(??_jogar+3)^0,c
  1382  000180  0E01               	movlw	1
  1383  000182  262D               	addwf	(??_jogar+2)^0,f,c
  1384  000184  0E00               	movlw	0
  1385  000186  222E               	addwfc	(??_jogar+3)^0,f,c
  1386  000188  502B               	movf	??_jogar^0,w,c
  1387  00018A  262D               	addwf	(??_jogar+2)^0,f,c
  1388  00018C  502C               	movf	(??_jogar+1)^0,w,c
  1389  00018E  222E               	addwfc	(??_jogar+3)^0,f,c
  1390  000190  5037               	movf	jogar@j^0,w,c
  1391  000192  242D               	addwf	(??_jogar+2)^0,w,c
  1392  000194  6ED9               	movwf	fsr2l,c
  1393  000196  5038               	movf	(jogar@j+1)^0,w,c
  1394  000198  202E               	addwfc	(??_jogar+3)^0,w,c
  1395  00019A  6EDA               	movwf	fsr2h,c
  1396  00019C  C039  F02F         	movff	jogar@i,??_jogar+4
  1397  0001A0  C03A  F030         	movff	jogar@i+1,??_jogar+5
  1398  0001A4  3A2F               	swapf	(??_jogar+4)^0,f,c
  1399  0001A6  3A30               	swapf	(??_jogar+5)^0,f,c
  1400  0001A8  0EF0               	movlw	240
  1401  0001AA  1630               	andwf	(??_jogar+5)^0,f,c
  1402  0001AC  502F               	movf	(??_jogar+4)^0,w,c
  1403  0001AE  0B0F               	andlw	15
  1404  0001B0  1230               	iorwf	(??_jogar+5)^0,f,c
  1405  0001B2  0EF0               	movlw	240
  1406  0001B4  162F               	andwf	(??_jogar+4)^0,f,c
  1407  0001B6  0E80               	movlw	low _mat_disp
  1408  0001B8  6E31               	movwf	(??_jogar+6)^0,c
  1409  0001BA  0E00               	movlw	high _mat_disp
  1410  0001BC  6E32               	movwf	(??_jogar+7)^0,c
  1411  0001BE  502F               	movf	(??_jogar+4)^0,w,c
  1412  0001C0  2631               	addwf	(??_jogar+6)^0,f,c
  1413  0001C2  5030               	movf	(??_jogar+5)^0,w,c
  1414  0001C4  2232               	addwfc	(??_jogar+7)^0,f,c
  1415  0001C6  5037               	movf	jogar@j^0,w,c
  1416  0001C8  2431               	addwf	(??_jogar+6)^0,w,c
  1417  0001CA  6EE1               	movwf	fsr1l,c
  1418  0001CC  5038               	movf	(jogar@j+1)^0,w,c
  1419  0001CE  2032               	addwfc	(??_jogar+7)^0,w,c
  1420  0001D0  6EE2               	movwf	fsr1h,c
  1421  0001D2  CFDF FFE7          	movff	indf2,indf1
  1422  0001D6  4A37               	infsnz	jogar@j^0,f,c
  1423  0001D8  2A38               	incf	(jogar@j+1)^0,f,c
  1424  0001DA  BE38               	btfsc	(jogar@j+1)^0,7,c
  1425  0001DC  EFF9  F000         	goto	u1121
  1426  0001E0  5038               	movf	(jogar@j+1)^0,w,c
  1427  0001E2  E109               	bnz	u1120
  1428  0001E4  0E0F               	movlw	15
  1429  0001E6  5C37               	subwf	jogar@j^0,w,c
  1430  0001E8  A0D8               	btfss	status,0,c
  1431  0001EA  EFF9  F000         	goto	u1121
  1432  0001EE  EFFB  F000         	goto	u1120
  1433  0001F2                     u1121:
  1434  0001F2  EFAF  F000         	goto	l1801
  1435  0001F6                     u1120:
  1436  0001F6                     
  1437                           ;task_manager.c: 76:                 mat_disp[i][15] = ' ';
  1438  0001F6  C039  F02B         	movff	jogar@i,??_jogar
  1439  0001FA  C03A  F02C         	movff	jogar@i+1,??_jogar+1
  1440  0001FE  3A2B               	swapf	??_jogar^0,f,c
  1441  000200  3A2C               	swapf	(??_jogar+1)^0,f,c
  1442  000202  0EF0               	movlw	240
  1443  000204  162C               	andwf	(??_jogar+1)^0,f,c
  1444  000206  502B               	movf	??_jogar^0,w,c
  1445  000208  0B0F               	andlw	15
  1446  00020A  122C               	iorwf	(??_jogar+1)^0,f,c
  1447  00020C  0EF0               	movlw	240
  1448  00020E  162B               	andwf	??_jogar^0,f,c
  1449  000210  0E8F               	movlw	low (_mat_disp+15)
  1450  000212  242B               	addwf	??_jogar^0,w,c
  1451  000214  6ED9               	movwf	fsr2l,c
  1452  000216  0E00               	movlw	high (_mat_disp+15)
  1453  000218  202C               	addwfc	(??_jogar+1)^0,w,c
  1454  00021A  6EDA               	movwf	fsr2h,c
  1455  00021C  0E20               	movlw	32
  1456  00021E  6EDF               	movwf	indf2,c
  1457  000220                     
  1458                           ;task_manager.c: 77:             }
  1459  000220  4A39               	infsnz	jogar@i^0,f,c
  1460  000222  2A3A               	incf	(jogar@i+1)^0,f,c
  1461  000224  BE3A               	btfsc	(jogar@i+1)^0,7,c
  1462  000226  EF1E  F001         	goto	u1131
  1463  00022A  503A               	movf	(jogar@i+1)^0,w,c
  1464  00022C  E109               	bnz	u1130
  1465  00022E  0E04               	movlw	4
  1466  000230  5C39               	subwf	jogar@i^0,w,c
  1467  000232  A0D8               	btfss	status,0,c
  1468  000234  EF1E  F001         	goto	u1131
  1469  000238  EF20  F001         	goto	u1130
  1470  00023C                     u1131:
  1471  00023C  EFAB  F000         	goto	l1795
  1472  000240                     u1130:
  1473  000240                     
  1474                           ;task_manager.c: 78:             mat_disp[x][y-1] = ' ';
  1475  000240  5050               	movf	_x^0,w,c
  1476  000242  0D10               	mullw	16
  1477  000244  0EFF               	movlw	255
  1478  000246  6E2B               	movwf	??_jogar^0,c
  1479  000248  0EFF               	movlw	255
  1480  00024A  6E2C               	movwf	(??_jogar+1)^0,c
  1481  00024C  0E80               	movlw	low _mat_disp
  1482  00024E  6E2D               	movwf	(??_jogar+2)^0,c
  1483  000250  0E00               	movlw	high _mat_disp
  1484  000252  6E2E               	movwf	(??_jogar+3)^0,c
  1485  000254  502B               	movf	??_jogar^0,w,c
  1486  000256  262D               	addwf	(??_jogar+2)^0,f,c
  1487  000258  502C               	movf	(??_jogar+1)^0,w,c
  1488  00025A  222E               	addwfc	(??_jogar+3)^0,f,c
  1489  00025C  50F3               	movf	243,w,c
  1490  00025E  262D               	addwf	(??_jogar+2)^0,f,c
  1491  000260  50F4               	movf	244,w,c
  1492  000262  222E               	addwfc	(??_jogar+3)^0,f,c
  1493  000264  503E               	movf	_y^0,w,c
  1494  000266  242D               	addwf	(??_jogar+2)^0,w,c
  1495  000268  6ED9               	movwf	fsr2l,c
  1496  00026A  0E00               	movlw	0
  1497  00026C  202E               	addwfc	(??_jogar+3)^0,w,c
  1498  00026E  6EDA               	movwf	fsr2h,c
  1499  000270  0E20               	movlw	32
  1500  000272  6EDF               	movwf	indf2,c
  1501                           
  1502                           ;task_manager.c: 79:             mat_disp[x][y] = '>';
  1503  000274  5050               	movf	_x^0,w,c
  1504  000276  0D10               	mullw	16
  1505  000278  0E80               	movlw	low _mat_disp
  1506  00027A  6E2B               	movwf	??_jogar^0,c
  1507  00027C  0E00               	movlw	high _mat_disp
  1508  00027E  6E2C               	movwf	(??_jogar+1)^0,c
  1509  000280  50F3               	movf	243,w,c
  1510  000282  262B               	addwf	??_jogar^0,f,c
  1511  000284  50F4               	movf	244,w,c
  1512  000286  222C               	addwfc	(??_jogar+1)^0,f,c
  1513  000288  503E               	movf	_y^0,w,c
  1514  00028A  242B               	addwf	??_jogar^0,w,c
  1515  00028C  6ED9               	movwf	fsr2l,c
  1516  00028E  0E00               	movlw	0
  1517  000290  202C               	addwfc	(??_jogar+1)^0,w,c
  1518  000292  6EDA               	movwf	fsr2h,c
  1519  000294  0E3E               	movlw	62
  1520  000296  6EDF               	movwf	indf2,c
  1521  000298                     l1815:
  1522                           
  1523                           ;task_manager.c: 83:         if(mat_disp[1][0] == '*' || mat_disp[2][0] == '*' || mat_di
      +                          sp[3][0] == '*')
  1524  000298  0E2A               	movlw	42
  1525  00029A  0100               	movlb	0	; () banked
  1526  00029C  1990               	xorwf	(_mat_disp+16)& (0+255),w,b
  1527  00029E  B4D8               	btfsc	status,2,c
  1528  0002A0  EF54  F001         	goto	u1141
  1529  0002A4  EF56  F001         	goto	u1140
  1530  0002A8                     u1141:
  1531  0002A8  EF68  F001         	goto	l1821
  1532  0002AC                     u1140:
  1533  0002AC                     
  1534                           ; BSR set to: 0
  1535  0002AC  0E2A               	movlw	42
  1536  0002AE  19A0               	xorwf	(_mat_disp+32)& (0+255),w,b
  1537  0002B0  B4D8               	btfsc	status,2,c
  1538  0002B2  EF5D  F001         	goto	u1151
  1539  0002B6  EF5F  F001         	goto	u1150
  1540  0002BA                     u1151:
  1541  0002BA  EF68  F001         	goto	l1821
  1542  0002BE                     u1150:
  1543  0002BE                     
  1544                           ; BSR set to: 0
  1545  0002BE  0E2A               	movlw	42
  1546  0002C0  19B0               	xorwf	(_mat_disp+48)& (0+255),w,b
  1547  0002C2  A4D8               	btfss	status,2,c
  1548  0002C4  EF66  F001         	goto	u1161
  1549  0002C8  EF68  F001         	goto	u1160
  1550  0002CC                     u1161:
  1551  0002CC  EF9A  F001         	goto	l1845
  1552  0002D0                     u1160:
  1553  0002D0                     l1821:
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;task_manager.c: 84:         {;task_manager.c: 85:             mat_disp[0][15]++;
  1557  0002D0  2B8F               	incf	(_mat_disp+15)& (0+255),f,b
  1558  0002D2                     
  1559                           ; BSR set to: 0
  1560                           ;task_manager.c: 86:             if(mat_disp[0][15]==0x40)
  1561  0002D2  0E40               	movlw	64
  1562  0002D4  198F               	xorwf	(_mat_disp+15)& (0+255),w,b
  1563  0002D6  A4D8               	btfss	status,2,c
  1564  0002D8  EF70  F001         	goto	u1171
  1565  0002DC  EF72  F001         	goto	u1170
  1566  0002E0                     u1171:
  1567  0002E0  EF9A  F001         	goto	l1845
  1568  0002E4                     u1170:
  1569  0002E4                     
  1570                           ; BSR set to: 0
  1571                           ;task_manager.c: 87:             {;task_manager.c: 88:                 mat_disp[0][15] =
      +                           0x30;
  1572  0002E4  0E30               	movlw	48
  1573  0002E6  6F8F               	movwf	(_mat_disp+15)& (0+255),b
  1574  0002E8                     
  1575                           ; BSR set to: 0
  1576                           ;task_manager.c: 89:                 mat_disp[0][14]++;
  1577  0002E8  2B8E               	incf	(_mat_disp+14)& (0+255),f,b
  1578  0002EA                     
  1579                           ; BSR set to: 0
  1580                           ;task_manager.c: 91:                 if(mat_disp[0][14]==0x40)
  1581  0002EA  0E40               	movlw	64
  1582  0002EC  198E               	xorwf	(_mat_disp+14)& (0+255),w,b
  1583  0002EE  A4D8               	btfss	status,2,c
  1584  0002F0  EF7C  F001         	goto	u1181
  1585  0002F4  EF7E  F001         	goto	u1180
  1586  0002F8                     u1181:
  1587  0002F8  EF9A  F001         	goto	l1845
  1588  0002FC                     u1180:
  1589  0002FC                     
  1590                           ; BSR set to: 0
  1591                           ;task_manager.c: 92:                 {;task_manager.c: 93:                     mat_disp[
      +                          0][14] = 0x30;
  1592  0002FC  0E30               	movlw	48
  1593  0002FE  6F8E               	movwf	(_mat_disp+14)& (0+255),b
  1594  000300                     
  1595                           ; BSR set to: 0
  1596                           ;task_manager.c: 94:                     mat_disp[0][13]++;
  1597  000300  2B8D               	incf	(_mat_disp+13)& (0+255),f,b
  1598  000302                     
  1599                           ; BSR set to: 0
  1600                           ;task_manager.c: 96:                     if(mat_disp[0][13]==0x40)
  1601  000302  0E40               	movlw	64
  1602  000304  198D               	xorwf	(_mat_disp+13)& (0+255),w,b
  1603  000306  A4D8               	btfss	status,2,c
  1604  000308  EF88  F001         	goto	u1191
  1605  00030C  EF8A  F001         	goto	u1190
  1606  000310                     u1191:
  1607  000310  EF9A  F001         	goto	l1845
  1608  000314                     u1190:
  1609  000314                     
  1610                           ; BSR set to: 0
  1611                           ;task_manager.c: 97:                     {;task_manager.c: 98:                         m
      +                          at_disp[0][13] = 0x30;
  1612  000314  0E30               	movlw	48
  1613  000316  6F8D               	movwf	(_mat_disp+13)& (0+255),b
  1614  000318                     
  1615                           ; BSR set to: 0
  1616                           ;task_manager.c: 99:                         mat_disp[0][12]++;
  1617  000318  2B8C               	incf	(_mat_disp+12)& (0+255),f,b
  1618  00031A                     
  1619                           ; BSR set to: 0
  1620                           ;task_manager.c: 101:                         if(mat_disp[0][12]==0x40)
  1621  00031A  0E40               	movlw	64
  1622  00031C  198C               	xorwf	(_mat_disp+12)& (0+255),w,b
  1623  00031E  A4D8               	btfss	status,2,c
  1624  000320  EF94  F001         	goto	u1201
  1625  000324  EF96  F001         	goto	u1200
  1626  000328                     u1201:
  1627  000328  EF9A  F001         	goto	l216
  1628  00032C                     u1200:
  1629  00032C                     
  1630                           ; BSR set to: 0
  1631                           ;task_manager.c: 102:                             mat_disp[0][12] = 0x30;
  1632  00032C  0E30               	movlw	48
  1633  00032E  6F8C               	movwf	(_mat_disp+12)& (0+255),b
  1634  000330  EF9A  F001         	goto	l1845
  1635  000334                     l216:
  1636  000334                     l1845:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;task_manager.c: 109:         print_mat(lcd);
  1640  000334  C029  F010         	movff	jogar@lcd,print_mat@lcd
  1641  000338  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  1642  00033C  ECCF  F006         	call	_print_mat	;wreg free
  1643  000340                     
  1644                           ;task_manager.c: 115:         if((botoes.U) && (x > 1)){
  1645  000340  A045               	btfss	_botoes^0,0,c
  1646  000342  EFA5  F001         	goto	u1211
  1647  000346  EFA7  F001         	goto	u1210
  1648  00034A                     u1211:
  1649  00034A  EF1D  F002         	goto	l1865
  1650  00034E                     u1210:
  1651  00034E  0E01               	movlw	1
  1652  000350  6450               	cpfsgt	_x^0,c
  1653  000352  EFAD  F001         	goto	u1221
  1654  000356  EFAF  F001         	goto	u1220
  1655  00035A                     u1221:
  1656  00035A  EF1D  F002         	goto	l1865
  1657  00035E                     u1220:
  1658  00035E                     
  1659                           ;task_manager.c: 116:             if(mat_disp[x][y] == '>' && mat_disp[x-1][y] == '*')
  1660  00035E  5050               	movf	_x^0,w,c
  1661  000360  0D10               	mullw	16
  1662  000362  0E80               	movlw	low _mat_disp
  1663  000364  6E2B               	movwf	??_jogar^0,c
  1664  000366  0E00               	movlw	high _mat_disp
  1665  000368  6E2C               	movwf	(??_jogar+1)^0,c
  1666  00036A  50F3               	movf	243,w,c
  1667  00036C  262B               	addwf	??_jogar^0,f,c
  1668  00036E  50F4               	movf	244,w,c
  1669  000370  222C               	addwfc	(??_jogar+1)^0,f,c
  1670  000372  503E               	movf	_y^0,w,c
  1671  000374  242B               	addwf	??_jogar^0,w,c
  1672  000376  6ED9               	movwf	fsr2l,c
  1673  000378  0E00               	movlw	0
  1674  00037A  202C               	addwfc	(??_jogar+1)^0,w,c
  1675  00037C  6EDA               	movwf	fsr2h,c
  1676  00037E  0E3E               	movlw	62
  1677  000380  18DE               	xorwf	postinc2,w,c
  1678  000382  A4D8               	btfss	status,2,c
  1679  000384  EFC6  F001         	goto	u1231
  1680  000388  EFC8  F001         	goto	u1230
  1681  00038C                     u1231:
  1682  00038C  EFF7  F001         	goto	l1857
  1683  000390                     u1230:
  1684  000390  5050               	movf	_x^0,w,c
  1685  000392  6E2B               	movwf	??_jogar^0,c
  1686  000394  6A2C               	clrf	(??_jogar+1)^0,c
  1687  000396  3A2B               	swapf	??_jogar^0,f,c
  1688  000398  3A2C               	swapf	(??_jogar+1)^0,f,c
  1689  00039A  0EF0               	movlw	240
  1690  00039C  162C               	andwf	(??_jogar+1)^0,f,c
  1691  00039E  502B               	movf	??_jogar^0,w,c
  1692  0003A0  0B0F               	andlw	15
  1693  0003A2  122C               	iorwf	(??_jogar+1)^0,f,c
  1694  0003A4  0EF0               	movlw	240
  1695  0003A6  162B               	andwf	??_jogar^0,f,c
  1696  0003A8  0EF0               	movlw	240
  1697  0003AA  6E2D               	movwf	(??_jogar+2)^0,c
  1698  0003AC  0EFF               	movlw	255
  1699  0003AE  6E2E               	movwf	(??_jogar+3)^0,c
  1700  0003B0  0E80               	movlw	low _mat_disp
  1701  0003B2  6E2F               	movwf	(??_jogar+4)^0,c
  1702  0003B4  0E00               	movlw	high _mat_disp
  1703  0003B6  6E30               	movwf	(??_jogar+5)^0,c
  1704  0003B8  502D               	movf	(??_jogar+2)^0,w,c
  1705  0003BA  262F               	addwf	(??_jogar+4)^0,f,c
  1706  0003BC  502E               	movf	(??_jogar+3)^0,w,c
  1707  0003BE  2230               	addwfc	(??_jogar+5)^0,f,c
  1708  0003C0  502B               	movf	??_jogar^0,w,c
  1709  0003C2  262F               	addwf	(??_jogar+4)^0,f,c
  1710  0003C4  502C               	movf	(??_jogar+1)^0,w,c
  1711  0003C6  2230               	addwfc	(??_jogar+5)^0,f,c
  1712  0003C8  503E               	movf	_y^0,w,c
  1713  0003CA  242F               	addwf	(??_jogar+4)^0,w,c
  1714  0003CC  6ED9               	movwf	fsr2l,c
  1715  0003CE  0E00               	movlw	0
  1716  0003D0  2030               	addwfc	(??_jogar+5)^0,w,c
  1717  0003D2  6EDA               	movwf	fsr2h,c
  1718  0003D4  0E2A               	movlw	42
  1719  0003D6  18DE               	xorwf	postinc2,w,c
  1720  0003D8  A4D8               	btfss	status,2,c
  1721  0003DA  EFF1  F001         	goto	u1241
  1722  0003DE  EFF3  F001         	goto	u1240
  1723  0003E2                     u1241:
  1724  0003E2  EFF7  F001         	goto	l1857
  1725  0003E6                     u1240:
  1726  0003E6                     
  1727                           ;task_manager.c: 117:                 bateu = 1;
  1728  0003E6  0E00               	movlw	0
  1729  0003E8  6E36               	movwf	(jogar@bateu+1)^0,c
  1730  0003EA  0E01               	movlw	1
  1731  0003EC  6E35               	movwf	jogar@bateu^0,c
  1732  0003EE                     l1857:
  1733                           
  1734                           ;task_manager.c: 118:             mat_disp[x][y] = ' ';
  1735  0003EE  5050               	movf	_x^0,w,c
  1736  0003F0  0D10               	mullw	16
  1737  0003F2  0E80               	movlw	low _mat_disp
  1738  0003F4  6E2B               	movwf	??_jogar^0,c
  1739  0003F6  0E00               	movlw	high _mat_disp
  1740  0003F8  6E2C               	movwf	(??_jogar+1)^0,c
  1741  0003FA  50F3               	movf	243,w,c
  1742  0003FC  262B               	addwf	??_jogar^0,f,c
  1743  0003FE  50F4               	movf	244,w,c
  1744  000400  222C               	addwfc	(??_jogar+1)^0,f,c
  1745  000402  503E               	movf	_y^0,w,c
  1746  000404  242B               	addwf	??_jogar^0,w,c
  1747  000406  6ED9               	movwf	fsr2l,c
  1748  000408  0E00               	movlw	0
  1749  00040A  202C               	addwfc	(??_jogar+1)^0,w,c
  1750  00040C  6EDA               	movwf	fsr2h,c
  1751  00040E  0E20               	movlw	32
  1752  000410  6EDF               	movwf	indf2,c
  1753  000412                     
  1754                           ;task_manager.c: 119:             x--;
  1755  000412  0650               	decf	_x^0,f,c
  1756  000414                     
  1757                           ;task_manager.c: 120:             botoes.U = 0;
  1758  000414  9045               	bcf	_botoes^0,0,c
  1759  000416                     
  1760                           ;task_manager.c: 121:             mat_disp[x][y] = '>';
  1761  000416  5050               	movf	_x^0,w,c
  1762  000418  0D10               	mullw	16
  1763  00041A  0E80               	movlw	low _mat_disp
  1764  00041C  6E2B               	movwf	??_jogar^0,c
  1765  00041E  0E00               	movlw	high _mat_disp
  1766  000420  6E2C               	movwf	(??_jogar+1)^0,c
  1767  000422  50F3               	movf	243,w,c
  1768  000424  262B               	addwf	??_jogar^0,f,c
  1769  000426  50F4               	movf	244,w,c
  1770  000428  222C               	addwfc	(??_jogar+1)^0,f,c
  1771  00042A  503E               	movf	_y^0,w,c
  1772  00042C  242B               	addwf	??_jogar^0,w,c
  1773  00042E  6ED9               	movwf	fsr2l,c
  1774  000430  0E00               	movlw	0
  1775  000432  202C               	addwfc	(??_jogar+1)^0,w,c
  1776  000434  6EDA               	movwf	fsr2h,c
  1777  000436  0E3E               	movlw	62
  1778  000438  6EDF               	movwf	indf2,c
  1779  00043A                     l1865:
  1780                           
  1781                           ;task_manager.c: 124:         if((botoes.D) && (x < 3)){
  1782  00043A  A245               	btfss	_botoes^0,1,c
  1783  00043C  EF22  F002         	goto	u1251
  1784  000440  EF24  F002         	goto	u1250
  1785  000444                     u1251:
  1786  000444  EF96  F002         	goto	l1883
  1787  000448                     u1250:
  1788  000448  0E03               	movlw	3
  1789  00044A  6050               	cpfslt	_x^0,c
  1790  00044C  EF2A  F002         	goto	u1261
  1791  000450  EF2C  F002         	goto	u1260
  1792  000454                     u1261:
  1793  000454  EF96  F002         	goto	l1883
  1794  000458                     u1260:
  1795  000458                     
  1796                           ;task_manager.c: 125:             if(mat_disp[x][y] == '>' && mat_disp[x+1][y] == '*')
  1797  000458  5050               	movf	_x^0,w,c
  1798  00045A  0D10               	mullw	16
  1799  00045C  0E80               	movlw	low _mat_disp
  1800  00045E  6E2B               	movwf	??_jogar^0,c
  1801  000460  0E00               	movlw	high _mat_disp
  1802  000462  6E2C               	movwf	(??_jogar+1)^0,c
  1803  000464  50F3               	movf	243,w,c
  1804  000466  262B               	addwf	??_jogar^0,f,c
  1805  000468  50F4               	movf	244,w,c
  1806  00046A  222C               	addwfc	(??_jogar+1)^0,f,c
  1807  00046C  503E               	movf	_y^0,w,c
  1808  00046E  242B               	addwf	??_jogar^0,w,c
  1809  000470  6ED9               	movwf	fsr2l,c
  1810  000472  0E00               	movlw	0
  1811  000474  202C               	addwfc	(??_jogar+1)^0,w,c
  1812  000476  6EDA               	movwf	fsr2h,c
  1813  000478  0E3E               	movlw	62
  1814  00047A  18DE               	xorwf	postinc2,w,c
  1815  00047C  A4D8               	btfss	status,2,c
  1816  00047E  EF43  F002         	goto	u1271
  1817  000482  EF45  F002         	goto	u1270
  1818  000486                     u1271:
  1819  000486  EF70  F002         	goto	l1875
  1820  00048A                     u1270:
  1821  00048A  5050               	movf	_x^0,w,c
  1822  00048C  6E2B               	movwf	??_jogar^0,c
  1823  00048E  6A2C               	clrf	(??_jogar+1)^0,c
  1824  000490  3A2B               	swapf	??_jogar^0,f,c
  1825  000492  3A2C               	swapf	(??_jogar+1)^0,f,c
  1826  000494  0EF0               	movlw	240
  1827  000496  162C               	andwf	(??_jogar+1)^0,f,c
  1828  000498  502B               	movf	??_jogar^0,w,c
  1829  00049A  0B0F               	andlw	15
  1830  00049C  122C               	iorwf	(??_jogar+1)^0,f,c
  1831  00049E  0EF0               	movlw	240
  1832  0004A0  162B               	andwf	??_jogar^0,f,c
  1833  0004A2  0E80               	movlw	low _mat_disp
  1834  0004A4  6E2D               	movwf	(??_jogar+2)^0,c
  1835  0004A6  0E00               	movlw	high _mat_disp
  1836  0004A8  6E2E               	movwf	(??_jogar+3)^0,c
  1837  0004AA  0E10               	movlw	16
  1838  0004AC  262D               	addwf	(??_jogar+2)^0,f,c
  1839  0004AE  0E00               	movlw	0
  1840  0004B0  222E               	addwfc	(??_jogar+3)^0,f,c
  1841  0004B2  502B               	movf	??_jogar^0,w,c
  1842  0004B4  262D               	addwf	(??_jogar+2)^0,f,c
  1843  0004B6  502C               	movf	(??_jogar+1)^0,w,c
  1844  0004B8  222E               	addwfc	(??_jogar+3)^0,f,c
  1845  0004BA  503E               	movf	_y^0,w,c
  1846  0004BC  242D               	addwf	(??_jogar+2)^0,w,c
  1847  0004BE  6ED9               	movwf	fsr2l,c
  1848  0004C0  0E00               	movlw	0
  1849  0004C2  202E               	addwfc	(??_jogar+3)^0,w,c
  1850  0004C4  6EDA               	movwf	fsr2h,c
  1851  0004C6  0E2A               	movlw	42
  1852  0004C8  18DE               	xorwf	postinc2,w,c
  1853  0004CA  A4D8               	btfss	status,2,c
  1854  0004CC  EF6A  F002         	goto	u1281
  1855  0004D0  EF6C  F002         	goto	u1280
  1856  0004D4                     u1281:
  1857  0004D4  EF70  F002         	goto	l1875
  1858  0004D8                     u1280:
  1859  0004D8                     
  1860                           ;task_manager.c: 126:                 bateu = 1;
  1861  0004D8  0E00               	movlw	0
  1862  0004DA  6E36               	movwf	(jogar@bateu+1)^0,c
  1863  0004DC  0E01               	movlw	1
  1864  0004DE  6E35               	movwf	jogar@bateu^0,c
  1865  0004E0                     l1875:
  1866                           
  1867                           ;task_manager.c: 127:             mat_disp[x][y] = ' ';
  1868  0004E0  5050               	movf	_x^0,w,c
  1869  0004E2  0D10               	mullw	16
  1870  0004E4  0E80               	movlw	low _mat_disp
  1871  0004E6  6E2B               	movwf	??_jogar^0,c
  1872  0004E8  0E00               	movlw	high _mat_disp
  1873  0004EA  6E2C               	movwf	(??_jogar+1)^0,c
  1874  0004EC  50F3               	movf	243,w,c
  1875  0004EE  262B               	addwf	??_jogar^0,f,c
  1876  0004F0  50F4               	movf	244,w,c
  1877  0004F2  222C               	addwfc	(??_jogar+1)^0,f,c
  1878  0004F4  503E               	movf	_y^0,w,c
  1879  0004F6  242B               	addwf	??_jogar^0,w,c
  1880  0004F8  6ED9               	movwf	fsr2l,c
  1881  0004FA  0E00               	movlw	0
  1882  0004FC  202C               	addwfc	(??_jogar+1)^0,w,c
  1883  0004FE  6EDA               	movwf	fsr2h,c
  1884  000500  0E20               	movlw	32
  1885  000502  6EDF               	movwf	indf2,c
  1886  000504                     
  1887                           ;task_manager.c: 128:             x++;
  1888  000504  2A50               	incf	_x^0,f,c
  1889  000506                     
  1890                           ;task_manager.c: 129:             botoes.D = 0;
  1891  000506  9245               	bcf	_botoes^0,1,c
  1892  000508                     
  1893                           ;task_manager.c: 130:             mat_disp[x][y] = '>';
  1894  000508  5050               	movf	_x^0,w,c
  1895  00050A  0D10               	mullw	16
  1896  00050C  0E80               	movlw	low _mat_disp
  1897  00050E  6E2B               	movwf	??_jogar^0,c
  1898  000510  0E00               	movlw	high _mat_disp
  1899  000512  6E2C               	movwf	(??_jogar+1)^0,c
  1900  000514  50F3               	movf	243,w,c
  1901  000516  262B               	addwf	??_jogar^0,f,c
  1902  000518  50F4               	movf	244,w,c
  1903  00051A  222C               	addwfc	(??_jogar+1)^0,f,c
  1904  00051C  503E               	movf	_y^0,w,c
  1905  00051E  242B               	addwf	??_jogar^0,w,c
  1906  000520  6ED9               	movwf	fsr2l,c
  1907  000522  0E00               	movlw	0
  1908  000524  202C               	addwfc	(??_jogar+1)^0,w,c
  1909  000526  6EDA               	movwf	fsr2h,c
  1910  000528  0E3E               	movlw	62
  1911  00052A  6EDF               	movwf	indf2,c
  1912  00052C                     l1883:
  1913                           
  1914                           ;task_manager.c: 133:         if((botoes.R) && (y < 15)){
  1915  00052C  A645               	btfss	_botoes^0,3,c
  1916  00052E  EF9B  F002         	goto	u1291
  1917  000532  EF9D  F002         	goto	u1290
  1918  000536                     u1291:
  1919  000536  EFCB  F002         	goto	l1895
  1920  00053A                     u1290:
  1921  00053A  0E0F               	movlw	15
  1922  00053C  603E               	cpfslt	_y^0,c
  1923  00053E  EFA3  F002         	goto	u1301
  1924  000542  EFA5  F002         	goto	u1300
  1925  000546                     u1301:
  1926  000546  EFCB  F002         	goto	l1895
  1927  00054A                     u1300:
  1928  00054A                     
  1929                           ;task_manager.c: 134:             mat_disp[x][y] = ' ';
  1930  00054A  5050               	movf	_x^0,w,c
  1931  00054C  0D10               	mullw	16
  1932  00054E  0E80               	movlw	low _mat_disp
  1933  000550  6E2B               	movwf	??_jogar^0,c
  1934  000552  0E00               	movlw	high _mat_disp
  1935  000554  6E2C               	movwf	(??_jogar+1)^0,c
  1936  000556  50F3               	movf	243,w,c
  1937  000558  262B               	addwf	??_jogar^0,f,c
  1938  00055A  50F4               	movf	244,w,c
  1939  00055C  222C               	addwfc	(??_jogar+1)^0,f,c
  1940  00055E  503E               	movf	_y^0,w,c
  1941  000560  242B               	addwf	??_jogar^0,w,c
  1942  000562  6ED9               	movwf	fsr2l,c
  1943  000564  0E00               	movlw	0
  1944  000566  202C               	addwfc	(??_jogar+1)^0,w,c
  1945  000568  6EDA               	movwf	fsr2h,c
  1946  00056A  0E20               	movlw	32
  1947  00056C  6EDF               	movwf	indf2,c
  1948  00056E                     
  1949                           ;task_manager.c: 135:             y++;
  1950  00056E  2A3E               	incf	_y^0,f,c
  1951  000570                     
  1952                           ;task_manager.c: 136:             botoes.R = 0;
  1953  000570  9645               	bcf	_botoes^0,3,c
  1954  000572                     
  1955                           ;task_manager.c: 137:             mat_disp[x][y] = '>';
  1956  000572  5050               	movf	_x^0,w,c
  1957  000574  0D10               	mullw	16
  1958  000576  0E80               	movlw	low _mat_disp
  1959  000578  6E2B               	movwf	??_jogar^0,c
  1960  00057A  0E00               	movlw	high _mat_disp
  1961  00057C  6E2C               	movwf	(??_jogar+1)^0,c
  1962  00057E  50F3               	movf	243,w,c
  1963  000580  262B               	addwf	??_jogar^0,f,c
  1964  000582  50F4               	movf	244,w,c
  1965  000584  222C               	addwfc	(??_jogar+1)^0,f,c
  1966  000586  503E               	movf	_y^0,w,c
  1967  000588  242B               	addwf	??_jogar^0,w,c
  1968  00058A  6ED9               	movwf	fsr2l,c
  1969  00058C  0E00               	movlw	0
  1970  00058E  202C               	addwfc	(??_jogar+1)^0,w,c
  1971  000590  6EDA               	movwf	fsr2h,c
  1972  000592  0E3E               	movlw	62
  1973  000594  6EDF               	movwf	indf2,c
  1974  000596                     l1895:
  1975                           
  1976                           ;task_manager.c: 140:         if((botoes.L) && (y > 0)){
  1977  000596  A445               	btfss	_botoes^0,2,c
  1978  000598  EFD0  F002         	goto	u1311
  1979  00059C  EFD2  F002         	goto	u1310
  1980  0005A0                     u1311:
  1981  0005A0  EF00  F003         	goto	l1907
  1982  0005A4                     u1310:
  1983  0005A4  503E               	movf	_y^0,w,c
  1984  0005A6  B4D8               	btfsc	status,2,c
  1985  0005A8  EFD8  F002         	goto	u1321
  1986  0005AC  EFDA  F002         	goto	u1320
  1987  0005B0                     u1321:
  1988  0005B0  EF00  F003         	goto	l1907
  1989  0005B4                     u1320:
  1990  0005B4                     
  1991                           ;task_manager.c: 141:             mat_disp[x][y] = ' ';
  1992  0005B4  5050               	movf	_x^0,w,c
  1993  0005B6  0D10               	mullw	16
  1994  0005B8  0E80               	movlw	low _mat_disp
  1995  0005BA  6E2B               	movwf	??_jogar^0,c
  1996  0005BC  0E00               	movlw	high _mat_disp
  1997  0005BE  6E2C               	movwf	(??_jogar+1)^0,c
  1998  0005C0  50F3               	movf	243,w,c
  1999  0005C2  262B               	addwf	??_jogar^0,f,c
  2000  0005C4  50F4               	movf	244,w,c
  2001  0005C6  222C               	addwfc	(??_jogar+1)^0,f,c
  2002  0005C8  503E               	movf	_y^0,w,c
  2003  0005CA  242B               	addwf	??_jogar^0,w,c
  2004  0005CC  6ED9               	movwf	fsr2l,c
  2005  0005CE  0E00               	movlw	0
  2006  0005D0  202C               	addwfc	(??_jogar+1)^0,w,c
  2007  0005D2  6EDA               	movwf	fsr2h,c
  2008  0005D4  0E20               	movlw	32
  2009  0005D6  6EDF               	movwf	indf2,c
  2010  0005D8                     
  2011                           ;task_manager.c: 142:             y--;
  2012  0005D8  063E               	decf	_y^0,f,c
  2013  0005DA                     
  2014                           ;task_manager.c: 143:             botoes.L = 0;
  2015  0005DA  9445               	bcf	_botoes^0,2,c
  2016  0005DC                     
  2017                           ;task_manager.c: 144:             mat_disp[x][y] = '>';
  2018  0005DC  5050               	movf	_x^0,w,c
  2019  0005DE  0D10               	mullw	16
  2020  0005E0  0E80               	movlw	low _mat_disp
  2021  0005E2  6E2B               	movwf	??_jogar^0,c
  2022  0005E4  0E00               	movlw	high _mat_disp
  2023  0005E6  6E2C               	movwf	(??_jogar+1)^0,c
  2024  0005E8  50F3               	movf	243,w,c
  2025  0005EA  262B               	addwf	??_jogar^0,f,c
  2026  0005EC  50F4               	movf	244,w,c
  2027  0005EE  222C               	addwfc	(??_jogar+1)^0,f,c
  2028  0005F0  503E               	movf	_y^0,w,c
  2029  0005F2  242B               	addwf	??_jogar^0,w,c
  2030  0005F4  6ED9               	movwf	fsr2l,c
  2031  0005F6  0E00               	movlw	0
  2032  0005F8  202C               	addwfc	(??_jogar+1)^0,w,c
  2033  0005FA  6EDA               	movwf	fsr2h,c
  2034  0005FC  0E3E               	movlw	62
  2035  0005FE  6EDF               	movwf	indf2,c
  2036  000600                     l1907:
  2037                           
  2038                           ;task_manager.c: 66:     while(!botoes.Esc && bateu == 0){
  2039  000600  BA45               	btfsc	_botoes^0,5,c
  2040  000602  EF05  F003         	goto	u1331
  2041  000606  EF07  F003         	goto	u1330
  2042  00060A                     u1331:
  2043  00060A  EF10  F003         	goto	l1911
  2044  00060E                     u1330:
  2045  00060E  5035               	movf	jogar@bateu^0,w,c
  2046  000610  1036               	iorwf	(jogar@bateu+1)^0,w,c
  2047  000612  B4D8               	btfsc	status,2,c
  2048  000614  EF0E  F003         	goto	u1341
  2049  000618  EF10  F003         	goto	u1340
  2050  00061C                     u1341:
  2051  00061C  EF62  F000         	goto	l1779
  2052  000620                     u1340:
  2053  000620                     l1911:
  2054                           
  2055                           ;task_manager.c: 148:     if(bateu == 1){
  2056  000620  0435               	decf	jogar@bateu^0,w,c
  2057  000622  1036               	iorwf	(jogar@bateu+1)^0,w,c
  2058  000624  A4D8               	btfss	status,2,c
  2059  000626  EF17  F003         	goto	u1351
  2060  00062A  EF19  F003         	goto	u1350
  2061  00062E                     u1351:
  2062  00062E  EF4E  F003         	goto	l1917
  2063  000632                     u1350:
  2064  000632                     
  2065                           ;task_manager.c: 149:             strcpy(mat_disp[0], "!!!VOCE BATEU!!!");
  2066  000632  0E80               	movlw	low _mat_disp
  2067  000634  6E01               	movwf	strcpy@dest^0,c
  2068  000636  0E00               	movlw	high _mat_disp
  2069  000638  6E02               	movwf	(strcpy@dest+1)^0,c
  2070  00063A  0E39               	movlw	low STR_13
  2071  00063C  6E03               	movwf	strcpy@src^0,c
  2072  00063E  0E7F               	movlw	high STR_13
  2073  000640  6E04               	movwf	(strcpy@src+1)^0,c
  2074  000642  EC68  F009         	call	_strcpy	;wreg free
  2075                           
  2076                           ;task_manager.c: 150:             strcpy(mat_disp[1], "APERTE ESC      ");
  2077  000646  0E90               	movlw	low (_mat_disp+16)
  2078  000648  6E01               	movwf	strcpy@dest^0,c
  2079  00064A  0E00               	movlw	high (_mat_disp+16)
  2080  00064C  6E02               	movwf	(strcpy@dest+1)^0,c
  2081  00064E  0E17               	movlw	low STR_14
  2082  000650  6E03               	movwf	strcpy@src^0,c
  2083  000652  0E7F               	movlw	high STR_14
  2084  000654  6E04               	movwf	(strcpy@src+1)^0,c
  2085  000656  EC68  F009         	call	_strcpy	;wreg free
  2086                           
  2087                           ;task_manager.c: 151:             strcpy(mat_disp[2], "PARA SAIR       ");
  2088  00065A  0EA0               	movlw	low (_mat_disp+32)
  2089  00065C  6E01               	movwf	strcpy@dest^0,c
  2090  00065E  0E00               	movlw	high (_mat_disp+32)
  2091  000660  6E02               	movwf	(strcpy@dest+1)^0,c
  2092  000662  0E06               	movlw	low STR_15
  2093  000664  6E03               	movwf	strcpy@src^0,c
  2094  000666  0E7F               	movlw	high STR_15
  2095  000668  6E04               	movwf	(strcpy@src+1)^0,c
  2096  00066A  EC68  F009         	call	_strcpy	;wreg free
  2097                           
  2098                           ;task_manager.c: 152:             strcpy(mat_disp[3], "                ");
  2099  00066E  0EB0               	movlw	low (_mat_disp+48)
  2100  000670  6E01               	movwf	strcpy@dest^0,c
  2101  000672  0E00               	movlw	high (_mat_disp+48)
  2102  000674  6E02               	movwf	(strcpy@dest+1)^0,c
  2103  000676  0EF5               	movlw	low STR_10
  2104  000678  6E03               	movwf	strcpy@src^0,c
  2105  00067A  0E7E               	movlw	high STR_10
  2106  00067C  6E04               	movwf	(strcpy@src+1)^0,c
  2107  00067E  EC68  F009         	call	_strcpy	;wreg free
  2108  000682                     
  2109                           ;task_manager.c: 153:             print_mat(lcd);
  2110  000682  C029  F010         	movff	jogar@lcd,print_mat@lcd
  2111  000686  C02A  F011         	movff	jogar@lcd+1,print_mat@lcd+1
  2112  00068A  ECCF  F006         	call	_print_mat	;wreg free
  2113  00068E                     l230:
  2114  00068E  AA45               	btfss	_botoes^0,5,c
  2115  000690  EF4C  F003         	goto	u1361
  2116  000694  EF4E  F003         	goto	u1360
  2117  000698                     u1361:
  2118  000698  EF47  F003         	goto	l230
  2119  00069C                     u1360:
  2120  00069C                     l1917:
  2121                           
  2122                           ;task_manager.c: 157:     x = 1;
  2123  00069C  0E01               	movlw	1
  2124  00069E  6E50               	movwf	_x^0,c
  2125                           
  2126                           ;task_manager.c: 158:     y = 0;
  2127  0006A0  0E00               	movlw	0
  2128  0006A2  6E3E               	movwf	_y^0,c
  2129                           
  2130                           ;task_manager.c: 159:     contador = 0;
  2131  0006A4  0E00               	movlw	0
  2132  0006A6  6E3D               	movwf	_contador^0,c
  2133  0006A8  0012               	return		;funcret
  2134  0006AA                     __end_of_jogar:
  2135                           	opt callstack 0
  2136                           
  2137 ;; *************** function _time *****************
  2138 ;; Defined at:
  2139 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\time.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  t               2    0[COMRAM] PTR long long 
  2142 ;;		 -> NULL(0), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  8    0[COMRAM] long long 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2154 ;;      Params:         8       0       0       0       0       0       0
  2155 ;;      Locals:         0       0       0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0
  2157 ;;      Totals:         8       0       0       0       0       0       0
  2158 ;;Total ram usage:        8 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    2
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_jogar
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text4
  2169  001240                     __ptext4:
  2170                           	opt callstack 0
  2171  001240                     _time:
  2172                           	opt callstack 26
  2173  001240  5001               	movf	time@t^0,w,c
  2174  001242  1002               	iorwf	(time@t+1)^0,w,c
  2175  001244  B4D8               	btfsc	status,2,c
  2176  001246  EF27  F009         	goto	u971
  2177  00124A  EF29  F009         	goto	u970
  2178  00124E                     u971:
  2179  00124E  EF3D  F009         	goto	l1675
  2180  001252                     u970:
  2181  001252  C001  FFD9         	movff	time@t,fsr2l
  2182  001256  C002  FFDA         	movff	time@t+1,fsr2h
  2183  00125A  0EFF               	movlw	255
  2184  00125C  6EDE               	movwf	postinc2,c
  2185  00125E  0EFF               	movlw	255
  2186  001260  6EDE               	movwf	postinc2,c
  2187  001262  0EFF               	movlw	255
  2188  001264  6EDE               	movwf	postinc2,c
  2189  001266  0EFF               	movlw	255
  2190  001268  6EDE               	movwf	postinc2,c
  2191  00126A  0EFF               	movlw	255
  2192  00126C  6EDE               	movwf	postinc2,c
  2193  00126E  0EFF               	movlw	255
  2194  001270  6EDE               	movwf	postinc2,c
  2195  001272  0EFF               	movlw	255
  2196  001274  6EDE               	movwf	postinc2,c
  2197  001276  0EFF               	movlw	255
  2198  001278  6EDD               	movwf	postdec2,c
  2199  00127A                     l1675:
  2200  00127A  6801               	setf	?_time^0,c
  2201  00127C  6802               	setf	(?_time+1)^0,c
  2202  00127E  6803               	setf	(?_time+2)^0,c
  2203  001280  6804               	setf	(?_time+3)^0,c
  2204  001282  6805               	setf	(?_time+4)^0,c
  2205  001284  6806               	setf	(?_time+5)^0,c
  2206  001286  6807               	setf	(?_time+6)^0,c
  2207  001288  6808               	setf	(?_time+7)^0,c
  2208  00128A  0012               	return		;funcret
  2209  00128C                     __end_of_time:
  2210                           	opt callstack 0
  2211                           
  2212 ;; *************** function _srand *****************
  2213 ;; Defined at:
  2214 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  s               2    8[COMRAM] unsigned int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2228 ;;      Params:         2       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0
  2230 ;;      Temps:          4       0       0       0       0       0       0
  2231 ;;      Totals:         6       0       0       0       0       0       0
  2232 ;;Total ram usage:        6 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    2
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_jogar
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text5
  2243  0013B6                     __ptext5:
  2244                           	opt callstack 0
  2245  0013B6                     _srand:
  2246                           	opt callstack 26
  2247  0013B6  0EFF               	movlw	255
  2248  0013B8  6E0B               	movwf	??_srand^0,c
  2249  0013BA  0EFF               	movlw	255
  2250  0013BC  6E0C               	movwf	(??_srand+1)^0,c
  2251  0013BE  C009  F00D         	movff	srand@s,??_srand+2
  2252  0013C2  C00A  F00E         	movff	srand@s+1,??_srand+3
  2253  0013C6  500B               	movf	??_srand^0,w,c
  2254  0013C8  260D               	addwf	(??_srand+2)^0,f,c
  2255  0013CA  500C               	movf	(??_srand+1)^0,w,c
  2256  0013CC  220E               	addwfc	(??_srand+3)^0,f,c
  2257  0013CE  C00D  F046         	movff	??_srand+2,_seed
  2258  0013D2  C00E  F047         	movff	??_srand+3,_seed+1
  2259  0013D6  6A48               	clrf	(_seed+2)^0,c
  2260  0013D8  6A49               	clrf	(_seed+3)^0,c
  2261  0013DA  6A4A               	clrf	(_seed+4)^0,c
  2262  0013DC  6A4B               	clrf	(_seed+5)^0,c
  2263  0013DE  6A4C               	clrf	(_seed+6)^0,c
  2264  0013E0  6A4D               	clrf	(_seed+7)^0,c
  2265  0013E2  0012               	return		;funcret
  2266  0013E4                     __end_of_srand:
  2267                           	opt callstack 0
  2268                           
  2269 ;; *************** function _rand *****************
  2270 ;; Defined at:
  2271 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2   24[COMRAM] int 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2285 ;;      Params:         2       0       0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0
  2287 ;;      Temps:          8       0       0       0       0       0       0
  2288 ;;      Totals:        10       0       0       0       0       0       0
  2289 ;;Total ram usage:       10 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    3
  2292 ;; This function calls:
  2293 ;;		___omul
  2294 ;; This function is called by:
  2295 ;;		_jogar
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text6
  2300  000A7C                     __ptext6:
  2301                           	opt callstack 0
  2302  000A7C                     _rand:
  2303                           	opt callstack 25
  2304  000A7C  C046  F001         	movff	_seed,___omul@multiplier
  2305  000A80  C047  F002         	movff	_seed+1,___omul@multiplier+1
  2306  000A84  C048  F003         	movff	_seed+2,___omul@multiplier+2
  2307  000A88  C049  F004         	movff	_seed+3,___omul@multiplier+3
  2308  000A8C  C04A  F005         	movff	_seed+4,___omul@multiplier+4
  2309  000A90  C04B  F006         	movff	_seed+5,___omul@multiplier+5
  2310  000A94  C04C  F007         	movff	_seed+6,___omul@multiplier+6
  2311  000A98  C04D  F008         	movff	_seed+7,___omul@multiplier+7
  2312  000A9C  0E2D               	movlw	45
  2313  000A9E  6E09               	movwf	___omul@multiplicand^0,c
  2314  000AA0  0E7F               	movlw	127
  2315  000AA2  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2316  000AA4  0E95               	movlw	149
  2317  000AA6  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2318  000AA8  0E4C               	movlw	76
  2319  000AAA  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2320  000AAC  0E2D               	movlw	45
  2321  000AAE  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2322  000AB0  0EF4               	movlw	244
  2323  000AB2  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2324  000AB4  0E51               	movlw	81
  2325  000AB6  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2326  000AB8  0E58               	movlw	88
  2327  000ABA  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2328  000ABC  EC25  F007         	call	___omul	;wreg free
  2329  000AC0  C001  F01B         	movff	?___omul,??_rand
  2330  000AC4  C002  F01C         	movff	?___omul+1,??_rand+1
  2331  000AC8  C003  F01D         	movff	?___omul+2,??_rand+2
  2332  000ACC  C004  F01E         	movff	?___omul+3,??_rand+3
  2333  000AD0  C005  F01F         	movff	?___omul+4,??_rand+4
  2334  000AD4  C006  F020         	movff	?___omul+5,??_rand+5
  2335  000AD8  C007  F021         	movff	?___omul+6,??_rand+6
  2336  000ADC  C008  F022         	movff	?___omul+7,??_rand+7
  2337  000AE0  0E01               	movlw	1
  2338  000AE2  241B               	addwf	??_rand^0,w,c
  2339  000AE4  6E46               	movwf	_seed^0,c
  2340  000AE6  0E00               	movlw	0
  2341  000AE8  201C               	addwfc	(??_rand+1)^0,w,c
  2342  000AEA  6E47               	movwf	(_seed+1)^0,c
  2343  000AEC  0E00               	movlw	0
  2344  000AEE  201D               	addwfc	(??_rand+2)^0,w,c
  2345  000AF0  6E48               	movwf	(_seed+2)^0,c
  2346  000AF2  0E00               	movlw	0
  2347  000AF4  201E               	addwfc	(??_rand+3)^0,w,c
  2348  000AF6  6E49               	movwf	(_seed+3)^0,c
  2349  000AF8  0E00               	movlw	0
  2350  000AFA  201F               	addwfc	(??_rand+4)^0,w,c
  2351  000AFC  6E4A               	movwf	(_seed+4)^0,c
  2352  000AFE  0E00               	movlw	0
  2353  000B00  2020               	addwfc	(??_rand+5)^0,w,c
  2354  000B02  6E4B               	movwf	(_seed+5)^0,c
  2355  000B04  0E00               	movlw	0
  2356  000B06  2021               	addwfc	(??_rand+6)^0,w,c
  2357  000B08  6E4C               	movwf	(_seed+6)^0,c
  2358  000B0A  0E00               	movlw	0
  2359  000B0C  2022               	addwfc	(??_rand+7)^0,w,c
  2360  000B0E  6E4D               	movwf	(_seed+7)^0,c
  2361  000B10  C046  F01B         	movff	_seed,??_rand
  2362  000B14  C047  F01C         	movff	_seed+1,??_rand+1
  2363  000B18  C048  F01D         	movff	_seed+2,??_rand+2
  2364  000B1C  C049  F01E         	movff	_seed+3,??_rand+3
  2365  000B20  C04A  F01F         	movff	_seed+4,??_rand+4
  2366  000B24  C04B  F020         	movff	_seed+5,??_rand+5
  2367  000B28  C04C  F021         	movff	_seed+6,??_rand+6
  2368  000B2C  C04D  F022         	movff	_seed+7,??_rand+7
  2369  000B30  0E32               	movlw	50
  2370  000B32  EFA4  F005         	goto	u980
  2371  000B36                     u985:
  2372  000B36  90D8               	bcf	status,0,c
  2373  000B38  3222               	rrcf	(??_rand+7)^0,f,c
  2374  000B3A  3221               	rrcf	(??_rand+6)^0,f,c
  2375  000B3C  3220               	rrcf	(??_rand+5)^0,f,c
  2376  000B3E  321F               	rrcf	(??_rand+4)^0,f,c
  2377  000B40  321E               	rrcf	(??_rand+3)^0,f,c
  2378  000B42  321D               	rrcf	(??_rand+2)^0,f,c
  2379  000B44  321C               	rrcf	(??_rand+1)^0,f,c
  2380  000B46  321B               	rrcf	??_rand^0,f,c
  2381  000B48                     u980:
  2382  000B48  2EE8               	decfsz	wreg,f,c
  2383  000B4A  EF9B  F005         	goto	u985
  2384  000B4E  C01B  F019         	movff	??_rand,?_rand
  2385  000B52  C01D  F01A         	movff	??_rand+2,?_rand+1
  2386  000B56  0012               	return		;funcret
  2387  000B58                     __end_of_rand:
  2388                           	opt callstack 0
  2389                           
  2390 ;; *************** function ___omul *****************
  2391 ;; Defined at:
  2392 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2395 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  product         8   16[COMRAM] unsigned long long 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  8    0[COMRAM] unsigned long long 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2407 ;;      Params:        16       0       0       0       0       0       0
  2408 ;;      Locals:         8       0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0
  2410 ;;      Totals:        24       0       0       0       0       0       0
  2411 ;;Total ram usage:       24 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    2
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_rand
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text7
  2422  000E4A                     __ptext7:
  2423                           	opt callstack 0
  2424  000E4A                     ___omul:
  2425                           	opt callstack 25
  2426  000E4A  EE20  F011         	lfsr	2,___omul@product
  2427  000E4E  0E07               	movlw	7
  2428  000E50                     u911:
  2429  000E50  6ADE               	clrf	postinc2,c
  2430  000E52  06E8               	decf	wreg,f,c
  2431  000E54  E2FD               	bc	u911
  2432  000E56                     l1635:
  2433  000E56  A001               	btfss	___omul@multiplier^0,0,c
  2434  000E58  EF30  F007         	goto	u921
  2435  000E5C  EF32  F007         	goto	u920
  2436  000E60                     u921:
  2437  000E60  EF42  F007         	goto	l1639
  2438  000E64                     u920:
  2439  000E64  5009               	movf	___omul@multiplicand^0,w,c
  2440  000E66  2611               	addwf	___omul@product^0,f,c
  2441  000E68  500A               	movf	(___omul@multiplicand+1)^0,w,c
  2442  000E6A  2212               	addwfc	(___omul@product+1)^0,f,c
  2443  000E6C  500B               	movf	(___omul@multiplicand+2)^0,w,c
  2444  000E6E  2213               	addwfc	(___omul@product+2)^0,f,c
  2445  000E70  500C               	movf	(___omul@multiplicand+3)^0,w,c
  2446  000E72  2214               	addwfc	(___omul@product+3)^0,f,c
  2447  000E74  500D               	movf	(___omul@multiplicand+4)^0,w,c
  2448  000E76  2215               	addwfc	(___omul@product+4)^0,f,c
  2449  000E78  500E               	movf	(___omul@multiplicand+5)^0,w,c
  2450  000E7A  2216               	addwfc	(___omul@product+5)^0,f,c
  2451  000E7C  500F               	movf	(___omul@multiplicand+6)^0,w,c
  2452  000E7E  2217               	addwfc	(___omul@product+6)^0,f,c
  2453  000E80  5010               	movf	(___omul@multiplicand+7)^0,w,c
  2454  000E82  2218               	addwfc	(___omul@product+7)^0,f,c
  2455  000E84                     l1639:
  2456  000E84  90D8               	bcf	status,0,c
  2457  000E86  3609               	rlcf	___omul@multiplicand^0,f,c
  2458  000E88  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  2459  000E8A  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  2460  000E8C  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  2461  000E8E  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  2462  000E90  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  2463  000E92  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  2464  000E94  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  2465  000E96  90D8               	bcf	status,0,c
  2466  000E98  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  2467  000E9A  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  2468  000E9C  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  2469  000E9E  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  2470  000EA0  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  2471  000EA2  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  2472  000EA4  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  2473  000EA6  3201               	rrcf	___omul@multiplier^0,f,c
  2474  000EA8  5001               	movf	___omul@multiplier^0,w,c
  2475  000EAA  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  2476  000EAC  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  2477  000EAE  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  2478  000EB0  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  2479  000EB2  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  2480  000EB4  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  2481  000EB6  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  2482  000EB8  A4D8               	btfss	status,2,c
  2483  000EBA  EF61  F007         	goto	u931
  2484  000EBE  EF63  F007         	goto	u930
  2485  000EC2                     u931:
  2486  000EC2  EF2B  F007         	goto	l1635
  2487  000EC6                     u930:
  2488  000EC6  C011  F001         	movff	___omul@product,?___omul
  2489  000ECA  C012  F002         	movff	___omul@product+1,?___omul+1
  2490  000ECE  C013  F003         	movff	___omul@product+2,?___omul+2
  2491  000ED2  C014  F004         	movff	___omul@product+3,?___omul+3
  2492  000ED6  C015  F005         	movff	___omul@product+4,?___omul+4
  2493  000EDA  C016  F006         	movff	___omul@product+5,?___omul+5
  2494  000EDE  C017  F007         	movff	___omul@product+6,?___omul+6
  2495  000EE2  C018  F008         	movff	___omul@product+7,?___omul+7
  2496  000EE6  0012               	return		;funcret
  2497  000EE8                     __end_of___omul:
  2498                           	opt callstack 0
  2499                           
  2500 ;; *************** function ___awmod *****************
  2501 ;; Defined at:
  2502 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  dividend        2   34[COMRAM] int 
  2505 ;;  divisor         2   36[COMRAM] int 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  sign            1   39[COMRAM] unsigned char 
  2508 ;;  counter         1   38[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2   34[COMRAM] int 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2518 ;;      Params:         4       0       0       0       0       0       0
  2519 ;;      Locals:         2       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0
  2521 ;;      Totals:         6       0       0       0       0       0       0
  2522 ;;Total ram usage:        6 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_jogar
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text8
  2533  000CEE                     __ptext8:
  2534                           	opt callstack 0
  2535  000CEE                     ___awmod:
  2536                           	opt callstack 26
  2537  000CEE  0E00               	movlw	0
  2538  000CF0  6E28               	movwf	___awmod@sign^0,c
  2539  000CF2  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  2540  000CF4  EF80  F006         	goto	u990
  2541  000CF8  EF7E  F006         	goto	u991
  2542  000CFC                     u991:
  2543  000CFC  EF86  F006         	goto	l1695
  2544  000D00                     u990:
  2545  000D00  6C23               	negf	___awmod@dividend^0,c
  2546  000D02  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2547  000D04  B0D8               	btfsc	status,0,c
  2548  000D06  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2549  000D08  0E01               	movlw	1
  2550  000D0A  6E28               	movwf	___awmod@sign^0,c
  2551  000D0C                     l1695:
  2552  000D0C  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  2553  000D0E  EF8D  F006         	goto	u1000
  2554  000D12  EF8B  F006         	goto	u1001
  2555  000D16                     u1001:
  2556  000D16  EF91  F006         	goto	l1699
  2557  000D1A                     u1000:
  2558  000D1A  6C25               	negf	___awmod@divisor^0,c
  2559  000D1C  1E26               	comf	(___awmod@divisor+1)^0,f,c
  2560  000D1E  B0D8               	btfsc	status,0,c
  2561  000D20  2A26               	incf	(___awmod@divisor+1)^0,f,c
  2562  000D22                     l1699:
  2563  000D22  5025               	movf	___awmod@divisor^0,w,c
  2564  000D24  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  2565  000D26  B4D8               	btfsc	status,2,c
  2566  000D28  EF98  F006         	goto	u1011
  2567  000D2C  EF9A  F006         	goto	u1010
  2568  000D30                     u1011:
  2569  000D30  EFBE  F006         	goto	l1715
  2570  000D34                     u1010:
  2571  000D34  0E01               	movlw	1
  2572  000D36  6E27               	movwf	___awmod@counter^0,c
  2573  000D38  EFA2  F006         	goto	l1705
  2574  000D3C                     l1703:
  2575  000D3C  90D8               	bcf	status,0,c
  2576  000D3E  3625               	rlcf	___awmod@divisor^0,f,c
  2577  000D40  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  2578  000D42  2A27               	incf	___awmod@counter^0,f,c
  2579  000D44                     l1705:
  2580  000D44  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  2581  000D46  EFA7  F006         	goto	u1021
  2582  000D4A  EFA9  F006         	goto	u1020
  2583  000D4E                     u1021:
  2584  000D4E  EF9E  F006         	goto	l1703
  2585  000D52                     u1020:
  2586  000D52                     l1707:
  2587  000D52  5025               	movf	___awmod@divisor^0,w,c
  2588  000D54  5C23               	subwf	___awmod@dividend^0,w,c
  2589  000D56  5026               	movf	(___awmod@divisor+1)^0,w,c
  2590  000D58  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  2591  000D5A  A0D8               	btfss	status,0,c
  2592  000D5C  EFB2  F006         	goto	u1031
  2593  000D60  EFB4  F006         	goto	u1030
  2594  000D64                     u1031:
  2595  000D64  EFB8  F006         	goto	l1711
  2596  000D68                     u1030:
  2597  000D68  5025               	movf	___awmod@divisor^0,w,c
  2598  000D6A  5E23               	subwf	___awmod@dividend^0,f,c
  2599  000D6C  5026               	movf	(___awmod@divisor+1)^0,w,c
  2600  000D6E  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  2601  000D70                     l1711:
  2602  000D70  90D8               	bcf	status,0,c
  2603  000D72  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  2604  000D74  3225               	rrcf	___awmod@divisor^0,f,c
  2605  000D76  2E27               	decfsz	___awmod@counter^0,f,c
  2606  000D78  EFA9  F006         	goto	l1707
  2607  000D7C                     l1715:
  2608  000D7C  5028               	movf	___awmod@sign^0,w,c
  2609  000D7E  B4D8               	btfsc	status,2,c
  2610  000D80  EFC4  F006         	goto	u1041
  2611  000D84  EFC6  F006         	goto	u1040
  2612  000D88                     u1041:
  2613  000D88  EFCA  F006         	goto	l1719
  2614  000D8C                     u1040:
  2615  000D8C  6C23               	negf	___awmod@dividend^0,c
  2616  000D8E  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2617  000D90  B0D8               	btfsc	status,0,c
  2618  000D92  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2619  000D94                     l1719:
  2620  000D94  C023  F023         	movff	___awmod@dividend,?___awmod
  2621  000D98  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  2622  000D9C  0012               	return		;funcret
  2623  000D9E                     __end_of___awmod:
  2624                           	opt callstack 0
  2625                           
  2626 ;; *************** function _instrucoes *****************
  2627 ;; Defined at:
  2628 ;;		line 162 in file "task_manager.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  lcd             2   25[COMRAM] PTR struct .
  2631 ;;		 -> PORTD(1), 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2643 ;;      Params:         2       0       0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0
  2646 ;;      Totals:         2       0       0       0       0       0       0
  2647 ;;Total ram usage:        2 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    6
  2650 ;; This function calls:
  2651 ;;		_print_mat
  2652 ;;		_strcpy
  2653 ;; This function is called by:
  2654 ;;		_gerenciador
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text9
  2659  001108                     __ptext9:
  2660                           	opt callstack 0
  2661  001108                     _instrucoes:
  2662                           	opt callstack 23
  2663  001108                     
  2664                           ;task_manager.c: 163:     strcpy(mat_disp[0], "1.SETAS MOVEM A");
  2665  001108  0E80               	movlw	low _mat_disp
  2666  00110A  6E01               	movwf	strcpy@dest^0,c
  2667  00110C  0E00               	movlw	high _mat_disp
  2668  00110E  6E02               	movwf	(strcpy@dest+1)^0,c
  2669  001110  0EDE               	movlw	low STR_17
  2670  001112  6E03               	movwf	strcpy@src^0,c
  2671  001114  0E7F               	movlw	high STR_17
  2672  001116  6E04               	movwf	(strcpy@src+1)^0,c
  2673  001118  EC68  F009         	call	_strcpy	;wreg free
  2674                           
  2675                           ;task_manager.c: 164:     strcpy(mat_disp[1], "NAVE           ");
  2676  00111C  0E90               	movlw	low (_mat_disp+16)
  2677  00111E  6E01               	movwf	strcpy@dest^0,c
  2678  001120  0E00               	movlw	high (_mat_disp+16)
  2679  001122  6E02               	movwf	(strcpy@dest+1)^0,c
  2680  001124  0E8E               	movlw	low STR_18
  2681  001126  6E03               	movwf	strcpy@src^0,c
  2682  001128  0E7F               	movlw	high STR_18
  2683  00112A  6E04               	movwf	(strcpy@src+1)^0,c
  2684  00112C  EC68  F009         	call	_strcpy	;wreg free
  2685                           
  2686                           ;task_manager.c: 165:     strcpy(mat_disp[2], "2.ESCAPE VOLTA ");
  2687  001130  0EA0               	movlw	low (_mat_disp+32)
  2688  001132  6E01               	movwf	strcpy@dest^0,c
  2689  001134  0E00               	movlw	high (_mat_disp+32)
  2690  001136  6E02               	movwf	(strcpy@dest+1)^0,c
  2691  001138  0EAE               	movlw	low STR_19
  2692  00113A  6E03               	movwf	strcpy@src^0,c
  2693  00113C  0E7F               	movlw	high STR_19
  2694  00113E  6E04               	movwf	(strcpy@src+1)^0,c
  2695  001140  EC68  F009         	call	_strcpy	;wreg free
  2696                           
  2697                           ;task_manager.c: 166:     strcpy(mat_disp[3], "MENU           ");
  2698  001144  0EB0               	movlw	low (_mat_disp+48)
  2699  001146  6E01               	movwf	strcpy@dest^0,c
  2700  001148  0E00               	movlw	high (_mat_disp+48)
  2701  00114A  6E02               	movwf	(strcpy@dest+1)^0,c
  2702  00114C  0E9E               	movlw	low STR_20
  2703  00114E  6E03               	movwf	strcpy@src^0,c
  2704  001150  0E7F               	movlw	high STR_20
  2705  001152  6E04               	movwf	(strcpy@src+1)^0,c
  2706  001154  EC68  F009         	call	_strcpy	;wreg free
  2707  001158                     
  2708                           ;task_manager.c: 167:     print_mat(lcd);
  2709  001158  C01A  F010         	movff	instrucoes@lcd,print_mat@lcd
  2710  00115C  C01B  F011         	movff	instrucoes@lcd+1,print_mat@lcd+1
  2711  001160  ECCF  F006         	call	_print_mat	;wreg free
  2712  001164                     l236:
  2713  001164  AA45               	btfss	_botoes^0,5,c
  2714  001166  EFB7  F008         	goto	u1371
  2715  00116A  EFB9  F008         	goto	u1370
  2716  00116E                     u1371:
  2717  00116E  EFB2  F008         	goto	l236
  2718  001172                     u1370:
  2719  001172  0012               	return		;funcret
  2720  001174                     __end_of_instrucoes:
  2721                           	opt callstack 0
  2722                           
  2723 ;; *************** function _finaliza *****************
  2724 ;; Defined at:
  2725 ;;		line 38 in file "task_manager.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  lcd             2   25[COMRAM] PTR struct .
  2728 ;;		 -> PORTD(1), 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:         2       0       0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0
  2743 ;;      Totals:         2       0       0       0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    6
  2747 ;; This function calls:
  2748 ;;		_print_mat
  2749 ;;		_strcpy
  2750 ;; This function is called by:
  2751 ;;		_gerenciador
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text10
  2756  0011E0                     __ptext10:
  2757                           	opt callstack 0
  2758  0011E0                     _finaliza:
  2759                           	opt callstack 23
  2760  0011E0                     
  2761                           ;task_manager.c: 39:     strcpy(mat_disp[0], "HIBERNANDO.....");
  2762  0011E0  0E80               	movlw	low _mat_disp
  2763  0011E2  6E01               	movwf	strcpy@dest^0,c
  2764  0011E4  0E00               	movlw	high _mat_disp
  2765  0011E6  6E02               	movwf	(strcpy@dest+1)^0,c
  2766  0011E8  0EBE               	movlw	low STR_5
  2767  0011EA  6E03               	movwf	strcpy@src^0,c
  2768  0011EC  0E7F               	movlw	high STR_5
  2769  0011EE  6E04               	movwf	(strcpy@src+1)^0,c
  2770  0011F0  EC68  F009         	call	_strcpy	;wreg free
  2771                           
  2772                           ;task_manager.c: 40:     strcpy(mat_disp[1], "               ");
  2773  0011F4  0E90               	movlw	low (_mat_disp+16)
  2774  0011F6  6E01               	movwf	strcpy@dest^0,c
  2775  0011F8  0E00               	movlw	high (_mat_disp+16)
  2776  0011FA  6E02               	movwf	(strcpy@dest+1)^0,c
  2777  0011FC  0EF6               	movlw	low (STR_10+1)
  2778  0011FE  6E03               	movwf	strcpy@src^0,c
  2779  001200  0E7E               	movlw	high (STR_10+1)
  2780  001202  6E04               	movwf	(strcpy@src+1)^0,c
  2781  001204  EC68  F009         	call	_strcpy	;wreg free
  2782                           
  2783                           ;task_manager.c: 41:     strcpy(mat_disp[2], "               ");
  2784  001208  0EA0               	movlw	low (_mat_disp+32)
  2785  00120A  6E01               	movwf	strcpy@dest^0,c
  2786  00120C  0E00               	movlw	high (_mat_disp+32)
  2787  00120E  6E02               	movwf	(strcpy@dest+1)^0,c
  2788  001210  0EF6               	movlw	low (STR_10+1)
  2789  001212  6E03               	movwf	strcpy@src^0,c
  2790  001214  0E7E               	movlw	high (STR_10+1)
  2791  001216  6E04               	movwf	(strcpy@src+1)^0,c
  2792  001218  EC68  F009         	call	_strcpy	;wreg free
  2793                           
  2794                           ;task_manager.c: 42:     strcpy(mat_disp[3], "               ");
  2795  00121C  0EB0               	movlw	low (_mat_disp+48)
  2796  00121E  6E01               	movwf	strcpy@dest^0,c
  2797  001220  0E00               	movlw	high (_mat_disp+48)
  2798  001222  6E02               	movwf	(strcpy@dest+1)^0,c
  2799  001224  0EF6               	movlw	low (STR_10+1)
  2800  001226  6E03               	movwf	strcpy@src^0,c
  2801  001228  0E7E               	movlw	high (STR_10+1)
  2802  00122A  6E04               	movwf	(strcpy@src+1)^0,c
  2803  00122C  EC68  F009         	call	_strcpy	;wreg free
  2804  001230                     
  2805                           ;task_manager.c: 43:     print_mat(lcd);
  2806  001230  C01A  F010         	movff	finaliza@lcd,print_mat@lcd
  2807  001234  C01B  F011         	movff	finaliza@lcd+1,print_mat@lcd+1
  2808  001238  ECCF  F006         	call	_print_mat	;wreg free
  2809  00123C  0003               	sleep		;# 
  2810  00123E  0012               	return		;funcret
  2811  001240                     __end_of_finaliza:
  2812                           	opt callstack 0
  2813                           
  2814 ;; *************** function _creditos *****************
  2815 ;; Defined at:
  2816 ;;		line 28 in file "task_manager.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  lcd             2   25[COMRAM] PTR struct .
  2819 ;;		 -> PORTD(1), 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2831 ;;      Params:         2       0       0       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0
  2834 ;;      Totals:         2       0       0       0       0       0       0
  2835 ;;Total ram usage:        2 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    6
  2838 ;; This function calls:
  2839 ;;		_print_mat
  2840 ;;		_strcpy
  2841 ;; This function is called by:
  2842 ;;		_gerenciador
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text11
  2847  001174                     __ptext11:
  2848                           	opt callstack 0
  2849  001174                     _creditos:
  2850                           	opt callstack 23
  2851  001174                     
  2852                           ;task_manager.c: 30:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
  2853  001174  0E80               	movlw	low _mat_disp
  2854  001176  6E01               	movwf	strcpy@dest^0,c
  2855  001178  0E00               	movlw	high _mat_disp
  2856  00117A  6E02               	movwf	(strcpy@dest+1)^0,c
  2857  00117C  0ECE               	movlw	low STR_1
  2858  00117E  6E03               	movwf	strcpy@src^0,c
  2859  001180  0E7F               	movlw	high STR_1
  2860  001182  6E04               	movwf	(strcpy@src+1)^0,c
  2861  001184  EC68  F009         	call	_strcpy	;wreg free
  2862                           
  2863                           ;task_manager.c: 31:     strcpy(mat_disp[1], "2.GEORGE NARDES");
  2864  001188  0E90               	movlw	low (_mat_disp+16)
  2865  00118A  6E01               	movwf	strcpy@dest^0,c
  2866  00118C  0E00               	movlw	high (_mat_disp+16)
  2867  00118E  6E02               	movwf	(strcpy@dest+1)^0,c
  2868  001190  0EEE               	movlw	low STR_2
  2869  001192  6E03               	movwf	strcpy@src^0,c
  2870  001194  0E7F               	movlw	high STR_2
  2871  001196  6E04               	movwf	(strcpy@src+1)^0,c
  2872  001198  EC68  F009         	call	_strcpy	;wreg free
  2873                           
  2874                           ;task_manager.c: 32:     strcpy(mat_disp[2], "               ");
  2875  00119C  0EA0               	movlw	low (_mat_disp+32)
  2876  00119E  6E01               	movwf	strcpy@dest^0,c
  2877  0011A0  0E00               	movlw	high (_mat_disp+32)
  2878  0011A2  6E02               	movwf	(strcpy@dest+1)^0,c
  2879  0011A4  0EF6               	movlw	low (STR_10+1)
  2880  0011A6  6E03               	movwf	strcpy@src^0,c
  2881  0011A8  0E7E               	movlw	high (STR_10+1)
  2882  0011AA  6E04               	movwf	(strcpy@src+1)^0,c
  2883  0011AC  EC68  F009         	call	_strcpy	;wreg free
  2884                           
  2885                           ;task_manager.c: 33:     strcpy(mat_disp[3], "               ");
  2886  0011B0  0EB0               	movlw	low (_mat_disp+48)
  2887  0011B2  6E01               	movwf	strcpy@dest^0,c
  2888  0011B4  0E00               	movlw	high (_mat_disp+48)
  2889  0011B6  6E02               	movwf	(strcpy@dest+1)^0,c
  2890  0011B8  0EF6               	movlw	low (STR_10+1)
  2891  0011BA  6E03               	movwf	strcpy@src^0,c
  2892  0011BC  0E7E               	movlw	high (STR_10+1)
  2893  0011BE  6E04               	movwf	(strcpy@src+1)^0,c
  2894  0011C0  EC68  F009         	call	_strcpy	;wreg free
  2895  0011C4                     
  2896                           ;task_manager.c: 34:     print_mat(lcd);
  2897  0011C4  C01A  F010         	movff	creditos@lcd,print_mat@lcd
  2898  0011C8  C01B  F011         	movff	creditos@lcd+1,print_mat@lcd+1
  2899  0011CC  ECCF  F006         	call	_print_mat	;wreg free
  2900  0011D0                     l196:
  2901  0011D0  AA45               	btfss	_botoes^0,5,c
  2902  0011D2  EFED  F008         	goto	u1381
  2903  0011D6  EFEF  F008         	goto	u1380
  2904  0011DA                     u1381:
  2905  0011DA  EFE8  F008         	goto	l196
  2906  0011DE                     u1380:
  2907  0011DE  0012               	return		;funcret
  2908  0011E0                     __end_of_creditos:
  2909                           	opt callstack 0
  2910                           
  2911 ;; *************** function _strcpy *****************
  2912 ;; Defined at:
  2913 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2916 ;;		 -> mat_disp(64), 
  2917 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2918 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  2919 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  2920 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  2921 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2922 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  2923 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  d               2    6[COMRAM] PTR unsigned char 
  2926 ;;		 -> mat_disp(64), 
  2927 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2928 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(17), 
  2929 ;;		 -> STR_20(16), STR_19(16), STR_18(16), STR_17(16), 
  2930 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  2931 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2932 ;;		 -> STR_8(16), STR_7(16), STR_6(16), STR_5(16), 
  2933 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2    0[COMRAM] PTR unsigned char 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2943 ;;      Params:         4       0       0       0       0       0       0
  2944 ;;      Locals:         4       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0
  2946 ;;      Totals:         8       0       0       0       0       0       0
  2947 ;;Total ram usage:        8 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    2
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_creditos
  2954 ;;		_finaliza
  2955 ;;		_jogar
  2956 ;;		_instrucoes
  2957 ;;		_menu
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text12
  2962  0012D0                     __ptext12:
  2963                           	opt callstack 0
  2964  0012D0                     _strcpy:
  2965                           	opt callstack 26
  2966  0012D0  C003  F005         	movff	strcpy@src,strcpy@s
  2967  0012D4  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  2968  0012D8  C001  F007         	movff	strcpy@dest,strcpy@d
  2969  0012DC  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  2970  0012E0                     l1669:
  2971  0012E0  C005  FFF6         	movff	strcpy@s,tblptrl
  2972  0012E4  C006  FFF7         	movff	strcpy@s+1,tblptrh
  2973  0012E8  4A05               	infsnz	strcpy@s^0,f,c
  2974  0012EA  2A06               	incf	(strcpy@s+1)^0,f,c
  2975  0012EC                     	if	0	;tblptru may be non-zero
  2976  0012EC                     	endif
  2977  0012EC                     	if	0	;tblptru may be non-zero
  2978  0012EC                     	endif
  2979  0012EC  C007  FFD9         	movff	strcpy@d,fsr2l
  2980  0012F0  C008  FFDA         	movff	strcpy@d+1,fsr2h
  2981  0012F4  4A07               	infsnz	strcpy@d^0,f,c
  2982  0012F6  2A08               	incf	(strcpy@d+1)^0,f,c
  2983  0012F8  0008               	tblrd		*
  2984  0012FA  CFF5 FFDF          	movff	tablat,indf2
  2985  0012FE  50DF               	movf	indf2,w,c
  2986  001300  A4D8               	btfss	status,2,c
  2987  001302  EF85  F009         	goto	u961
  2988  001306  EF87  F009         	goto	u960
  2989  00130A                     u961:
  2990  00130A  EF70  F009         	goto	l1669
  2991  00130E                     u960:
  2992  00130E  0012               	return		;funcret
  2993  001310                     __end_of_strcpy:
  2994                           	opt callstack 0
  2995                           
  2996 ;; *************** function _print_mat *****************
  2997 ;; Defined at:
  2998 ;;		line 199 in file "lcd.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  lcd             2   15[COMRAM] PTR struct .
  3001 ;;		 -> PORTD(1), 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  j               2   21[COMRAM] int 
  3004 ;;  i               2   23[COMRAM] int 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3014 ;;      Params:         2       0       0       0       0       0       0
  3015 ;;      Locals:         4       0       0       0       0       0       0
  3016 ;;      Temps:          4       0       0       0       0       0       0
  3017 ;;      Totals:        10       0       0       0       0       0       0
  3018 ;;Total ram usage:       10 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    5
  3021 ;; This function calls:
  3022 ;;		_goto_XY
  3023 ;;		_write_char
  3024 ;; This function is called by:
  3025 ;;		_creditos
  3026 ;;		_finaliza
  3027 ;;		_jogar
  3028 ;;		_instrucoes
  3029 ;;		_menu
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text13
  3034  000D9E                     __ptext13:
  3035                           	opt callstack 0
  3036  000D9E                     _print_mat:
  3037                           	opt callstack 23
  3038  000D9E                     
  3039                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  3040  000D9E  0E00               	movlw	0
  3041  000DA0  6E19               	movwf	(print_mat@i+1)^0,c
  3042  000DA2  0E00               	movlw	0
  3043  000DA4  6E18               	movwf	print_mat@i^0,c
  3044  000DA6                     l1649:
  3045                           
  3046                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  3047  000DA6  C010  F008         	movff	print_mat@lcd,goto_XY@lcd
  3048  000DAA  C011  F009         	movff	print_mat@lcd+1,goto_XY@lcd+1
  3049  000DAE  2818               	incf	print_mat@i^0,w,c
  3050  000DB0  6E0A               	movwf	goto_XY@x^0,c
  3051  000DB2  0E01               	movlw	1
  3052  000DB4  6E0B               	movwf	goto_XY@y^0,c
  3053  000DB6  EC19  F006         	call	_goto_XY	;wreg free
  3054  000DBA                     
  3055                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  3056  000DBA  0E00               	movlw	0
  3057  000DBC  6E17               	movwf	(print_mat@j+1)^0,c
  3058  000DBE  0E00               	movlw	0
  3059  000DC0  6E16               	movwf	print_mat@j^0,c
  3060  000DC2                     l1657:
  3061                           
  3062                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  3063  000DC2  C010  F001         	movff	print_mat@lcd,write_char@lcd
  3064  000DC6  C011  F002         	movff	print_mat@lcd+1,write_char@lcd+1
  3065  000DCA  C018  F012         	movff	print_mat@i,??_print_mat
  3066  000DCE  C019  F013         	movff	print_mat@i+1,??_print_mat+1
  3067  000DD2  3A12               	swapf	??_print_mat^0,f,c
  3068  000DD4  3A13               	swapf	(??_print_mat+1)^0,f,c
  3069  000DD6  0EF0               	movlw	240
  3070  000DD8  1613               	andwf	(??_print_mat+1)^0,f,c
  3071  000DDA  5012               	movf	??_print_mat^0,w,c
  3072  000DDC  0B0F               	andlw	15
  3073  000DDE  1213               	iorwf	(??_print_mat+1)^0,f,c
  3074  000DE0  0EF0               	movlw	240
  3075  000DE2  1612               	andwf	??_print_mat^0,f,c
  3076  000DE4  0E80               	movlw	low _mat_disp
  3077  000DE6  6E14               	movwf	(??_print_mat+2)^0,c
  3078  000DE8  0E00               	movlw	high _mat_disp
  3079  000DEA  6E15               	movwf	(??_print_mat+3)^0,c
  3080  000DEC  5012               	movf	??_print_mat^0,w,c
  3081  000DEE  2614               	addwf	(??_print_mat+2)^0,f,c
  3082  000DF0  5013               	movf	(??_print_mat+1)^0,w,c
  3083  000DF2  2215               	addwfc	(??_print_mat+3)^0,f,c
  3084  000DF4  5016               	movf	print_mat@j^0,w,c
  3085  000DF6  2414               	addwf	(??_print_mat+2)^0,w,c
  3086  000DF8  6ED9               	movwf	fsr2l,c
  3087  000DFA  5017               	movf	(print_mat@j+1)^0,w,c
  3088  000DFC  2015               	addwfc	(??_print_mat+3)^0,w,c
  3089  000DFE  6EDA               	movwf	fsr2h,c
  3090  000E00  50DF               	movf	indf2,w,c
  3091  000E02  6E03               	movwf	write_char@c^0,c
  3092  000E04  ECCA  F004         	call	_write_char	;wreg free
  3093  000E08  4A16               	infsnz	print_mat@j^0,f,c
  3094  000E0A  2A17               	incf	(print_mat@j+1)^0,f,c
  3095  000E0C  BE17               	btfsc	(print_mat@j+1)^0,7,c
  3096  000E0E  EF12  F007         	goto	u941
  3097  000E12  5017               	movf	(print_mat@j+1)^0,w,c
  3098  000E14  E109               	bnz	u940
  3099  000E16  0E10               	movlw	16
  3100  000E18  5C16               	subwf	print_mat@j^0,w,c
  3101  000E1A  A0D8               	btfss	status,0,c
  3102  000E1C  EF12  F007         	goto	u941
  3103  000E20  EF14  F007         	goto	u940
  3104  000E24                     u941:
  3105  000E24  EFE1  F006         	goto	l1657
  3106  000E28                     u940:
  3107  000E28                     
  3108                           ;lcd.c: 204:     }
  3109  000E28  4A18               	infsnz	print_mat@i^0,f,c
  3110  000E2A  2A19               	incf	(print_mat@i+1)^0,f,c
  3111  000E2C  BE19               	btfsc	(print_mat@i+1)^0,7,c
  3112  000E2E  EF22  F007         	goto	u951
  3113  000E32  5019               	movf	(print_mat@i+1)^0,w,c
  3114  000E34  E109               	bnz	u950
  3115  000E36  0E04               	movlw	4
  3116  000E38  5C18               	subwf	print_mat@i^0,w,c
  3117  000E3A  A0D8               	btfss	status,0,c
  3118  000E3C  EF22  F007         	goto	u951
  3119  000E40  EF24  F007         	goto	u950
  3120  000E44                     u951:
  3121  000E44  EFD3  F006         	goto	l1649
  3122  000E48                     u950:
  3123  000E48  0012               	return		;funcret
  3124  000E4A                     __end_of_print_mat:
  3125                           	opt callstack 0
  3126                           
  3127 ;; *************** function _write_char *****************
  3128 ;; Defined at:
  3129 ;;		line 133 in file "lcd.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  lcd             2    0[COMRAM] PTR struct .
  3132 ;;		 -> PORTD(1), 
  3133 ;;  c               1    2[COMRAM] unsigned char 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3145 ;;      Params:         3       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0
  3147 ;;      Temps:          1       0       0       0       0       0       0
  3148 ;;      Totals:         4       0       0       0       0       0       0
  3149 ;;Total ram usage:        4 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    2
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_print_mat
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text14
  3160  000994                     __ptext14:
  3161                           	opt callstack 0
  3162  000994                     _write_char:
  3163                           	opt callstack 25
  3164  000994                     
  3165                           ;lcd.c: 134:     lcd->E = 0;
  3166  000994  C001  FFD9         	movff	write_char@lcd,fsr2l
  3167  000998  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3168  00099C  94DF               	bcf	indf2,2,c
  3169                           
  3170                           ;lcd.c: 135:     lcd->RS = 1;
  3171  00099E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3172  0009A2  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3173  0009A6  80DF               	bsf	indf2,0,c
  3174                           
  3175                           ;lcd.c: 136:     lcd->R_W = 0;
  3176  0009A8  C001  FFD9         	movff	write_char@lcd,fsr2l
  3177  0009AC  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3178  0009B0  92DF               	bcf	indf2,1,c
  3179  0009B2                     
  3180                           ;lcd.c: 139:     lcd->data = (c>>4);
  3181  0009B2  C003  F004         	movff	write_char@c,??_write_char
  3182  0009B6  3A04               	swapf	??_write_char^0,f,c
  3183  0009B8  0E0F               	movlw	15
  3184  0009BA  1604               	andwf	??_write_char^0,f,c
  3185  0009BC  C001  FFD9         	movff	write_char@lcd,fsr2l
  3186  0009C0  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3187  0009C4  3A04               	swapf	??_write_char^0,f,c
  3188  0009C6  50DF               	movf	indf2,w,c
  3189  0009C8  1804               	xorwf	??_write_char^0,w,c
  3190  0009CA  0B0F               	andlw	-241
  3191  0009CC  1804               	xorwf	??_write_char^0,w,c
  3192  0009CE  6EDF               	movwf	indf2,c
  3193  0009D0                     
  3194                           ;lcd.c: 140:     lcd->E = 1;
  3195  0009D0  C001  FFD9         	movff	write_char@lcd,fsr2l
  3196  0009D4  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3197  0009D8  84DF               	bsf	indf2,2,c
  3198  0009DA                     
  3199                           ;lcd.c: 141:     lcd->E = 0;
  3200  0009DA  C001  FFD9         	movff	write_char@lcd,fsr2l
  3201  0009DE  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3202  0009E2  94DF               	bcf	indf2,2,c
  3203  0009E4                     
  3204                           ;lcd.c: 144:     lcd->data = (c);
  3205  0009E4  C003  F004         	movff	write_char@c,??_write_char
  3206  0009E8  C001  FFD9         	movff	write_char@lcd,fsr2l
  3207  0009EC  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3208  0009F0  3A04               	swapf	??_write_char^0,f,c
  3209  0009F2  50DF               	movf	indf2,w,c
  3210  0009F4  1804               	xorwf	??_write_char^0,w,c
  3211  0009F6  0B0F               	andlw	-241
  3212  0009F8  1804               	xorwf	??_write_char^0,w,c
  3213  0009FA  6EDF               	movwf	indf2,c
  3214                           
  3215                           ;lcd.c: 145:     lcd->E = 1;
  3216  0009FC  C001  FFD9         	movff	write_char@lcd,fsr2l
  3217  000A00  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3218  000A04  84DF               	bsf	indf2,2,c
  3219                           
  3220                           ;lcd.c: 146:     lcd->E = 0;
  3221  000A06  C001  FFD9         	movff	write_char@lcd,fsr2l
  3222  000A0A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3223  000A0E  94DF               	bcf	indf2,2,c
  3224  000A10                     
  3225                           ;lcd.c: 149:     TRISD = 0xF0;
  3226  000A10  0EF0               	movlw	240
  3227  000A12  6E95               	movwf	149,c	;volatile
  3228  000A14                     
  3229                           ;lcd.c: 150:     lcd->RS = 0;
  3230  000A14  C001  FFD9         	movff	write_char@lcd,fsr2l
  3231  000A18  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3232  000A1C  90DF               	bcf	indf2,0,c
  3233  000A1E                     
  3234                           ;lcd.c: 151:     lcd->R_W = 1;
  3235  000A1E  C001  FFD9         	movff	write_char@lcd,fsr2l
  3236  000A22  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3237  000A26  82DF               	bsf	indf2,1,c
  3238  000A28                     l1619:
  3239                           
  3240                           ;lcd.c: 153:        lcd->E = 1;
  3241  000A28  C001  FFD9         	movff	write_char@lcd,fsr2l
  3242  000A2C  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3243  000A30  84DF               	bsf	indf2,2,c
  3244  000A32                     
  3245                           ;lcd.c: 154:        lcd->E = 0;
  3246  000A32  C001  FFD9         	movff	write_char@lcd,fsr2l
  3247  000A36  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3248  000A3A  94DF               	bcf	indf2,2,c
  3249  000A3C                     
  3250                           ;lcd.c: 155:        lcd->E = 1;
  3251  000A3C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3252  000A40  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3253  000A44  84DF               	bsf	indf2,2,c
  3254  000A46                     
  3255                           ;lcd.c: 156:        lcd->E = 0;
  3256  000A46  C001  FFD9         	movff	write_char@lcd,fsr2l
  3257  000A4A  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3258  000A4E  94DF               	bcf	indf2,2,c
  3259  000A50                     
  3260                           ;lcd.c: 157:     } while(lcd->data&0x08);
  3261  000A50  C001  FFD9         	movff	write_char@lcd,fsr2l
  3262  000A54  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3263  000A58  38DF               	swapf	indf2,w,c
  3264  000A5A  0B0F               	andlw	15
  3265  000A5C  6E04               	movwf	??_write_char^0,c
  3266  000A5E  B604               	btfsc	??_write_char^0,3,c
  3267  000A60  EF34  F005         	goto	u901
  3268  000A64  EF36  F005         	goto	u900
  3269  000A68                     u901:
  3270  000A68  EF14  F005         	goto	l1619
  3271  000A6C                     u900:
  3272  000A6C                     
  3273                           ;lcd.c: 158:     lcd->R_W = 0;
  3274  000A6C  C001  FFD9         	movff	write_char@lcd,fsr2l
  3275  000A70  C002  FFDA         	movff	write_char@lcd+1,fsr2h
  3276  000A74  92DF               	bcf	indf2,1,c
  3277  000A76                     
  3278                           ;lcd.c: 159:     TRISD = 0x00;
  3279  000A76  0E00               	movlw	0
  3280  000A78  6E95               	movwf	149,c	;volatile
  3281  000A7A  0012               	return		;funcret
  3282  000A7C                     __end_of_write_char:
  3283                           	opt callstack 0
  3284                           
  3285 ;; *************** function _goto_XY *****************
  3286 ;; Defined at:
  3287 ;;		line 76 in file "lcd.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  lcd             2    7[COMRAM] PTR struct .
  3290 ;;		 -> PORTD(1), 
  3291 ;;  x               1    9[COMRAM] unsigned char 
  3292 ;;  y               1   10[COMRAM] unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  temp            1   14[COMRAM] unsigned char 
  3295 ;;  a               1   13[COMRAM] unsigned char 
  3296 ;;  z               1   12[COMRAM] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3306 ;;      Params:         4       0       0       0       0       0       0
  3307 ;;      Locals:         3       0       0       0       0       0       0
  3308 ;;      Temps:          1       0       0       0       0       0       0
  3309 ;;      Totals:         8       0       0       0       0       0       0
  3310 ;;Total ram usage:        8 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    4
  3313 ;; This function calls:
  3314 ;;		_lcd_cmd
  3315 ;; This function is called by:
  3316 ;;		_print_mat
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text15
  3321  000C32                     __ptext15:
  3322                           	opt callstack 0
  3323  000C32                     _goto_XY:
  3324                           	opt callstack 23
  3325  000C32                     
  3326                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  3327  000C32  040A               	decf	goto_XY@x^0,w,c
  3328  000C34  A4D8               	btfss	status,2,c
  3329  000C36  EF1F  F006         	goto	u861
  3330  000C3A  EF21  F006         	goto	u860
  3331  000C3E                     u861:
  3332  000C3E  EF43  F006         	goto	l1567
  3333  000C42                     u860:
  3334  000C42                     
  3335                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  3336  000C42  500B               	movf	goto_XY@y^0,w,c
  3337  000C44  0F7F               	addlw	127
  3338  000C46  6E0F               	movwf	goto_XY@temp^0,c
  3339                           
  3340                           ;lcd.c: 81:        z = temp>>4;
  3341  000C48  380F               	swapf	goto_XY@temp^0,w,c
  3342  000C4A  0B0F               	andlw	15
  3343  000C4C  6E0D               	movwf	goto_XY@z^0,c
  3344  000C4E                     l1559:
  3345                           
  3346                           ;lcd.c: 82:        a = temp;
  3347  000C4E  C00F  F00E         	movff	goto_XY@temp,goto_XY@a
  3348  000C52                     
  3349                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  3350  000C52  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3351  000C56  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3352  000C5A  C00D  F006         	movff	goto_XY@z,lcd_cmd@a
  3353  000C5E  EC88  F009         	call	_lcd_cmd	;wreg free
  3354  000C62                     
  3355                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  3356  000C62  0E06               	movlw	6
  3357  000C64  6E0C               	movwf	??_goto_XY^0,c
  3358  000C66  0E30               	movlw	48
  3359  000C68                     u1437:
  3360  000C68  2EE8               	decfsz	wreg,f,c
  3361  000C6A  D7FE               	bra	u1437
  3362  000C6C  2E0C               	decfsz	??_goto_XY^0,f,c
  3363  000C6E  D7FC               	bra	u1437
  3364  000C70  D000               	nop2	
  3365  000C72                     
  3366                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  3367  000C72  C008  F004         	movff	goto_XY@lcd,lcd_cmd@lcd
  3368  000C76  C009  F005         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  3369  000C7A  C00E  F006         	movff	goto_XY@a,lcd_cmd@a
  3370  000C7E  EC88  F009         	call	_lcd_cmd	;wreg free
  3371                           
  3372                           ;lcd.c: 86:     }
  3373  000C82  EF76  F006         	goto	l74
  3374  000C86                     l1567:
  3375  000C86  0E02               	movlw	2
  3376  000C88  180A               	xorwf	goto_XY@x^0,w,c
  3377  000C8A  A4D8               	btfss	status,2,c
  3378  000C8C  EF4A  F006         	goto	u871
  3379  000C90  EF4C  F006         	goto	u870
  3380  000C94                     u871:
  3381  000C94  EF54  F006         	goto	l1579
  3382  000C98                     u870:
  3383  000C98                     
  3384                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  3385  000C98  500B               	movf	goto_XY@y^0,w,c
  3386  000C9A  0FBF               	addlw	191
  3387  000C9C  6E0F               	movwf	goto_XY@temp^0,c
  3388                           
  3389                           ;lcd.c: 90:        z = temp>>4;
  3390  000C9E  380F               	swapf	goto_XY@temp^0,w,c
  3391  000CA0  0B0F               	andlw	15
  3392  000CA2  6E0D               	movwf	goto_XY@z^0,c
  3393  000CA4  EF27  F006         	goto	l1559
  3394  000CA8                     l1579:
  3395  000CA8  0E03               	movlw	3
  3396  000CAA  180A               	xorwf	goto_XY@x^0,w,c
  3397  000CAC  A4D8               	btfss	status,2,c
  3398  000CAE  EF5B  F006         	goto	u881
  3399  000CB2  EF5D  F006         	goto	u880
  3400  000CB6                     u881:
  3401  000CB6  EF65  F006         	goto	l1591
  3402  000CBA                     u880:
  3403  000CBA                     
  3404                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  3405  000CBA  500B               	movf	goto_XY@y^0,w,c
  3406  000CBC  0F8F               	addlw	143
  3407  000CBE  6E0F               	movwf	goto_XY@temp^0,c
  3408                           
  3409                           ;lcd.c: 99:        z = temp>>4;
  3410  000CC0  380F               	swapf	goto_XY@temp^0,w,c
  3411  000CC2  0B0F               	andlw	15
  3412  000CC4  6E0D               	movwf	goto_XY@z^0,c
  3413  000CC6  EF27  F006         	goto	l1559
  3414  000CCA                     l1591:
  3415  000CCA  0E04               	movlw	4
  3416  000CCC  180A               	xorwf	goto_XY@x^0,w,c
  3417  000CCE  A4D8               	btfss	status,2,c
  3418  000CD0  EF6C  F006         	goto	u891
  3419  000CD4  EF6E  F006         	goto	u890
  3420  000CD8                     u891:
  3421  000CD8  EF76  F006         	goto	l70
  3422  000CDC                     u890:
  3423  000CDC                     
  3424                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  3425  000CDC  500B               	movf	goto_XY@y^0,w,c
  3426  000CDE  0FCF               	addlw	207
  3427  000CE0  6E0F               	movwf	goto_XY@temp^0,c
  3428                           
  3429                           ;lcd.c: 108:        z = temp>>4;
  3430  000CE2  380F               	swapf	goto_XY@temp^0,w,c
  3431  000CE4  0B0F               	andlw	15
  3432  000CE6  6E0D               	movwf	goto_XY@z^0,c
  3433  000CE8  EF27  F006         	goto	l1559
  3434  000CEC                     l70:
  3435  000CEC                     l74:
  3436  000CEC  0012               	return		;funcret
  3437  000CEE                     __end_of_goto_XY:
  3438                           	opt callstack 0
  3439                           
  3440 ;; *************** function _lcd_cmd *****************
  3441 ;; Defined at:
  3442 ;;		line 67 in file "lcd.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  lcd             2    3[COMRAM] PTR struct .
  3445 ;;		 -> PORTD(1), 
  3446 ;;  a               1    5[COMRAM] unsigned char 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3458 ;;      Params:         3       0       0       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0       0       0
  3460 ;;      Temps:          1       0       0       0       0       0       0
  3461 ;;      Totals:         4       0       0       0       0       0       0
  3462 ;;Total ram usage:        4 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    3
  3465 ;; This function calls:
  3466 ;;		_pulso
  3467 ;; This function is called by:
  3468 ;;		_goto_XY
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text16
  3473  001310                     __ptext16:
  3474                           	opt callstack 0
  3475  001310                     _lcd_cmd:
  3476                           	opt callstack 23
  3477  001310                     
  3478                           ;lcd.c: 68:     lcd->RS = 0;
  3479  001310  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3480  001314  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3481  001318  90DF               	bcf	indf2,0,c
  3482  00131A                     
  3483                           ;lcd.c: 69:     lcd->data = (a);
  3484  00131A  C006  F007         	movff	lcd_cmd@a,??_lcd_cmd
  3485  00131E  C004  FFD9         	movff	lcd_cmd@lcd,fsr2l
  3486  001322  C005  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  3487  001326  3A07               	swapf	??_lcd_cmd^0,f,c
  3488  001328  50DF               	movf	indf2,w,c
  3489  00132A  1807               	xorwf	??_lcd_cmd^0,w,c
  3490  00132C  0B0F               	andlw	-241
  3491  00132E  1807               	xorwf	??_lcd_cmd^0,w,c
  3492  001330  6EDF               	movwf	indf2,c
  3493  001332                     
  3494                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3495  001332  0E06               	movlw	6
  3496  001334  6E07               	movwf	??_lcd_cmd^0,c
  3497  001336  0E30               	movlw	48
  3498  001338                     u1447:
  3499  001338  2EE8               	decfsz	wreg,f,c
  3500  00133A  D7FE               	bra	u1447
  3501  00133C  2E07               	decfsz	??_lcd_cmd^0,f,c
  3502  00133E  D7FC               	bra	u1447
  3503  001340  D000               	nop2	
  3504  001342                     
  3505                           ;lcd.c: 72:     pulso(lcd);
  3506  001342  C004  F001         	movff	lcd_cmd@lcd,pulso@lcd
  3507  001346  C005  F002         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  3508  00134A  ECA8  F009         	call	_pulso	;wreg free
  3509  00134E  0012               	return		;funcret
  3510  001350                     __end_of_lcd_cmd:
  3511                           	opt callstack 0
  3512                           
  3513 ;; *************** function _function_set *****************
  3514 ;; Defined at:
  3515 ;;		line 21 in file "lcd.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  lcd             2    3[COMRAM] PTR struct .
  3518 ;;		 -> PORTD(1), 
  3519 ;;  data_lenght     1    5[COMRAM] unsigned char 
  3520 ;;  num_lines       1    6[COMRAM] unsigned char 
  3521 ;;  char_font       1    7[COMRAM] unsigned char 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3533 ;;      Params:         5       0       0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0
  3535 ;;      Temps:          3       0       0       0       0       0       0
  3536 ;;      Totals:         8       0       0       0       0       0       0
  3537 ;;Total ram usage:        8 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    3
  3540 ;; This function calls:
  3541 ;;		_pulso
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text17
  3548  000B58                     __ptext17:
  3549                           	opt callstack 0
  3550  000B58                     _function_set:
  3551                           	opt callstack 27
  3552  000B58                     
  3553                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  3554  000B58  C004  FFD9         	movff	function_set@lcd,fsr2l
  3555  000B5C  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3556  000B60  94DF               	bcf	indf2,2,c
  3557                           
  3558                           ;lcd.c: 24:     lcd->RS = 0;
  3559  000B62  C004  FFD9         	movff	function_set@lcd,fsr2l
  3560  000B66  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3561  000B6A  90DF               	bcf	indf2,0,c
  3562                           
  3563                           ;lcd.c: 25:     lcd->R_W = 0;
  3564  000B6C  C004  FFD9         	movff	function_set@lcd,fsr2l
  3565  000B70  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3566  000B74  92DF               	bcf	indf2,1,c
  3567  000B76                     
  3568                           ;lcd.c: 28:     lcd->data = 0x02;
  3569  000B76  C004  FFD9         	movff	function_set@lcd,fsr2l
  3570  000B7A  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3571  000B7E  50DF               	movf	indf2,w,c
  3572  000B80  0B0F               	andlw	-241
  3573  000B82  0920               	iorlw	32
  3574  000B84  6EDF               	movwf	indf2,c
  3575  000B86                     
  3576                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3577  000B86  0E06               	movlw	6
  3578  000B88  6E09               	movwf	??_function_set^0,c
  3579  000B8A  0E30               	movlw	48
  3580  000B8C                     u1457:
  3581  000B8C  2EE8               	decfsz	wreg,f,c
  3582  000B8E  D7FE               	bra	u1457
  3583  000B90  2E09               	decfsz	??_function_set^0,f,c
  3584  000B92  D7FC               	bra	u1457
  3585  000B94  D000               	nop2	
  3586  000B96                     
  3587                           ;lcd.c: 31:     pulso(lcd);
  3588  000B96  C004  F001         	movff	function_set@lcd,pulso@lcd
  3589  000B9A  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3590  000B9E  ECA8  F009         	call	_pulso	;wreg free
  3591  000BA2                     
  3592                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  3593  000BA2  C006  F009         	movff	function_set@data_lenght,??_function_set
  3594  000BA6  0E02               	movlw	2
  3595  000BA8  1209               	iorwf	??_function_set^0,f,c
  3596  000BAA  C004  FFD9         	movff	function_set@lcd,fsr2l
  3597  000BAE  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3598  000BB2  3A09               	swapf	??_function_set^0,f,c
  3599  000BB4  50DF               	movf	indf2,w,c
  3600  000BB6  1809               	xorwf	??_function_set^0,w,c
  3601  000BB8  0B0F               	andlw	-241
  3602  000BBA  1809               	xorwf	??_function_set^0,w,c
  3603  000BBC  6EDF               	movwf	indf2,c
  3604  000BBE                     
  3605                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3606  000BBE  0E06               	movlw	6
  3607  000BC0  6E09               	movwf	??_function_set^0,c
  3608  000BC2  0E30               	movlw	48
  3609  000BC4                     u1467:
  3610  000BC4  2EE8               	decfsz	wreg,f,c
  3611  000BC6  D7FE               	bra	u1467
  3612  000BC8  2E09               	decfsz	??_function_set^0,f,c
  3613  000BCA  D7FC               	bra	u1467
  3614  000BCC  D000               	nop2	
  3615  000BCE                     
  3616                           ;lcd.c: 37:     pulso(lcd);
  3617  000BCE  C004  F001         	movff	function_set@lcd,pulso@lcd
  3618  000BD2  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3619  000BD6  ECA8  F009         	call	_pulso	;wreg free
  3620  000BDA                     
  3621                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  3622  000BDA  C004  FFD9         	movff	function_set@lcd,fsr2l
  3623  000BDE  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3624  000BE2  38DF               	swapf	indf2,w,c
  3625  000BE4  0B0F               	andlw	15
  3626  000BE6  6E09               	movwf	??_function_set^0,c
  3627  000BE8  C008  F00A         	movff	function_set@char_font,??_function_set+1
  3628  000BEC  90D8               	bcf	status,0,c
  3629  000BEE  360A               	rlcf	(??_function_set+1)^0,f,c
  3630  000BF0  90D8               	bcf	status,0,c
  3631  000BF2  360A               	rlcf	(??_function_set+1)^0,f,c
  3632  000BF4  3807               	swapf	function_set@num_lines^0,w,c
  3633  000BF6  42E8               	rrncf	wreg,f,c
  3634  000BF8  0BF8               	andlw	248
  3635  000BFA  100A               	iorwf	(??_function_set+1)^0,w,c
  3636  000BFC  1009               	iorwf	??_function_set^0,w,c
  3637  000BFE  6E0B               	movwf	(??_function_set+2)^0,c
  3638  000C00  C004  FFD9         	movff	function_set@lcd,fsr2l
  3639  000C04  C005  FFDA         	movff	function_set@lcd+1,fsr2h
  3640  000C08  3A0B               	swapf	(??_function_set+2)^0,f,c
  3641  000C0A  50DF               	movf	indf2,w,c
  3642  000C0C  180B               	xorwf	(??_function_set+2)^0,w,c
  3643  000C0E  0B0F               	andlw	-241
  3644  000C10  180B               	xorwf	(??_function_set+2)^0,w,c
  3645  000C12  6EDF               	movwf	indf2,c
  3646  000C14                     
  3647                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3648  000C14  0E06               	movlw	6
  3649  000C16  6E09               	movwf	??_function_set^0,c
  3650  000C18  0E30               	movlw	48
  3651  000C1A                     u1477:
  3652  000C1A  2EE8               	decfsz	wreg,f,c
  3653  000C1C  D7FE               	bra	u1477
  3654  000C1E  2E09               	decfsz	??_function_set^0,f,c
  3655  000C20  D7FC               	bra	u1477
  3656  000C22  D000               	nop2	
  3657  000C24                     
  3658                           ;lcd.c: 44:     pulso(lcd);
  3659  000C24  C004  F001         	movff	function_set@lcd,pulso@lcd
  3660  000C28  C005  F002         	movff	function_set@lcd+1,pulso@lcd+1
  3661  000C2C  ECA8  F009         	call	_pulso	;wreg free
  3662  000C30  0012               	return		;funcret
  3663  000C32                     __end_of_function_set:
  3664                           	opt callstack 0
  3665                           
  3666 ;; *************** function _entry_mode_set *****************
  3667 ;; Defined at:
  3668 ;;		line 116 in file "lcd.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  lcd             2    3[COMRAM] PTR struct .
  3671 ;;		 -> PORTD(1), 
  3672 ;;  move_directi    1    5[COMRAM] unsigned char 
  3673 ;;  display_shif    1    6[COMRAM] unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3685 ;;      Params:         4       0       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0
  3687 ;;      Temps:          1       0       0       0       0       0       0
  3688 ;;      Totals:         5       0       0       0       0       0       0
  3689 ;;Total ram usage:        5 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		_pulso
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text18
  3700  00100C                     __ptext18:
  3701                           	opt callstack 0
  3702  00100C                     _entry_mode_set:
  3703                           	opt callstack 27
  3704  00100C                     
  3705                           ;lcd.c: 117:     lcd->E = 0;
  3706  00100C  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3707  001010  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3708  001014  94DF               	bcf	indf2,2,c
  3709                           
  3710                           ;lcd.c: 118:     lcd->RS = 0;
  3711  001016  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3712  00101A  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3713  00101E  90DF               	bcf	indf2,0,c
  3714                           
  3715                           ;lcd.c: 119:     lcd->R_W = 0;
  3716  001020  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3717  001024  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3718  001028  92DF               	bcf	indf2,1,c
  3719  00102A                     
  3720                           ;lcd.c: 121:     lcd->data = 0x00;
  3721  00102A  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3722  00102E  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3723  001032  0E0F               	movlw	-241
  3724  001034  16DF               	andwf	indf2,f,c
  3725  001036                     
  3726                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3727  001036  0E06               	movlw	6
  3728  001038  6E08               	movwf	??_entry_mode_set^0,c
  3729  00103A  0E30               	movlw	48
  3730  00103C                     u1487:
  3731  00103C  2EE8               	decfsz	wreg,f,c
  3732  00103E  D7FE               	bra	u1487
  3733  001040  2E08               	decfsz	??_entry_mode_set^0,f,c
  3734  001042  D7FC               	bra	u1487
  3735  001044  D000               	nop2	
  3736  001046                     
  3737                           ;lcd.c: 124:     pulso(lcd);
  3738  001046  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3739  00104A  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3740  00104E  ECA8  F009         	call	_pulso	;wreg free
  3741  001052                     
  3742                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  3743  001052  5006               	movf	entry_mode_set@move_direction^0,w,c
  3744  001054  2406               	addwf	entry_mode_set@move_direction^0,w,c
  3745  001056  1007               	iorwf	entry_mode_set@display_shift^0,w,c
  3746  001058  6E08               	movwf	??_entry_mode_set^0,c
  3747  00105A  0E04               	movlw	4
  3748  00105C  1208               	iorwf	??_entry_mode_set^0,f,c
  3749  00105E  C004  FFD9         	movff	entry_mode_set@lcd,fsr2l
  3750  001062  C005  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  3751  001066  3A08               	swapf	??_entry_mode_set^0,f,c
  3752  001068  50DF               	movf	indf2,w,c
  3753  00106A  1808               	xorwf	??_entry_mode_set^0,w,c
  3754  00106C  0B0F               	andlw	-241
  3755  00106E  1808               	xorwf	??_entry_mode_set^0,w,c
  3756  001070  6EDF               	movwf	indf2,c
  3757  001072                     
  3758                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3759  001072  0E06               	movlw	6
  3760  001074  6E08               	movwf	??_entry_mode_set^0,c
  3761  001076  0E30               	movlw	48
  3762  001078                     u1497:
  3763  001078  2EE8               	decfsz	wreg,f,c
  3764  00107A  D7FE               	bra	u1497
  3765  00107C  2E08               	decfsz	??_entry_mode_set^0,f,c
  3766  00107E  D7FC               	bra	u1497
  3767  001080  D000               	nop2	
  3768  001082                     
  3769                           ;lcd.c: 130:     pulso(lcd);
  3770  001082  C004  F001         	movff	entry_mode_set@lcd,pulso@lcd
  3771  001086  C005  F002         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  3772  00108A  ECA8  F009         	call	_pulso	;wreg free
  3773  00108E  0012               	return		;funcret
  3774  001090                     __end_of_entry_mode_set:
  3775                           	opt callstack 0
  3776                           
  3777 ;; *************** function _display_onoff_control *****************
  3778 ;; Defined at:
  3779 ;;		line 47 in file "lcd.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  lcd             2    3[COMRAM] PTR struct .
  3782 ;;		 -> PORTD(1), 
  3783 ;;  display_on      1    5[COMRAM] unsigned char 
  3784 ;;  cursor_on       1    6[COMRAM] unsigned char 
  3785 ;;  blink           1    7[COMRAM] unsigned char 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3797 ;;      Params:         5       0       0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0
  3799 ;;      Temps:          2       0       0       0       0       0       0
  3800 ;;      Totals:         7       0       0       0       0       0       0
  3801 ;;Total ram usage:        7 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    3
  3804 ;; This function calls:
  3805 ;;		_pulso
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text19
  3812  000F7E                     __ptext19:
  3813                           	opt callstack 0
  3814  000F7E                     _display_onoff_control:
  3815                           	opt callstack 27
  3816  000F7E                     
  3817                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  3818  000F7E  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3819  000F82  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3820  000F86  94DF               	bcf	indf2,2,c
  3821                           
  3822                           ;lcd.c: 50:     lcd->RS = 0;
  3823  000F88  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3824  000F8C  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3825  000F90  90DF               	bcf	indf2,0,c
  3826                           
  3827                           ;lcd.c: 51:     lcd->R_W = 0;
  3828  000F92  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3829  000F96  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3830  000F9A  92DF               	bcf	indf2,1,c
  3831  000F9C                     
  3832                           ;lcd.c: 54:     lcd->data = 0x00;
  3833  000F9C  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3834  000FA0  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3835  000FA4  0E0F               	movlw	-241
  3836  000FA6  16DF               	andwf	indf2,f,c
  3837  000FA8                     
  3838                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3839  000FA8  0E06               	movlw	6
  3840  000FAA  6E09               	movwf	??_display_onoff_control^0,c
  3841  000FAC  0E30               	movlw	48
  3842  000FAE                     u1507:
  3843  000FAE  2EE8               	decfsz	wreg,f,c
  3844  000FB0  D7FE               	bra	u1507
  3845  000FB2  2E09               	decfsz	??_display_onoff_control^0,f,c
  3846  000FB4  D7FC               	bra	u1507
  3847  000FB6  D000               	nop2	
  3848  000FB8                     
  3849                           ;lcd.c: 57:     pulso(lcd);
  3850  000FB8  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3851  000FBC  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3852  000FC0  ECA8  F009         	call	_pulso	;wreg free
  3853  000FC4                     
  3854                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  3855  000FC4  90D8               	bcf	status,0,c
  3856  000FC6  3407               	rlcf	display_onoff_control@cursor_on^0,w,c
  3857  000FC8  6E09               	movwf	??_display_onoff_control^0,c
  3858  000FCA  4406               	rlncf	display_onoff_control@display_on^0,w,c
  3859  000FCC  46E8               	rlncf	wreg,f,c
  3860  000FCE  0BFC               	andlw	252
  3861  000FD0  1009               	iorwf	??_display_onoff_control^0,w,c
  3862  000FD2  1008               	iorwf	display_onoff_control@blink^0,w,c
  3863  000FD4  6E0A               	movwf	(??_display_onoff_control+1)^0,c
  3864  000FD6  0E08               	movlw	8
  3865  000FD8  120A               	iorwf	(??_display_onoff_control+1)^0,f,c
  3866  000FDA  C004  FFD9         	movff	display_onoff_control@lcd,fsr2l
  3867  000FDE  C005  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  3868  000FE2  3A0A               	swapf	(??_display_onoff_control+1)^0,f,c
  3869  000FE4  50DF               	movf	indf2,w,c
  3870  000FE6  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3871  000FE8  0B0F               	andlw	-241
  3872  000FEA  180A               	xorwf	(??_display_onoff_control+1)^0,w,c
  3873  000FEC  6EDF               	movwf	indf2,c
  3874  000FEE                     
  3875                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3876  000FEE  0E06               	movlw	6
  3877  000FF0  6E09               	movwf	??_display_onoff_control^0,c
  3878  000FF2  0E30               	movlw	48
  3879  000FF4                     u1517:
  3880  000FF4  2EE8               	decfsz	wreg,f,c
  3881  000FF6  D7FE               	bra	u1517
  3882  000FF8  2E09               	decfsz	??_display_onoff_control^0,f,c
  3883  000FFA  D7FC               	bra	u1517
  3884  000FFC  D000               	nop2	
  3885  000FFE                     
  3886                           ;lcd.c: 64:     pulso(lcd);
  3887  000FFE  C004  F001         	movff	display_onoff_control@lcd,pulso@lcd
  3888  001002  C005  F002         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  3889  001006  ECA8  F009         	call	_pulso	;wreg free
  3890  00100A  0012               	return		;funcret
  3891  00100C                     __end_of_display_onoff_control:
  3892                           	opt callstack 0
  3893                           
  3894 ;; *************** function _pulso *****************
  3895 ;; Defined at:
  3896 ;;		line 11 in file "lcd.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  lcd             2    0[COMRAM] PTR struct .
  3899 ;;		 -> PORTD(1), 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, fsr2l, fsr2h
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3911 ;;      Params:         2       0       0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0
  3913 ;;      Temps:          1       0       0       0       0       0       0
  3914 ;;      Totals:         3       0       0       0       0       0       0
  3915 ;;Total ram usage:        3 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    2
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_function_set
  3922 ;;		_display_onoff_control
  3923 ;;		_lcd_cmd
  3924 ;;		_entry_mode_set
  3925 ;;		_clear_display
  3926 ;;		_return_home
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text20
  3931  001350                     __ptext20:
  3932                           	opt callstack 0
  3933  001350                     _pulso:
  3934                           	opt callstack 23
  3935  001350                     
  3936                           ;lcd.c: 13:     lcd->E = 1;
  3937  001350  C001  FFD9         	movff	pulso@lcd,fsr2l
  3938  001354  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  3939  001358  84DF               	bsf	indf2,2,c
  3940  00135A                     
  3941                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3942  00135A  0E06               	movlw	6
  3943  00135C  6E03               	movwf	??_pulso^0,c
  3944  00135E  0E30               	movlw	48
  3945  001360                     u1527:
  3946  001360  2EE8               	decfsz	wreg,f,c
  3947  001362  D7FE               	bra	u1527
  3948  001364  2E03               	decfsz	??_pulso^0,f,c
  3949  001366  D7FC               	bra	u1527
  3950  001368  D000               	nop2	
  3951  00136A                     
  3952                           ;lcd.c: 17:     lcd->E = 0;
  3953  00136A  C001  FFD9         	movff	pulso@lcd,fsr2l
  3954  00136E  C002  FFDA         	movff	pulso@lcd+1,fsr2h
  3955  001372  94DF               	bcf	indf2,2,c
  3956                           
  3957                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3958  001374  0E06               	movlw	6
  3959  001376  6E03               	movwf	??_pulso^0,c
  3960  001378  0E30               	movlw	48
  3961  00137A                     u1537:
  3962  00137A  2EE8               	decfsz	wreg,f,c
  3963  00137C  D7FE               	bra	u1537
  3964  00137E  2E03               	decfsz	??_pulso^0,f,c
  3965  001380  D7FC               	bra	u1537
  3966  001382  D000               	nop2	
  3967  001384  0012               	return		;funcret
  3968  001386                     __end_of_pulso:
  3969                           	opt callstack 0
  3970                           
  3971 ;; *************** function _int_handler *****************
  3972 ;; Defined at:
  3973 ;;		line 24 in file "main.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3987 ;;      Params:         0       0       0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0
  3990 ;;      Totals:         0       0       0       0       0       0       0
  3991 ;;Total ram usage:        0 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    1
  3994 ;; This function calls:
  3995 ;;		_le_entrada
  3996 ;; This function is called by:
  3997 ;;		Interrupt level 2
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	intcode
  4002  000008                     __pintcode:
  4003                           	opt callstack 0
  4004  000008                     _int_handler:
  4005                           	opt callstack 23
  4006                           
  4007                           ;incstack = 0
  4008  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4009  00000A  EDC3  F009         	call	int_func,f	;refresh shadow registers
  4010                           
  4011                           	psect	intcode_body
  4012  001386                     __pintcode_body:
  4013                           	opt callstack 23
  4014  001386                     int_func:
  4015                           	opt callstack 23
  4016  001386  0006               	pop		; remove dummy address from shadow register refresh
  4017  001388                     
  4018                           ;main.c: 25:     if(INTCONbits.TMR0IF == 1){
  4019  001388  A4F2               	btfss	242,2,c	;volatile
  4020  00138A  EFC9  F009         	goto	i2u84_41
  4021  00138E  EFCB  F009         	goto	i2u84_40
  4022  001392                     i2u84_41:
  4023  001392  EFD0  F009         	goto	i2l1487
  4024  001396                     i2u84_40:
  4025  001396                     
  4026                           ;main.c: 26:         TMR0L = 0x63;
  4027  001396  0E63               	movlw	99
  4028  001398  6ED6               	movwf	214,c	;volatile
  4029  00139A                     
  4030                           ;main.c: 27:         le_entrada();
  4031  00139A  EC55  F003         	call	_le_entrada	;wreg free
  4032  00139E                     
  4033                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  4034  00139E  94F2               	bcf	242,2,c	;volatile
  4035  0013A0                     i2l1487:
  4036                           
  4037                           ;main.c: 30:     if(INTCONbits.INT0IF == 1){
  4038  0013A0  A2F2               	btfss	242,1,c	;volatile
  4039  0013A2  EFD5  F009         	goto	i2u85_41
  4040  0013A6  EFD7  F009         	goto	i2u85_40
  4041  0013AA                     i2u85_41:
  4042  0013AA  EFD9  F009         	goto	i2l41
  4043  0013AE                     i2u85_40:
  4044  0013AE                     
  4045                           ;main.c: 31:         INTCONbits.INT0IF = 0;
  4046  0013AE  92F2               	bcf	242,1,c	;volatile
  4047  0013B0  00FF               	reset		;# 
  4048  0013B2                     i2l41:
  4049  0013B2  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4050  0013B4  0011               	retfie		f
  4051  0013B6                     __end_of_int_handler:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _le_entrada *****************
  4055 ;; Defined at:
  4056 ;;		line 12 in file "keyboard.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4070 ;;      Params:         0       0       0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0
  4073 ;;      Totals:         0       0       0       0       0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_int_handler
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text22
  4084  0006AA                     __ptext22:
  4085                           	opt callstack 0
  4086  0006AA                     _le_entrada:
  4087                           	opt callstack 23
  4088  0006AA                     
  4089                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  4090  0006AA  8E81               	bsf	129,7,c	;volatile
  4091                           
  4092                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB2==1) || cont_u > 50){
  4093  0006AC  B044               	btfsc	_botoes_ant^0,0,c
  4094  0006AE  EF5B  F003         	goto	i2u54_41
  4095  0006B2  EF5D  F003         	goto	i2u54_40
  4096  0006B6                     i2u54_41:
  4097  0006B6  EF64  F003         	goto	i2l1335
  4098  0006BA                     i2u54_40:
  4099  0006BA  B481               	btfsc	129,2,c	;volatile
  4100  0006BC  EF62  F003         	goto	i2u55_41
  4101  0006C0  EF64  F003         	goto	i2u55_40
  4102  0006C4                     i2u55_41:
  4103  0006C4  EF6C  F003         	goto	i2l114
  4104  0006C8                     i2u55_40:
  4105  0006C8                     i2l1335:
  4106  0006C8  0E32               	movlw	50
  4107  0006CA  6443               	cpfsgt	_cont_u^0,c
  4108  0006CC  EF6A  F003         	goto	i2u56_41
  4109  0006D0  EF6C  F003         	goto	i2u56_40
  4110  0006D4                     i2u56_41:
  4111  0006D4  EF72  F003         	goto	i2l112
  4112  0006D8                     i2u56_40:
  4113  0006D8                     i2l114:
  4114                           
  4115                           ;keyboard.c: 15:         botoes.U = 1;
  4116  0006D8  8045               	bsf	_botoes^0,0,c
  4117                           
  4118                           ;keyboard.c: 16:         botoes_ant.U = 1;
  4119  0006DA  8044               	bsf	_botoes_ant^0,0,c
  4120  0006DC                     i2l1337:
  4121                           
  4122                           ;keyboard.c: 17:         cont_u = 0;
  4123  0006DC  0E00               	movlw	0
  4124  0006DE  6E43               	movwf	_cont_u^0,c
  4125                           
  4126                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB2==0){
  4127  0006E0  EF8C  F003         	goto	i2l1347
  4128  0006E4                     i2l112:
  4129  0006E4  A044               	btfss	_botoes_ant^0,0,c
  4130  0006E6  EF77  F003         	goto	i2u57_41
  4131  0006EA  EF79  F003         	goto	i2u57_40
  4132  0006EE                     i2u57_41:
  4133  0006EE  EF84  F003         	goto	i2l118
  4134  0006F2                     i2u57_40:
  4135  0006F2  B481               	btfsc	129,2,c	;volatile
  4136  0006F4  EF7E  F003         	goto	i2u58_41
  4137  0006F8  EF80  F003         	goto	i2u58_40
  4138  0006FC                     i2u58_41:
  4139  0006FC  EF84  F003         	goto	i2l118
  4140  000700                     i2u58_40:
  4141  000700                     
  4142                           ;keyboard.c: 19:         botoes.U = 0;
  4143  000700  9045               	bcf	_botoes^0,0,c
  4144                           
  4145                           ;keyboard.c: 20:         botoes_ant.U = 0;
  4146  000702  9044               	bcf	_botoes_ant^0,0,c
  4147  000704  EF6E  F003         	goto	i2l1337
  4148  000708                     i2l118:
  4149  000708  A481               	btfss	129,2,c	;volatile
  4150  00070A  EF89  F003         	goto	i2u59_41
  4151  00070E  EF8B  F003         	goto	i2u59_40
  4152  000712                     i2u59_41:
  4153  000712  EF8C  F003         	goto	i2l1347
  4154  000716                     i2u59_40:
  4155  000716  2A43               	incf	_cont_u^0,f,c
  4156  000718                     i2l1347:
  4157                           
  4158                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  4159  000718  9E81               	bcf	129,7,c	;volatile
  4160  00071A                     
  4161                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  4162  00071A  8C81               	bsf	129,6,c	;volatile
  4163  00071C                     
  4164                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB1==1) || cont_l > 50){
  4165  00071C  B444               	btfsc	_botoes_ant^0,2,c
  4166  00071E  EF93  F003         	goto	i2u60_41
  4167  000722  EF95  F003         	goto	i2u60_40
  4168  000726                     i2u60_41:
  4169  000726  EF9C  F003         	goto	i2l1355
  4170  00072A                     i2u60_40:
  4171  00072A  B281               	btfsc	129,1,c	;volatile
  4172  00072C  EF9A  F003         	goto	i2u61_41
  4173  000730  EF9C  F003         	goto	i2u61_40
  4174  000734                     i2u61_41:
  4175  000734  EFA4  F003         	goto	i2l123
  4176  000738                     i2u61_40:
  4177  000738                     i2l1355:
  4178  000738  0E32               	movlw	50
  4179  00073A  6441               	cpfsgt	_cont_l^0,c
  4180  00073C  EFA2  F003         	goto	i2u62_41
  4181  000740  EFA4  F003         	goto	i2u62_40
  4182  000744                     i2u62_41:
  4183  000744  EFAA  F003         	goto	i2l121
  4184  000748                     i2u62_40:
  4185  000748                     i2l123:
  4186                           
  4187                           ;keyboard.c: 27:         botoes.L = 1;
  4188  000748  8445               	bsf	_botoes^0,2,c
  4189                           
  4190                           ;keyboard.c: 28:         botoes_ant.L = 1;
  4191  00074A  8444               	bsf	_botoes_ant^0,2,c
  4192  00074C                     i2l1357:
  4193                           
  4194                           ;keyboard.c: 29:         cont_l = 0;
  4195  00074C  0E00               	movlw	0
  4196  00074E  6E41               	movwf	_cont_l^0,c
  4197                           
  4198                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB1==0){
  4199  000750  EFC4  F003         	goto	i2l1367
  4200  000754                     i2l121:
  4201  000754  A444               	btfss	_botoes_ant^0,2,c
  4202  000756  EFAF  F003         	goto	i2u63_41
  4203  00075A  EFB1  F003         	goto	i2u63_40
  4204  00075E                     i2u63_41:
  4205  00075E  EFBC  F003         	goto	i2l127
  4206  000762                     i2u63_40:
  4207  000762  B281               	btfsc	129,1,c	;volatile
  4208  000764  EFB6  F003         	goto	i2u64_41
  4209  000768  EFB8  F003         	goto	i2u64_40
  4210  00076C                     i2u64_41:
  4211  00076C  EFBC  F003         	goto	i2l127
  4212  000770                     i2u64_40:
  4213  000770                     
  4214                           ;keyboard.c: 31:         botoes.L = 0;
  4215  000770  9445               	bcf	_botoes^0,2,c
  4216                           
  4217                           ;keyboard.c: 32:         botoes_ant.L = 0;
  4218  000772  9444               	bcf	_botoes_ant^0,2,c
  4219  000774  EFA6  F003         	goto	i2l1357
  4220  000778                     i2l127:
  4221  000778  A281               	btfss	129,1,c	;volatile
  4222  00077A  EFC1  F003         	goto	i2u65_41
  4223  00077E  EFC3  F003         	goto	i2u65_40
  4224  000782                     i2u65_41:
  4225  000782  EFC4  F003         	goto	i2l1367
  4226  000786                     i2u65_40:
  4227  000786  2A41               	incf	_cont_l^0,f,c
  4228  000788                     i2l1367:
  4229                           
  4230                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB3==1) || cont_r > 50){
  4231  000788  B644               	btfsc	_botoes_ant^0,3,c
  4232  00078A  EFC9  F003         	goto	i2u66_41
  4233  00078E  EFCB  F003         	goto	i2u66_40
  4234  000792                     i2u66_41:
  4235  000792  EFD2  F003         	goto	i2l1371
  4236  000796                     i2u66_40:
  4237  000796  B681               	btfsc	129,3,c	;volatile
  4238  000798  EFD0  F003         	goto	i2u67_41
  4239  00079C  EFD2  F003         	goto	i2u67_40
  4240  0007A0                     i2u67_41:
  4241  0007A0  EFDA  F003         	goto	i2l132
  4242  0007A4                     i2u67_40:
  4243  0007A4                     i2l1371:
  4244  0007A4  0E32               	movlw	50
  4245  0007A6  6440               	cpfsgt	_cont_r^0,c
  4246  0007A8  EFD8  F003         	goto	i2u68_41
  4247  0007AC  EFDA  F003         	goto	i2u68_40
  4248  0007B0                     i2u68_41:
  4249  0007B0  EFE0  F003         	goto	i2l130
  4250  0007B4                     i2u68_40:
  4251  0007B4                     i2l132:
  4252                           
  4253                           ;keyboard.c: 37:         botoes.R = 1;
  4254  0007B4  8645               	bsf	_botoes^0,3,c
  4255                           
  4256                           ;keyboard.c: 38:         botoes_ant.R = 1;
  4257  0007B6  8644               	bsf	_botoes_ant^0,3,c
  4258  0007B8                     i2l1373:
  4259                           
  4260                           ;keyboard.c: 39:         cont_r = 0;
  4261  0007B8  0E00               	movlw	0
  4262  0007BA  6E40               	movwf	_cont_r^0,c
  4263                           
  4264                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB3==0){
  4265  0007BC  EFFA  F003         	goto	i2l1383
  4266  0007C0                     i2l130:
  4267  0007C0  A644               	btfss	_botoes_ant^0,3,c
  4268  0007C2  EFE5  F003         	goto	i2u69_41
  4269  0007C6  EFE7  F003         	goto	i2u69_40
  4270  0007CA                     i2u69_41:
  4271  0007CA  EFF2  F003         	goto	i2l136
  4272  0007CE                     i2u69_40:
  4273  0007CE  B681               	btfsc	129,3,c	;volatile
  4274  0007D0  EFEC  F003         	goto	i2u70_41
  4275  0007D4  EFEE  F003         	goto	i2u70_40
  4276  0007D8                     i2u70_41:
  4277  0007D8  EFF2  F003         	goto	i2l136
  4278  0007DC                     i2u70_40:
  4279  0007DC                     
  4280                           ;keyboard.c: 41:         botoes.R = 0;
  4281  0007DC  9645               	bcf	_botoes^0,3,c
  4282                           
  4283                           ;keyboard.c: 42:         botoes_ant.R = 0;
  4284  0007DE  9644               	bcf	_botoes_ant^0,3,c
  4285  0007E0  EFDC  F003         	goto	i2l1373
  4286  0007E4                     i2l136:
  4287  0007E4  A681               	btfss	129,3,c	;volatile
  4288  0007E6  EFF7  F003         	goto	i2u71_41
  4289  0007EA  EFF9  F003         	goto	i2u71_40
  4290  0007EE                     i2u71_41:
  4291  0007EE  EFFA  F003         	goto	i2l1383
  4292  0007F2                     i2u71_40:
  4293  0007F2  2A40               	incf	_cont_r^0,f,c
  4294  0007F4                     i2l1383:
  4295                           
  4296                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  4297  0007F4  9C81               	bcf	129,6,c	;volatile
  4298  0007F6                     
  4299                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  4300  0007F6  8A81               	bsf	129,5,c	;volatile
  4301  0007F8                     
  4302                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB2==1) || cont_d > 50){
  4303  0007F8  B244               	btfsc	_botoes_ant^0,1,c
  4304  0007FA  EF01  F004         	goto	i2u72_41
  4305  0007FE  EF03  F004         	goto	i2u72_40
  4306  000802                     i2u72_41:
  4307  000802  EF0A  F004         	goto	i2l1391
  4308  000806                     i2u72_40:
  4309  000806  B481               	btfsc	129,2,c	;volatile
  4310  000808  EF08  F004         	goto	i2u73_41
  4311  00080C  EF0A  F004         	goto	i2u73_40
  4312  000810                     i2u73_41:
  4313  000810  EF12  F004         	goto	i2l141
  4314  000814                     i2u73_40:
  4315  000814                     i2l1391:
  4316  000814  0E32               	movlw	50
  4317  000816  6442               	cpfsgt	_cont_d^0,c
  4318  000818  EF10  F004         	goto	i2u74_41
  4319  00081C  EF12  F004         	goto	i2u74_40
  4320  000820                     i2u74_41:
  4321  000820  EF18  F004         	goto	i2l139
  4322  000824                     i2u74_40:
  4323  000824                     i2l141:
  4324                           
  4325                           ;keyboard.c: 49:         botoes.D = 1;
  4326  000824  8245               	bsf	_botoes^0,1,c
  4327                           
  4328                           ;keyboard.c: 50:         botoes_ant.D = 1;
  4329  000826  8244               	bsf	_botoes_ant^0,1,c
  4330  000828                     i2l1393:
  4331                           
  4332                           ;keyboard.c: 51:         cont_d = 0;
  4333  000828  0E00               	movlw	0
  4334  00082A  6E42               	movwf	_cont_d^0,c
  4335                           
  4336                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB2==0){
  4337  00082C  EF32  F004         	goto	i2l1403
  4338  000830                     i2l139:
  4339  000830  A244               	btfss	_botoes_ant^0,1,c
  4340  000832  EF1D  F004         	goto	i2u75_41
  4341  000836  EF1F  F004         	goto	i2u75_40
  4342  00083A                     i2u75_41:
  4343  00083A  EF2A  F004         	goto	i2l145
  4344  00083E                     i2u75_40:
  4345  00083E  B481               	btfsc	129,2,c	;volatile
  4346  000840  EF24  F004         	goto	i2u76_41
  4347  000844  EF26  F004         	goto	i2u76_40
  4348  000848                     i2u76_41:
  4349  000848  EF2A  F004         	goto	i2l145
  4350  00084C                     i2u76_40:
  4351  00084C                     
  4352                           ;keyboard.c: 53:         botoes.D = 0;
  4353  00084C  9245               	bcf	_botoes^0,1,c
  4354                           
  4355                           ;keyboard.c: 54:         botoes_ant.D = 0;
  4356  00084E  9244               	bcf	_botoes_ant^0,1,c
  4357  000850  EF14  F004         	goto	i2l1393
  4358  000854                     i2l145:
  4359  000854  A481               	btfss	129,2,c	;volatile
  4360  000856  EF2F  F004         	goto	i2u77_41
  4361  00085A  EF31  F004         	goto	i2u77_40
  4362  00085E                     i2u77_41:
  4363  00085E  EF32  F004         	goto	i2l1403
  4364  000862                     i2u77_40:
  4365  000862  2A42               	incf	_cont_d^0,f,c
  4366  000864                     i2l1403:
  4367                           
  4368                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  4369  000864  9A81               	bcf	129,5,c	;volatile
  4370  000866                     
  4371                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  4372  000866  8881               	bsf	129,4,c	;volatile
  4373  000868                     
  4374                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB1;
  4375  000868  A281               	btfss	129,1,c	;volatile
  4376  00086A  D002               	bra	i2u78_45
  4377  00086C  8845               	bsf	_botoes^0,4,c
  4378  00086E  D001               	bra	i2u78_47
  4379  000870                     i2u78_45:
  4380  000870  9845               	bcf	_botoes^0,4,c
  4381  000872                     i2u78_47:
  4382  000872                     
  4383                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB3;
  4384  000872  A681               	btfss	129,3,c	;volatile
  4385  000874  D002               	bra	i2u79_45
  4386  000876  8A45               	bsf	_botoes^0,5,c
  4387  000878  D001               	bra	i2u79_47
  4388  00087A                     i2u79_45:
  4389  00087A  9A45               	bcf	_botoes^0,5,c
  4390  00087C                     i2u79_47:
  4391  00087C                     
  4392                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  4393  00087C  9881               	bcf	129,4,c	;volatile
  4394  00087E  0012               	return		;funcret
  4395  000880                     __end_of_le_entrada:
  4396                           	opt callstack 0
  4397                           
  4398                           	psect	rparam
  4399  0000                     
  4400                           	psect	temp
  4401  000051                     btemp:
  4402                           	opt callstack 0
  4403  000051                     	ds	1
  4404  0000                     int$flags	set	btemp
  4405  0000                     wtemp8	set	btemp+1
  4406  0000                     ttemp5	set	btemp+1
  4407  0000                     ttemp6	set	btemp+4
  4408  0000                     ttemp7	set	btemp+8
  4409                           tosu	equ	0xFFF
  4410                           tosh	equ	0xFFE
  4411                           tosl	equ	0xFFD
  4412                           stkptr	equ	0xFFC
  4413                           pclatu	equ	0xFFB
  4414                           pclath	equ	0xFFA
  4415                           pcl	equ	0xFF9
  4416                           tblptru	equ	0xFF8
  4417                           tblptrh	equ	0xFF7
  4418                           tblptrl	equ	0xFF6
  4419                           tablat	equ	0xFF5
  4420                           prodh	equ	0xFF4
  4421                           prodl	equ	0xFF3
  4422                           indf0	equ	0xFEF
  4423                           postinc0	equ	0xFEE
  4424                           postdec0	equ	0xFED
  4425                           preinc0	equ	0xFEC
  4426                           plusw0	equ	0xFEB
  4427                           fsr0h	equ	0xFEA
  4428                           fsr0l	equ	0xFE9
  4429                           wreg	equ	0xFE8
  4430                           indf1	equ	0xFE7
  4431                           postinc1	equ	0xFE6
  4432                           postdec1	equ	0xFE5
  4433                           preinc1	equ	0xFE4
  4434                           plusw1	equ	0xFE3
  4435                           fsr1h	equ	0xFE2
  4436                           fsr1l	equ	0xFE1
  4437                           bsr	equ	0xFE0
  4438                           indf2	equ	0xFDF
  4439                           postinc2	equ	0xFDE
  4440                           postdec2	equ	0xFDD
  4441                           preinc2	equ	0xFDC
  4442                           plusw2	equ	0xFDB
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8


Data Sizes:
    Strings     265
    Constant    0
    Data        3
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     60      80
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), 
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[16]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    instrucoes@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    jogar@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    finaliza@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_jogar
    _menu->_print_mat
    _jogar->___awmod
    _srand->_time
    _rand->___omul
    ___awmod->_rand
    _instrucoes->_print_mat
    _finaliza->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48653
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   44245
                                             58 COMRAM     2     0      2
                           _creditos
                           _finaliza
                         _instrucoes
                              _jogar
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8546
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _jogar                                               18    16      2   10007
                                             40 COMRAM    18    16      2
                            ___awmod
                          _print_mat
                               _rand
                              _srand
                             _strcpy
                               _time
 ---------------------------------------------------------------------------------
 (3) _time                                                 8     0      8     120
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _srand                                                6     4      2      98
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _instrucoes                                           2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _finaliza                                             2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8502
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    3744
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    4660
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3     570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    3204
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _finaliza
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _instrucoes
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _jogar
       ___awmod
         _rand (ARG)
           ___omul
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _rand
         ___omul
       _srand
         _time (ARG)
       _strcpy
       _time
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3C      50       1       63.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      15        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 21:41:05 2020

                              _x 0050                                _y 003E  
         ?_display_onoff_control 0004                               l61 100A  
                             l70 0CEC                               l46 1104  
                             l55 1384                               l64 134E  
                             l58 0C30                               l74 0CEC  
                             l82 0A7A                               l77 108E  
                             l95 0E48                               _op 003F  
                    creditos@lcd 001A                      __CFG_OSC$HS 000000  
                            l202 123E                              l230 068E  
                            l216 0334                              l233 06A8  
                            l243 08F4                              l236 1164  
                            l239 1172                              l247 0992  
                            l183 0EE8                              l185 0F78  
                            l267 0EC6                              l196 11D0  
                            l268 0EE6                              l199 11DE  
                            l494 0D9C                              l926 13E2  
                            l935 130E                              l929 0B56  
                            l939 128A                              u900 0A6C  
                            u901 0A68                              u911 0E50  
                            u920 0E64                              u921 0E60  
                            u930 0EC6                              u931 0EC2  
                            u860 0C42                              u940 0E28  
                            u861 0C3E                              u941 0E24  
                            u870 0C98                              u950 0E48  
                            u871 0C94                              u951 0E44  
                            u880 0CBA                              u960 130E  
                            u881 0CB6                              u961 130A  
                            u890 0CDC                              u970 1252  
                            u891 0CD8                              u971 124E  
                            u980 0B48                              u990 0D00  
                            u991 0CFC                              u985 0B36  
                    finaliza@lcd 001A                              _lcd 004E  
                   ___awmod@sign 0028                              prod 000FF3  
                            wreg 000FE8                    write_char@lcd 0001  
                   __CFG_WDT$OFF 000000                             l2001 10AA  
                           l2011 10CA                             l2003 10AC  
                           l2013 10E2                             l2005 10AE  
                           l2015 10F6                             l2007 10B0  
                           l2017 10F8                             l2009 10B2  
                           l1611 09E4                             l1603 0994  
                           l1541 1350                             l1621 0A32  
                           l1613 0A10                             l1605 09B2  
                           l1701 0D34                             l1543 135A  
                           l1551 1332                             l1631 0A76  
                           l1623 0A3C                             l1615 0A14  
                           l1607 09D0                             l1711 0D70  
                           l1703 0D3C                             l1545 136A  
                           l1553 1342                             l1561 0C52  
                           l1625 0A46                             l1617 0A1E  
                           l1609 09DA                             l1713 0D76  
                           l1705 0D44                             l1641 0E96  
                           l1633 0E4A                             l1801 015E  
                           l1547 1310                             l1563 0C62  
                           l1555 0C32                             l1627 0A50  
                           l1619 0A28                             l1651 0DBA  
                           l1643 0D9E                             l1707 0D52  
                           l1715 0D7C                             l1635 0E56  
                           l1811 0224                             l1803 01D6  
                           l1731 0912                             l1723 0880  
                           l1549 131A                             l1581 0CBA  
                           l1565 0C72                             l1557 0C42  
                           l1629 0A6C                             l1661 0E0C  
                           l1717 0D8C                             l1709 0D68  
                           l1637 0E64                             l1901 05D8  
                           l1821 02D0                             l1813 0240  
                           l1805 01DA                             l1733 0926  
                           l1741 094A                             l1725 08D0  
                           l1591 0CCA                             l1559 0C4E  
                           l1567 0C86                             l1663 0E28  
                           l1719 0D94                             l1639 0E84  
                           l1671 1240                             l1911 0620  
                           l1903 05DA                             l1831 02FC  
                           l1823 02D2                             l1807 01F6  
                           l1815 0298                             l1743 0958  
                           l1735 0928                             l1727 08E4  
                           l1593 0CDC                             l1569 0C98  
                           l1665 0E2C                             l1657 0DC2  
                           l1649 0DA6                             l1921 1158  
                           l1681 0A7C                             l1673 1252  
                           l1913 0632                             l1905 05DC  
                           l1841 031A                             l1833 0300  
                           l1825 02E4                             l1817 02AC  
                           l1809 0220                             l1761 0052  
                           l1745 0968                             l1737 092A  
                           l1729 0902                             l1931 0B58  
                           l1579 0CA8                             l1659 0E08  
                           l1667 12D0                             l1923 1174  
                           l1691 0D00                             l1683 0B10  
                           l1675 127A                             l1915 0682  
                           l1851 035E                             l1843 032C  
                           l1835 0302                             l1827 02E8  
                           l1819 02BE                             l1907 0600  
                           l1771 00A2                             l1763 0052  
                           l1747 097C                             l1739 093E  
                           l1755 0984                             l1941 0BBE  
                           l1933 0B76                             l1669 12E0  
                           l1925 11C4                             l1693 0D08  
                           l1917 069C                             l1909 060E  
                           l1861 0414                             l1853 0390  
                           l1837 0314                             l1829 02EA  
                           l1845 0334                             l1781 00C6  
                           l1773 00A8                             l1765 0066  
                           l1757 0012                             l1749 097E  
                           l1951 0F7E                             l1943 0BCE  
                           l1935 0B86                             l1927 11E0  
                           l1919 1108                             l1695 0D0C  
                           l1687 0CEE                             l1679 13B6  
                           l1871 048A                             l1863 0416  
                           l1855 03E6                             l1847 0340  
                           l1839 0318                             l1783 00EA  
                           l1775 00AC                             l1767 007A  
                           l1759 004A                             l1961 0FEE  
                           l1953 0F9C                             l1945 0BDA  
                           l1937 0B96                             l1929 1230  
                           l1697 0D1A                             l1689 0CF2  
                           l1881 0508                             l1873 04D8  
                           l1857 03EE                             l1849 034E  
                           l1865 043A                             l1785 010E  
                           l1777 00B0                             l1769 008E  
                           l1963 0FFE                             l1955 0FA8  
                           l1971 1046                             l1947 0C14  
                           l1939 0BA2                             l1699 0D22  
                           l1891 0570                             l1875 04E0  
                           l1867 0448                             l1883 052C  
                           l1859 0412                             l1795 0156  
                           l1787 0138                             l1779 00C4  
                           l1957 0FB8                             l1973 1052  
                           l1965 100C                             l1949 0C24  
                           l1893 0572                             l1885 053A  
                           l1877 0504                             l1869 0458  
                           l1789 014E                             l1981 0EF4  
                           l1959 0FC4                             l1975 1072  
                           l1967 102A                             l1887 054A  
                           l1895 0596                             l1879 0506  
                           l1991 0F46                             l1983 0F04  
                           l1977 1082                             l1969 1036  
                           l1897 05A4                             l1889 056E  
                           l1993 0F56                             l1985 0F14  
                           l1899 05B4                             l1995 0F68  
                           l1987 0F24                             l1979 0EE8  
                           l1989 0F34                             l1997 1090  
                           l1999 10A8                             STR_1 7FCE  
                           STR_2 7FEE                             STR_3 7EF6  
                           STR_4 7EF6                             STR_5 7FBE  
                           STR_6 7EF6                             STR_7 7EF6  
                           STR_8 7EF6                             STR_9 7F28  
                           u1000 0D1A                             u1001 0D16  
                           u1010 0D34                             u1011 0D30  
                           u1020 0D52                             u1100 00EA  
                           u1021 0D4E                             u1101 00E6  
                           u1030 0D68                             u1110 014E  
                           u1031 0D64                             u1111 014A  
                           u1040 0D8C                             u1200 032C  
                           u1120 01F6                             u1041 0D88  
                           u1201 0328                             u1121 01F2  
                           u1210 034E                             u1130 0240  
                           u1050 0902                             u1211 034A  
                           u1131 023C                             u1051 08FE  
                           u1300 054A                             u1220 035E  
                           u1140 02AC                             u1060 0912  
                           u1301 0546                             u1221 035A  
                           u1141 02A8                             u1061 090E  
                           u1310 05A4                             u1230 0390  
                           u1150 02BE                             u1070 0958  
                           u1311 05A0                             u1231 038C  
                           u1151 02BA                             u1071 0954  
                           u1320 05B4                             u1240 03E6  
                           u1160 02D0                             u1080 0968  
                           u1400 0F24                             u1321 05B0  
                           u1241 03E2                             u1161 02CC  
                           u1081 0964                             u1401 0F20  
                           u1330 060E                             u1250 0448  
                           u1170 02E4                             u1090 0992  
                           u1410 0F46                             u1331 060A  
                           u1251 0444                             u1171 02E0  
                           u1091 098E                             u1411 0F42  
                           u1340 0620                             u1260 0458  
                           u1180 02FC                             u1420 0F68  
                           u1341 061C                             u1261 0454  
                           u1181 02F8                             u1421 0F64  
                           u1350 0632                             u1270 048A  
                           u1190 0314                             u1351 062E  
                           u1271 0486                             u1191 0310  
                           u1360 069C                             u1280 04D8  
                           u1361 0698                             u1281 04D4  
                           u1370 1172                             u1290 053A  
                           u1507 0FAE                             u1371 116E  
                           u1291 0536                             u1380 11DE  
                           u1517 0FF4                             u1437 0C68  
                           u1381 11DA                             u1390 0F04  
                           u1527 1360                             u1447 1338  
                           u1391 0F00                             u1537 137A  
                           u1457 0B8C                             u1467 0BC4  
                           u1477 0C1A                             u1487 103C  
                           u1497 1078                             i2l41 13B2  
                           _main 1090                             _menu 0880  
                           _rand 0A7C                             _seed 0046  
                           _time 1240                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0051                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
          function_set@num_lines 0007                     print_mat@lcd 0010  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                function_set@lcd 0004                            ?_main 0001  
                          ?_menu 001A                            ?_rand 0019  
                          STR_10 7EF5                            STR_11 7EF5  
                          STR_12 7EF5                            STR_20 7F9E  
                          STR_21 7F4A                            STR_13 7F39  
                          STR_22 7F7D                            STR_14 7F17  
                          STR_23 7F5B                            STR_15 7F06  
                          STR_16 7EF5                            STR_24 7F6C  
                          STR_17 7FDE                            STR_18 7F8E  
                          STR_19 7FAE                  __end_of___awmod 0D9E  
                          ?_time 0001                            _T0CON 000FD5  
                          i2l112 06E4                            i2l121 0754  
                          i2l130 07C0                            i2l114 06D8  
                          i2l123 0748                            i2l132 07B4  
                          i2l141 0824                            i2l118 0708  
                          i2l127 0778                            i2l136 07E4  
                          i2l145 0854                            i2l139 0830  
                          i2l148 087E                            _TMR0L 000FD6  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                   ?_int_handler 0001                  __end_of_lcd_cmd 1350  
                __end_of_goto_XY 0CEE                            _jogar 0012  
                          _srand 13B6                            _pulso 1350  
                          tablat 000FF5                            time@t 0001  
                          ttemp5 0052                            ttemp6 0055  
                          ttemp7 0059                            status 000FD8  
                          wtemp8 0052                  __initialization 128C  
                   __end_of_main 1108                     __end_of_menu 0994  
                   __end_of_rand 0B58                     __end_of_time 128C  
                         ??_main 003D                           ??_menu 001C  
                         ??_rand 001B                           ??_time 0009  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         ?_jogar 0029                           ?_srand 0009  
                         ?_pulso 0001                           i2l1401 0862  
                         i2l1411 087C                           i2l1403 0864  
                         i2l1331 06AA                           i2l1405 0866  
                         i2l1341 0700                           i2l1333 06BA  
                         i2l1407 0868                           i2l1351 071C  
                         i2l1335 06C8                           i2l1409 0872  
                         i2l1361 0770                           i2l1353 072A  
                         i2l1345 0716                           i2l1337 06DC  
                         i2l1371 07A4                           i2l1355 0738  
                         i2l1339 06F2                           i2l1347 0718  
                         i2l1381 07F2                           i2l1373 07B8  
                         i2l1365 0786                           i2l1357 074C  
                         i2l1349 071A                           i2l1391 0814  
                         i2l1375 07CE                           i2l1383 07F4  
                         i2l1359 0762                           i2l1367 0788  
                         i2l1393 0828                           i2l1385 07F6  
                         i2l1377 07DC                           i2l1369 0796  
                         i2l1481 1396                           i2l1395 083E  
                         i2l1387 07F8                           i2l1483 139A  
                         i2l1397 084C                           i2l1389 0806  
                         i2l1485 139E                           i2l1487 13A0  
                         i2l1479 1388                           i2l1489 13AE  
               __end_of_creditos 11E0                 __end_of_finaliza 1240  
                    goto_XY@temp 000F                           ___omul 0E4A  
                      ??___awmod 0027             __size_of_gerenciador 0096  
                         _cont_d 0042                           _cont_l 0041  
                         _cont_r 0040                           _cont_u 0043  
                         _botoes 0045                           clear_0 12B0  
                         clear_1 12BC                  ___awmod@divisor 0025  
                ___awmod@counter 0027                    ?_function_set 0004  
                      ??_lcd_cmd 0007                           _strcpy 12D0  
                         jogar@i 0039                           jogar@j 0037  
                      ??_goto_XY 000C                     __pdataCOMRAM 004E  
                   __mediumconst 7EF4                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         srand@s 0009         display_onoff_control@lcd 0004  
                     __accesstop 0080          __end_of__initialization 12C2  
                  ___rparam_used 000001          ??_display_onoff_control 0009  
                 __pcstackCOMRAM 0001                    __end_of_jogar 06AA  
                 gerenciador@lcd 003B                    __end_of_srand 13E4  
                  __end_of_pulso 1386                   ??_function_set 0009  
                        ??_jogar 002B                          ??_srand 000B  
           __size_of_int_handler 13AE                          ??_pulso 0003  
                     __pbssBANK0 0080                          ?___omul 0001  
            ___omul@multiplicand 0009                          ?_strcpy 0001  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 0007  
                        i2u60_40 072A                          i2u60_41 0726  
                        i2u61_40 0738                          i2u61_41 0734  
                        i2u70_40 07DC                          i2u62_40 0748  
                        i2u54_40 06BA                          i2u70_41 07D8  
                        i2u62_41 0744                          i2u54_41 06B6  
                        i2u71_40 07F2                          i2u63_40 0762  
                        i2u55_40 06C8                          i2u71_41 07EE  
                        i2u63_41 075E                          i2u55_41 06C4  
                        i2u72_40 0806                          i2u64_40 0770  
                        i2u56_40 06D8                          i2u72_41 0802  
                        i2u64_41 076C                          i2u56_41 06D4  
                        i2u73_40 0814                          i2u65_40 0786  
                        i2u57_40 06F2                          i2u73_41 0810  
                        i2u65_41 0782                          i2u57_41 06EE  
                        i2u74_40 0824                          i2u66_40 0796  
                        i2u58_40 0700                          i2u74_41 0820  
                        i2u66_41 0792                          i2u58_41 06FC  
                        i2u75_40 083E                          i2u67_40 07A4  
                        i2u59_40 0716                          i2u75_41 083A  
                        i2u67_41 07A0                          i2u59_41 0712  
                        i2u76_40 084C                          i2u68_40 07B4  
                        i2u84_40 1396                          i2u76_41 0848  
                        i2u68_41 07B0                          i2u84_41 1392  
                        i2u77_40 0862                          i2u69_40 07CE  
                        i2u85_40 13AE                          i2u77_41 085E  
                        i2u69_41 07CA                          i2u85_41 13AA  
                        i2u78_45 0870                          i2u78_47 0872  
                        i2u79_45 087A                          i2u79_47 087C  
                      ?_creditos 001A                       _le_entrada 06AA  
                      ?_finaliza 001A                       _botoes_ant 0044  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 0007                          __Lparam 0000  
                        ___awmod 0CEE                  __size_of___omul 009E  
                        __pcinit 128C                          __ramtop 0600  
                  instrucoes@lcd 001A                          __ptext0 1090  
                        __ptext1 0EE8                          __ptext2 0880  
                        __ptext3 0012                          __ptext4 1240  
                        __ptext5 13B6                          __ptext6 0A7C  
                        __ptext7 0E4A                          __ptext8 0CEE  
                        __ptext9 1108                          _lcd_cmd 1310  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 0C32                 ___awmod@dividend 0023  
                     ??_creditos 001C                       ??_finaliza 001C  
                 __pintcode_body 1386             end_of_initialization 12C2  
                     _instrucoes 1108                          menu@lcd 001A  
                 ___omul@product 0011             __end_of_function_set 0C32  
                  __Lmediumconst 7EF4                          int_func 1386  
              __end_of_print_mat 0E4A                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
                        strcpy@d 0007                          strcpy@s 0005  
                      _PORTBbits 000F81                       lcd_cmd@lcd 0004  
                    ?_le_entrada 0001                    ??_gerenciador 003D  
 __size_of_display_onoff_control 008E    __end_of_display_onoff_control 100C  
                 __end_of___omul 0EE8                       _write_char 0994  
                  __pidataCOMRAM 13E4                   __end_of_strcpy 1310  
            start_initialization 128C                      ?_instrucoes 001A  
                     jogar@bateu 0035                ___omul@multiplier 0001  
                 _entry_mode_set 100C                       goto_XY@lcd 0008  
                       ??___omul 0011              __size_of_le_entrada 01D6  
            __end_of_gerenciador 0F7E                         ??_strcpy 0005  
                    __pbssCOMRAM 003D                    ??_int_handler 0001  
          __size_of_function_set 00DA                __size_of_creditos 006C  
              __size_of_finaliza 0060           __end_of_entry_mode_set 1090  
                      __pintcode 0008                    __pmediumconst 7EF4  
                       ?___awmod 0023                      ?_write_char 0001  
            __size_of_instrucoes 006C                         ?_lcd_cmd 0004  
                   _function_set 0B58                         ?_goto_XY 0008  
                 __size_of_jogar 0698                   __size_of_srand 002E  
                 __size_of_pulso 0036              __end_of_int_handler 13B6  
                ?_entry_mode_set 0004                      _gerenciador 0EE8  
   entry_mode_set@move_direction 0006                        _print_mat 0D9E  
display_onoff_control@display_on 0006       display_onoff_control@blink 0008  
                    write_char@c 0003                       print_mat@i 0018  
                     print_mat@j 0016                     ??_le_entrada 0001  
            __size_of_write_char 00E8                         __Hrparam 0000  
                       __Lrparam 0000                entry_mode_set@lcd 0004  
               __size_of___awmod 00B0                       ?_print_mat 0010  
             __end_of_le_entrada 0880                 __size_of_lcd_cmd 0040  
               __size_of_goto_XY 00BC                      _int_handler 0008  
                       __ptext10 11E0                         __ptext11 1174  
                       __ptext20 1350                         __ptext12 12D0  
                       __ptext13 0D9E                         __ptext22 06AA  
                       __ptext14 0994                         __ptext15 0C32  
                       __ptext16 1310                         __ptext17 0B58  
                       __ptext18 100C                         __ptext19 0F7E  
                       _creditos 1174                         _finaliza 11E0  
                       _contador 003D                     ??_instrucoes 001C  
                     strcpy@dest 0001             jogar@linha_aleatoria 0033  
                       _mat_disp 0080                    __size_of_main 0078  
                  __size_of_menu 0114                    __size_of_rand 00DC  
                  __size_of_time 004C                         int$flags 0051  
                       lcd_cmd@a 0006            _display_onoff_control 0F7E  
             __end_of_instrucoes 1174                       _INTCONbits 000FF2  
                       jogar@lcd 0029                         goto_XY@a 000E  
                       goto_XY@x 000A                         goto_XY@y 000B  
                       goto_XY@z 000D                         intlevel2 0000  
                      strcpy@src 0003          function_set@data_lenght 0006  
                    ??_print_mat 0012                     ??_write_char 0004  
                       pulso@lcd 0001                 ??_entry_mode_set 0008  
          function_set@char_font 0008               __end_of_write_char 0A7C  
                   ?_gerenciador 003B  
