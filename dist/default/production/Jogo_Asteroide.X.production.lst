

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun 14 14:54:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4520 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000C48                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for instrucoes@F3108
    73  000C48  32                 	db	50
    74  000C49  2E                 	db	46
    75  000C4A  45                 	db	69
    76  000C4B  53                 	db	83
    77  000C4C  43                 	db	67
    78  000C4D  41                 	db	65
    79  000C4E  50                 	db	80
    80  000C4F  45                 	db	69
    81  000C50  20                 	db	32
    82  000C51  56                 	db	86
    83  000C52  4F                 	db	79
    84  000C53  4C                 	db	76
    85  000C54  54                 	db	84
    86  000C55  41                 	db	65
    87  000C56  00                 	db	0
    88  000C57  00                 	db	0
    89                           
    90                           ;initializer for instrucoes@F3105
    91  000C58  4E                 	db	78
    92  000C59  41                 	db	65
    93  000C5A  56                 	db	86
    94  000C5B  45                 	db	69
    95  000C5C  00                 	db	0
    96  000C5D  00                 	db	0
    97  000C5E  00                 	db	0
    98  000C5F  00                 	db	0
    99  000C60  00                 	db	0
   100  000C61  00                 	db	0
   101  000C62  00                 	db	0
   102  000C63  00                 	db	0
   103  000C64  00                 	db	0
   104  000C65  00                 	db	0
   105  000C66  00                 	db	0
   106  000C67  00                 	db	0
   107                           
   108                           ;initializer for instrucoes@F3102
   109  000C68  31                 	db	49
   110  000C69  2E                 	db	46
   111  000C6A  53                 	db	83
   112  000C6B  45                 	db	69
   113  000C6C  54                 	db	84
   114  000C6D  41                 	db	65
   115  000C6E  53                 	db	83
   116  000C6F  20                 	db	32
   117  000C70  4D                 	db	77
   118  000C71  4F                 	db	79
   119  000C72  56                 	db	86
   120  000C73  45                 	db	69
   121  000C74  4D                 	db	77
   122  000C75  20                 	db	32
   123  000C76  41                 	db	65
   124  000C77  00                 	db	0
   125                           
   126                           ;initializer for creditos@F3078
   127  000C78  32                 	db	50
   128  000C79  2E                 	db	46
   129  000C7A  47                 	db	71
   130  000C7B  45                 	db	69
   131  000C7C  4F                 	db	79
   132  000C7D  52                 	db	82
   133  000C7E  47                 	db	71
   134  000C7F  45                 	db	69
   135  000C80  20                 	db	32
   136  000C81  4E                 	db	78
   137  000C82  41                 	db	65
   138  000C83  52                 	db	82
   139  000C84  44                 	db	68
   140  000C85  45                 	db	69
   141  000C86  53                 	db	83
   142  000C87  00                 	db	0
   143                           
   144                           ;initializer for creditos@F3075
   145  000C88  31                 	db	49
   146  000C89  2E                 	db	46
   147  000C8A  44                 	db	68
   148  000C8B  49                 	db	73
   149  000C8C  4F                 	db	79
   150  000C8D  47                 	db	71
   151  000C8E  4F                 	db	79
   152  000C8F  20                 	db	32
   153  000C90  4D                 	db	77
   154  000C91  41                 	db	65
   155  000C92  52                 	db	82
   156  000C93  43                 	db	67
   157  000C94  48                 	db	72
   158  000C95  49                 	db	73
   159  000C96  00                 	db	0
   160  000C97  00                 	db	0
   161                           
   162                           ;initializer for _lcd
   163  000C98  83                 	db	131
   164  000C99  0F                 	db	15
   165                           
   166                           	psect	idataBANK0
   167  000DCE                     __pidataBANK0:
   168                           	opt callstack 0
   169                           
   170                           ;initializer for instrucoes@F3111
   171  000DCE  50                 	db	80
   172  000DCF  52                 	db	82
   173  000DD0  4F                 	db	79
   174  000DD1  20                 	db	32
   175  000DD2  4D                 	db	77
   176  000DD3  45                 	db	69
   177  000DD4  4E                 	db	78
   178  000DD5  55                 	db	85
   179  000DD6  00                 	db	0
   180  000DD7  00                 	db	0
   181  000DD8  00                 	db	0
   182  000DD9  00                 	db	0
   183  000DDA  00                 	db	0
   184  000DDB  00                 	db	0
   185  000DDC  00                 	db	0
   186  000DDD  00                 	db	0
   187  0000                     _PORTBbits	set	3969
   188  0000                     _T0CONbits	set	4053
   189  0000                     _T0CON	set	4053
   190  0000                     _TRISD	set	3989
   191  0000                     _PORTB	set	3969
   192  0000                     _TRISB	set	3987
   193  0000                     _ADCON1	set	4033
   194  0000                     _TMR0L	set	4054
   195  0000                     _INTCONbits	set	4082
   196  0000                     _PORTD	set	3971
   197                           
   198                           	psect	smallconst
   199  000600                     __psmallconst:
   200                           	opt callstack 0
   201  000600  00                 	db	0
   202  000601                     STR_1:
   203  000601  31                 	db	49	;'1'
   204  000602  2E                 	db	46
   205  000603  4A                 	db	74	;'J'
   206  000604  4F                 	db	79	;'O'
   207  000605  47                 	db	71	;'G'
   208  000606  41                 	db	65	;'A'
   209  000607  52                 	db	82	;'R'
   210  000608  2E                 	db	46
   211  000609  2E                 	db	46
   212  00060A  2E                 	db	46
   213  00060B  2E                 	db	46
   214  00060C  2E                 	db	46
   215  00060D  2E                 	db	46
   216  00060E  2E                 	db	46
   217  00060F  2E                 	db	46
   218  000610  00                 	db	0
   219  000611                     STR_3:
   220  000611  33                 	db	51	;'3'
   221  000612  2E                 	db	46
   222  000613  43                 	db	67	;'C'
   223  000614  52                 	db	82	;'R'
   224  000615  45                 	db	69	;'E'
   225  000616  44                 	db	68	;'D'
   226  000617  49                 	db	73	;'I'
   227  000618  54                 	db	84	;'T'
   228  000619  4F                 	db	79	;'O'
   229  00061A  53                 	db	83	;'S'
   230  00061B  2E                 	db	46
   231  00061C  2E                 	db	46
   232  00061D  2E                 	db	46
   233  00061E  2E                 	db	46
   234  00061F  2E                 	db	46
   235  000620  00                 	db	0
   236  000621                     STR_4:
   237  000621  34                 	db	52	;'4'
   238  000622  2E                 	db	46
   239  000623  46                 	db	70	;'F'
   240  000624  49                 	db	73	;'I'
   241  000625  4E                 	db	78	;'N'
   242  000626  41                 	db	65	;'A'
   243  000627  4C                 	db	76	;'L'
   244  000628  49                 	db	73	;'I'
   245  000629  5A                 	db	90	;'Z'
   246  00062A  41                 	db	65	;'A'
   247  00062B  52                 	db	82	;'R'
   248  00062C  2E                 	db	46
   249  00062D  2E                 	db	46
   250  00062E  2E                 	db	46
   251  00062F  2E                 	db	46
   252  000630  00                 	db	0
   253  000631                     STR_2:
   254  000631  32                 	db	50	;'2'
   255  000632  2E                 	db	46
   256  000633  49                 	db	73	;'I'
   257  000634  4E                 	db	78	;'N'
   258  000635  53                 	db	83	;'S'
   259  000636  54                 	db	84	;'T'
   260  000637  52                 	db	82	;'R'
   261  000638  55                 	db	85	;'U'
   262  000639  43                 	db	67	;'C'
   263  00063A  4F                 	db	79	;'O'
   264  00063B  45                 	db	69	;'E'
   265  00063C  53                 	db	83	;'S'
   266  00063D  2E                 	db	46
   267  00063E  2E                 	db	46
   268  00063F  2E                 	db	46
   269  000640  00                 	db	0
   270                           
   271                           ; #config settings
   272  000641  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           	psect	cinit
   275  000BE6                     __pcinit:
   276                           	opt callstack 0
   277  000BE6                     start_initialization:
   278                           	opt callstack 0
   279  000BE6                     __initialization:
   280                           	opt callstack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (16 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  000BE6  0ECE               	movlw	low __pidataBANK0
   285  000BE8  6EF6               	movwf	tblptrl,c
   286  000BEA  0E0D               	movlw	high __pidataBANK0
   287  000BEC  6EF7               	movwf	tblptrh,c
   288  000BEE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  000BF0  6EF8               	movwf	tblptru,c
   290  000BF2  EE00  F0C0         	lfsr	0,__pdataBANK0
   291  000BF6  EE10 F010          	lfsr	1,16
   292  000BFA                     copy_data0:
   293  000BFA  0009               	tblrd		*+
   294  000BFC  CFF5 FFEE          	movff	tablat,postinc0
   295  000C00  50E5               	movf	postdec1,w,c
   296  000C02  50E1               	movf	fsr1l,w,c
   297  000C04  E1FA               	bnz	copy_data0
   298                           
   299                           ; Initialize objects allocated to COMRAM (82 bytes)
   300                           ; load TBLPTR registers with __pidataCOMRAM
   301  000C06  0E48               	movlw	low __pidataCOMRAM
   302  000C08  6EF6               	movwf	tblptrl,c
   303  000C0A  0E0C               	movlw	high __pidataCOMRAM
   304  000C0C  6EF7               	movwf	tblptrh,c
   305  000C0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   306  000C10  6EF8               	movwf	tblptru,c
   307  000C12  EE00  F001         	lfsr	0,__pdataCOMRAM
   308  000C16  EE10 F052          	lfsr	1,82
   309  000C1A                     copy_data1:
   310  000C1A  0009               	tblrd		*+
   311  000C1C  CFF5 FFEE          	movff	tablat,postinc0
   312  000C20  50E5               	movf	postdec1,w,c
   313  000C22  50E1               	movf	fsr1l,w,c
   314  000C24  E1FA               	bnz	copy_data1
   315                           
   316                           ; Clear objects allocated to BANK0 (64 bytes)
   317  000C26  EE00  F080         	lfsr	0,__pbssBANK0
   318  000C2A  0E40               	movlw	64
   319  000C2C                     clear_0:
   320  000C2C  6AEE               	clrf	postinc0,c
   321  000C2E  06E8               	decf	wreg,f,c
   322  000C30  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to COMRAM (2 bytes)
   325  000C32  6A71               	clrf	(__pbssCOMRAM+1)& (0+255),c
   326  000C34  6A70               	clrf	__pbssCOMRAM& (0+255),c
   327  000C36                     end_of_initialization:
   328                           	opt callstack 0
   329  000C36                     __end_of__initialization:
   330                           	opt callstack 0
   331  000C36  9072               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   332  000C38  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   333  000C3A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   334  000C3C  6EF8               	movwf	tblptru,c
   335  000C3E  0E06               	movlw	high __Lsmallconst
   336  000C40  6EF7               	movwf	tblptrh,c
   337  000C42  0100               	movlb	0
   338  000C44  EFB9  F005         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341  000070                     __pbssCOMRAM:
   342                           	opt callstack 0
   343  000070                     _op:
   344                           	opt callstack 0
   345  000070                     	ds	1
   346  000071                     _botoes:
   347                           	opt callstack 0
   348  000071                     	ds	1
   349                           
   350                           	psect	dataCOMRAM
   351  000001                     __pdataCOMRAM:
   352                           	opt callstack 0
   353  000001                     instrucoes@F3108:
   354                           	opt callstack 0
   355  000001                     	ds	16
   356  000011                     instrucoes@F3105:
   357                           	opt callstack 0
   358  000011                     	ds	16
   359  000021                     instrucoes@F3102:
   360                           	opt callstack 0
   361  000021                     	ds	16
   362  000031                     creditos@F3078:
   363                           	opt callstack 0
   364  000031                     	ds	16
   365  000041                     creditos@F3075:
   366                           	opt callstack 0
   367  000041                     	ds	16
   368  000051                     _lcd:
   369                           	opt callstack 0
   370  000051                     	ds	2
   371                           
   372                           	psect	bssBANK0
   373  000080                     __pbssBANK0:
   374                           	opt callstack 0
   375  000080                     _mat_disp:
   376                           	opt callstack 0
   377  000080                     	ds	64
   378                           
   379                           	psect	dataBANK0
   380  0000C0                     __pdataBANK0:
   381                           	opt callstack 0
   382  0000C0                     instrucoes@F3111:
   383                           	opt callstack 0
   384  0000C0                     	ds	16
   385                           
   386                           	psect	cstackCOMRAM
   387  000053                     __pcstackCOMRAM:
   388                           	opt callstack 0
   389  000053                     pulso@lcd:
   390                           	opt callstack 0
   391  000053                     write_char@lcd:
   392                           	opt callstack 0
   393  000053                     strcpy@dest:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x0
   397  000053                     	ds	2
   398  000055                     ??_pulso:
   399  000055                     write_char@c:
   400                           	opt callstack 0
   401  000055                     strcpy@src:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405  000055                     	ds	1
   406  000056                     ??_write_char:
   407  000056                     function_set@lcd:
   408                           	opt callstack 0
   409  000056                     display_onoff_control@lcd:
   410                           	opt callstack 0
   411  000056                     lcd_cmd@lcd:
   412                           	opt callstack 0
   413  000056                     entry_mode_set@lcd:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x3
   417  000056                     	ds	1
   418  000057                     strcpy@s:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x4
   422  000057                     	ds	1
   423  000058                     function_set@data_lenght:
   424                           	opt callstack 0
   425  000058                     display_onoff_control@display_on:
   426                           	opt callstack 0
   427  000058                     lcd_cmd@a:
   428                           	opt callstack 0
   429  000058                     entry_mode_set@move_direction:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000058                     	ds	1
   434  000059                     ??_lcd_cmd:
   435  000059                     function_set@num_lines:
   436                           	opt callstack 0
   437  000059                     display_onoff_control@cursor_on:
   438                           	opt callstack 0
   439  000059                     entry_mode_set@display_shift:
   440                           	opt callstack 0
   441  000059                     strcpy@d:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x6
   445  000059                     	ds	1
   446  00005A                     ??_entry_mode_set:
   447  00005A                     function_set@char_font:
   448                           	opt callstack 0
   449  00005A                     display_onoff_control@blink:
   450                           	opt callstack 0
   451  00005A                     goto_XY@lcd:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x7
   455  00005A                     	ds	1
   456  00005B                     ??_function_set:
   457  00005B                     ??_display_onoff_control:
   458                           
   459                           ; 1 bytes @ 0x8
   460  00005B                     	ds	1
   461  00005C                     goto_XY@x:
   462                           	opt callstack 0
   463                           
   464                           ; 1 bytes @ 0x9
   465  00005C                     	ds	1
   466  00005D                     goto_XY@y:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0xA
   470  00005D                     	ds	1
   471  00005E                     ??_goto_XY:
   472                           
   473                           ; 1 bytes @ 0xB
   474  00005E                     	ds	1
   475  00005F                     goto_XY@z:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0xC
   479  00005F                     	ds	1
   480  000060                     goto_XY@a:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0xD
   484  000060                     	ds	1
   485  000061                     goto_XY@temp:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0xE
   489  000061                     	ds	1
   490  000062                     print_mat@lcd:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0xF
   494  000062                     	ds	2
   495  000064                     ??_print_mat:
   496                           
   497                           ; 1 bytes @ 0x11
   498  000064                     	ds	4
   499  000068                     print_mat@j:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x15
   503  000068                     	ds	2
   504  00006A                     print_mat@i:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x17
   508  00006A                     	ds	2
   509  00006C                     menu@lcd:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x19
   513  00006C                     	ds	2
   514  00006E                     gerenciador@lcd:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x1B
   518  00006E                     	ds	2
   519  000070                     
   520                           ; 1 bytes @ 0x1D
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   523 ;;
   524 ;; *************** function _main *****************
   525 ;; Defined at:
   526 ;;		line 33 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   540 ;;      Params:         0       0       0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels required when called:    8
   546 ;; This function calls:
   547 ;;		_display_onoff_control
   548 ;;		_entry_mode_set
   549 ;;		_function_set
   550 ;;		_gerenciador
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text0
   557  000B72                     __ptext0:
   558                           	opt callstack 0
   559  000B72                     _main:
   560                           	opt callstack 23
   561  000B72                     
   562                           ;main.c: 35:     ADCON1 = 0x0F;
   563  000B72  0E0F               	movlw	15
   564  000B74  6EC1               	movwf	193,c	;volatile
   565                           
   566                           ;main.c: 40:     TRISB = 0x0F;
   567  000B76  0E0F               	movlw	15
   568  000B78  6E93               	movwf	147,c	;volatile
   569                           
   570                           ;main.c: 43:     PORTB = 0x00;
   571  000B7A  0E00               	movlw	0
   572  000B7C  6E81               	movwf	129,c	;volatile
   573                           
   574                           ;main.c: 46:     TRISD = 0x00;
   575  000B7E  0E00               	movlw	0
   576  000B80  6E95               	movwf	149,c	;volatile
   577                           
   578                           ;main.c: 49:     T0CON = 0x47;
   579  000B82  0E47               	movlw	71
   580  000B84  6ED5               	movwf	213,c	;volatile
   581                           
   582                           ;main.c: 52:     TMR0L = 0x63;
   583  000B86  0E63               	movlw	99
   584  000B88  6ED6               	movwf	214,c	;volatile
   585  000B8A                     
   586                           ;main.c: 55:     INTCONbits.TMR0IF = 0;
   587  000B8A  94F2               	bcf	242,2,c	;volatile
   588  000B8C                     
   589                           ;main.c: 56:     INTCONbits.TMR0IE = 1;
   590  000B8C  8AF2               	bsf	242,5,c	;volatile
   591  000B8E                     
   592                           ;main.c: 57:     INTCONbits.GIE = 1;
   593  000B8E  8EF2               	bsf	242,7,c	;volatile
   594  000B90                     
   595                           ;main.c: 59:     function_set(lcd, 0, 1, 0);
   596  000B90  0E83               	movlw	131
   597  000B92  6E56               	movwf	function_set@lcd^0,c
   598  000B94  0E0F               	movlw	15
   599  000B96  6E57               	movwf	(function_set@lcd+1)^0,c
   600  000B98  0E00               	movlw	0
   601  000B9A  6E58               	movwf	function_set@data_lenght^0,c
   602  000B9C  0E01               	movlw	1
   603  000B9E  6E59               	movwf	function_set@num_lines^0,c
   604  000BA0  0E00               	movlw	0
   605  000BA2  6E5A               	movwf	function_set@char_font^0,c
   606  000BA4  EC0F  F004         	call	_function_set	;wreg free
   607  000BA8                     
   608                           ;main.c: 60:     display_onoff_control(lcd, 1, 1, 0);
   609  000BA8  0E83               	movlw	131
   610  000BAA  6E56               	movwf	display_onoff_control@lcd^0,c
   611  000BAC  0E0F               	movlw	15
   612  000BAE  6E57               	movwf	(display_onoff_control@lcd+1)^0,c
   613  000BB0  0E01               	movlw	1
   614  000BB2  6E58               	movwf	display_onoff_control@display_on^0,c
   615  000BB4  0E01               	movlw	1
   616  000BB6  6E59               	movwf	display_onoff_control@cursor_on^0,c
   617  000BB8  0E00               	movlw	0
   618  000BBA  6E5A               	movwf	display_onoff_control@blink^0,c
   619  000BBC  EC30  F005         	call	_display_onoff_control	;wreg free
   620  000BC0                     
   621                           ;main.c: 61:     entry_mode_set(lcd, 1,0);
   622  000BC0  0E83               	movlw	131
   623  000BC2  6E56               	movwf	entry_mode_set@lcd^0,c
   624  000BC4  0E0F               	movlw	15
   625  000BC6  6E57               	movwf	(entry_mode_set@lcd+1)^0,c
   626  000BC8  0E01               	movlw	1
   627  000BCA  6E58               	movwf	entry_mode_set@move_direction^0,c
   628  000BCC  0E00               	movlw	0
   629  000BCE  6E59               	movwf	entry_mode_set@display_shift^0,c
   630  000BD0  EC77  F005         	call	_entry_mode_set	;wreg free
   631  000BD4                     
   632                           ;main.c: 63:     T0CONbits.TMR0ON = 1;
   633  000BD4  8ED5               	bsf	213,7,c	;volatile
   634  000BD6                     
   635                           ;main.c: 65:     gerenciador(lcd);
   636  000BD6  0E83               	movlw	131
   637  000BD8  6E6E               	movwf	gerenciador@lcd^0,c
   638  000BDA  0E0F               	movlw	15
   639  000BDC  6E6F               	movwf	(gerenciador@lcd+1)^0,c
   640  000BDE  ECDE  F006         	call	_gerenciador	;wreg free
   641  000BE2  EF07  F000         	goto	start
   642  000BE6                     __end_of_main:
   643                           	opt callstack 0
   644                           
   645 ;; *************** function _gerenciador *****************
   646 ;; Defined at:
   647 ;;		line 15 in file "task_manager.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  lcd             2   27[COMRAM] PTR struct .
   650 ;;		 -> PORTD(1), 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   662 ;;      Params:         2       0       0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0       0       0
   665 ;;      Totals:         2       0       0       0       0       0       0
   666 ;;Total ram usage:        2 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    7
   669 ;; This function calls:
   670 ;;		_menu
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text1
   677  000DBC                     __ptext1:
   678                           	opt callstack 0
   679  000DBC                     _gerenciador:
   680                           	opt callstack 23
   681  000DBC                     
   682                           ;task_manager.c: 17:     menu(lcd);
   683  000DBC  C06E  F06C         	movff	gerenciador@lcd,menu@lcd
   684  000DC0  C06F  F06D         	movff	gerenciador@lcd+1,menu@lcd+1
   685  000DC4  EC21  F003         	call	_menu	;wreg free
   686  000DC8                     l131:
   687  000DC8  EFE4  F006         	goto	l131
   688  000DCC  0012               	return		;funcret
   689  000DCE                     __end_of_gerenciador:
   690                           	opt callstack 0
   691                           
   692 ;; *************** function _menu *****************
   693 ;; Defined at:
   694 ;;		line 126 in file "task_manager.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  lcd             2   25[COMRAM] PTR struct .
   697 ;;		 -> PORTD(1), 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      unsigned char 
   702 ;; Registers used:
   703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   709 ;;      Params:         2       0       0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0
   712 ;;      Totals:         2       0       0       0       0       0       0
   713 ;;Total ram usage:        2 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    6
   716 ;; This function calls:
   717 ;;		_print_mat
   718 ;;		_strcpy
   719 ;; This function is called by:
   720 ;;		_gerenciador
   721 ;;		_creditos
   722 ;;		_instrucoes
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text2
   727  000642                     __ptext2:
   728                           	opt callstack 0
   729  000642                     _menu:
   730                           	opt callstack 23
   731  000642                     
   732                           ;task_manager.c: 127:     strcpy(mat_disp[0], "1.JOGAR........");
   733  000642  0E80               	movlw	low _mat_disp
   734  000644  6E53               	movwf	strcpy@dest^0,c
   735  000646  0E00               	movlw	high _mat_disp
   736  000648  6E54               	movwf	(strcpy@dest+1)^0,c
   737  00064A  0E01               	movlw	low STR_1
   738  00064C  6E55               	movwf	strcpy@src^0,c
   739  00064E  0E06               	movlw	high STR_1
   740  000650  6E56               	movwf	(strcpy@src+1)^0,c
   741  000652  EC74  F006         	call	_strcpy	;wreg free
   742                           
   743                           ;task_manager.c: 128:     strcpy(mat_disp[1], "2.INSTRUCOES...");
   744  000656  0E90               	movlw	low (_mat_disp+16)
   745  000658  6E53               	movwf	strcpy@dest^0,c
   746  00065A  0E00               	movlw	high (_mat_disp+16)
   747  00065C  6E54               	movwf	(strcpy@dest+1)^0,c
   748  00065E  0E31               	movlw	low STR_2
   749  000660  6E55               	movwf	strcpy@src^0,c
   750  000662  0E06               	movlw	high STR_2
   751  000664  6E56               	movwf	(strcpy@src+1)^0,c
   752  000666  EC74  F006         	call	_strcpy	;wreg free
   753                           
   754                           ;task_manager.c: 129:     strcpy(mat_disp[2], "3.CREDITOS.....");
   755  00066A  0EA0               	movlw	low (_mat_disp+32)
   756  00066C  6E53               	movwf	strcpy@dest^0,c
   757  00066E  0E00               	movlw	high (_mat_disp+32)
   758  000670  6E54               	movwf	(strcpy@dest+1)^0,c
   759  000672  0E11               	movlw	low STR_3
   760  000674  6E55               	movwf	strcpy@src^0,c
   761  000676  0E06               	movlw	high STR_3
   762  000678  6E56               	movwf	(strcpy@src+1)^0,c
   763  00067A  EC74  F006         	call	_strcpy	;wreg free
   764                           
   765                           ;task_manager.c: 130:     strcpy(mat_disp[3], "4.FINALIZAR....");
   766  00067E  0EB0               	movlw	low (_mat_disp+48)
   767  000680  6E53               	movwf	strcpy@dest^0,c
   768  000682  0E00               	movlw	high (_mat_disp+48)
   769  000684  6E54               	movwf	(strcpy@dest+1)^0,c
   770  000686  0E21               	movlw	low STR_4
   771  000688  6E55               	movwf	strcpy@src^0,c
   772  00068A  0E06               	movlw	high STR_4
   773  00068C  6E56               	movwf	(strcpy@src+1)^0,c
   774  00068E  EC74  F006         	call	_strcpy	;wreg free
   775  000692                     l1423:
   776                           
   777                           ;task_manager.c: 131:     print_mat(lcd);
   778  000692  C06C  F062         	movff	menu@lcd,print_mat@lcd
   779  000696  C06D  F063         	movff	menu@lcd+1,print_mat@lcd+1
   780  00069A  ECDA  F004         	call	_print_mat	;wreg free
   781                           
   782                           ;task_manager.c: 134:     while(!botoes.Enter){
   783  00069E  EF93  F003         	goto	l1447
   784  0006A2                     l193:
   785                           
   786                           ;task_manager.c: 135:         if((botoes.U) && (op > 0)){
   787  0006A2  A071               	btfss	_botoes^0,0,c
   788  0006A4  EF56  F003         	goto	u501
   789  0006A8  EF58  F003         	goto	u500
   790  0006AC                     u501:
   791  0006AC  EF6C  F003         	goto	l1433
   792  0006B0                     u500:
   793  0006B0  5070               	movf	_op^0,w,c
   794  0006B2  B4D8               	btfsc	status,2,c
   795  0006B4  EF5E  F003         	goto	u511
   796  0006B8  EF60  F003         	goto	u510
   797  0006BC                     u511:
   798  0006BC  EF6C  F003         	goto	l1433
   799  0006C0                     u510:
   800  0006C0                     
   801                           ;task_manager.c: 136:             mat_disp[op][15] = '.';
   802  0006C0  5070               	movf	_op^0,w,c
   803  0006C2  0D10               	mullw	16
   804  0006C4  0E8F               	movlw	low (_mat_disp+15)
   805  0006C6  24F3               	addwf	243,w,c
   806  0006C8  6ED9               	movwf	fsr2l,c
   807  0006CA  0E00               	movlw	high (_mat_disp+15)
   808  0006CC  20F4               	addwfc	prodh,w,c
   809  0006CE  6EDA               	movwf	fsr2h,c
   810  0006D0  0E2E               	movlw	46
   811  0006D2  6EDF               	movwf	indf2,c
   812  0006D4                     
   813                           ;task_manager.c: 137:             op--;
   814  0006D4  0670               	decf	_op^0,f,c
   815  0006D6                     
   816                           ;task_manager.c: 138:             botoes.U = 0;
   817  0006D6  9071               	bcf	_botoes^0,0,c
   818  0006D8                     l1433:
   819                           
   820                           ;task_manager.c: 140:         if((botoes.D) && (op < 3)){
   821  0006D8  A271               	btfss	_botoes^0,1,c
   822  0006DA  EF71  F003         	goto	u521
   823  0006DE  EF73  F003         	goto	u520
   824  0006E2                     u521:
   825  0006E2  EF87  F003         	goto	l1443
   826  0006E6                     u520:
   827  0006E6  0E03               	movlw	3
   828  0006E8  6070               	cpfslt	_op^0,c
   829  0006EA  EF79  F003         	goto	u531
   830  0006EE  EF7B  F003         	goto	u530
   831  0006F2                     u531:
   832  0006F2  EF87  F003         	goto	l1443
   833  0006F6                     u530:
   834  0006F6                     
   835                           ;task_manager.c: 141:             mat_disp[op][15] = '.';
   836  0006F6  5070               	movf	_op^0,w,c
   837  0006F8  0D10               	mullw	16
   838  0006FA  0E8F               	movlw	low (_mat_disp+15)
   839  0006FC  24F3               	addwf	243,w,c
   840  0006FE  6ED9               	movwf	fsr2l,c
   841  000700  0E00               	movlw	high (_mat_disp+15)
   842  000702  20F4               	addwfc	prodh,w,c
   843  000704  6EDA               	movwf	fsr2h,c
   844  000706  0E2E               	movlw	46
   845  000708  6EDF               	movwf	indf2,c
   846  00070A                     
   847                           ;task_manager.c: 142:             op++;
   848  00070A  2A70               	incf	_op^0,f,c
   849  00070C                     
   850                           ;task_manager.c: 143:             botoes.D = 0;
   851  00070C  9271               	bcf	_botoes^0,1,c
   852  00070E                     l1443:
   853                           
   854                           ;task_manager.c: 145:         mat_disp[op][15] = '<';
   855  00070E  5070               	movf	_op^0,w,c
   856  000710  0D10               	mullw	16
   857  000712  0E8F               	movlw	low (_mat_disp+15)
   858  000714  24F3               	addwf	243,w,c
   859  000716  6ED9               	movwf	fsr2l,c
   860  000718  0E00               	movlw	high (_mat_disp+15)
   861  00071A  20F4               	addwfc	prodh,w,c
   862  00071C  6EDA               	movwf	fsr2h,c
   863  00071E  0E3C               	movlw	60
   864  000720  6EDF               	movwf	indf2,c
   865  000722  EF49  F003         	goto	l1423
   866  000726                     l1447:
   867                           
   868                           ;task_manager.c: 134:     while(!botoes.Enter){
   869  000726  A871               	btfss	_botoes^0,4,c
   870  000728  EF98  F003         	goto	u541
   871  00072C  EF9A  F003         	goto	u540
   872  000730                     u541:
   873  000730  EF51  F003         	goto	l193
   874  000734                     u540:
   875  000734  0012               	return		;funcret
   876  000736                     __end_of_menu:
   877                           	opt callstack 0
   878                           
   879 ;; *************** function _strcpy *****************
   880 ;; Defined at:
   881 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  dest            2    0[COMRAM] PTR unsigned char 
   884 ;;		 -> mat_disp(64), 
   885 ;;  src             2    2[COMRAM] PTR const unsigned char 
   886 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  d               2    6[COMRAM] PTR unsigned char 
   889 ;;		 -> mat_disp(64), 
   890 ;;  s               2    4[COMRAM] PTR const unsigned char 
   891 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  2    0[COMRAM] PTR unsigned char 
   894 ;; Registers used:
   895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   901 ;;      Params:         4       0       0       0       0       0       0
   902 ;;      Locals:         4       0       0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0
   904 ;;      Totals:         8       0       0       0       0       0       0
   905 ;;Total ram usage:        8 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    2
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_menu
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  000CE8                     __ptext3:
   917                           	opt callstack 0
   918  000CE8                     _strcpy:
   919                           	opt callstack 26
   920  000CE8  C055  F057         	movff	strcpy@src,strcpy@s
   921  000CEC  C056  F058         	movff	strcpy@src+1,strcpy@s+1
   922  000CF0  C053  F059         	movff	strcpy@dest,strcpy@d
   923  000CF4  C054  F05A         	movff	strcpy@dest+1,strcpy@d+1
   924  000CF8                     l1419:
   925  000CF8  C057  FFF6         	movff	strcpy@s,tblptrl
   926  000CFC  C058  FFF7         	movff	strcpy@s+1,tblptrh
   927  000D00  4A57               	infsnz	strcpy@s^0,f,c
   928  000D02  2A58               	incf	(strcpy@s+1)^0,f,c
   929  000D04                     	if	0	;tblptru may be non-zero
   930  000D04                     	endif
   931  000D04                     	if	0	;tblptru may be non-zero
   932  000D04                     	endif
   933  000D04  C059  FFD9         	movff	strcpy@d,fsr2l
   934  000D08  C05A  FFDA         	movff	strcpy@d+1,fsr2h
   935  000D0C  4A59               	infsnz	strcpy@d^0,f,c
   936  000D0E  2A5A               	incf	(strcpy@d+1)^0,f,c
   937  000D10  0008               	tblrd		*
   938  000D12  CFF5 FFDF          	movff	tablat,indf2
   939  000D16  50DF               	movf	indf2,w,c
   940  000D18  A4D8               	btfss	status,2,c
   941  000D1A  EF91  F006         	goto	u491
   942  000D1E  EF93  F006         	goto	u490
   943  000D22                     u491:
   944  000D22  EF7C  F006         	goto	l1419
   945  000D26                     u490:
   946  000D26  0012               	return		;funcret
   947  000D28                     __end_of_strcpy:
   948                           	opt callstack 0
   949                           
   950 ;; *************** function _print_mat *****************
   951 ;; Defined at:
   952 ;;		line 217 in file "lcd.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  lcd             2   15[COMRAM] PTR struct .
   955 ;;		 -> PORTD(1), 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  j               2   21[COMRAM] int 
   958 ;;  i               2   23[COMRAM] int 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   968 ;;      Params:         2       0       0       0       0       0       0
   969 ;;      Locals:         4       0       0       0       0       0       0
   970 ;;      Temps:          4       0       0       0       0       0       0
   971 ;;      Totals:        10       0       0       0       0       0       0
   972 ;;Total ram usage:       10 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    5
   975 ;; This function calls:
   976 ;;		_goto_XY
   977 ;;		_write_char
   978 ;; This function is called by:
   979 ;;		_menu
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text4
   984  0009B4                     __ptext4:
   985                           	opt callstack 0
   986  0009B4                     _print_mat:
   987                           	opt callstack 23
   988  0009B4                     
   989                           ;lcd.c: 218:     for(int i = 0; i<4; i++){
   990  0009B4  0E00               	movlw	0
   991  0009B6  6E6B               	movwf	(print_mat@i+1)^0,c
   992  0009B8  0E00               	movlw	0
   993  0009BA  6E6A               	movwf	print_mat@i^0,c
   994  0009BC                     l1399:
   995                           
   996                           ;lcd.c: 219:         goto_XY(lcd, i+1, 1);
   997  0009BC  C062  F05A         	movff	print_mat@lcd,goto_XY@lcd
   998  0009C0  C063  F05B         	movff	print_mat@lcd+1,goto_XY@lcd+1
   999  0009C4  286A               	incf	print_mat@i^0,w,c
  1000  0009C6  6E5C               	movwf	goto_XY@x^0,c
  1001  0009C8  0E01               	movlw	1
  1002  0009CA  6E5D               	movwf	goto_XY@y^0,c
  1003  0009CC  EC7C  F004         	call	_goto_XY	;wreg free
  1004  0009D0                     
  1005                           ;lcd.c: 220:         for(int j=0; j<16; j++)
  1006  0009D0  0E00               	movlw	0
  1007  0009D2  6E69               	movwf	(print_mat@j+1)^0,c
  1008  0009D4  0E00               	movlw	0
  1009  0009D6  6E68               	movwf	print_mat@j^0,c
  1010  0009D8                     l1407:
  1011                           
  1012                           ;lcd.c: 221:             write_char(lcd, mat_disp[i][j]);
  1013  0009D8  C062  F053         	movff	print_mat@lcd,write_char@lcd
  1014  0009DC  C063  F054         	movff	print_mat@lcd+1,write_char@lcd+1
  1015  0009E0  C06A  F064         	movff	print_mat@i,??_print_mat
  1016  0009E4  C06B  F065         	movff	print_mat@i+1,??_print_mat+1
  1017  0009E8  3A64               	swapf	??_print_mat^0,f,c
  1018  0009EA  3A65               	swapf	(??_print_mat+1)^0,f,c
  1019  0009EC  0EF0               	movlw	240
  1020  0009EE  1665               	andwf	(??_print_mat+1)^0,f,c
  1021  0009F0  5064               	movf	??_print_mat^0,w,c
  1022  0009F2  0B0F               	andlw	15
  1023  0009F4  1265               	iorwf	(??_print_mat+1)^0,f,c
  1024  0009F6  0EF0               	movlw	240
  1025  0009F8  1664               	andwf	??_print_mat^0,f,c
  1026  0009FA  0E80               	movlw	low _mat_disp
  1027  0009FC  6E66               	movwf	(??_print_mat+2)^0,c
  1028  0009FE  0E00               	movlw	high _mat_disp
  1029  000A00  6E67               	movwf	(??_print_mat+3)^0,c
  1030  000A02  5064               	movf	??_print_mat^0,w,c
  1031  000A04  2666               	addwf	(??_print_mat+2)^0,f,c
  1032  000A06  5065               	movf	(??_print_mat+1)^0,w,c
  1033  000A08  2267               	addwfc	(??_print_mat+3)^0,f,c
  1034  000A0A  5068               	movf	print_mat@j^0,w,c
  1035  000A0C  2466               	addwf	(??_print_mat+2)^0,w,c
  1036  000A0E  6ED9               	movwf	fsr2l,c
  1037  000A10  5069               	movf	(print_mat@j+1)^0,w,c
  1038  000A12  2067               	addwfc	(??_print_mat+3)^0,w,c
  1039  000A14  6EDA               	movwf	fsr2h,c
  1040  000A16  50DF               	movf	indf2,w,c
  1041  000A18  6E55               	movwf	write_char@c^0,c
  1042  000A1A  EC9B  F003         	call	_write_char	;wreg free
  1043  000A1E  4A68               	infsnz	print_mat@j^0,f,c
  1044  000A20  2A69               	incf	(print_mat@j+1)^0,f,c
  1045  000A22  BE69               	btfsc	(print_mat@j+1)^0,7,c
  1046  000A24  EF1D  F005         	goto	u471
  1047  000A28  5069               	movf	(print_mat@j+1)^0,w,c
  1048  000A2A  E109               	bnz	u470
  1049  000A2C  0E10               	movlw	16
  1050  000A2E  5C68               	subwf	print_mat@j^0,w,c
  1051  000A30  A0D8               	btfss	status,0,c
  1052  000A32  EF1D  F005         	goto	u471
  1053  000A36  EF1F  F005         	goto	u470
  1054  000A3A                     u471:
  1055  000A3A  EFEC  F004         	goto	l1407
  1056  000A3E                     u470:
  1057  000A3E                     
  1058                           ;lcd.c: 222:     }
  1059  000A3E  4A6A               	infsnz	print_mat@i^0,f,c
  1060  000A40  2A6B               	incf	(print_mat@i+1)^0,f,c
  1061  000A42  BE6B               	btfsc	(print_mat@i+1)^0,7,c
  1062  000A44  EF2D  F005         	goto	u481
  1063  000A48  506B               	movf	(print_mat@i+1)^0,w,c
  1064  000A4A  E109               	bnz	u480
  1065  000A4C  0E04               	movlw	4
  1066  000A4E  5C6A               	subwf	print_mat@i^0,w,c
  1067  000A50  A0D8               	btfss	status,0,c
  1068  000A52  EF2D  F005         	goto	u481
  1069  000A56  EF2F  F005         	goto	u480
  1070  000A5A                     u481:
  1071  000A5A  EFDE  F004         	goto	l1399
  1072  000A5E                     u480:
  1073  000A5E  0012               	return		;funcret
  1074  000A60                     __end_of_print_mat:
  1075                           	opt callstack 0
  1076                           
  1077 ;; *************** function _write_char *****************
  1078 ;; Defined at:
  1079 ;;		line 151 in file "lcd.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  lcd             2    0[COMRAM] PTR struct .
  1082 ;;		 -> PORTD(1), 
  1083 ;;  c               1    2[COMRAM] unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1095 ;;      Params:         3       0       0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0
  1097 ;;      Temps:          1       0       0       0       0       0       0
  1098 ;;      Totals:         4       0       0       0       0       0       0
  1099 ;;Total ram usage:        4 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    2
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_print_mat
  1106 ;;		_creditos
  1107 ;;		_jogar
  1108 ;;		_instrucoes
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text5
  1113  000736                     __ptext5:
  1114                           	opt callstack 0
  1115  000736                     _write_char:
  1116                           	opt callstack 25
  1117  000736                     
  1118                           ;lcd.c: 152:     lcd->E = 0;
  1119  000736  C053  FFD9         	movff	write_char@lcd,fsr2l
  1120  00073A  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1121  00073E  94DF               	bcf	indf2,2,c
  1122                           
  1123                           ;lcd.c: 153:     lcd->RS = 1;
  1124  000740  C053  FFD9         	movff	write_char@lcd,fsr2l
  1125  000744  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1126  000748  80DF               	bsf	indf2,0,c
  1127                           
  1128                           ;lcd.c: 154:     lcd->R_W = 0;
  1129  00074A  C053  FFD9         	movff	write_char@lcd,fsr2l
  1130  00074E  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1131  000752  92DF               	bcf	indf2,1,c
  1132  000754                     
  1133                           ;lcd.c: 157:     lcd->data = (c>>4);
  1134  000754  C055  F056         	movff	write_char@c,??_write_char
  1135  000758  3A56               	swapf	??_write_char^0,f,c
  1136  00075A  0E0F               	movlw	15
  1137  00075C  1656               	andwf	??_write_char^0,f,c
  1138  00075E  C053  FFD9         	movff	write_char@lcd,fsr2l
  1139  000762  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1140  000766  3A56               	swapf	??_write_char^0,f,c
  1141  000768  50DF               	movf	indf2,w,c
  1142  00076A  1856               	xorwf	??_write_char^0,w,c
  1143  00076C  0B0F               	andlw	-241
  1144  00076E  1856               	xorwf	??_write_char^0,w,c
  1145  000770  6EDF               	movwf	indf2,c
  1146  000772                     
  1147                           ;lcd.c: 158:     lcd->E = 1;
  1148  000772  C053  FFD9         	movff	write_char@lcd,fsr2l
  1149  000776  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1150  00077A  84DF               	bsf	indf2,2,c
  1151  00077C                     
  1152                           ;lcd.c: 159:     lcd->E = 0;
  1153  00077C  C053  FFD9         	movff	write_char@lcd,fsr2l
  1154  000780  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1155  000784  94DF               	bcf	indf2,2,c
  1156  000786                     
  1157                           ;lcd.c: 162:     lcd->data = (c);
  1158  000786  C055  F056         	movff	write_char@c,??_write_char
  1159  00078A  C053  FFD9         	movff	write_char@lcd,fsr2l
  1160  00078E  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1161  000792  3A56               	swapf	??_write_char^0,f,c
  1162  000794  50DF               	movf	indf2,w,c
  1163  000796  1856               	xorwf	??_write_char^0,w,c
  1164  000798  0B0F               	andlw	-241
  1165  00079A  1856               	xorwf	??_write_char^0,w,c
  1166  00079C  6EDF               	movwf	indf2,c
  1167                           
  1168                           ;lcd.c: 163:     lcd->E = 1;
  1169  00079E  C053  FFD9         	movff	write_char@lcd,fsr2l
  1170  0007A2  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1171  0007A6  84DF               	bsf	indf2,2,c
  1172                           
  1173                           ;lcd.c: 164:     lcd->E = 0;
  1174  0007A8  C053  FFD9         	movff	write_char@lcd,fsr2l
  1175  0007AC  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1176  0007B0  94DF               	bcf	indf2,2,c
  1177  0007B2                     
  1178                           ;lcd.c: 167:     TRISD = 0xF0;
  1179  0007B2  0EF0               	movlw	240
  1180  0007B4  6E95               	movwf	149,c	;volatile
  1181  0007B6                     
  1182                           ;lcd.c: 168:     lcd->RS = 0;
  1183  0007B6  C053  FFD9         	movff	write_char@lcd,fsr2l
  1184  0007BA  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1185  0007BE  90DF               	bcf	indf2,0,c
  1186  0007C0                     
  1187                           ;lcd.c: 169:     lcd->R_W = 1;
  1188  0007C0  C053  FFD9         	movff	write_char@lcd,fsr2l
  1189  0007C4  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1190  0007C8  82DF               	bsf	indf2,1,c
  1191  0007CA                     l1379:
  1192                           
  1193                           ;lcd.c: 171:        lcd->E = 1;
  1194  0007CA  C053  FFD9         	movff	write_char@lcd,fsr2l
  1195  0007CE  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1196  0007D2  84DF               	bsf	indf2,2,c
  1197  0007D4                     
  1198                           ;lcd.c: 172:        lcd->E = 0;
  1199  0007D4  C053  FFD9         	movff	write_char@lcd,fsr2l
  1200  0007D8  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1201  0007DC  94DF               	bcf	indf2,2,c
  1202  0007DE                     
  1203                           ;lcd.c: 173:        lcd->E = 1;
  1204  0007DE  C053  FFD9         	movff	write_char@lcd,fsr2l
  1205  0007E2  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1206  0007E6  84DF               	bsf	indf2,2,c
  1207  0007E8                     
  1208                           ;lcd.c: 174:        lcd->E = 0;
  1209  0007E8  C053  FFD9         	movff	write_char@lcd,fsr2l
  1210  0007EC  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1211  0007F0  94DF               	bcf	indf2,2,c
  1212  0007F2                     
  1213                           ;lcd.c: 175:     } while(lcd->data&0x08);
  1214  0007F2  C053  FFD9         	movff	write_char@lcd,fsr2l
  1215  0007F6  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1216  0007FA  38DF               	swapf	indf2,w,c
  1217  0007FC  0B0F               	andlw	15
  1218  0007FE  6E56               	movwf	??_write_char^0,c
  1219  000800  B656               	btfsc	??_write_char^0,3,c
  1220  000802  EF05  F004         	goto	u461
  1221  000806  EF07  F004         	goto	u460
  1222  00080A                     u461:
  1223  00080A  EFE5  F003         	goto	l1379
  1224  00080E                     u460:
  1225  00080E                     
  1226                           ;lcd.c: 176:     lcd->R_W = 0;
  1227  00080E  C053  FFD9         	movff	write_char@lcd,fsr2l
  1228  000812  C054  FFDA         	movff	write_char@lcd+1,fsr2h
  1229  000816  92DF               	bcf	indf2,1,c
  1230  000818                     
  1231                           ;lcd.c: 177:     TRISD = 0x00;
  1232  000818  0E00               	movlw	0
  1233  00081A  6E95               	movwf	149,c	;volatile
  1234  00081C  0012               	return		;funcret
  1235  00081E                     __end_of_write_char:
  1236                           	opt callstack 0
  1237                           
  1238 ;; *************** function _goto_XY *****************
  1239 ;; Defined at:
  1240 ;;		line 76 in file "lcd.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  lcd             2    7[COMRAM] PTR struct .
  1243 ;;		 -> PORTD(1), 
  1244 ;;  x               1    9[COMRAM] unsigned char 
  1245 ;;  y               1   10[COMRAM] unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  temp            1   14[COMRAM] unsigned char 
  1248 ;;  a               1   13[COMRAM] unsigned char 
  1249 ;;  z               1   12[COMRAM] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1259 ;;      Params:         4       0       0       0       0       0       0
  1260 ;;      Locals:         3       0       0       0       0       0       0
  1261 ;;      Temps:          1       0       0       0       0       0       0
  1262 ;;      Totals:         8       0       0       0       0       0       0
  1263 ;;Total ram usage:        8 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    4
  1266 ;; This function calls:
  1267 ;;		_lcd_cmd
  1268 ;; This function is called by:
  1269 ;;		_print_mat
  1270 ;;		_creditos
  1271 ;;		_jogar
  1272 ;;		_instrucoes
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text6
  1277  0008F8                     __ptext6:
  1278                           	opt callstack 0
  1279  0008F8                     _goto_XY:
  1280                           	opt callstack 23
  1281  0008F8                     
  1282                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  1283  0008F8  045C               	decf	goto_XY@x^0,w,c
  1284  0008FA  A4D8               	btfss	status,2,c
  1285  0008FC  EF82  F004         	goto	u421
  1286  000900  EF84  F004         	goto	u420
  1287  000904                     u421:
  1288  000904  EFA6  F004         	goto	l1327
  1289  000908                     u420:
  1290  000908                     
  1291                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  1292  000908  505D               	movf	goto_XY@y^0,w,c
  1293  00090A  0F7F               	addlw	127
  1294  00090C  6E61               	movwf	goto_XY@temp^0,c
  1295                           
  1296                           ;lcd.c: 81:        z = temp>>4;
  1297  00090E  3861               	swapf	goto_XY@temp^0,w,c
  1298  000910  0B0F               	andlw	15
  1299  000912  6E5F               	movwf	goto_XY@z^0,c
  1300  000914                     l1319:
  1301                           
  1302                           ;lcd.c: 82:        a = temp;
  1303  000914  C061  F060         	movff	goto_XY@temp,goto_XY@a
  1304  000918                     
  1305                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  1306  000918  C05A  F056         	movff	goto_XY@lcd,lcd_cmd@lcd
  1307  00091C  C05B  F057         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1308  000920  C05F  F058         	movff	goto_XY@z,lcd_cmd@a
  1309  000924  EC94  F006         	call	_lcd_cmd	;wreg free
  1310  000928                     
  1311                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  1312  000928  0E06               	movlw	6
  1313  00092A  6E5E               	movwf	??_goto_XY^0,c
  1314  00092C  0E30               	movlw	48
  1315  00092E                     u777:
  1316  00092E  2EE8               	decfsz	wreg,f,c
  1317  000930  D7FE               	bra	u777
  1318  000932  2E5E               	decfsz	??_goto_XY^0,f,c
  1319  000934  D7FC               	bra	u777
  1320  000936  D000               	nop2	
  1321  000938                     
  1322                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  1323  000938  C05A  F056         	movff	goto_XY@lcd,lcd_cmd@lcd
  1324  00093C  C05B  F057         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1325  000940  C060  F058         	movff	goto_XY@a,lcd_cmd@a
  1326  000944  EC94  F006         	call	_lcd_cmd	;wreg free
  1327                           
  1328                           ;lcd.c: 86:     }
  1329  000948  EFD9  F004         	goto	l73
  1330  00094C                     l1327:
  1331  00094C  0E02               	movlw	2
  1332  00094E  185C               	xorwf	goto_XY@x^0,w,c
  1333  000950  A4D8               	btfss	status,2,c
  1334  000952  EFAD  F004         	goto	u431
  1335  000956  EFAF  F004         	goto	u430
  1336  00095A                     u431:
  1337  00095A  EFB7  F004         	goto	l1339
  1338  00095E                     u430:
  1339  00095E                     
  1340                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  1341  00095E  505D               	movf	goto_XY@y^0,w,c
  1342  000960  0FBF               	addlw	191
  1343  000962  6E61               	movwf	goto_XY@temp^0,c
  1344                           
  1345                           ;lcd.c: 90:        z = temp>>4;
  1346  000964  3861               	swapf	goto_XY@temp^0,w,c
  1347  000966  0B0F               	andlw	15
  1348  000968  6E5F               	movwf	goto_XY@z^0,c
  1349  00096A  EF8A  F004         	goto	l1319
  1350  00096E                     l1339:
  1351  00096E  0E03               	movlw	3
  1352  000970  185C               	xorwf	goto_XY@x^0,w,c
  1353  000972  A4D8               	btfss	status,2,c
  1354  000974  EFBE  F004         	goto	u441
  1355  000978  EFC0  F004         	goto	u440
  1356  00097C                     u441:
  1357  00097C  EFC8  F004         	goto	l1351
  1358  000980                     u440:
  1359  000980                     
  1360                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  1361  000980  505D               	movf	goto_XY@y^0,w,c
  1362  000982  0F8F               	addlw	143
  1363  000984  6E61               	movwf	goto_XY@temp^0,c
  1364                           
  1365                           ;lcd.c: 99:        z = temp>>4;
  1366  000986  3861               	swapf	goto_XY@temp^0,w,c
  1367  000988  0B0F               	andlw	15
  1368  00098A  6E5F               	movwf	goto_XY@z^0,c
  1369  00098C  EF8A  F004         	goto	l1319
  1370  000990                     l1351:
  1371  000990  0E04               	movlw	4
  1372  000992  185C               	xorwf	goto_XY@x^0,w,c
  1373  000994  A4D8               	btfss	status,2,c
  1374  000996  EFCF  F004         	goto	u451
  1375  00099A  EFD1  F004         	goto	u450
  1376  00099E                     u451:
  1377  00099E  EFD9  F004         	goto	l69
  1378  0009A2                     u450:
  1379  0009A2                     
  1380                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  1381  0009A2  505D               	movf	goto_XY@y^0,w,c
  1382  0009A4  0FCF               	addlw	207
  1383  0009A6  6E61               	movwf	goto_XY@temp^0,c
  1384                           
  1385                           ;lcd.c: 108:        z = temp>>4;
  1386  0009A8  3861               	swapf	goto_XY@temp^0,w,c
  1387  0009AA  0B0F               	andlw	15
  1388  0009AC  6E5F               	movwf	goto_XY@z^0,c
  1389  0009AE  EF8A  F004         	goto	l1319
  1390  0009B2                     l69:
  1391  0009B2                     l73:
  1392  0009B2  0012               	return		;funcret
  1393  0009B4                     __end_of_goto_XY:
  1394                           	opt callstack 0
  1395                           
  1396 ;; *************** function _lcd_cmd *****************
  1397 ;; Defined at:
  1398 ;;		line 67 in file "lcd.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  lcd             2    3[COMRAM] PTR struct .
  1401 ;;		 -> PORTD(1), 
  1402 ;;  a               1    5[COMRAM] unsigned char 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1414 ;;      Params:         3       0       0       0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0       0       0
  1416 ;;      Temps:          1       0       0       0       0       0       0
  1417 ;;      Totals:         4       0       0       0       0       0       0
  1418 ;;Total ram usage:        4 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    3
  1421 ;; This function calls:
  1422 ;;		_pulso
  1423 ;; This function is called by:
  1424 ;;		_goto_XY
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text7
  1429  000D28                     __ptext7:
  1430                           	opt callstack 0
  1431  000D28                     _lcd_cmd:
  1432                           	opt callstack 23
  1433  000D28                     
  1434                           ;lcd.c: 68:     lcd->RS = 0;
  1435  000D28  C056  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1436  000D2C  C057  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1437  000D30  90DF               	bcf	indf2,0,c
  1438  000D32                     
  1439                           ;lcd.c: 69:     lcd->data = (a);
  1440  000D32  C058  F059         	movff	lcd_cmd@a,??_lcd_cmd
  1441  000D36  C056  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1442  000D3A  C057  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1443  000D3E  3A59               	swapf	??_lcd_cmd^0,f,c
  1444  000D40  50DF               	movf	indf2,w,c
  1445  000D42  1859               	xorwf	??_lcd_cmd^0,w,c
  1446  000D44  0B0F               	andlw	-241
  1447  000D46  1859               	xorwf	??_lcd_cmd^0,w,c
  1448  000D48  6EDF               	movwf	indf2,c
  1449  000D4A                     
  1450                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1451  000D4A  0E06               	movlw	6
  1452  000D4C  6E59               	movwf	??_lcd_cmd^0,c
  1453  000D4E  0E30               	movlw	48
  1454  000D50                     u787:
  1455  000D50  2EE8               	decfsz	wreg,f,c
  1456  000D52  D7FE               	bra	u787
  1457  000D54  2E59               	decfsz	??_lcd_cmd^0,f,c
  1458  000D56  D7FC               	bra	u787
  1459  000D58  D000               	nop2	
  1460  000D5A                     
  1461                           ;lcd.c: 72:     pulso(lcd);
  1462  000D5A  C056  F053         	movff	lcd_cmd@lcd,pulso@lcd
  1463  000D5E  C057  F054         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  1464  000D62  ECB4  F006         	call	_pulso	;wreg free
  1465  000D66  0012               	return		;funcret
  1466  000D68                     __end_of_lcd_cmd:
  1467                           	opt callstack 0
  1468                           
  1469 ;; *************** function _function_set *****************
  1470 ;; Defined at:
  1471 ;;		line 21 in file "lcd.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  lcd             2    3[COMRAM] PTR struct .
  1474 ;;		 -> PORTD(1), 
  1475 ;;  data_lenght     1    5[COMRAM] unsigned char 
  1476 ;;  num_lines       1    6[COMRAM] unsigned char 
  1477 ;;  char_font       1    7[COMRAM] unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1489 ;;      Params:         5       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0
  1491 ;;      Temps:          3       0       0       0       0       0       0
  1492 ;;      Totals:         8       0       0       0       0       0       0
  1493 ;;Total ram usage:        8 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    3
  1496 ;; This function calls:
  1497 ;;		_pulso
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text8
  1504  00081E                     __ptext8:
  1505                           	opt callstack 0
  1506  00081E                     _function_set:
  1507                           	opt callstack 27
  1508  00081E                     
  1509                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  1510  00081E  C056  FFD9         	movff	function_set@lcd,fsr2l
  1511  000822  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1512  000826  94DF               	bcf	indf2,2,c
  1513                           
  1514                           ;lcd.c: 24:     lcd->RS = 0;
  1515  000828  C056  FFD9         	movff	function_set@lcd,fsr2l
  1516  00082C  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1517  000830  90DF               	bcf	indf2,0,c
  1518                           
  1519                           ;lcd.c: 25:     lcd->R_W = 0;
  1520  000832  C056  FFD9         	movff	function_set@lcd,fsr2l
  1521  000836  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1522  00083A  92DF               	bcf	indf2,1,c
  1523  00083C                     
  1524                           ;lcd.c: 28:     lcd->data = 0x02;
  1525  00083C  C056  FFD9         	movff	function_set@lcd,fsr2l
  1526  000840  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1527  000844  50DF               	movf	indf2,w,c
  1528  000846  0B0F               	andlw	-241
  1529  000848  0920               	iorlw	32
  1530  00084A  6EDF               	movwf	indf2,c
  1531  00084C                     
  1532                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1533  00084C  0E06               	movlw	6
  1534  00084E  6E5B               	movwf	??_function_set^0,c
  1535  000850  0E30               	movlw	48
  1536  000852                     u797:
  1537  000852  2EE8               	decfsz	wreg,f,c
  1538  000854  D7FE               	bra	u797
  1539  000856  2E5B               	decfsz	??_function_set^0,f,c
  1540  000858  D7FC               	bra	u797
  1541  00085A  D000               	nop2	
  1542  00085C                     
  1543                           ;lcd.c: 31:     pulso(lcd);
  1544  00085C  C056  F053         	movff	function_set@lcd,pulso@lcd
  1545  000860  C057  F054         	movff	function_set@lcd+1,pulso@lcd+1
  1546  000864  ECB4  F006         	call	_pulso	;wreg free
  1547  000868                     
  1548                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  1549  000868  C058  F05B         	movff	function_set@data_lenght,??_function_set
  1550  00086C  0E02               	movlw	2
  1551  00086E  125B               	iorwf	??_function_set^0,f,c
  1552  000870  C056  FFD9         	movff	function_set@lcd,fsr2l
  1553  000874  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1554  000878  3A5B               	swapf	??_function_set^0,f,c
  1555  00087A  50DF               	movf	indf2,w,c
  1556  00087C  185B               	xorwf	??_function_set^0,w,c
  1557  00087E  0B0F               	andlw	-241
  1558  000880  185B               	xorwf	??_function_set^0,w,c
  1559  000882  6EDF               	movwf	indf2,c
  1560  000884                     
  1561                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1562  000884  0E06               	movlw	6
  1563  000886  6E5B               	movwf	??_function_set^0,c
  1564  000888  0E30               	movlw	48
  1565  00088A                     u807:
  1566  00088A  2EE8               	decfsz	wreg,f,c
  1567  00088C  D7FE               	bra	u807
  1568  00088E  2E5B               	decfsz	??_function_set^0,f,c
  1569  000890  D7FC               	bra	u807
  1570  000892  D000               	nop2	
  1571  000894                     
  1572                           ;lcd.c: 37:     pulso(lcd);
  1573  000894  C056  F053         	movff	function_set@lcd,pulso@lcd
  1574  000898  C057  F054         	movff	function_set@lcd+1,pulso@lcd+1
  1575  00089C  ECB4  F006         	call	_pulso	;wreg free
  1576  0008A0                     
  1577                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  1578  0008A0  C056  FFD9         	movff	function_set@lcd,fsr2l
  1579  0008A4  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1580  0008A8  38DF               	swapf	indf2,w,c
  1581  0008AA  0B0F               	andlw	15
  1582  0008AC  6E5B               	movwf	??_function_set^0,c
  1583  0008AE  C05A  F05C         	movff	function_set@char_font,??_function_set+1
  1584  0008B2  90D8               	bcf	status,0,c
  1585  0008B4  365C               	rlcf	(??_function_set+1)^0,f,c
  1586  0008B6  90D8               	bcf	status,0,c
  1587  0008B8  365C               	rlcf	(??_function_set+1)^0,f,c
  1588  0008BA  3859               	swapf	function_set@num_lines^0,w,c
  1589  0008BC  42E8               	rrncf	wreg,f,c
  1590  0008BE  0BF8               	andlw	248
  1591  0008C0  105C               	iorwf	(??_function_set+1)^0,w,c
  1592  0008C2  105B               	iorwf	??_function_set^0,w,c
  1593  0008C4  6E5D               	movwf	(??_function_set+2)^0,c
  1594  0008C6  C056  FFD9         	movff	function_set@lcd,fsr2l
  1595  0008CA  C057  FFDA         	movff	function_set@lcd+1,fsr2h
  1596  0008CE  3A5D               	swapf	(??_function_set+2)^0,f,c
  1597  0008D0  50DF               	movf	indf2,w,c
  1598  0008D2  185D               	xorwf	(??_function_set+2)^0,w,c
  1599  0008D4  0B0F               	andlw	-241
  1600  0008D6  185D               	xorwf	(??_function_set+2)^0,w,c
  1601  0008D8  6EDF               	movwf	indf2,c
  1602  0008DA                     
  1603                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1604  0008DA  0E06               	movlw	6
  1605  0008DC  6E5B               	movwf	??_function_set^0,c
  1606  0008DE  0E30               	movlw	48
  1607  0008E0                     u817:
  1608  0008E0  2EE8               	decfsz	wreg,f,c
  1609  0008E2  D7FE               	bra	u817
  1610  0008E4  2E5B               	decfsz	??_function_set^0,f,c
  1611  0008E6  D7FC               	bra	u817
  1612  0008E8  D000               	nop2	
  1613  0008EA                     
  1614                           ;lcd.c: 44:     pulso(lcd);
  1615  0008EA  C056  F053         	movff	function_set@lcd,pulso@lcd
  1616  0008EE  C057  F054         	movff	function_set@lcd+1,pulso@lcd+1
  1617  0008F2  ECB4  F006         	call	_pulso	;wreg free
  1618  0008F6  0012               	return		;funcret
  1619  0008F8                     __end_of_function_set:
  1620                           	opt callstack 0
  1621                           
  1622 ;; *************** function _entry_mode_set *****************
  1623 ;; Defined at:
  1624 ;;		line 116 in file "lcd.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  lcd             2    3[COMRAM] PTR struct .
  1627 ;;		 -> PORTD(1), 
  1628 ;;  move_directi    1    5[COMRAM] unsigned char 
  1629 ;;  display_shif    1    6[COMRAM] unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1641 ;;      Params:         4       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0
  1643 ;;      Temps:          1       0       0       0       0       0       0
  1644 ;;      Totals:         5       0       0       0       0       0       0
  1645 ;;Total ram usage:        5 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    3
  1648 ;; This function calls:
  1649 ;;		_pulso
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text9
  1656  000AEE                     __ptext9:
  1657                           	opt callstack 0
  1658  000AEE                     _entry_mode_set:
  1659                           	opt callstack 27
  1660  000AEE                     
  1661                           ;lcd.c: 117:     lcd->E = 0;
  1662  000AEE  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1663  000AF2  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1664  000AF6  94DF               	bcf	indf2,2,c
  1665                           
  1666                           ;lcd.c: 118:     lcd->RS = 0;
  1667  000AF8  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1668  000AFC  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1669  000B00  90DF               	bcf	indf2,0,c
  1670                           
  1671                           ;lcd.c: 119:     lcd->R_W = 0;
  1672  000B02  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1673  000B06  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1674  000B0A  92DF               	bcf	indf2,1,c
  1675  000B0C                     
  1676                           ;lcd.c: 121:     lcd->data = 0x00;
  1677  000B0C  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1678  000B10  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1679  000B14  0E0F               	movlw	-241
  1680  000B16  16DF               	andwf	indf2,f,c
  1681  000B18                     
  1682                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1683  000B18  0E06               	movlw	6
  1684  000B1A  6E5A               	movwf	??_entry_mode_set^0,c
  1685  000B1C  0E30               	movlw	48
  1686  000B1E                     u827:
  1687  000B1E  2EE8               	decfsz	wreg,f,c
  1688  000B20  D7FE               	bra	u827
  1689  000B22  2E5A               	decfsz	??_entry_mode_set^0,f,c
  1690  000B24  D7FC               	bra	u827
  1691  000B26  D000               	nop2	
  1692  000B28                     
  1693                           ;lcd.c: 124:     pulso(lcd);
  1694  000B28  C056  F053         	movff	entry_mode_set@lcd,pulso@lcd
  1695  000B2C  C057  F054         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1696  000B30  ECB4  F006         	call	_pulso	;wreg free
  1697  000B34                     
  1698                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  1699  000B34  5058               	movf	entry_mode_set@move_direction^0,w,c
  1700  000B36  2458               	addwf	entry_mode_set@move_direction^0,w,c
  1701  000B38  1059               	iorwf	entry_mode_set@display_shift^0,w,c
  1702  000B3A  6E5A               	movwf	??_entry_mode_set^0,c
  1703  000B3C  0E04               	movlw	4
  1704  000B3E  125A               	iorwf	??_entry_mode_set^0,f,c
  1705  000B40  C056  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1706  000B44  C057  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1707  000B48  3A5A               	swapf	??_entry_mode_set^0,f,c
  1708  000B4A  50DF               	movf	indf2,w,c
  1709  000B4C  185A               	xorwf	??_entry_mode_set^0,w,c
  1710  000B4E  0B0F               	andlw	-241
  1711  000B50  185A               	xorwf	??_entry_mode_set^0,w,c
  1712  000B52  6EDF               	movwf	indf2,c
  1713  000B54                     
  1714                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1715  000B54  0E06               	movlw	6
  1716  000B56  6E5A               	movwf	??_entry_mode_set^0,c
  1717  000B58  0E30               	movlw	48
  1718  000B5A                     u837:
  1719  000B5A  2EE8               	decfsz	wreg,f,c
  1720  000B5C  D7FE               	bra	u837
  1721  000B5E  2E5A               	decfsz	??_entry_mode_set^0,f,c
  1722  000B60  D7FC               	bra	u837
  1723  000B62  D000               	nop2	
  1724  000B64                     
  1725                           ;lcd.c: 130:     pulso(lcd);
  1726  000B64  C056  F053         	movff	entry_mode_set@lcd,pulso@lcd
  1727  000B68  C057  F054         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1728  000B6C  ECB4  F006         	call	_pulso	;wreg free
  1729  000B70  0012               	return		;funcret
  1730  000B72                     __end_of_entry_mode_set:
  1731                           	opt callstack 0
  1732                           
  1733 ;; *************** function _display_onoff_control *****************
  1734 ;; Defined at:
  1735 ;;		line 47 in file "lcd.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  lcd             2    3[COMRAM] PTR struct .
  1738 ;;		 -> PORTD(1), 
  1739 ;;  display_on      1    5[COMRAM] unsigned char 
  1740 ;;  cursor_on       1    6[COMRAM] unsigned char 
  1741 ;;  blink           1    7[COMRAM] unsigned char 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         5       0       0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0
  1755 ;;      Temps:          2       0       0       0       0       0       0
  1756 ;;      Totals:         7       0       0       0       0       0       0
  1757 ;;Total ram usage:        7 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    3
  1760 ;; This function calls:
  1761 ;;		_pulso
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text10
  1768  000A60                     __ptext10:
  1769                           	opt callstack 0
  1770  000A60                     _display_onoff_control:
  1771                           	opt callstack 27
  1772  000A60                     
  1773                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  1774  000A60  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1775  000A64  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1776  000A68  94DF               	bcf	indf2,2,c
  1777                           
  1778                           ;lcd.c: 50:     lcd->RS = 0;
  1779  000A6A  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1780  000A6E  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1781  000A72  90DF               	bcf	indf2,0,c
  1782                           
  1783                           ;lcd.c: 51:     lcd->R_W = 0;
  1784  000A74  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1785  000A78  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1786  000A7C  92DF               	bcf	indf2,1,c
  1787  000A7E                     
  1788                           ;lcd.c: 54:     lcd->data = 0x00;
  1789  000A7E  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1790  000A82  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1791  000A86  0E0F               	movlw	-241
  1792  000A88  16DF               	andwf	indf2,f,c
  1793  000A8A                     
  1794                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1795  000A8A  0E06               	movlw	6
  1796  000A8C  6E5B               	movwf	??_display_onoff_control^0,c
  1797  000A8E  0E30               	movlw	48
  1798  000A90                     u847:
  1799  000A90  2EE8               	decfsz	wreg,f,c
  1800  000A92  D7FE               	bra	u847
  1801  000A94  2E5B               	decfsz	??_display_onoff_control^0,f,c
  1802  000A96  D7FC               	bra	u847
  1803  000A98  D000               	nop2	
  1804  000A9A                     
  1805                           ;lcd.c: 57:     pulso(lcd);
  1806  000A9A  C056  F053         	movff	display_onoff_control@lcd,pulso@lcd
  1807  000A9E  C057  F054         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1808  000AA2  ECB4  F006         	call	_pulso	;wreg free
  1809  000AA6                     
  1810                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  1811  000AA6  90D8               	bcf	status,0,c
  1812  000AA8  3459               	rlcf	display_onoff_control@cursor_on^0,w,c
  1813  000AAA  6E5B               	movwf	??_display_onoff_control^0,c
  1814  000AAC  4458               	rlncf	display_onoff_control@display_on^0,w,c
  1815  000AAE  46E8               	rlncf	wreg,f,c
  1816  000AB0  0BFC               	andlw	252
  1817  000AB2  105B               	iorwf	??_display_onoff_control^0,w,c
  1818  000AB4  105A               	iorwf	display_onoff_control@blink^0,w,c
  1819  000AB6  6E5C               	movwf	(??_display_onoff_control+1)^0,c
  1820  000AB8  0E08               	movlw	8
  1821  000ABA  125C               	iorwf	(??_display_onoff_control+1)^0,f,c
  1822  000ABC  C056  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1823  000AC0  C057  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1824  000AC4  3A5C               	swapf	(??_display_onoff_control+1)^0,f,c
  1825  000AC6  50DF               	movf	indf2,w,c
  1826  000AC8  185C               	xorwf	(??_display_onoff_control+1)^0,w,c
  1827  000ACA  0B0F               	andlw	-241
  1828  000ACC  185C               	xorwf	(??_display_onoff_control+1)^0,w,c
  1829  000ACE  6EDF               	movwf	indf2,c
  1830  000AD0                     
  1831                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1832  000AD0  0E06               	movlw	6
  1833  000AD2  6E5B               	movwf	??_display_onoff_control^0,c
  1834  000AD4  0E30               	movlw	48
  1835  000AD6                     u857:
  1836  000AD6  2EE8               	decfsz	wreg,f,c
  1837  000AD8  D7FE               	bra	u857
  1838  000ADA  2E5B               	decfsz	??_display_onoff_control^0,f,c
  1839  000ADC  D7FC               	bra	u857
  1840  000ADE  D000               	nop2	
  1841  000AE0                     
  1842                           ;lcd.c: 64:     pulso(lcd);
  1843  000AE0  C056  F053         	movff	display_onoff_control@lcd,pulso@lcd
  1844  000AE4  C057  F054         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1845  000AE8  ECB4  F006         	call	_pulso	;wreg free
  1846  000AEC  0012               	return		;funcret
  1847  000AEE                     __end_of_display_onoff_control:
  1848                           	opt callstack 0
  1849                           
  1850 ;; *************** function _pulso *****************
  1851 ;; Defined at:
  1852 ;;		line 11 in file "lcd.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  lcd             2    0[COMRAM] PTR struct .
  1855 ;;		 -> PORTD(1), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr2l, fsr2h
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1867 ;;      Params:         2       0       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0
  1869 ;;      Temps:          1       0       0       0       0       0       0
  1870 ;;      Totals:         3       0       0       0       0       0       0
  1871 ;;Total ram usage:        3 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    2
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_function_set
  1878 ;;		_display_onoff_control
  1879 ;;		_lcd_cmd
  1880 ;;		_entry_mode_set
  1881 ;;		_waitFlag
  1882 ;;		_clear_display
  1883 ;;		_return_home
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text11
  1888  000D68                     __ptext11:
  1889                           	opt callstack 0
  1890  000D68                     _pulso:
  1891                           	opt callstack 23
  1892  000D68                     
  1893                           ;lcd.c: 13:     lcd->E = 1;
  1894  000D68  C053  FFD9         	movff	pulso@lcd,fsr2l
  1895  000D6C  C054  FFDA         	movff	pulso@lcd+1,fsr2h
  1896  000D70  84DF               	bsf	indf2,2,c
  1897  000D72                     
  1898                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1899  000D72  0E06               	movlw	6
  1900  000D74  6E55               	movwf	??_pulso^0,c
  1901  000D76  0E30               	movlw	48
  1902  000D78                     u867:
  1903  000D78  2EE8               	decfsz	wreg,f,c
  1904  000D7A  D7FE               	bra	u867
  1905  000D7C  2E55               	decfsz	??_pulso^0,f,c
  1906  000D7E  D7FC               	bra	u867
  1907  000D80  D000               	nop2	
  1908  000D82                     
  1909                           ;lcd.c: 17:     lcd->E = 0;
  1910  000D82  C053  FFD9         	movff	pulso@lcd,fsr2l
  1911  000D86  C054  FFDA         	movff	pulso@lcd+1,fsr2h
  1912  000D8A  94DF               	bcf	indf2,2,c
  1913                           
  1914                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1915  000D8C  0E06               	movlw	6
  1916  000D8E  6E55               	movwf	??_pulso^0,c
  1917  000D90  0E30               	movlw	48
  1918  000D92                     u877:
  1919  000D92  2EE8               	decfsz	wreg,f,c
  1920  000D94  D7FE               	bra	u877
  1921  000D96  2E55               	decfsz	??_pulso^0,f,c
  1922  000D98  D7FC               	bra	u877
  1923  000D9A  D000               	nop2	
  1924  000D9C  0012               	return		;funcret
  1925  000D9E                     __end_of_pulso:
  1926                           	opt callstack 0
  1927                           
  1928 ;; *************** function _int_handler *****************
  1929 ;; Defined at:
  1930 ;;		line 24 in file "main.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1944 ;;      Params:         0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    1
  1951 ;; This function calls:
  1952 ;;		_le_entrada
  1953 ;; This function is called by:
  1954 ;;		Interrupt level 2
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	intcode
  1959  000008                     __pintcode:
  1960                           	opt callstack 0
  1961  000008                     _int_handler:
  1962                           	opt callstack 23
  1963                           
  1964                           ;incstack = 0
  1965  000008  8272               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1966  00000A  EDCF  F006         	call	int_func,f	;refresh shadow registers
  1967                           
  1968                           	psect	intcode_body
  1969  000D9E                     __pintcode_body:
  1970                           	opt callstack 23
  1971  000D9E                     int_func:
  1972                           	opt callstack 23
  1973  000D9E  0006               	pop		; remove dummy address from shadow register refresh
  1974  000DA0                     
  1975                           ;main.c: 26:      if(INTCONbits.TMR0IF == 1){
  1976  000DA0  A4F2               	btfss	242,2,c	;volatile
  1977  000DA2  EFD5  F006         	goto	i2u20_41
  1978  000DA6  EFD7  F006         	goto	i2u20_40
  1979  000DAA                     i2u20_41:
  1980  000DAA  EFDC  F006         	goto	i2l40
  1981  000DAE                     i2u20_40:
  1982  000DAE                     
  1983                           ;main.c: 27:         TMR0L = 0x63;
  1984  000DAE  0E63               	movlw	99
  1985  000DB0  6ED6               	movwf	214,c	;volatile
  1986  000DB2                     
  1987                           ;main.c: 28:         le_entrada();
  1988  000DB2  EC4D  F006         	call	_le_entrada	;wreg free
  1989  000DB6                     
  1990                           ;main.c: 29:         INTCONbits.TMR0IF = 0;
  1991  000DB6  94F2               	bcf	242,2,c	;volatile
  1992  000DB8                     i2l40:
  1993  000DB8  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1994  000DBA  0011               	retfie		f
  1995  000DBC                     __end_of_int_handler:
  1996                           	opt callstack 0
  1997                           
  1998 ;; *************** function _le_entrada *****************
  1999 ;; Defined at:
  2000 ;;		line 4 in file "keyboard.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		None
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2014 ;;      Params:         0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_int_handler
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text13
  2028  000C9A                     __ptext13:
  2029                           	opt callstack 0
  2030  000C9A                     _le_entrada:
  2031                           	opt callstack 23
  2032  000C9A                     
  2033                           ;keyboard.c: 5:     PORTBbits.RB7 = 1;
  2034  000C9A  8E81               	bsf	129,7,c	;volatile
  2035                           
  2036                           ;keyboard.c: 6:     botoes.U = PORTBbits.RB1;
  2037  000C9C  A281               	btfss	129,1,c	;volatile
  2038  000C9E  D002               	bra	i2u14_45
  2039  000CA0  8071               	bsf	_botoes^0,0,c
  2040  000CA2  D001               	bra	i2u14_47
  2041  000CA4                     i2u14_45:
  2042  000CA4  9071               	bcf	_botoes^0,0,c
  2043  000CA6                     i2u14_47:
  2044                           
  2045                           ;keyboard.c: 7:     PORTBbits.RB7 = 0;
  2046  000CA6  9E81               	bcf	129,7,c	;volatile
  2047                           
  2048                           ;keyboard.c: 9:     PORTBbits.RB6 = 1;
  2049  000CA8  8C81               	bsf	129,6,c	;volatile
  2050                           
  2051                           ;keyboard.c: 10:     botoes.L = PORTBbits.RB0;
  2052  000CAA  A081               	btfss	129,0,c	;volatile
  2053  000CAC  D002               	bra	i2u15_45
  2054  000CAE  8471               	bsf	_botoes^0,2,c
  2055  000CB0  D001               	bra	i2u15_47
  2056  000CB2                     i2u15_45:
  2057  000CB2  9471               	bcf	_botoes^0,2,c
  2058  000CB4                     i2u15_47:
  2059                           
  2060                           ;keyboard.c: 11:     botoes.R = PORTBbits.RB2;
  2061  000CB4  A481               	btfss	129,2,c	;volatile
  2062  000CB6  D002               	bra	i2u16_45
  2063  000CB8  8671               	bsf	_botoes^0,3,c
  2064  000CBA  D001               	bra	i2u16_47
  2065  000CBC                     i2u16_45:
  2066  000CBC  9671               	bcf	_botoes^0,3,c
  2067  000CBE                     i2u16_47:
  2068                           
  2069                           ;keyboard.c: 12:     PORTBbits.RB6 = 0;
  2070  000CBE  9C81               	bcf	129,6,c	;volatile
  2071                           
  2072                           ;keyboard.c: 14:     PORTBbits.RB5 = 1;
  2073  000CC0  8A81               	bsf	129,5,c	;volatile
  2074                           
  2075                           ;keyboard.c: 15:     botoes.D = PORTBbits.RB1;
  2076  000CC2  A281               	btfss	129,1,c	;volatile
  2077  000CC4  D002               	bra	i2u17_45
  2078  000CC6  8271               	bsf	_botoes^0,1,c
  2079  000CC8  D001               	bra	i2u17_47
  2080  000CCA                     i2u17_45:
  2081  000CCA  9271               	bcf	_botoes^0,1,c
  2082  000CCC                     i2u17_47:
  2083                           
  2084                           ;keyboard.c: 16:     PORTBbits.RB5 = 0;
  2085  000CCC  9A81               	bcf	129,5,c	;volatile
  2086                           
  2087                           ;keyboard.c: 18:     PORTBbits.RB4 = 1;
  2088  000CCE  8881               	bsf	129,4,c	;volatile
  2089                           
  2090                           ;keyboard.c: 19:     botoes.Enter = PORTBbits.RB0;
  2091  000CD0  A081               	btfss	129,0,c	;volatile
  2092  000CD2  D002               	bra	i2u18_45
  2093  000CD4  8871               	bsf	_botoes^0,4,c
  2094  000CD6  D001               	bra	i2u18_47
  2095  000CD8                     i2u18_45:
  2096  000CD8  9871               	bcf	_botoes^0,4,c
  2097  000CDA                     i2u18_47:
  2098                           
  2099                           ;keyboard.c: 20:     botoes.Esc = PORTBbits.RB2;
  2100  000CDA  A481               	btfss	129,2,c	;volatile
  2101  000CDC  D002               	bra	i2u19_45
  2102  000CDE  8A71               	bsf	_botoes^0,5,c
  2103  000CE0  D001               	bra	i2u19_47
  2104  000CE2                     i2u19_45:
  2105  000CE2  9A71               	bcf	_botoes^0,5,c
  2106  000CE4                     i2u19_47:
  2107                           
  2108                           ;keyboard.c: 21:     PORTBbits.RB4 = 0;
  2109  000CE4  9881               	bcf	129,4,c	;volatile
  2110  000CE6  0012               	return		;funcret
  2111  000CE8                     __end_of_le_entrada:
  2112                           	opt callstack 0
  2113                           
  2114                           	psect	rparam
  2115  0000                     
  2116                           	psect	temp
  2117  000072                     btemp:
  2118                           	opt callstack 0
  2119  000072                     	ds	1
  2120  0000                     int$flags	set	btemp
  2121  0000                     wtemp8	set	btemp+1
  2122  0000                     ttemp5	set	btemp+1
  2123  0000                     ttemp6	set	btemp+4
  2124  0000                     ttemp7	set	btemp+8
  2125                           tosu	equ	0xFFF
  2126                           tosh	equ	0xFFE
  2127                           tosl	equ	0xFFD
  2128                           stkptr	equ	0xFFC
  2129                           pclatu	equ	0xFFB
  2130                           pclath	equ	0xFFA
  2131                           pcl	equ	0xFF9
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           indf0	equ	0xFEF
  2139                           postinc0	equ	0xFEE
  2140                           postdec0	equ	0xFED
  2141                           preinc0	equ	0xFEC
  2142                           plusw0	equ	0xFEB
  2143                           fsr0h	equ	0xFEA
  2144                           fsr0l	equ	0xFE9
  2145                           wreg	equ	0xFE8
  2146                           indf1	equ	0xFE7
  2147                           postinc1	equ	0xFE6
  2148                           postdec1	equ	0xFE5
  2149                           preinc1	equ	0xFE4
  2150                           plusw1	equ	0xFE3
  2151                           fsr1h	equ	0xFE2
  2152                           fsr1l	equ	0xFE1
  2153                           bsr	equ	0xFE0
  2154                           indf2	equ	0xFDF
  2155                           postinc2	equ	0xFDE
  2156                           postdec2	equ	0xFDD
  2157                           preinc2	equ	0xFDC
  2158                           plusw2	equ	0xFDB
  2159                           fsr2h	equ	0xFDA
  2160                           fsr2l	equ	0xFD9
  2161                           status	equ	0xFD8


Data Sizes:
    Strings     64
    Constant    0
    Data        98
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     29     113
    BANK0           128      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_menu
    _menu->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13334
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2    8698
                                             27 COMRAM     2     0      2
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8600
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4     704
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    7624
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3    1938
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    5332
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2336
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1622
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1458
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1556
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2    1032
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      50       5       62.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1D      71       1       89.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1      15        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun 14 14:54:45 2020

         ?_display_onoff_control 0056                               l60 0AEC  
                             l45 0BE2                               l54 0D9C  
                             l63 0D66                               l57 08F6  
                             l73 09B2                               l76 0B70  
                             l69 09B2                               l86 081C  
                             l99 0A5E                               _op 0070  
                    __CFG_OSC$HS 000000                              l131 0DC8  
                            l132 0DC8                              l193 06A2  
                            l197 0734                              l877 0D26  
                            u420 0908                              u500 06B0  
                            u421 0904                              u501 06AC  
                            u430 095E                              u510 06C0  
                            u431 095A                              u511 06BC  
                            u440 0980                              u520 06E6  
                            u441 097C                              u521 06E2  
                            u450 09A2                              u530 06F6  
                            u451 099E                              u531 06F2  
                            u460 080E                              u540 0734  
                            u461 080A                              u541 0730  
                            u470 0A3E                              u471 0A3A  
                            u480 0A5E                              u481 0A5A  
                            u490 0D26                              u491 0D22  
                            u807 088A                              u817 08E0  
                            u827 0B1E                              u837 0B5A  
                            u847 0A90                              u857 0AD6  
                            u777 092E                              u867 0D78  
                            u787 0D50                              u877 0D92  
                            u797 0852                              _lcd 0051  
                            prod 000FF3                              wreg 000FE8  
                  write_char@lcd 0053                    creditos@F3075 0041  
                  creditos@F3078 0031                     __CFG_WDT$OFF 000000  
                           l1301 0D68                             l1303 0D72  
                           l1311 0D4A                             l1305 0D82  
                           l1313 0D5A                             l1321 0918  
                           l1401 09D0                             l1307 0D28  
                           l1323 0928                             l1315 08F8  
                           l1411 0A22                             l1309 0D32  
                           l1341 0980                             l1325 0938  
                           l1317 0908                             l1413 0A3E  
                           l1421 0642                             l1351 0990  
                           l1319 0914                             l1327 094C  
                           l1415 0A42                             l1407 09D8  
                           l1431 06D6                             l1423 0692  
                           l1353 09A2                             l1329 095E  
                           l1409 0A1E                             l1417 0CE8  
                           l1441 070C                             l1425 06B0  
                           l1433 06D8                             l1521 0B90  
                           l1513 0B72                             l1451 083C  
                           l1339 096E                             l1371 0786  
                           l1363 0736                             l1419 0CF8  
                           l1435 06E6                             l1443 070E  
                           l1427 06C0                             l1523 0BA8  
                           l1515 0B8A                             l1461 0894  
                           l1453 084C                             l1381 07D4  
                           l1373 07B2                             l1365 0754  
                           l1437 06F6                             l1429 06D4  
                           l1525 0BC0                             l1517 0B8C  
                           l1471 0A7E                             l1463 08A0  
                           l1455 085C                             l1391 0818  
                           l1383 07DE                             l1375 07B6  
                           l1367 0772                             l1439 070A  
                           l1447 0726                             l1527 0BD4  
                           l1519 0B8E                             l1481 0AE0  
                           l1473 0A8A                             l1465 08DA  
                           l1457 0868                             l1449 081E  
                           l1385 07E8                             l1377 07C0  
                           l1369 077C                             l1393 09B4  
                           l1529 0BD6                             l1475 0A9A  
                           l1491 0B34                             l1483 0AEE  
                           l1467 08EA                             l1459 0884  
                           l1387 07F2                             l1379 07CA  
                           l1477 0AA6                             l1469 0A60  
                           l1493 0B54                             l1485 0B0C  
                           l1389 080E                             l1479 0AD0  
                           l1495 0B64                             l1487 0B18  
                           l1399 09BC                             l1489 0B28  
                           l1497 0DBC                             STR_1 0601  
                           STR_2 0631                             STR_3 0611  
                           STR_4 0621                             i2l40 0DB8  
                           _main 0B72                             _menu 0642  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0072                             prodl 000FF3  
                           start 000E            function_set@num_lines 0059  
                   print_mat@lcd 0062                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 0056  
                          ?_main 0053                            ?_menu 006C  
                          _T0CON 000FD5                            i2l106 0CE6  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0053  
                __end_of_lcd_cmd 0D68                  __end_of_goto_XY 09B4  
                          _pulso 0D68                            tablat 000FF5  
                          ttemp5 0073                            ttemp6 0076  
                          ttemp7 007A                            status 000FD8  
                          wtemp8 0073                  __initialization 0BE6  
                   __end_of_main 0BE6                     __end_of_menu 0736  
                         ??_main 0070                           ??_menu 006E  
                  __activetblptr 000001                           _ADCON1 000FC1  
                         ?_pulso 0053                           i2l1101 0DAE  
                         i2l1103 0DB2                           i2l1033 0C9A  
                         i2l1105 0DB6                           i2l1099 0DA0  
                    goto_XY@temp 0061             __size_of_gerenciador 0012  
                         _botoes 0071                           clear_0 0C2C  
                  ?_function_set 0056                        ??_lcd_cmd 0059  
                         _strcpy 0CE8                        ??_goto_XY 005E  
                   __pdataCOMRAM 0001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8         display_onoff_control@lcd 0056  
                     __accesstop 0080          __end_of__initialization 0C36  
                  ___rparam_used 000001          ??_display_onoff_control 005B  
                 __pcstackCOMRAM 0053                     __pidataBANK0 0DCE  
                 gerenciador@lcd 006E                    __end_of_pulso 0D9E  
                 ??_function_set 005B             __size_of_int_handler 0DB4  
                        ??_pulso 0055                       __pbssBANK0 0080  
                        ?_strcpy 0053               __size_of_print_mat 00AC  
    entry_mode_set@display_shift 0059                          i2u20_40 0DAE  
                        i2u20_41 0DAA                          i2u14_45 0CA4  
                        i2u14_47 0CA6                          i2u15_45 0CB2  
                        i2u15_47 0CB4                          i2u16_45 0CBC  
                        i2u16_47 0CBE                          i2u17_45 0CCA  
                        i2u17_47 0CCC                          i2u18_45 0CD8  
                        i2u18_47 0CDA                          i2u19_45 0CE2  
                        i2u19_47 0CE4                       _le_entrada 0C9A  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 0059                          __Lparam 0000  
                   __psmallconst 0600                          __pcinit 0BE6  
                        __ramtop 0600                          __ptext0 0B72  
                        __ptext1 0DBC                          __ptext2 0642  
                        __ptext3 0CE8                          __ptext4 09B4  
                        __ptext5 0736                          __ptext6 08F8  
                        __ptext7 0D28                          __ptext8 081E  
                        __ptext9 0AEE                          _lcd_cmd 0D28  
                      _T0CONbits 000FD5                  __size_of_strcpy 0040  
                        _goto_XY 08F8                   __pintcode_body 0D9E  
           end_of_initialization 0C36                          menu@lcd 006C  
           __end_of_function_set 08F8                          int_func 0D9E  
              __end_of_print_mat 0A60                          postdec1 000FE5  
                        postinc0 000FEE                          strcpy@d 0059  
                        strcpy@s 0057                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0056                      ?_le_entrada 0053  
                  ??_gerenciador 0070   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 0AEE                       _write_char 0736  
                  __pidataCOMRAM 0C48                   __end_of_strcpy 0D28  
            start_initialization 0BE6                   _entry_mode_set 0AEE  
                     goto_XY@lcd 005A                      __pdataBANK0 00C0  
            __size_of_le_entrada 004E              __end_of_gerenciador 0DCE  
                       ??_strcpy 0057                      __pbssCOMRAM 0070  
                  ??_int_handler 0053            __size_of_function_set 00DA  
                instrucoes@F3102 0021                  instrucoes@F3111 00C0  
                instrucoes@F3105 0011                  instrucoes@F3108 0001  
         __end_of_entry_mode_set 0B72                        __pintcode 0008  
                    ?_write_char 0053                         ?_lcd_cmd 0056  
                   _function_set 081E                      __smallconst 0600  
                       ?_goto_XY 005A                   __size_of_pulso 0036  
            __end_of_int_handler 0DBC                  ?_entry_mode_set 0056  
                    _gerenciador 0DBC     entry_mode_set@move_direction 0058  
                      _print_mat 09B4  display_onoff_control@display_on 0058  
     display_onoff_control@blink 005A                      write_char@c 0055  
                     print_mat@i 006A                       print_mat@j 0068  
                   ??_le_entrada 0053                        copy_data0 0BFA  
                      copy_data1 0C1A              __size_of_write_char 00E8  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0600                entry_mode_set@lcd 0056  
                     ?_print_mat 0062               __end_of_le_entrada 0CE8  
               __size_of_lcd_cmd 0040                 __size_of_goto_XY 00BC  
                    _int_handler 0008                         __ptext10 0A60  
                       __ptext11 0D68                         __ptext13 0C9A  
                     strcpy@dest 0053                         _mat_disp 0080  
                  __size_of_main 0074                    __size_of_menu 00F4  
                       int$flags 0072                         lcd_cmd@a 0058  
          _display_onoff_control 0A60                       _INTCONbits 000FF2  
                       goto_XY@a 0060                         goto_XY@x 005C  
                       goto_XY@y 005D                         goto_XY@z 005F  
                       intlevel2 0000                        strcpy@src 0055  
        function_set@data_lenght 0058                      ??_print_mat 0064  
                   ??_write_char 0056                         pulso@lcd 0053  
               ??_entry_mode_set 005A            function_set@char_font 005A  
             __end_of_write_char 081E                     ?_gerenciador 006E  
