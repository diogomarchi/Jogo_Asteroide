

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 10 23:28:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4520 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  000396                     __pidataCOMRAM:
    63                           	opt callstack 0
    64                           
    65                           ;initializer for instrucoes@F3092
    66  000396  50                 	db	80
    67  000397  52                 	db	82
    68  000398  4F                 	db	79
    69  000399  20                 	db	32
    70  00039A  4D                 	db	77
    71  00039B  45                 	db	69
    72  00039C  4E                 	db	78
    73  00039D  55                 	db	85
    74  00039E  00                 	db	0
    75  00039F  00                 	db	0
    76  0003A0  00                 	db	0
    77  0003A1  00                 	db	0
    78  0003A2  00                 	db	0
    79  0003A3  00                 	db	0
    80  0003A4  00                 	db	0
    81  0003A5  00                 	db	0
    82                           
    83                           ;initializer for instrucoes@F3089
    84  0003A6  32                 	db	50
    85  0003A7  2E                 	db	46
    86  0003A8  45                 	db	69
    87  0003A9  53                 	db	83
    88  0003AA  43                 	db	67
    89  0003AB  41                 	db	65
    90  0003AC  50                 	db	80
    91  0003AD  45                 	db	69
    92  0003AE  20                 	db	32
    93  0003AF  56                 	db	86
    94  0003B0  4F                 	db	79
    95  0003B1  4C                 	db	76
    96  0003B2  54                 	db	84
    97  0003B3  41                 	db	65
    98  0003B4  00                 	db	0
    99  0003B5  00                 	db	0
   100                           
   101                           ;initializer for instrucoes@F3086
   102  0003B6  4E                 	db	78
   103  0003B7  41                 	db	65
   104  0003B8  56                 	db	86
   105  0003B9  45                 	db	69
   106  0003BA  00                 	db	0
   107  0003BB  00                 	db	0
   108  0003BC  00                 	db	0
   109  0003BD  00                 	db	0
   110  0003BE  00                 	db	0
   111  0003BF  00                 	db	0
   112  0003C0  00                 	db	0
   113  0003C1  00                 	db	0
   114  0003C2  00                 	db	0
   115  0003C3  00                 	db	0
   116  0003C4  00                 	db	0
   117  0003C5  00                 	db	0
   118                           
   119                           ;initializer for instrucoes@F3083
   120  0003C6  31                 	db	49
   121  0003C7  2E                 	db	46
   122  0003C8  53                 	db	83
   123  0003C9  45                 	db	69
   124  0003CA  54                 	db	84
   125  0003CB  41                 	db	65
   126  0003CC  53                 	db	83
   127  0003CD  20                 	db	32
   128  0003CE  4D                 	db	77
   129  0003CF  4F                 	db	79
   130  0003D0  56                 	db	86
   131  0003D1  45                 	db	69
   132  0003D2  4D                 	db	77
   133  0003D3  20                 	db	32
   134  0003D4  41                 	db	65
   135  0003D5  00                 	db	0
   136                           
   137                           ;initializer for creditos@F3059
   138  0003D6  32                 	db	50
   139  0003D7  2E                 	db	46
   140  0003D8  47                 	db	71
   141  0003D9  45                 	db	69
   142  0003DA  4F                 	db	79
   143  0003DB  52                 	db	82
   144  0003DC  47                 	db	71
   145  0003DD  45                 	db	69
   146  0003DE  20                 	db	32
   147  0003DF  4E                 	db	78
   148  0003E0  41                 	db	65
   149  0003E1  52                 	db	82
   150  0003E2  44                 	db	68
   151  0003E3  45                 	db	69
   152  0003E4  53                 	db	83
   153  0003E5  00                 	db	0
   154                           
   155                           ;initializer for creditos@F3056
   156  0003E6  31                 	db	49
   157  0003E7  2E                 	db	46
   158  0003E8  44                 	db	68
   159  0003E9  49                 	db	73
   160  0003EA  4F                 	db	79
   161  0003EB  47                 	db	71
   162  0003EC  4F                 	db	79
   163  0003ED  20                 	db	32
   164  0003EE  4D                 	db	77
   165  0003EF  41                 	db	65
   166  0003F0  52                 	db	82
   167  0003F1  43                 	db	67
   168  0003F2  48                 	db	72
   169  0003F3  49                 	db	73
   170  0003F4  00                 	db	0
   171  0003F5  00                 	db	0
   172                           
   173                           	psect	idataBANK0
   174  00048A                     __pidataBANK0:
   175                           	opt callstack 0
   176                           
   177                           ;initializer for menu@F3110
   178  00048A  34                 	db	52
   179  00048B  2E                 	db	46
   180  00048C  46                 	db	70
   181  00048D  49                 	db	73
   182  00048E  4E                 	db	78
   183  00048F  41                 	db	65
   184  000490  4C                 	db	76
   185  000491  49                 	db	73
   186  000492  5A                 	db	90
   187  000493  41                 	db	65
   188  000494  52                 	db	82
   189  000495  00                 	db	0
   190  000496  00                 	db	0
   191  000497  00                 	db	0
   192  000498  00                 	db	0
   193  000499  00                 	db	0
   194                           
   195                           ;initializer for menu@F3107
   196  00049A  33                 	db	51
   197  00049B  2E                 	db	46
   198  00049C  43                 	db	67
   199  00049D  52                 	db	82
   200  00049E  45                 	db	69
   201  00049F  44                 	db	68
   202  0004A0  49                 	db	73
   203  0004A1  54                 	db	84
   204  0004A2  4F                 	db	79
   205  0004A3  53                 	db	83
   206  0004A4  00                 	db	0
   207  0004A5  00                 	db	0
   208  0004A6  00                 	db	0
   209  0004A7  00                 	db	0
   210  0004A8  00                 	db	0
   211  0004A9  00                 	db	0
   212                           
   213                           ;initializer for menu@F3104
   214  0004AA  32                 	db	50
   215  0004AB  2E                 	db	46
   216  0004AC  49                 	db	73
   217  0004AD  4E                 	db	78
   218  0004AE  53                 	db	83
   219  0004AF  54                 	db	84
   220  0004B0  52                 	db	82
   221  0004B1  55                 	db	85
   222  0004B2  43                 	db	67
   223  0004B3  4F                 	db	79
   224  0004B4  45                 	db	69
   225  0004B5  53                 	db	83
   226  0004B6  00                 	db	0
   227  0004B7  00                 	db	0
   228  0004B8  00                 	db	0
   229  0004B9  00                 	db	0
   230                           
   231                           ;initializer for menu@F3101
   232  0004BA  31                 	db	49
   233  0004BB  2E                 	db	46
   234  0004BC  4A                 	db	74
   235  0004BD  4F                 	db	79
   236  0004BE  47                 	db	71
   237  0004BF  41                 	db	65
   238  0004C0  52                 	db	82
   239  0004C1  00                 	db	0
   240  0004C2  00                 	db	0
   241  0004C3  00                 	db	0
   242  0004C4  00                 	db	0
   243  0004C5  00                 	db	0
   244  0004C6  00                 	db	0
   245  0004C7  00                 	db	0
   246  0004C8  00                 	db	0
   247  0004C9  00                 	db	0
   248                           
   249                           	psect	nvCOMRAM
   250  000070                     __pnvCOMRAM:
   251                           	opt callstack 0
   252  000070                     _lcd:
   253                           	opt callstack 0
   254  000070                     	ds	2
   255  0000                     _PORTBbits	set	3969
   256  0000                     _T0CONbits	set	4053
   257  0000                     _T0CON	set	4053
   258  0000                     _TRISD	set	3989
   259  0000                     _PORTB	set	3969
   260  0000                     _TRISB	set	3987
   261  0000                     _ADCON1	set	4033
   262  0000                     _TMR0L	set	4054
   263  0000                     _INTCONbits	set	4082
   264  0000                     _PORTD	set	3971
   265                           
   266                           ; #config settings
   267  0000                     
   268                           	psect	cinit
   269  0003F6                     __pcinit:
   270                           	opt callstack 0
   271  0003F6                     start_initialization:
   272                           	opt callstack 0
   273  0003F6                     __initialization:
   274                           	opt callstack 0
   275                           
   276                           ; Initialize objects allocated to BANK0 (64 bytes)
   277                           ; load TBLPTR registers with __pidataBANK0
   278  0003F6  0E8A               	movlw	low __pidataBANK0
   279  0003F8  6EF6               	movwf	tblptrl,c
   280  0003FA  0E04               	movlw	high __pidataBANK0
   281  0003FC  6EF7               	movwf	tblptrh,c
   282  0003FE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   283  000400  6EF8               	movwf	tblptru,c
   284  000402  EE00  F080         	lfsr	0,__pdataBANK0
   285  000406  EE10 F040          	lfsr	1,64
   286  00040A                     copy_data0:
   287  00040A  0009               	tblrd		*+
   288  00040C  CFF5 FFEE          	movff	tablat,postinc0
   289  000410  50E5               	movf	postdec1,w,c
   290  000412  50E1               	movf	fsr1l,w,c
   291  000414  E1FA               	bnz	copy_data0
   292                           
   293                           ; Initialize objects allocated to COMRAM (96 bytes)
   294                           ; load TBLPTR registers with __pidataCOMRAM
   295  000416  0E96               	movlw	low __pidataCOMRAM
   296  000418  6EF6               	movwf	tblptrl,c
   297  00041A  0E03               	movlw	high __pidataCOMRAM
   298  00041C  6EF7               	movwf	tblptrh,c
   299  00041E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   300  000420  6EF8               	movwf	tblptru,c
   301  000422  EE00  F001         	lfsr	0,__pdataCOMRAM
   302  000426  EE10 F060          	lfsr	1,96
   303  00042A                     copy_data1:
   304  00042A  0009               	tblrd		*+
   305  00042C  CFF5 FFEE          	movff	tablat,postinc0
   306  000430  50E5               	movf	postdec1,w,c
   307  000432  50E1               	movf	fsr1l,w,c
   308  000434  E1FA               	bnz	copy_data1
   309                           
   310                           ; Clear objects allocated to COMRAM (2 bytes)
   311  000436  6A73               	clrf	(__pbssCOMRAM+1)& (0+255),c
   312  000438  6A72               	clrf	__pbssCOMRAM& (0+255),c
   313  00043A                     end_of_initialization:
   314                           	opt callstack 0
   315  00043A                     __end_of__initialization:
   316                           	opt callstack 0
   317  00043A  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   318  00043C  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   319  00043E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   320  000440  6EF8               	movwf	tblptru,c
   321  000442  0100               	movlb	0
   322  000444  EF76  F000         	goto	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMRAM
   325  000072                     __pbssCOMRAM:
   326                           	opt callstack 0
   327  000072                     _botoes:
   328                           	opt callstack 0
   329  000072                     	ds	2
   330                           
   331                           	psect	dataCOMRAM
   332  000001                     __pdataCOMRAM:
   333                           	opt callstack 0
   334  000001                     instrucoes@F3092:
   335                           	opt callstack 0
   336  000001                     	ds	16
   337  000011                     instrucoes@F3089:
   338                           	opt callstack 0
   339  000011                     	ds	16
   340  000021                     instrucoes@F3086:
   341                           	opt callstack 0
   342  000021                     	ds	16
   343  000031                     instrucoes@F3083:
   344                           	opt callstack 0
   345  000031                     	ds	16
   346  000041                     creditos@F3059:
   347                           	opt callstack 0
   348  000041                     	ds	16
   349  000051                     creditos@F3056:
   350                           	opt callstack 0
   351  000051                     	ds	16
   352                           
   353                           	psect	dataBANK0
   354  000080                     __pdataBANK0:
   355                           	opt callstack 0
   356  000080                     menu@F3110:
   357                           	opt callstack 0
   358  000080                     	ds	16
   359  000090                     menu@F3107:
   360                           	opt callstack 0
   361  000090                     	ds	16
   362  0000A0                     menu@F3104:
   363                           	opt callstack 0
   364  0000A0                     	ds	16
   365  0000B0                     menu@F3101:
   366                           	opt callstack 0
   367  0000B0                     	ds	16
   368                           
   369                           	psect	cstackCOMRAM
   370  000061                     __pcstackCOMRAM:
   371                           	opt callstack 0
   372  000061                     le_entrada@botoes:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x0
   376  000061                     	ds	2
   377  000063                     ??_int_handler:
   378                           
   379                           ; 1 bytes @ 0x2
   380  000063                     	ds	2
   381  000065                     pulso@lcd:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x4
   385  000065                     	ds	2
   386  000067                     ??_pulso:
   387                           
   388                           ; 1 bytes @ 0x6
   389  000067                     	ds	1
   390  000068                     function_set@lcd:
   391                           	opt callstack 0
   392  000068                     display_onoff_control@lcd:
   393                           	opt callstack 0
   394  000068                     entry_mode_set@lcd:
   395                           	opt callstack 0
   396  000068                     write_char@lcd:
   397                           	opt callstack 0
   398                           
   399                           ; 2 bytes @ 0x7
   400  000068                     	ds	2
   401  00006A                     function_set@data_lenght:
   402                           	opt callstack 0
   403  00006A                     display_onoff_control@display_on:
   404                           	opt callstack 0
   405  00006A                     entry_mode_set@move_direction:
   406                           	opt callstack 0
   407  00006A                     write_char@c:
   408                           	opt callstack 0
   409                           
   410                           ; 1 bytes @ 0x9
   411  00006A                     	ds	1
   412  00006B                     ??_write_char:
   413  00006B                     function_set@num_lines:
   414                           	opt callstack 0
   415  00006B                     display_onoff_control@cursor_on:
   416                           	opt callstack 0
   417  00006B                     entry_mode_set@display_shift:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0xA
   421  00006B                     	ds	1
   422  00006C                     ??_entry_mode_set:
   423  00006C                     function_set@char_font:
   424                           	opt callstack 0
   425  00006C                     display_onoff_control@blink:
   426                           	opt callstack 0
   427                           
   428                           ; 1 bytes @ 0xB
   429  00006C                     	ds	1
   430  00006D                     ??_function_set:
   431  00006D                     ??_display_onoff_control:
   432                           
   433                           ; 1 bytes @ 0xC
   434  00006D                     	ds	3
   435  000070                     
   436                           ; 1 bytes @ 0xF
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 31 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   456 ;;      Params:         0       0       0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels required when called:    4
   462 ;; This function calls:
   463 ;;		_display_onoff_control
   464 ;;		_entry_mode_set
   465 ;;		_function_set
   466 ;;		_write_char
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text0
   473  0000EC                     __ptext0:
   474                           	opt callstack 0
   475  0000EC                     _main:
   476                           	opt callstack 27
   477  0000EC                     
   478                           ;main.c: 33:     ADCON1 = 0x0F;
   479  0000EC  0E0F               	movlw	15
   480  0000EE  6EC1               	movwf	193,c	;volatile
   481                           
   482                           ;main.c: 38:     TRISB = 0x0F;
   483  0000F0  0E0F               	movlw	15
   484  0000F2  6E93               	movwf	147,c	;volatile
   485                           
   486                           ;main.c: 41:     PORTB = 0x00;
   487  0000F4  0E00               	movlw	0
   488  0000F6  6E81               	movwf	129,c	;volatile
   489                           
   490                           ;main.c: 44:     TRISD = 0x00;
   491  0000F8  0E00               	movlw	0
   492  0000FA  6E95               	movwf	149,c	;volatile
   493                           
   494                           ;main.c: 47:     T0CON = 0x47;
   495  0000FC  0E47               	movlw	71
   496  0000FE  6ED5               	movwf	213,c	;volatile
   497                           
   498                           ;main.c: 50:     TMR0L = 0x00;
   499  000100  0E00               	movlw	0
   500  000102  6ED6               	movwf	214,c	;volatile
   501  000104                     
   502                           ;main.c: 53:     INTCONbits.TMR0IF = 0;
   503  000104  94F2               	bcf	242,2,c	;volatile
   504  000106                     
   505                           ;main.c: 54:     INTCONbits.TMR0IE = 1;
   506  000106  8AF2               	bsf	242,5,c	;volatile
   507  000108                     
   508                           ;main.c: 55:     INTCONbits.GIE = 1;
   509  000108  8EF2               	bsf	242,7,c	;volatile
   510  00010A                     
   511                           ;main.c: 57:     lcd = &PORTD;
   512  00010A  0E83               	movlw	131
   513  00010C  6E70               	movwf	_lcd^0,c
   514  00010E  0E0F               	movlw	15
   515  000110  6E71               	movwf	(_lcd+1)^0,c
   516  000112                     
   517                           ;main.c: 59:     function_set(lcd, 0, 1, 0);
   518  000112  C070  F068         	movff	_lcd,function_set@lcd
   519  000116  C071  F069         	movff	_lcd+1,function_set@lcd+1
   520  00011A  0E00               	movlw	0
   521  00011C  6E6A               	movwf	function_set@data_lenght^0,c
   522  00011E  0E01               	movlw	1
   523  000120  6E6B               	movwf	function_set@num_lines^0,c
   524  000122  0E00               	movlw	0
   525  000124  6E6C               	movwf	function_set@char_font^0,c
   526  000126  EC09  F000         	call	_function_set	;wreg free
   527  00012A                     
   528                           ;main.c: 60:     display_onoff_control(lcd, 1, 1, 0);
   529  00012A  C070  F068         	movff	_lcd,display_onoff_control@lcd
   530  00012E  C071  F069         	movff	_lcd+1,display_onoff_control@lcd+1
   531  000132  0E01               	movlw	1
   532  000134  6E6A               	movwf	display_onoff_control@display_on^0,c
   533  000136  0E01               	movlw	1
   534  000138  6E6B               	movwf	display_onoff_control@cursor_on^0,c
   535  00013A  0E00               	movlw	0
   536  00013C  6E6C               	movwf	display_onoff_control@blink^0,c
   537  00013E  EC0F  F001         	call	_display_onoff_control	;wreg free
   538  000142                     
   539                           ;main.c: 61:     entry_mode_set(lcd, 1,0);
   540  000142  C070  F068         	movff	_lcd,entry_mode_set@lcd
   541  000146  C071  F069         	movff	_lcd+1,entry_mode_set@lcd+1
   542  00014A  0E01               	movlw	1
   543  00014C  6E6A               	movwf	entry_mode_set@move_direction^0,c
   544  00014E  0E00               	movlw	0
   545  000150  6E6B               	movwf	entry_mode_set@display_shift^0,c
   546  000152  EC56  F001         	call	_entry_mode_set	;wreg free
   547  000156                     
   548                           ;main.c: 63:     T0CONbits.TMR0ON = 1;
   549  000156  8ED5               	bsf	213,7,c	;volatile
   550  000158                     l1406:
   551                           
   552                           ;main.c: 66:         if(botoes->Enter){
   553  000158  C072  FFD9         	movff	_botoes,fsr2l
   554  00015C  C073  FFDA         	movff	_botoes+1,fsr2h
   555  000160  A8DF               	btfss	indf2,4,c
   556  000162  EFB5  F000         	goto	u361
   557  000166  EFB7  F000         	goto	u360
   558  00016A                     u361:
   559  00016A  EFAC  F000         	goto	l1406
   560  00016E                     u360:
   561  00016E                     
   562                           ;main.c: 67:             write_char(lcd,'E');
   563  00016E  C070  F068         	movff	_lcd,write_char@lcd
   564  000172  C071  F069         	movff	_lcd+1,write_char@lcd+1
   565  000176  0E45               	movlw	69
   566  000178  6E6A               	movwf	write_char@c^0,c
   567  00017A  ECC3  F000         	call	_write_char	;wreg free
   568  00017E  EFAC  F000         	goto	l1406
   569  000182  EF07  F000         	goto	start
   570  000186                     __end_of_main:
   571                           	opt callstack 0
   572                           
   573 ;; *************** function _write_char *****************
   574 ;; Defined at:
   575 ;;		line 137 in file "lcd.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  lcd             2    7[COMRAM] PTR struct .
   578 ;;		 -> NULL(0), PORTD(1), 
   579 ;;  c               1    9[COMRAM] unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   591 ;;      Params:         3       0       0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0
   593 ;;      Temps:          1       0       0       0       0       0       0
   594 ;;      Totals:         4       0       0       0       0       0       0
   595 ;;Total ram usage:        4 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    3
   598 ;; This function calls:
   599 ;;		_pulso
   600 ;; This function is called by:
   601 ;;		_main
   602 ;;		_creditos
   603 ;;		_jogar
   604 ;;		_instrucoes
   605 ;;		_menu
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text1
   610  000186                     __ptext1:
   611                           	opt callstack 0
   612  000186                     _write_char:
   613                           	opt callstack 27
   614  000186                     
   615                           ;lcd.c: 138:     lcd->E = 0;
   616  000186  C068  FFD9         	movff	write_char@lcd,fsr2l
   617  00018A  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   618  00018E  94DF               	bcf	indf2,2,c
   619                           
   620                           ;lcd.c: 139:     lcd->RS = 1;
   621  000190  C068  FFD9         	movff	write_char@lcd,fsr2l
   622  000194  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   623  000198  80DF               	bsf	indf2,0,c
   624                           
   625                           ;lcd.c: 140:     lcd->R_W = 0;
   626  00019A  C068  FFD9         	movff	write_char@lcd,fsr2l
   627  00019E  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   628  0001A2  92DF               	bcf	indf2,1,c
   629  0001A4                     
   630                           ;lcd.c: 143:     lcd->data = (c>>4);
   631  0001A4  C06A  F06B         	movff	write_char@c,??_write_char
   632  0001A8  3A6B               	swapf	??_write_char^0,f,c
   633  0001AA  0E0F               	movlw	15
   634  0001AC  166B               	andwf	??_write_char^0,f,c
   635  0001AE  C068  FFD9         	movff	write_char@lcd,fsr2l
   636  0001B2  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   637  0001B6  3A6B               	swapf	??_write_char^0,f,c
   638  0001B8  50DF               	movf	indf2,w,c
   639  0001BA  186B               	xorwf	??_write_char^0,w,c
   640  0001BC  0B0F               	andlw	-241
   641  0001BE  186B               	xorwf	??_write_char^0,w,c
   642  0001C0  6EDF               	movwf	indf2,c
   643  0001C2                     
   644                           ;lcd.c: 144:     _delay((unsigned long)((1)*(16000000/4000.0)));
   645  0001C2  0E06               	movlw	6
   646  0001C4  6E6B               	movwf	??_write_char^0,c
   647  0001C6  0E30               	movlw	48
   648  0001C8                     u707:
   649  0001C8  2EE8               	decfsz	wreg,f,c
   650  0001CA  D7FE               	bra	u707
   651  0001CC  2E6B               	decfsz	??_write_char^0,f,c
   652  0001CE  D7FC               	bra	u707
   653  0001D0  D000               	nop2	
   654  0001D2                     
   655                           ;lcd.c: 146:     pulso(lcd);
   656  0001D2  C068  F065         	movff	write_char@lcd,pulso@lcd
   657  0001D6  C069  F066         	movff	write_char@lcd+1,pulso@lcd+1
   658  0001DA  EC24  F002         	call	_pulso	;wreg free
   659  0001DE                     
   660                           ;lcd.c: 149:     lcd->data = (c);
   661  0001DE  C06A  F06B         	movff	write_char@c,??_write_char
   662  0001E2  C068  FFD9         	movff	write_char@lcd,fsr2l
   663  0001E6  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   664  0001EA  3A6B               	swapf	??_write_char^0,f,c
   665  0001EC  50DF               	movf	indf2,w,c
   666  0001EE  186B               	xorwf	??_write_char^0,w,c
   667  0001F0  0B0F               	andlw	-241
   668  0001F2  186B               	xorwf	??_write_char^0,w,c
   669  0001F4  6EDF               	movwf	indf2,c
   670  0001F6                     
   671                           ;lcd.c: 150:     _delay((unsigned long)((1)*(16000000/4000.0)));
   672  0001F6  0E06               	movlw	6
   673  0001F8  6E6B               	movwf	??_write_char^0,c
   674  0001FA  0E30               	movlw	48
   675  0001FC                     u717:
   676  0001FC  2EE8               	decfsz	wreg,f,c
   677  0001FE  D7FE               	bra	u717
   678  000200  2E6B               	decfsz	??_write_char^0,f,c
   679  000202  D7FC               	bra	u717
   680  000204  D000               	nop2	
   681  000206                     
   682                           ;lcd.c: 152:     pulso(lcd);
   683  000206  C068  F065         	movff	write_char@lcd,pulso@lcd
   684  00020A  C069  F066         	movff	write_char@lcd+1,pulso@lcd+1
   685  00020E  EC24  F002         	call	_pulso	;wreg free
   686                           
   687                           ;lcd.c: 153:     lcd->RS = 0;
   688  000212  C068  FFD9         	movff	write_char@lcd,fsr2l
   689  000216  C069  FFDA         	movff	write_char@lcd+1,fsr2h
   690  00021A  90DF               	bcf	indf2,0,c
   691  00021C  0012               	return		;funcret
   692  00021E                     __end_of_write_char:
   693                           	opt callstack 0
   694                           
   695 ;; *************** function _function_set *****************
   696 ;; Defined at:
   697 ;;		line 22 in file "lcd.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  lcd             2    7[COMRAM] PTR struct .
   700 ;;		 -> NULL(0), PORTD(1), 
   701 ;;  data_lenght     1    9[COMRAM] unsigned char 
   702 ;;  num_lines       1   10[COMRAM] unsigned char 
   703 ;;  char_font       1   11[COMRAM] unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   715 ;;      Params:         5       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0
   717 ;;      Temps:          3       0       0       0       0       0       0
   718 ;;      Totals:         8       0       0       0       0       0       0
   719 ;;Total ram usage:        8 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    3
   722 ;; This function calls:
   723 ;;		_pulso
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text2
   730  000012                     __ptext2:
   731                           	opt callstack 0
   732  000012                     _function_set:
   733                           	opt callstack 27
   734  000012                     
   735                           ;lcd.c: 22: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 23:         
      +                          char num_lines, char char_font){;lcd.c: 24:     lcd->E = 0;
   736  000012  C068  FFD9         	movff	function_set@lcd,fsr2l
   737  000016  C069  FFDA         	movff	function_set@lcd+1,fsr2h
   738  00001A  94DF               	bcf	indf2,2,c
   739                           
   740                           ;lcd.c: 25:     lcd->RS = 0;
   741  00001C  C068  FFD9         	movff	function_set@lcd,fsr2l
   742  000020  C069  FFDA         	movff	function_set@lcd+1,fsr2h
   743  000024  90DF               	bcf	indf2,0,c
   744                           
   745                           ;lcd.c: 26:     lcd->R_W = 0;
   746  000026  C068  FFD9         	movff	function_set@lcd,fsr2l
   747  00002A  C069  FFDA         	movff	function_set@lcd+1,fsr2h
   748  00002E  92DF               	bcf	indf2,1,c
   749  000030                     
   750                           ;lcd.c: 29:     lcd->data = 0x02;
   751  000030  C068  FFD9         	movff	function_set@lcd,fsr2l
   752  000034  C069  FFDA         	movff	function_set@lcd+1,fsr2h
   753  000038  50DF               	movf	indf2,w,c
   754  00003A  0B0F               	andlw	-241
   755  00003C  0920               	iorlw	32
   756  00003E  6EDF               	movwf	indf2,c
   757  000040                     
   758                           ;lcd.c: 30:     _delay((unsigned long)((1)*(16000000/4000.0)));
   759  000040  0E06               	movlw	6
   760  000042  6E6D               	movwf	??_function_set^0,c
   761  000044  0E30               	movlw	48
   762  000046                     u727:
   763  000046  2EE8               	decfsz	wreg,f,c
   764  000048  D7FE               	bra	u727
   765  00004A  2E6D               	decfsz	??_function_set^0,f,c
   766  00004C  D7FC               	bra	u727
   767  00004E  D000               	nop2	
   768  000050                     
   769                           ;lcd.c: 32:     pulso(lcd);
   770  000050  C068  F065         	movff	function_set@lcd,pulso@lcd
   771  000054  C069  F066         	movff	function_set@lcd+1,pulso@lcd+1
   772  000058  EC24  F002         	call	_pulso	;wreg free
   773  00005C                     
   774                           ;lcd.c: 35:     lcd->data = 0x02|data_lenght;
   775  00005C  C06A  F06D         	movff	function_set@data_lenght,??_function_set
   776  000060  0E02               	movlw	2
   777  000062  126D               	iorwf	??_function_set^0,f,c
   778  000064  C068  FFD9         	movff	function_set@lcd,fsr2l
   779  000068  C069  FFDA         	movff	function_set@lcd+1,fsr2h
   780  00006C  3A6D               	swapf	??_function_set^0,f,c
   781  00006E  50DF               	movf	indf2,w,c
   782  000070  186D               	xorwf	??_function_set^0,w,c
   783  000072  0B0F               	andlw	-241
   784  000074  186D               	xorwf	??_function_set^0,w,c
   785  000076  6EDF               	movwf	indf2,c
   786  000078                     
   787                           ;lcd.c: 36:     _delay((unsigned long)((1)*(16000000/4000.0)));
   788  000078  0E06               	movlw	6
   789  00007A  6E6D               	movwf	??_function_set^0,c
   790  00007C  0E30               	movlw	48
   791  00007E                     u737:
   792  00007E  2EE8               	decfsz	wreg,f,c
   793  000080  D7FE               	bra	u737
   794  000082  2E6D               	decfsz	??_function_set^0,f,c
   795  000084  D7FC               	bra	u737
   796  000086  D000               	nop2	
   797  000088                     
   798                           ;lcd.c: 38:     pulso(lcd);
   799  000088  C068  F065         	movff	function_set@lcd,pulso@lcd
   800  00008C  C069  F066         	movff	function_set@lcd+1,pulso@lcd+1
   801  000090  EC24  F002         	call	_pulso	;wreg free
   802  000094                     
   803                           ;lcd.c: 42:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
   804  000094  C068  FFD9         	movff	function_set@lcd,fsr2l
   805  000098  C069  FFDA         	movff	function_set@lcd+1,fsr2h
   806  00009C  38DF               	swapf	indf2,w,c
   807  00009E  0B0F               	andlw	15
   808  0000A0  6E6D               	movwf	??_function_set^0,c
   809  0000A2  C06C  F06E         	movff	function_set@char_font,??_function_set+1
   810  0000A6  90D8               	bcf	status,0,c
   811  0000A8  366E               	rlcf	(??_function_set+1)^0,f,c
   812  0000AA  90D8               	bcf	status,0,c
   813  0000AC  366E               	rlcf	(??_function_set+1)^0,f,c
   814  0000AE  386B               	swapf	function_set@num_lines^0,w,c
   815  0000B0  42E8               	rrncf	wreg,f,c
   816  0000B2  0BF8               	andlw	248
   817  0000B4  106E               	iorwf	(??_function_set+1)^0,w,c
   818  0000B6  106D               	iorwf	??_function_set^0,w,c
   819  0000B8  6E6F               	movwf	(??_function_set+2)^0,c
   820  0000BA  C068  FFD9         	movff	function_set@lcd,fsr2l
   821  0000BE  C069  FFDA         	movff	function_set@lcd+1,fsr2h
   822  0000C2  3A6F               	swapf	(??_function_set+2)^0,f,c
   823  0000C4  50DF               	movf	indf2,w,c
   824  0000C6  186F               	xorwf	(??_function_set+2)^0,w,c
   825  0000C8  0B0F               	andlw	-241
   826  0000CA  186F               	xorwf	(??_function_set+2)^0,w,c
   827  0000CC  6EDF               	movwf	indf2,c
   828  0000CE                     
   829                           ;lcd.c: 43:     _delay((unsigned long)((1)*(16000000/4000.0)));
   830  0000CE  0E06               	movlw	6
   831  0000D0  6E6D               	movwf	??_function_set^0,c
   832  0000D2  0E30               	movlw	48
   833  0000D4                     u747:
   834  0000D4  2EE8               	decfsz	wreg,f,c
   835  0000D6  D7FE               	bra	u747
   836  0000D8  2E6D               	decfsz	??_function_set^0,f,c
   837  0000DA  D7FC               	bra	u747
   838  0000DC  D000               	nop2	
   839  0000DE                     
   840                           ;lcd.c: 45:     pulso(lcd);
   841  0000DE  C068  F065         	movff	function_set@lcd,pulso@lcd
   842  0000E2  C069  F066         	movff	function_set@lcd+1,pulso@lcd+1
   843  0000E6  EC24  F002         	call	_pulso	;wreg free
   844  0000EA  0012               	return		;funcret
   845  0000EC                     __end_of_function_set:
   846                           	opt callstack 0
   847                           
   848 ;; *************** function _entry_mode_set *****************
   849 ;; Defined at:
   850 ;;		line 120 in file "lcd.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  lcd             2    7[COMRAM] PTR struct .
   853 ;;		 -> NULL(0), PORTD(1), 
   854 ;;  move_directi    1    9[COMRAM] unsigned char 
   855 ;;  display_shif    1   10[COMRAM] unsigned char 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         4       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0
   869 ;;      Temps:          1       0       0       0       0       0       0
   870 ;;      Totals:         5       0       0       0       0       0       0
   871 ;;Total ram usage:        5 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    3
   874 ;; This function calls:
   875 ;;		_pulso
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text3
   882  0002AC                     __ptext3:
   883                           	opt callstack 0
   884  0002AC                     _entry_mode_set:
   885                           	opt callstack 27
   886  0002AC                     
   887                           ;lcd.c: 121:     lcd->E = 0;
   888  0002AC  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
   889  0002B0  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   890  0002B4  94DF               	bcf	indf2,2,c
   891                           
   892                           ;lcd.c: 122:     lcd->RS = 0;
   893  0002B6  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
   894  0002BA  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   895  0002BE  90DF               	bcf	indf2,0,c
   896                           
   897                           ;lcd.c: 123:     lcd->R_W = 0;
   898  0002C0  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
   899  0002C4  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   900  0002C8  92DF               	bcf	indf2,1,c
   901  0002CA                     
   902                           ;lcd.c: 125:     lcd->data = 0x00;
   903  0002CA  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
   904  0002CE  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   905  0002D2  0E0F               	movlw	-241
   906  0002D4  16DF               	andwf	indf2,f,c
   907  0002D6                     
   908                           ;lcd.c: 126:     _delay((unsigned long)((1)*(16000000/4000.0)));
   909  0002D6  0E06               	movlw	6
   910  0002D8  6E6C               	movwf	??_entry_mode_set^0,c
   911  0002DA  0E30               	movlw	48
   912  0002DC                     u757:
   913  0002DC  2EE8               	decfsz	wreg,f,c
   914  0002DE  D7FE               	bra	u757
   915  0002E0  2E6C               	decfsz	??_entry_mode_set^0,f,c
   916  0002E2  D7FC               	bra	u757
   917  0002E4  D000               	nop2	
   918  0002E6                     
   919                           ;lcd.c: 128:     pulso(lcd);
   920  0002E6  C068  F065         	movff	entry_mode_set@lcd,pulso@lcd
   921  0002EA  C069  F066         	movff	entry_mode_set@lcd+1,pulso@lcd+1
   922  0002EE  EC24  F002         	call	_pulso	;wreg free
   923  0002F2                     
   924                           ;lcd.c: 131:     lcd->data = 0x04|(move_direction<<1)|display_shift;
   925  0002F2  506A               	movf	entry_mode_set@move_direction^0,w,c
   926  0002F4  246A               	addwf	entry_mode_set@move_direction^0,w,c
   927  0002F6  106B               	iorwf	entry_mode_set@display_shift^0,w,c
   928  0002F8  6E6C               	movwf	??_entry_mode_set^0,c
   929  0002FA  0E04               	movlw	4
   930  0002FC  126C               	iorwf	??_entry_mode_set^0,f,c
   931  0002FE  C068  FFD9         	movff	entry_mode_set@lcd,fsr2l
   932  000302  C069  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
   933  000306  3A6C               	swapf	??_entry_mode_set^0,f,c
   934  000308  50DF               	movf	indf2,w,c
   935  00030A  186C               	xorwf	??_entry_mode_set^0,w,c
   936  00030C  0B0F               	andlw	-241
   937  00030E  186C               	xorwf	??_entry_mode_set^0,w,c
   938  000310  6EDF               	movwf	indf2,c
   939  000312                     
   940                           ;lcd.c: 132:     _delay((unsigned long)((1)*(16000000/4000.0)));
   941  000312  0E06               	movlw	6
   942  000314  6E6C               	movwf	??_entry_mode_set^0,c
   943  000316  0E30               	movlw	48
   944  000318                     u767:
   945  000318  2EE8               	decfsz	wreg,f,c
   946  00031A  D7FE               	bra	u767
   947  00031C  2E6C               	decfsz	??_entry_mode_set^0,f,c
   948  00031E  D7FC               	bra	u767
   949  000320  D000               	nop2	
   950  000322                     
   951                           ;lcd.c: 134:     pulso(lcd);
   952  000322  C068  F065         	movff	entry_mode_set@lcd,pulso@lcd
   953  000326  C069  F066         	movff	entry_mode_set@lcd+1,pulso@lcd+1
   954  00032A  EC24  F002         	call	_pulso	;wreg free
   955  00032E  0012               	return		;funcret
   956  000330                     __end_of_entry_mode_set:
   957                           	opt callstack 0
   958                           
   959 ;; *************** function _display_onoff_control *****************
   960 ;; Defined at:
   961 ;;		line 48 in file "lcd.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  lcd             2    7[COMRAM] PTR struct .
   964 ;;		 -> NULL(0), PORTD(1), 
   965 ;;  display_on      1    9[COMRAM] unsigned char 
   966 ;;  cursor_on       1   10[COMRAM] unsigned char 
   967 ;;  blink           1   11[COMRAM] unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   979 ;;      Params:         5       0       0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0
   981 ;;      Temps:          2       0       0       0       0       0       0
   982 ;;      Totals:         7       0       0       0       0       0       0
   983 ;;Total ram usage:        7 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    3
   986 ;; This function calls:
   987 ;;		_pulso
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text4
   994  00021E                     __ptext4:
   995                           	opt callstack 0
   996  00021E                     _display_onoff_control:
   997                           	opt callstack 27
   998  00021E                     
   999                           ;lcd.c: 48: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 49: 
      +                                  char cursor_on, char blink){;lcd.c: 50:     lcd->E = 0;
  1000  00021E  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1001  000222  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1002  000226  94DF               	bcf	indf2,2,c
  1003                           
  1004                           ;lcd.c: 51:     lcd->RS = 0;
  1005  000228  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1006  00022C  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1007  000230  90DF               	bcf	indf2,0,c
  1008                           
  1009                           ;lcd.c: 52:     lcd->R_W = 0;
  1010  000232  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1011  000236  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1012  00023A  92DF               	bcf	indf2,1,c
  1013  00023C                     
  1014                           ;lcd.c: 55:     lcd->data = 0x00;
  1015  00023C  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1016  000240  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1017  000244  0E0F               	movlw	-241
  1018  000246  16DF               	andwf	indf2,f,c
  1019  000248                     
  1020                           ;lcd.c: 56:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1021  000248  0E06               	movlw	6
  1022  00024A  6E6D               	movwf	??_display_onoff_control^0,c
  1023  00024C  0E30               	movlw	48
  1024  00024E                     u777:
  1025  00024E  2EE8               	decfsz	wreg,f,c
  1026  000250  D7FE               	bra	u777
  1027  000252  2E6D               	decfsz	??_display_onoff_control^0,f,c
  1028  000254  D7FC               	bra	u777
  1029  000256  D000               	nop2	
  1030  000258                     
  1031                           ;lcd.c: 58:     pulso(lcd);
  1032  000258  C068  F065         	movff	display_onoff_control@lcd,pulso@lcd
  1033  00025C  C069  F066         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1034  000260  EC24  F002         	call	_pulso	;wreg free
  1035  000264                     
  1036                           ;lcd.c: 62:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  1037  000264  90D8               	bcf	status,0,c
  1038  000266  346B               	rlcf	display_onoff_control@cursor_on^0,w,c
  1039  000268  6E6D               	movwf	??_display_onoff_control^0,c
  1040  00026A  446A               	rlncf	display_onoff_control@display_on^0,w,c
  1041  00026C  46E8               	rlncf	wreg,f,c
  1042  00026E  0BFC               	andlw	252
  1043  000270  106D               	iorwf	??_display_onoff_control^0,w,c
  1044  000272  106C               	iorwf	display_onoff_control@blink^0,w,c
  1045  000274  6E6E               	movwf	(??_display_onoff_control+1)^0,c
  1046  000276  0E08               	movlw	8
  1047  000278  126E               	iorwf	(??_display_onoff_control+1)^0,f,c
  1048  00027A  C068  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1049  00027E  C069  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1050  000282  3A6E               	swapf	(??_display_onoff_control+1)^0,f,c
  1051  000284  50DF               	movf	indf2,w,c
  1052  000286  186E               	xorwf	(??_display_onoff_control+1)^0,w,c
  1053  000288  0B0F               	andlw	-241
  1054  00028A  186E               	xorwf	(??_display_onoff_control+1)^0,w,c
  1055  00028C  6EDF               	movwf	indf2,c
  1056  00028E                     
  1057                           ;lcd.c: 63:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1058  00028E  0E06               	movlw	6
  1059  000290  6E6D               	movwf	??_display_onoff_control^0,c
  1060  000292  0E30               	movlw	48
  1061  000294                     u787:
  1062  000294  2EE8               	decfsz	wreg,f,c
  1063  000296  D7FE               	bra	u787
  1064  000298  2E6D               	decfsz	??_display_onoff_control^0,f,c
  1065  00029A  D7FC               	bra	u787
  1066  00029C  D000               	nop2	
  1067  00029E                     
  1068                           ;lcd.c: 65:     pulso(lcd);
  1069  00029E  C068  F065         	movff	display_onoff_control@lcd,pulso@lcd
  1070  0002A2  C069  F066         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1071  0002A6  EC24  F002         	call	_pulso	;wreg free
  1072  0002AA  0012               	return		;funcret
  1073  0002AC                     __end_of_display_onoff_control:
  1074                           	opt callstack 0
  1075                           
  1076 ;; *************** function _pulso *****************
  1077 ;; Defined at:
  1078 ;;		line 11 in file "lcd.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  lcd             2    4[COMRAM] PTR struct .
  1081 ;;		 -> NULL(0), PORTD(1), 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr2l, fsr2h, status,2
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1093 ;;      Params:         2       0       0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0
  1095 ;;      Temps:          1       0       0       0       0       0       0
  1096 ;;      Totals:         3       0       0       0       0       0       0
  1097 ;;Total ram usage:        3 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    2
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_function_set
  1104 ;;		_display_onoff_control
  1105 ;;		_entry_mode_set
  1106 ;;		_write_char
  1107 ;;		_lcd_cmd
  1108 ;;		_clear_display
  1109 ;;		_return_home
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text5
  1114  000448                     __ptext5:
  1115                           	opt callstack 0
  1116  000448                     _pulso:
  1117                           	opt callstack 27
  1118  000448                     
  1119                           ;lcd.c: 13:     lcd->E = 1;
  1120  000448  C065  FFD9         	movff	pulso@lcd,fsr2l
  1121  00044C  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1122  000450  84DF               	bsf	indf2,2,c
  1123  000452                     
  1124                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1125  000452  0E06               	movlw	6
  1126  000454  6E67               	movwf	??_pulso^0,c
  1127  000456  0E30               	movlw	48
  1128  000458                     u797:
  1129  000458  2EE8               	decfsz	wreg,f,c
  1130  00045A  D7FE               	bra	u797
  1131  00045C  2E67               	decfsz	??_pulso^0,f,c
  1132  00045E  D7FC               	bra	u797
  1133  000460  D000               	nop2	
  1134  000462                     
  1135                           ;lcd.c: 17:     lcd->E = 0;
  1136  000462  C065  FFD9         	movff	pulso@lcd,fsr2l
  1137  000466  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1138  00046A  94DF               	bcf	indf2,2,c
  1139                           
  1140                           ;lcd.c: 18:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1141  00046C  0E1A               	movlw	26
  1142  00046E  6E67               	movwf	??_pulso^0,c
  1143  000470  0EF8               	movlw	248
  1144  000472                     u807:
  1145  000472  2EE8               	decfsz	wreg,f,c
  1146  000474  D7FE               	bra	u807
  1147  000476  2E67               	decfsz	??_pulso^0,f,c
  1148  000478  D7FC               	bra	u807
  1149  00047A  D000               	nop2	
  1150  00047C                     
  1151                           ;lcd.c: 19:     lcd->data = 0x00;
  1152  00047C  C065  FFD9         	movff	pulso@lcd,fsr2l
  1153  000480  C066  FFDA         	movff	pulso@lcd+1,fsr2h
  1154  000484  0E0F               	movlw	-241
  1155  000486  16DF               	andwf	indf2,f,c
  1156  000488  0012               	return		;funcret
  1157  00048A                     __end_of_pulso:
  1158                           	opt callstack 0
  1159                           
  1160 ;; *************** function _int_handler *****************
  1161 ;; Defined at:
  1162 ;;		line 22 in file "main.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1176 ;;      Params:         0       0       0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0
  1178 ;;      Temps:          2       0       0       0       0       0       0
  1179 ;;      Totals:         2       0       0       0       0       0       0
  1180 ;;Total ram usage:        2 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    1
  1183 ;; This function calls:
  1184 ;;		_le_entrada
  1185 ;; This function is called by:
  1186 ;;		Interrupt level 2
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	intcode
  1191  000008                     __pintcode:
  1192                           	opt callstack 0
  1193  000008                     _int_handler:
  1194                           	opt callstack 27
  1195                           
  1196                           ;incstack = 0
  1197  000008  8274               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1198  00000A  ED65  F002         	call	int_func,f	;refresh shadow registers
  1199                           
  1200                           	psect	intcode_body
  1201  0004CA                     __pintcode_body:
  1202                           	opt callstack 27
  1203  0004CA                     int_func:
  1204                           	opt callstack 27
  1205  0004CA  0006               	pop		; remove dummy address from shadow register refresh
  1206  0004CC  CFD9 F063          	movff	fsr2l,??_int_handler
  1207  0004D0  CFDA F064          	movff	fsr2h,??_int_handler+1
  1208  0004D4                     
  1209                           ;main.c: 24:      if(INTCONbits.TMR0IF == 1){
  1210  0004D4  A4F2               	btfss	242,2,c	;volatile
  1211  0004D6  EF6F  F002         	goto	i2u35_41
  1212  0004DA  EF71  F002         	goto	i2u35_40
  1213  0004DE                     i2u35_41:
  1214  0004DE  EF7A  F002         	goto	i2l38
  1215  0004E2                     i2u35_40:
  1216  0004E2                     
  1217                           ;main.c: 25:         TMR0L = 0x00;
  1218  0004E2  0E00               	movlw	0
  1219  0004E4  6ED6               	movwf	214,c	;volatile
  1220  0004E6                     
  1221                           ;main.c: 26:         le_entrada(botoes);
  1222  0004E6  C072  F061         	movff	_botoes,le_entrada@botoes
  1223  0004EA  C073  F062         	movff	_botoes+1,le_entrada@botoes+1
  1224  0004EE  EC98  F001         	call	_le_entrada	;wreg free
  1225  0004F2                     
  1226                           ;main.c: 27:         INTCONbits.TMR0IF = 0;
  1227  0004F2  94F2               	bcf	242,2,c	;volatile
  1228  0004F4                     i2l38:
  1229  0004F4  C064  FFDA         	movff	??_int_handler+1,fsr2h
  1230  0004F8  C063  FFD9         	movff	??_int_handler,fsr2l
  1231  0004FC  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1232  0004FE  0011               	retfie		f
  1233  000500                     __end_of_int_handler:
  1234                           	opt callstack 0
  1235                           
  1236 ;; *************** function _le_entrada *****************
  1237 ;; Defined at:
  1238 ;;		line 4 in file "keyboard.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  botoes          2    0[COMRAM] PTR struct .
  1241 ;;		 -> NULL(0), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		fsr2l, fsr2h
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         2       0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         2       0       0       0       0       0       0
  1257 ;;Total ram usage:        2 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_int_handler
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text7
  1267  000330                     __ptext7:
  1268                           	opt callstack 0
  1269  000330                     _le_entrada:
  1270                           	opt callstack 27
  1271  000330                     
  1272                           ;keyboard.c: 5:     PORTBbits.RB4 = 1;
  1273  000330  8881               	bsf	129,4,c	;volatile
  1274  000332                     
  1275                           ;keyboard.c: 6:     botoes->U = PORTBbits.RB1;
  1276  000332  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1277  000336  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1278  00033A  80DF               	bsf	indf2,0,c
  1279  00033C  A281               	btfss	129,1,c	;volatile
  1280  00033E  90DF               	bcf	indf2,0,c
  1281  000340                     
  1282                           ;keyboard.c: 7:     PORTBbits.RB4 = 0;
  1283  000340  9881               	bcf	129,4,c	;volatile
  1284  000342                     
  1285                           ;keyboard.c: 9:     PORTBbits.RB5 = 1;
  1286  000342  8A81               	bsf	129,5,c	;volatile
  1287                           
  1288                           ;keyboard.c: 10:     botoes->L = PORTBbits.RB0;
  1289  000344  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1290  000348  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1291  00034C  84DF               	bsf	indf2,2,c
  1292  00034E  A081               	btfss	129,0,c	;volatile
  1293  000350  94DF               	bcf	indf2,2,c
  1294                           
  1295                           ;keyboard.c: 11:     botoes->R = PORTBbits.RB2;
  1296  000352  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1297  000356  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1298  00035A  86DF               	bsf	indf2,3,c
  1299  00035C  A481               	btfss	129,2,c	;volatile
  1300  00035E  96DF               	bcf	indf2,3,c
  1301  000360                     
  1302                           ;keyboard.c: 12:     PORTBbits.RB5 = 0;
  1303  000360  9A81               	bcf	129,5,c	;volatile
  1304  000362                     
  1305                           ;keyboard.c: 14:     PORTBbits.RB6 = 1;
  1306  000362  8C81               	bsf	129,6,c	;volatile
  1307                           
  1308                           ;keyboard.c: 15:     botoes->D = PORTBbits.RB1;
  1309  000364  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1310  000368  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1311  00036C  82DF               	bsf	indf2,1,c
  1312  00036E  A281               	btfss	129,1,c	;volatile
  1313  000370  92DF               	bcf	indf2,1,c
  1314  000372                     
  1315                           ;keyboard.c: 16:     PORTBbits.RB6 = 0;
  1316  000372  9C81               	bcf	129,6,c	;volatile
  1317  000374                     
  1318                           ;keyboard.c: 18:     PORTBbits.RB7 = 1;
  1319  000374  8E81               	bsf	129,7,c	;volatile
  1320                           
  1321                           ;keyboard.c: 19:     botoes->Enter = PORTBbits.RB0;
  1322  000376  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1323  00037A  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1324  00037E  88DF               	bsf	indf2,4,c
  1325  000380  A081               	btfss	129,0,c	;volatile
  1326  000382  98DF               	bcf	indf2,4,c
  1327                           
  1328                           ;keyboard.c: 20:     botoes->Esc = PORTBbits.RB2;
  1329  000384  C061  FFD9         	movff	le_entrada@botoes,fsr2l
  1330  000388  C062  FFDA         	movff	le_entrada@botoes+1,fsr2h
  1331  00038C  8ADF               	bsf	indf2,5,c
  1332  00038E  A481               	btfss	129,2,c	;volatile
  1333  000390  9ADF               	bcf	indf2,5,c
  1334  000392                     
  1335                           ;keyboard.c: 21:     PORTBbits.RB7 = 0;
  1336  000392  9E81               	bcf	129,7,c	;volatile
  1337  000394  0012               	return		;funcret
  1338  000396                     __end_of_le_entrada:
  1339                           	opt callstack 0
  1340  0000                     
  1341                           	psect	rparam
  1342  0000                     
  1343                           	psect	temp
  1344  000074                     btemp:
  1345                           	opt callstack 0
  1346  000074                     	ds	1
  1347  0000                     int$flags	set	btemp
  1348  0000                     wtemp8	set	btemp+1
  1349  0000                     ttemp5	set	btemp+1
  1350  0000                     ttemp6	set	btemp+4
  1351  0000                     ttemp7	set	btemp+8
  1352                           tosu	equ	0xFFF
  1353                           tosh	equ	0xFFE
  1354                           tosl	equ	0xFFD
  1355                           stkptr	equ	0xFFC
  1356                           pclatu	equ	0xFFB
  1357                           pclath	equ	0xFFA
  1358                           pcl	equ	0xFF9
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           prodh	equ	0xFF4
  1364                           prodl	equ	0xFF3
  1365                           indf0	equ	0xFEF
  1366                           postinc0	equ	0xFEE
  1367                           postdec0	equ	0xFED
  1368                           preinc0	equ	0xFEC
  1369                           plusw0	equ	0xFEB
  1370                           fsr0h	equ	0xFEA
  1371                           fsr0l	equ	0xFE9
  1372                           wreg	equ	0xFE8
  1373                           indf1	equ	0xFE7
  1374                           postinc1	equ	0xFE6
  1375                           postdec1	equ	0xFE5
  1376                           preinc1	equ	0xFE4
  1377                           plusw1	equ	0xFE3
  1378                           fsr1h	equ	0xFE2
  1379                           fsr1l	equ	0xFE1
  1380                           bsr	equ	0xFE0
  1381                           indf2	equ	0xFDF
  1382                           postinc2	equ	0xFDE
  1383                           postdec2	equ	0xFDD
  1384                           preinc2	equ	0xFDC
  1385                           plusw2	equ	0xFDB
  1386                           fsr2h	equ	0xFDA
  1387                           fsr2l	equ	0xFD9
  1388                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        160
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15     115
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    le_entrada@botoes	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR[1]), 

    botoes	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_function_set
    _write_char->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    _int_handler->_le_entrada

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8408
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _write_char                                           4     1      3    3478
                                              7 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1720
                                              7 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1556
                                              7 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1654
                                              7 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (2) _pulso                                                3     1      2    1130
                                              4 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int_handler                                          2     2      0     208
                                              2 COMRAM     2     2      0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (4) _le_entrada                                           2     0      2     208
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _write_char
     _pulso

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      73       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3      15        0.0%
DATA                 0      0      B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 10 23:28:59 2020

         ?_display_onoff_control 0068                      __CFG_OSC$HS 000000  
                            l151 00EA                              l154 02AA  
                            l170 032E                              l148 0488  
                            l173 021C                              u360 016E  
                            u361 016A                              u707 01C8  
                            u717 01FC                              u807 0472  
                            u727 0046                              u737 007E  
                            u747 00D4                              u757 02DC  
                            u767 0318                              u777 024E  
                            u787 0294                              u797 0458  
                            _lcd 0070                              wreg 000FE8  
                  write_char@lcd 0068                    creditos@F3056 0051  
                  creditos@F3059 0041                     __CFG_WDT$OFF 000000  
                           l1310 0012                             l1320 0078  
                           l1312 0030                             l1400 012A  
                           l1330 021E                             l1322 0088  
                           l1314 0040                             l1402 0142  
                           l1340 028E                             l1332 023C  
                           l1324 0094                             l1316 0050  
                           l1404 0156                             l1342 029E  
                           l1334 0248                             l1350 02E6  
                           l1326 00CE                             l1318 005C  
                           l1406 0158                             l1336 0258  
                           l1352 02F2                             l1344 02AC  
                           l1328 00DE                             l1360 01A4  
                           l1408 016E                             l1290 047C  
                           l1338 0264                             l1354 0312  
                           l1346 02CA                             l1370 0206  
                           l1362 01C2                             l1284 0448  
                           l1356 0322                             l1348 02D6  
                           l1364 01D2                             l1286 0452  
                           l1366 01DE                             l1358 0186  
                           l1390 0104                             l1288 0462  
                           l1368 01F6                             l1392 0106  
                           l1394 0108                             l1396 010A  
                           l1388 00EC                             l1398 0112  
                           i2l38 04F4                             _main 00EC  
               le_entrada@botoes 0061                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0074  
                           start 000E            function_set@num_lines 006B  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                function_set@lcd 0068                            ?_main 0061  
                          _T0CON 000FD5                            i2l184 0394  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0061  
                          _pulso 0448                            tablat 000FF5  
                          ttemp5 0075                            ttemp6 0078  
                          ttemp7 007C                            status 000FD8  
                          wtemp8 0075                  __initialization 03F6  
                   __end_of_main 0186                           ??_main 0070  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         ?_pulso 0065                           i2l1300 0360  
                         i2l1302 0362                           i2l1304 0372  
                         i2l1306 0374                           i2l1308 0392  
                         i2l1292 0330                           i2l1380 04D4  
                         i2l1294 0332                           i2l1382 04E2  
                         i2l1296 0340                           i2l1384 04E6  
                         i2l1298 0342                           i2l1386 04F2  
                         _botoes 0072                    ?_function_set 0068  
                   __pdataCOMRAM 0001                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
       display_onoff_control@lcd 0068                       __accesstop 0080  
        __end_of__initialization 043A                    ___rparam_used 000001  
        ??_display_onoff_control 006D                   __pcstackCOMRAM 0061  
                   __pidataBANK0 048A                    __end_of_pulso 048A  
                 ??_function_set 006D             __size_of_int_handler 04F8  
                        ??_pulso 0067                       __pnvCOMRAM 0070  
    entry_mode_set@display_shift 006B                          i2u35_40 04E2  
                        i2u35_41 04DE                       _le_entrada 0330  
        __size_of_entry_mode_set 0084                          __Hparam 0000  
 display_onoff_control@cursor_on 006B                          __Lparam 0000  
                        __pcinit 03F6                          __ramtop 0600  
                        __ptext0 00EC                          __ptext1 0186  
                        __ptext2 0012                          __ptext3 02AC  
                        __ptext4 021E                          __ptext5 0448  
                        __ptext7 0330                        _T0CONbits 000FD5  
                 __pintcode_body 04CA             end_of_initialization 043A  
           __end_of_function_set 00EC                    __Lmediumconst 0000  
                        int_func 04CA                          postdec1 000FE5  
                        postinc0 000FEE                        _PORTBbits 000F81  
                    ?_le_entrada 0061   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 02AC                       _write_char 0186  
                  __pidataCOMRAM 0396              start_initialization 03F6  
                 _entry_mode_set 02AC                      __pdataBANK0 0080  
            __size_of_le_entrada 0066                      __pbssCOMRAM 0072  
                  ??_int_handler 0063            __size_of_function_set 00DA  
                instrucoes@F3083 0031                  instrucoes@F3092 0001  
                instrucoes@F3086 0021                  instrucoes@F3089 0011  
         __end_of_entry_mode_set 0330                        __pintcode 0008  
                    ?_write_char 0068                     _function_set 0012  
                 __size_of_pulso 0042              __end_of_int_handler 0500  
                ?_entry_mode_set 0068     entry_mode_set@move_direction 006A  
display_onoff_control@display_on 006A       display_onoff_control@blink 006C  
                    write_char@c 006A                        menu@F3101 00B0  
                      menu@F3110 0080                        menu@F3104 00A0  
                      menu@F3107 0090                     ??_le_entrada 0063  
                      copy_data0 040A                        copy_data1 042A  
            __size_of_write_char 0098                         __Hrparam 0000  
                       __Lrparam 0000                entry_mode_set@lcd 0068  
             __end_of_le_entrada 0396                      _int_handler 0008  
                  __size_of_main 009A                         int$flags 0074  
          _display_onoff_control 021E                       _INTCONbits 000FF2  
                       intlevel2 0000          function_set@data_lenght 006A  
                   ??_write_char 006B                         pulso@lcd 0065  
               ??_entry_mode_set 006C            function_set@char_font 006C  
             __end_of_write_char 021E  
