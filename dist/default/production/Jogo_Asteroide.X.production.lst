

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 15 21:16:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000EC6                     __pidataCOMRAM:
    69                           	opt callstack 0
    70                           
    71                           ;initializer for instrucoes@F3107
    72  000EC6  50                 	db	80
    73  000EC7  52                 	db	82
    74  000EC8  4F                 	db	79
    75  000EC9  20                 	db	32
    76  000ECA  4D                 	db	77
    77  000ECB  45                 	db	69
    78  000ECC  4E                 	db	78
    79  000ECD  55                 	db	85
    80  000ECE  00                 	db	0
    81  000ECF  00                 	db	0
    82  000ED0  00                 	db	0
    83  000ED1  00                 	db	0
    84  000ED2  00                 	db	0
    85  000ED3  00                 	db	0
    86  000ED4  00                 	db	0
    87  000ED5  00                 	db	0
    88                           
    89                           ;initializer for instrucoes@F3104
    90  000ED6  32                 	db	50
    91  000ED7  2E                 	db	46
    92  000ED8  45                 	db	69
    93  000ED9  53                 	db	83
    94  000EDA  43                 	db	67
    95  000EDB  41                 	db	65
    96  000EDC  50                 	db	80
    97  000EDD  45                 	db	69
    98  000EDE  20                 	db	32
    99  000EDF  56                 	db	86
   100  000EE0  4F                 	db	79
   101  000EE1  4C                 	db	76
   102  000EE2  54                 	db	84
   103  000EE3  41                 	db	65
   104  000EE4  00                 	db	0
   105  000EE5  00                 	db	0
   106                           
   107                           ;initializer for instrucoes@F3101
   108  000EE6  4E                 	db	78
   109  000EE7  41                 	db	65
   110  000EE8  56                 	db	86
   111  000EE9  45                 	db	69
   112  000EEA  00                 	db	0
   113  000EEB  00                 	db	0
   114  000EEC  00                 	db	0
   115  000EED  00                 	db	0
   116  000EEE  00                 	db	0
   117  000EEF  00                 	db	0
   118  000EF0  00                 	db	0
   119  000EF1  00                 	db	0
   120  000EF2  00                 	db	0
   121  000EF3  00                 	db	0
   122  000EF4  00                 	db	0
   123  000EF5  00                 	db	0
   124                           
   125                           ;initializer for instrucoes@F3098
   126  000EF6  31                 	db	49
   127  000EF7  2E                 	db	46
   128  000EF8  53                 	db	83
   129  000EF9  45                 	db	69
   130  000EFA  54                 	db	84
   131  000EFB  41                 	db	65
   132  000EFC  53                 	db	83
   133  000EFD  20                 	db	32
   134  000EFE  4D                 	db	77
   135  000EFF  4F                 	db	79
   136  000F00  56                 	db	86
   137  000F01  45                 	db	69
   138  000F02  4D                 	db	77
   139  000F03  20                 	db	32
   140  000F04  41                 	db	65
   141  000F05  00                 	db	0
   142                           
   143                           ;initializer for _lcd
   144  000F06  83                 	db	131
   145  000F07  0F                 	db	15
   146  0000                     _PORTBbits	set	3969
   147  0000                     _T0CONbits	set	4053
   148  0000                     _T0CON	set	4053
   149  0000                     _TRISD	set	3989
   150  0000                     _PORTB	set	3969
   151  0000                     _TRISB	set	3987
   152  0000                     _ADCON1	set	4033
   153  0000                     _TMR0L	set	4054
   154  0000                     _INTCONbits	set	4082
   155  0000                     _PORTD	set	3971
   156                           
   157                           	psect	smallconst
   158  000600                     __psmallconst:
   159                           	opt callstack 0
   160  000600  00                 	db	0
   161  000601                     STR_5:
   162  000601  31                 	db	49	;'1'
   163  000602  2E                 	db	46
   164  000603  4A                 	db	74	;'J'
   165  000604  4F                 	db	79	;'O'
   166  000605  47                 	db	71	;'G'
   167  000606  41                 	db	65	;'A'
   168  000607  52                 	db	82	;'R'
   169  000608  2E                 	db	46
   170  000609  2E                 	db	46
   171  00060A  2E                 	db	46
   172  00060B  2E                 	db	46
   173  00060C  2E                 	db	46
   174  00060D  2E                 	db	46
   175  00060E  2E                 	db	46
   176  00060F  2E                 	db	46
   177  000610  2E                 	db	46
   178  000611  00                 	db	0
   179  000612                     STR_7:
   180  000612  33                 	db	51	;'3'
   181  000613  2E                 	db	46
   182  000614  43                 	db	67	;'C'
   183  000615  52                 	db	82	;'R'
   184  000616  45                 	db	69	;'E'
   185  000617  44                 	db	68	;'D'
   186  000618  49                 	db	73	;'I'
   187  000619  54                 	db	84	;'T'
   188  00061A  4F                 	db	79	;'O'
   189  00061B  53                 	db	83	;'S'
   190  00061C  2E                 	db	46
   191  00061D  2E                 	db	46
   192  00061E  2E                 	db	46
   193  00061F  2E                 	db	46
   194  000620  2E                 	db	46
   195  000621  2E                 	db	46
   196  000622  00                 	db	0
   197  000623                     STR_8:
   198  000623  34                 	db	52	;'4'
   199  000624  2E                 	db	46
   200  000625  46                 	db	70	;'F'
   201  000626  49                 	db	73	;'I'
   202  000627  4E                 	db	78	;'N'
   203  000628  41                 	db	65	;'A'
   204  000629  4C                 	db	76	;'L'
   205  00062A  49                 	db	73	;'I'
   206  00062B  5A                 	db	90	;'Z'
   207  00062C  41                 	db	65	;'A'
   208  00062D  52                 	db	82	;'R'
   209  00062E  2E                 	db	46
   210  00062F  2E                 	db	46
   211  000630  2E                 	db	46
   212  000631  2E                 	db	46
   213  000632  2E                 	db	46
   214  000633  00                 	db	0
   215  000634                     STR_6:
   216  000634  32                 	db	50	;'2'
   217  000635  2E                 	db	46
   218  000636  49                 	db	73	;'I'
   219  000637  4E                 	db	78	;'N'
   220  000638  53                 	db	83	;'S'
   221  000639  54                 	db	84	;'T'
   222  00063A  52                 	db	82	;'R'
   223  00063B  55                 	db	85	;'U'
   224  00063C  43                 	db	67	;'C'
   225  00063D  4F                 	db	79	;'O'
   226  00063E  45                 	db	69	;'E'
   227  00063F  53                 	db	83	;'S'
   228  000640  2E                 	db	46
   229  000641  2E                 	db	46
   230  000642  2E                 	db	46
   231  000643  2E                 	db	46
   232  000644  00                 	db	0
   233  000645                     STR_3:
   234  000645  20                 	db	32
   235  000646  20                 	db	32
   236  000647  20                 	db	32
   237  000648  20                 	db	32
   238  000649  20                 	db	32
   239  00064A  20                 	db	32
   240  00064B  20                 	db	32
   241  00064C  20                 	db	32
   242  00064D  20                 	db	32
   243  00064E  20                 	db	32
   244  00064F  20                 	db	32
   245  000650  20                 	db	32
   246  000651  20                 	db	32
   247  000652  20                 	db	32
   248  000653  20                 	db	32
   249  000654  00                 	db	0
   250  000655                     STR_1:
   251  000655  31                 	db	49	;'1'
   252  000656  2E                 	db	46
   253  000657  44                 	db	68	;'D'
   254  000658  49                 	db	73	;'I'
   255  000659  4F                 	db	79	;'O'
   256  00065A  47                 	db	71	;'G'
   257  00065B  4F                 	db	79	;'O'
   258  00065C  20                 	db	32
   259  00065D  4D                 	db	77	;'M'
   260  00065E  41                 	db	65	;'A'
   261  00065F  52                 	db	82	;'R'
   262  000660  43                 	db	67	;'C'
   263  000661  48                 	db	72	;'H'
   264  000662  49                 	db	73	;'I'
   265  000663  2E                 	db	46
   266  000664  00                 	db	0
   267  000665                     STR_2:
   268  000665  32                 	db	50	;'2'
   269  000666  2E                 	db	46
   270  000667  47                 	db	71	;'G'
   271  000668  45                 	db	69	;'E'
   272  000669  4F                 	db	79	;'O'
   273  00066A  52                 	db	82	;'R'
   274  00066B  47                 	db	71	;'G'
   275  00066C  45                 	db	69	;'E'
   276  00066D  20                 	db	32
   277  00066E  4E                 	db	78	;'N'
   278  00066F  41                 	db	65	;'A'
   279  000670  52                 	db	82	;'R'
   280  000671  44                 	db	68	;'D'
   281  000672  45                 	db	69	;'E'
   282  000673  53                 	db	83	;'S'
   283  000674  00                 	db	0
   284  0000                     
   285                           ; #config settings
   286  000675  00                 	db	0	; dummy byte at the end
   287  0000                     
   288                           	psect	cinit
   289  000E7C                     __pcinit:
   290                           	opt callstack 0
   291  000E7C                     start_initialization:
   292                           	opt callstack 0
   293  000E7C                     __initialization:
   294                           	opt callstack 0
   295                           
   296                           ; Initialize objects allocated to COMRAM (66 bytes)
   297                           ; load TBLPTR registers with __pidataCOMRAM
   298  000E7C  0EC6               	movlw	low __pidataCOMRAM
   299  000E7E  6EF6               	movwf	tblptrl,c
   300  000E80  0E0E               	movlw	high __pidataCOMRAM
   301  000E82  6EF7               	movwf	tblptrh,c
   302  000E84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   303  000E86  6EF8               	movwf	tblptru,c
   304  000E88  EE00  F001         	lfsr	0,__pdataCOMRAM
   305  000E8C  EE10 F042          	lfsr	1,66
   306  000E90                     copy_data0:
   307  000E90  0009               	tblrd		*+
   308  000E92  CFF5 FFEE          	movff	tablat,postinc0
   309  000E96  50E5               	movf	postdec1,w,c
   310  000E98  50E1               	movf	fsr1l,w,c
   311  000E9A  E1FA               	bnz	copy_data0
   312                           
   313                           ; Clear objects allocated to BANK0 (64 bytes)
   314  000E9C  EE00  F080         	lfsr	0,__pbssBANK0
   315  000EA0  0E40               	movlw	64
   316  000EA2                     clear_0:
   317  000EA2  6AEE               	clrf	postinc0,c
   318  000EA4  06E8               	decf	wreg,f,c
   319  000EA6  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to COMRAM (7 bytes)
   322  000EA8  EE00  F060         	lfsr	0,__pbssCOMRAM
   323  000EAC  0E07               	movlw	7
   324  000EAE                     clear_1:
   325  000EAE  6AEE               	clrf	postinc0,c
   326  000EB0  06E8               	decf	wreg,f,c
   327  000EB2  E1FD               	bnz	clear_1
   328  000EB4                     end_of_initialization:
   329                           	opt callstack 0
   330  000EB4                     __end_of__initialization:
   331                           	opt callstack 0
   332  000EB4  9067               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   333  000EB6  9267               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   334  000EB8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   335  000EBA  6EF8               	movwf	tblptru,c
   336  000EBC  0E06               	movlw	high __Lsmallconst
   337  000EBE  6EF7               	movwf	tblptrh,c
   338  000EC0  0100               	movlb	0
   339  000EC2  EFCE  F006         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342  000060                     __pbssCOMRAM:
   343                           	opt callstack 0
   344  000060                     _op:
   345                           	opt callstack 0
   346  000060                     	ds	1
   347  000061                     _cont_r:
   348                           	opt callstack 0
   349  000061                     	ds	1
   350  000062                     _cont_l:
   351                           	opt callstack 0
   352  000062                     	ds	1
   353  000063                     _cont_d:
   354                           	opt callstack 0
   355  000063                     	ds	1
   356  000064                     _cont_u:
   357                           	opt callstack 0
   358  000064                     	ds	1
   359  000065                     _botoes_ant:
   360                           	opt callstack 0
   361  000065                     	ds	1
   362  000066                     _botoes:
   363                           	opt callstack 0
   364  000066                     	ds	1
   365                           
   366                           	psect	dataCOMRAM
   367  000001                     __pdataCOMRAM:
   368                           	opt callstack 0
   369  000001                     instrucoes@F3107:
   370                           	opt callstack 0
   371  000001                     	ds	16
   372  000011                     instrucoes@F3104:
   373                           	opt callstack 0
   374  000011                     	ds	16
   375  000021                     instrucoes@F3101:
   376                           	opt callstack 0
   377  000021                     	ds	16
   378  000031                     instrucoes@F3098:
   379                           	opt callstack 0
   380  000031                     	ds	16
   381  000041                     _lcd:
   382                           	opt callstack 0
   383  000041                     	ds	2
   384                           
   385                           	psect	bssBANK0
   386  000080                     __pbssBANK0:
   387                           	opt callstack 0
   388  000080                     _mat_disp:
   389                           	opt callstack 0
   390  000080                     	ds	64
   391                           
   392                           	psect	cstackCOMRAM
   393  000043                     __pcstackCOMRAM:
   394                           	opt callstack 0
   395  000043                     pulso@lcd:
   396                           	opt callstack 0
   397  000043                     write_char@lcd:
   398                           	opt callstack 0
   399  000043                     strcpy@dest:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x0
   403  000043                     	ds	2
   404  000045                     ??_pulso:
   405  000045                     write_char@c:
   406                           	opt callstack 0
   407  000045                     strcpy@src:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x2
   411  000045                     	ds	1
   412  000046                     ??_write_char:
   413  000046                     function_set@lcd:
   414                           	opt callstack 0
   415  000046                     display_onoff_control@lcd:
   416                           	opt callstack 0
   417  000046                     lcd_cmd@lcd:
   418                           	opt callstack 0
   419  000046                     entry_mode_set@lcd:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x3
   423  000046                     	ds	1
   424  000047                     strcpy@s:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x4
   428  000047                     	ds	1
   429  000048                     function_set@data_lenght:
   430                           	opt callstack 0
   431  000048                     display_onoff_control@display_on:
   432                           	opt callstack 0
   433  000048                     lcd_cmd@a:
   434                           	opt callstack 0
   435  000048                     entry_mode_set@move_direction:
   436                           	opt callstack 0
   437                           
   438                           ; 1 bytes @ 0x5
   439  000048                     	ds	1
   440  000049                     ??_lcd_cmd:
   441  000049                     function_set@num_lines:
   442                           	opt callstack 0
   443  000049                     display_onoff_control@cursor_on:
   444                           	opt callstack 0
   445  000049                     entry_mode_set@display_shift:
   446                           	opt callstack 0
   447  000049                     strcpy@d:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x6
   451  000049                     	ds	1
   452  00004A                     ??_entry_mode_set:
   453  00004A                     function_set@char_font:
   454                           	opt callstack 0
   455  00004A                     display_onoff_control@blink:
   456                           	opt callstack 0
   457  00004A                     goto_XY@lcd:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x7
   461  00004A                     	ds	1
   462  00004B                     ??_function_set:
   463  00004B                     ??_display_onoff_control:
   464                           
   465                           ; 1 bytes @ 0x8
   466  00004B                     	ds	1
   467  00004C                     goto_XY@x:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x9
   471  00004C                     	ds	1
   472  00004D                     goto_XY@y:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0xA
   476  00004D                     	ds	1
   477  00004E                     ??_goto_XY:
   478                           
   479                           ; 1 bytes @ 0xB
   480  00004E                     	ds	1
   481  00004F                     goto_XY@z:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0xC
   485  00004F                     	ds	1
   486  000050                     goto_XY@a:
   487                           	opt callstack 0
   488                           
   489                           ; 1 bytes @ 0xD
   490  000050                     	ds	1
   491  000051                     goto_XY@temp:
   492                           	opt callstack 0
   493                           
   494                           ; 1 bytes @ 0xE
   495  000051                     	ds	1
   496  000052                     print_mat@lcd:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0xF
   500  000052                     	ds	2
   501  000054                     ??_print_mat:
   502                           
   503                           ; 1 bytes @ 0x11
   504  000054                     	ds	4
   505  000058                     print_mat@j:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x15
   509  000058                     	ds	2
   510  00005A                     print_mat@i:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x17
   514  00005A                     	ds	2
   515  00005C                     creditos@lcd:
   516                           	opt callstack 0
   517  00005C                     menu@lcd:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x19
   521  00005C                     	ds	2
   522  00005E                     gerenciador@lcd:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x1B
   526  00005E                     	ds	2
   527  000060                     
   528                           ; 1 bytes @ 0x1D
   529 ;;
   530 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   531 ;;
   532 ;; *************** function _main *****************
   533 ;; Defined at:
   534 ;;		line 32 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   548 ;;      Params:         0       0       0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels required when called:    8
   554 ;; This function calls:
   555 ;;		_display_onoff_control
   556 ;;		_entry_mode_set
   557 ;;		_function_set
   558 ;;		_gerenciador
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text0
   565  000D9C                     __ptext0:
   566                           	opt callstack 0
   567  000D9C                     _main:
   568                           	opt callstack 23
   569  000D9C                     
   570                           ;main.c: 34:     ADCON1 = 0x0F;
   571  000D9C  0E0F               	movlw	15
   572  000D9E  6EC1               	movwf	193,c	;volatile
   573                           
   574                           ;main.c: 39:     TRISB = 0x0F;
   575  000DA0  0E0F               	movlw	15
   576  000DA2  6E93               	movwf	147,c	;volatile
   577                           
   578                           ;main.c: 42:     PORTB = 0x00;
   579  000DA4  0E00               	movlw	0
   580  000DA6  6E81               	movwf	129,c	;volatile
   581                           
   582                           ;main.c: 45:     TRISD = 0x00;
   583  000DA8  0E00               	movlw	0
   584  000DAA  6E95               	movwf	149,c	;volatile
   585                           
   586                           ;main.c: 48:     T0CON = 0x47;
   587  000DAC  0E47               	movlw	71
   588  000DAE  6ED5               	movwf	213,c	;volatile
   589                           
   590                           ;main.c: 51:     TMR0L = 0x63;
   591  000DB0  0E63               	movlw	99
   592  000DB2  6ED6               	movwf	214,c	;volatile
   593  000DB4                     
   594                           ;main.c: 54:     INTCONbits.TMR0IF = 0;
   595  000DB4  94F2               	bcf	242,2,c	;volatile
   596  000DB6                     
   597                           ;main.c: 55:     INTCONbits.TMR0IE = 1;
   598  000DB6  8AF2               	bsf	242,5,c	;volatile
   599  000DB8                     
   600                           ;main.c: 56:     INTCONbits.GIE = 1;
   601  000DB8  8EF2               	bsf	242,7,c	;volatile
   602  000DBA                     
   603                           ;main.c: 58:     function_set(lcd, 0, 1, 0);
   604  000DBA  0E83               	movlw	131
   605  000DBC  6E46               	movwf	function_set@lcd^0,c
   606  000DBE  0E0F               	movlw	15
   607  000DC0  6E47               	movwf	(function_set@lcd+1)^0,c
   608  000DC2  0E00               	movlw	0
   609  000DC4  6E48               	movwf	function_set@data_lenght^0,c
   610  000DC6  0E01               	movlw	1
   611  000DC8  6E49               	movwf	function_set@num_lines^0,c
   612  000DCA  0E00               	movlw	0
   613  000DCC  6E4A               	movwf	function_set@char_font^0,c
   614  000DCE  EC24  F005         	call	_function_set	;wreg free
   615  000DD2                     
   616                           ;main.c: 59:     display_onoff_control(lcd, 1, 1, 0);
   617  000DD2  0E83               	movlw	131
   618  000DD4  6E46               	movwf	display_onoff_control@lcd^0,c
   619  000DD6  0E0F               	movlw	15
   620  000DD8  6E47               	movwf	(display_onoff_control@lcd+1)^0,c
   621  000DDA  0E01               	movlw	1
   622  000DDC  6E48               	movwf	display_onoff_control@display_on^0,c
   623  000DDE  0E01               	movlw	1
   624  000DE0  6E49               	movwf	display_onoff_control@cursor_on^0,c
   625  000DE2  0E00               	movlw	0
   626  000DE4  6E4A               	movwf	display_onoff_control@blink^0,c
   627  000DE6  EC45  F006         	call	_display_onoff_control	;wreg free
   628  000DEA                     
   629                           ;main.c: 60:     entry_mode_set(lcd, 1,0);
   630  000DEA  0E83               	movlw	131
   631  000DEC  6E46               	movwf	entry_mode_set@lcd^0,c
   632  000DEE  0E0F               	movlw	15
   633  000DF0  6E47               	movwf	(entry_mode_set@lcd+1)^0,c
   634  000DF2  0E01               	movlw	1
   635  000DF4  6E48               	movwf	entry_mode_set@move_direction^0,c
   636  000DF6  0E00               	movlw	0
   637  000DF8  6E49               	movwf	entry_mode_set@display_shift^0,c
   638  000DFA  EC8C  F006         	call	_entry_mode_set	;wreg free
   639  000DFE                     
   640                           ;main.c: 62:     T0CONbits.TMR0ON = 1;
   641  000DFE  8ED5               	bsf	213,7,c	;volatile
   642  000E00                     
   643                           ;main.c: 64:     gerenciador(lcd);
   644  000E00  0E83               	movlw	131
   645  000E02  6E5E               	movwf	gerenciador@lcd^0,c
   646  000E04  0E0F               	movlw	15
   647  000E06  6E5F               	movwf	(gerenciador@lcd+1)^0,c
   648  000E08  ECDF  F007         	call	_gerenciador	;wreg free
   649  000E0C  EF07  F000         	goto	start
   650  000E10                     __end_of_main:
   651                           	opt callstack 0
   652                           
   653 ;; *************** function _gerenciador *****************
   654 ;; Defined at:
   655 ;;		line 15 in file "task_manager.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  lcd             2   27[COMRAM] PTR struct .
   658 ;;		 -> PORTD(1), 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   670 ;;      Params:         2       0       0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0
   673 ;;      Totals:         2       0       0       0       0       0       0
   674 ;;Total ram usage:        2 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    7
   677 ;; This function calls:
   678 ;;		_creditos
   679 ;;		_menu
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text1
   686  000FBE                     __ptext1:
   687                           	opt callstack 0
   688  000FBE                     _gerenciador:
   689                           	opt callstack 23
   690  000FBE                     l174:
   691  000FBE                     
   692                           ;task_manager.c: 17:         menu(lcd);
   693  000FBE  C05E  F05C         	movff	gerenciador@lcd,menu@lcd
   694  000FC2  C05F  F05D         	movff	gerenciador@lcd+1,menu@lcd+1
   695  000FC6  EC26  F004         	call	_menu	;wreg free
   696  000FCA                     
   697                           ;task_manager.c: 19:         if(op == 2) creditos(lcd);
   698  000FCA  0E02               	movlw	2
   699  000FCC  1860               	xorwf	_op^0,w,c
   700  000FCE  A4D8               	btfss	status,2,c
   701  000FD0  EFEC  F007         	goto	u731
   702  000FD4  EFEE  F007         	goto	u730
   703  000FD8                     u731:
   704  000FD8  EFDF  F007         	goto	l174
   705  000FDC                     u730:
   706  000FDC  C05E  F05C         	movff	gerenciador@lcd,creditos@lcd
   707  000FE0  C05F  F05D         	movff	gerenciador@lcd+1,creditos@lcd+1
   708  000FE4  EC08  F007         	call	_creditos	;wreg free
   709  000FE8  EFDF  F007         	goto	l174
   710  000FEC  0012               	return		;funcret
   711  000FEE                     __end_of_gerenciador:
   712                           	opt callstack 0
   713                           
   714 ;; *************** function _menu *****************
   715 ;; Defined at:
   716 ;;		line 110 in file "task_manager.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  lcd             2   25[COMRAM] PTR struct .
   719 ;;		 -> PORTD(1), 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      unsigned char 
   724 ;; Registers used:
   725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   731 ;;      Params:         2       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0
   734 ;;      Totals:         2       0       0       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    6
   738 ;; This function calls:
   739 ;;		_print_mat
   740 ;;		_strcpy
   741 ;; This function is called by:
   742 ;;		_gerenciador
   743 ;;		_instrucoes
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text2
   748  00084C                     __ptext2:
   749                           	opt callstack 0
   750  00084C                     _menu:
   751                           	opt callstack 23
   752  00084C                     
   753                           ;task_manager.c: 111:     strcpy(mat_disp[0], "1.JOGAR.........");
   754  00084C  0E80               	movlw	low _mat_disp
   755  00084E  6E43               	movwf	strcpy@dest^0,c
   756  000850  0E00               	movlw	high _mat_disp
   757  000852  6E44               	movwf	(strcpy@dest+1)^0,c
   758  000854  0E01               	movlw	low STR_5
   759  000856  6E45               	movwf	strcpy@src^0,c
   760  000858  0E06               	movlw	high STR_5
   761  00085A  6E46               	movwf	(strcpy@src+1)^0,c
   762  00085C  EC84  F007         	call	_strcpy	;wreg free
   763                           
   764                           ;task_manager.c: 112:     strcpy(mat_disp[1], "2.INSTRUCOES....");
   765  000860  0E90               	movlw	low (_mat_disp+16)
   766  000862  6E43               	movwf	strcpy@dest^0,c
   767  000864  0E00               	movlw	high (_mat_disp+16)
   768  000866  6E44               	movwf	(strcpy@dest+1)^0,c
   769  000868  0E34               	movlw	low STR_6
   770  00086A  6E45               	movwf	strcpy@src^0,c
   771  00086C  0E06               	movlw	high STR_6
   772  00086E  6E46               	movwf	(strcpy@src+1)^0,c
   773  000870  EC84  F007         	call	_strcpy	;wreg free
   774                           
   775                           ;task_manager.c: 113:     strcpy(mat_disp[2], "3.CREDITOS......");
   776  000874  0EA0               	movlw	low (_mat_disp+32)
   777  000876  6E43               	movwf	strcpy@dest^0,c
   778  000878  0E00               	movlw	high (_mat_disp+32)
   779  00087A  6E44               	movwf	(strcpy@dest+1)^0,c
   780  00087C  0E12               	movlw	low STR_7
   781  00087E  6E45               	movwf	strcpy@src^0,c
   782  000880  0E06               	movlw	high STR_7
   783  000882  6E46               	movwf	(strcpy@src+1)^0,c
   784  000884  EC84  F007         	call	_strcpy	;wreg free
   785                           
   786                           ;task_manager.c: 114:     strcpy(mat_disp[3], "4.FINALIZAR.....");
   787  000888  0EB0               	movlw	low (_mat_disp+48)
   788  00088A  6E43               	movwf	strcpy@dest^0,c
   789  00088C  0E00               	movlw	high (_mat_disp+48)
   790  00088E  6E44               	movwf	(strcpy@dest+1)^0,c
   791  000890  0E23               	movlw	low STR_8
   792  000892  6E45               	movwf	strcpy@src^0,c
   793  000894  0E06               	movlw	high STR_8
   794  000896  6E46               	movwf	(strcpy@src+1)^0,c
   795  000898  EC84  F007         	call	_strcpy	;wreg free
   796  00089C                     l1508:
   797                           
   798                           ;task_manager.c: 117:     mat_disp[op][15] = '<';
   799  00089C  5060               	movf	_op^0,w,c
   800  00089E  0D10               	mullw	16
   801  0008A0  0E8F               	movlw	low (_mat_disp+15)
   802  0008A2  24F3               	addwf	243,w,c
   803  0008A4  6ED9               	movwf	fsr2l,c
   804  0008A6  0E00               	movlw	high (_mat_disp+15)
   805  0008A8  20F4               	addwfc	prodh,w,c
   806  0008AA  6EDA               	movwf	fsr2h,c
   807  0008AC  0E3C               	movlw	60
   808  0008AE  6EDF               	movwf	indf2,c
   809  0008B0                     
   810                           ;task_manager.c: 118:     print_mat(lcd);
   811  0008B0  C05C  F052         	movff	menu@lcd,print_mat@lcd
   812  0008B4  C05D  F053         	movff	menu@lcd+1,print_mat@lcd+1
   813  0008B8  ECEF  F005         	call	_print_mat	;wreg free
   814                           
   815                           ;task_manager.c: 120:     while(!botoes.Enter){
   816  0008BC  EFA8  F004         	goto	l1538
   817  0008C0                     l230:
   818                           
   819                           ;task_manager.c: 121:         if((botoes.U) && (op > 0)){
   820  0008C0  A066               	btfss	_botoes^0,0,c
   821  0008C2  EF65  F004         	goto	u671
   822  0008C6  EF67  F004         	goto	u670
   823  0008CA                     u671:
   824  0008CA  EF8B  F004         	goto	l1524
   825  0008CE                     u670:
   826  0008CE  5060               	movf	_op^0,w,c
   827  0008D0  B4D8               	btfsc	status,2,c
   828  0008D2  EF6D  F004         	goto	u681
   829  0008D6  EF6F  F004         	goto	u680
   830  0008DA                     u681:
   831  0008DA  EF8B  F004         	goto	l1524
   832  0008DE                     u680:
   833  0008DE                     
   834                           ;task_manager.c: 122:             mat_disp[op][15] = '.';
   835  0008DE  5060               	movf	_op^0,w,c
   836  0008E0  0D10               	mullw	16
   837  0008E2  0E8F               	movlw	low (_mat_disp+15)
   838  0008E4  24F3               	addwf	243,w,c
   839  0008E6  6ED9               	movwf	fsr2l,c
   840  0008E8  0E00               	movlw	high (_mat_disp+15)
   841  0008EA  20F4               	addwfc	prodh,w,c
   842  0008EC  6EDA               	movwf	fsr2h,c
   843  0008EE  0E2E               	movlw	46
   844  0008F0  6EDF               	movwf	indf2,c
   845  0008F2                     
   846                           ;task_manager.c: 123:             op--;
   847  0008F2  0660               	decf	_op^0,f,c
   848  0008F4                     
   849                           ;task_manager.c: 124:             botoes.U = 0;
   850  0008F4  9066               	bcf	_botoes^0,0,c
   851  0008F6                     
   852                           ;task_manager.c: 125:             mat_disp[op][15] = '<';
   853  0008F6  5060               	movf	_op^0,w,c
   854  0008F8  0D10               	mullw	16
   855  0008FA  0E8F               	movlw	low (_mat_disp+15)
   856  0008FC  24F3               	addwf	243,w,c
   857  0008FE  6ED9               	movwf	fsr2l,c
   858  000900  0E00               	movlw	high (_mat_disp+15)
   859  000902  20F4               	addwfc	prodh,w,c
   860  000904  6EDA               	movwf	fsr2h,c
   861  000906  0E3C               	movlw	60
   862  000908  6EDF               	movwf	indf2,c
   863  00090A                     
   864                           ;task_manager.c: 126:             print_mat(lcd);
   865  00090A  C05C  F052         	movff	menu@lcd,print_mat@lcd
   866  00090E  C05D  F053         	movff	menu@lcd+1,print_mat@lcd+1
   867  000912  ECEF  F005         	call	_print_mat	;wreg free
   868  000916                     l1524:
   869                           
   870                           ;task_manager.c: 128:         if((botoes.D) && (op < 3)){
   871  000916  A266               	btfss	_botoes^0,1,c
   872  000918  EF90  F004         	goto	u691
   873  00091C  EF92  F004         	goto	u690
   874  000920                     u691:
   875  000920  EFA8  F004         	goto	l1538
   876  000924                     u690:
   877  000924  0E03               	movlw	3
   878  000926  6060               	cpfslt	_op^0,c
   879  000928  EF98  F004         	goto	u701
   880  00092C  EF9A  F004         	goto	u700
   881  000930                     u701:
   882  000930  EFA8  F004         	goto	l1538
   883  000934                     u700:
   884  000934                     
   885                           ;task_manager.c: 129:             mat_disp[op][15] = '.';
   886  000934  5060               	movf	_op^0,w,c
   887  000936  0D10               	mullw	16
   888  000938  0E8F               	movlw	low (_mat_disp+15)
   889  00093A  24F3               	addwf	243,w,c
   890  00093C  6ED9               	movwf	fsr2l,c
   891  00093E  0E00               	movlw	high (_mat_disp+15)
   892  000940  20F4               	addwfc	prodh,w,c
   893  000942  6EDA               	movwf	fsr2h,c
   894  000944  0E2E               	movlw	46
   895  000946  6EDF               	movwf	indf2,c
   896  000948                     
   897                           ;task_manager.c: 130:             op++;
   898  000948  2A60               	incf	_op^0,f,c
   899  00094A                     
   900                           ;task_manager.c: 131:             botoes.D = 0;
   901  00094A  9266               	bcf	_botoes^0,1,c
   902  00094C  EF4E  F004         	goto	l1508
   903  000950                     l1538:
   904                           
   905                           ;task_manager.c: 120:     while(!botoes.Enter){
   906  000950  A866               	btfss	_botoes^0,4,c
   907  000952  EFAD  F004         	goto	u711
   908  000956  EFAF  F004         	goto	u710
   909  00095A                     u711:
   910  00095A  EF60  F004         	goto	l230
   911  00095E                     u710:
   912  00095E  0012               	return		;funcret
   913  000960                     __end_of_menu:
   914                           	opt callstack 0
   915                           
   916 ;; *************** function _creditos *****************
   917 ;; Defined at:
   918 ;;		line 26 in file "task_manager.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  lcd             2   25[COMRAM] PTR struct .
   921 ;;		 -> PORTD(1), 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   933 ;;      Params:         2       0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0
   936 ;;      Totals:         2       0       0       0       0       0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    6
   940 ;; This function calls:
   941 ;;		_print_mat
   942 ;;		_strcpy
   943 ;; This function is called by:
   944 ;;		_gerenciador
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text3
   949  000E10                     __ptext3:
   950                           	opt callstack 0
   951  000E10                     _creditos:
   952                           	opt callstack 23
   953  000E10                     
   954                           ;task_manager.c: 28:     strcpy(mat_disp[0], "1.DIOGO MARCHI.");
   955  000E10  0E80               	movlw	low _mat_disp
   956  000E12  6E43               	movwf	strcpy@dest^0,c
   957  000E14  0E00               	movlw	high _mat_disp
   958  000E16  6E44               	movwf	(strcpy@dest+1)^0,c
   959  000E18  0E55               	movlw	low STR_1
   960  000E1A  6E45               	movwf	strcpy@src^0,c
   961  000E1C  0E06               	movlw	high STR_1
   962  000E1E  6E46               	movwf	(strcpy@src+1)^0,c
   963  000E20  EC84  F007         	call	_strcpy	;wreg free
   964                           
   965                           ;task_manager.c: 29:     strcpy(mat_disp[1], "2.GEORGE NARDES");
   966  000E24  0E90               	movlw	low (_mat_disp+16)
   967  000E26  6E43               	movwf	strcpy@dest^0,c
   968  000E28  0E00               	movlw	high (_mat_disp+16)
   969  000E2A  6E44               	movwf	(strcpy@dest+1)^0,c
   970  000E2C  0E65               	movlw	low STR_2
   971  000E2E  6E45               	movwf	strcpy@src^0,c
   972  000E30  0E06               	movlw	high STR_2
   973  000E32  6E46               	movwf	(strcpy@src+1)^0,c
   974  000E34  EC84  F007         	call	_strcpy	;wreg free
   975                           
   976                           ;task_manager.c: 30:     strcpy(mat_disp[2], "               ");
   977  000E38  0EA0               	movlw	low (_mat_disp+32)
   978  000E3A  6E43               	movwf	strcpy@dest^0,c
   979  000E3C  0E00               	movlw	high (_mat_disp+32)
   980  000E3E  6E44               	movwf	(strcpy@dest+1)^0,c
   981  000E40  0E45               	movlw	low STR_3
   982  000E42  6E45               	movwf	strcpy@src^0,c
   983  000E44  0E06               	movlw	high STR_3
   984  000E46  6E46               	movwf	(strcpy@src+1)^0,c
   985  000E48  EC84  F007         	call	_strcpy	;wreg free
   986                           
   987                           ;task_manager.c: 31:     strcpy(mat_disp[3], "               ");
   988  000E4C  0EB0               	movlw	low (_mat_disp+48)
   989  000E4E  6E43               	movwf	strcpy@dest^0,c
   990  000E50  0E00               	movlw	high (_mat_disp+48)
   991  000E52  6E44               	movwf	(strcpy@dest+1)^0,c
   992  000E54  0E45               	movlw	low STR_3
   993  000E56  6E45               	movwf	strcpy@src^0,c
   994  000E58  0E06               	movlw	high STR_3
   995  000E5A  6E46               	movwf	(strcpy@src+1)^0,c
   996  000E5C  EC84  F007         	call	_strcpy	;wreg free
   997  000E60                     
   998                           ;task_manager.c: 32:     print_mat(lcd);
   999  000E60  C05C  F052         	movff	creditos@lcd,print_mat@lcd
  1000  000E64  C05D  F053         	movff	creditos@lcd+1,print_mat@lcd+1
  1001  000E68  ECEF  F005         	call	_print_mat	;wreg free
  1002  000E6C                     l181:
  1003  000E6C  AA66               	btfss	_botoes^0,5,c
  1004  000E6E  EF3B  F007         	goto	u721
  1005  000E72  EF3D  F007         	goto	u720
  1006  000E76                     u721:
  1007  000E76  EF36  F007         	goto	l181
  1008  000E7A                     u720:
  1009  000E7A  0012               	return		;funcret
  1010  000E7C                     __end_of_creditos:
  1011                           	opt callstack 0
  1012                           
  1013 ;; *************** function _strcpy *****************
  1014 ;; Defined at:
  1015 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  dest            2    0[COMRAM] PTR unsigned char 
  1018 ;;		 -> mat_disp(64), 
  1019 ;;  src             2    2[COMRAM] PTR const unsigned char 
  1020 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1021 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  d               2    6[COMRAM] PTR unsigned char 
  1024 ;;		 -> mat_disp(64), 
  1025 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1026 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1027 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  2    0[COMRAM] PTR unsigned char 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1037 ;;      Params:         4       0       0       0       0       0       0
  1038 ;;      Locals:         4       0       0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0
  1040 ;;      Totals:         8       0       0       0       0       0       0
  1041 ;;Total ram usage:        8 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    2
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_creditos
  1048 ;;		_menu
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text4
  1053  000F08                     __ptext4:
  1054                           	opt callstack 0
  1055  000F08                     _strcpy:
  1056                           	opt callstack 26
  1057  000F08  C045  F047         	movff	strcpy@src,strcpy@s
  1058  000F0C  C046  F048         	movff	strcpy@src+1,strcpy@s+1
  1059  000F10  C043  F049         	movff	strcpy@dest,strcpy@d
  1060  000F14  C044  F04A         	movff	strcpy@dest+1,strcpy@d+1
  1061  000F18                     l1504:
  1062  000F18  C047  FFF6         	movff	strcpy@s,tblptrl
  1063  000F1C  C048  FFF7         	movff	strcpy@s+1,tblptrh
  1064  000F20  4A47               	infsnz	strcpy@s^0,f,c
  1065  000F22  2A48               	incf	(strcpy@s+1)^0,f,c
  1066  000F24                     	if	0	;tblptru may be non-zero
  1067  000F24                     	endif
  1068  000F24                     	if	0	;tblptru may be non-zero
  1069  000F24                     	endif
  1070  000F24  C049  FFD9         	movff	strcpy@d,fsr2l
  1071  000F28  C04A  FFDA         	movff	strcpy@d+1,fsr2h
  1072  000F2C  4A49               	infsnz	strcpy@d^0,f,c
  1073  000F2E  2A4A               	incf	(strcpy@d+1)^0,f,c
  1074  000F30  0008               	tblrd		*
  1075  000F32  CFF5 FFDF          	movff	tablat,indf2
  1076  000F36  50DF               	movf	indf2,w,c
  1077  000F38  A4D8               	btfss	status,2,c
  1078  000F3A  EFA1  F007         	goto	u661
  1079  000F3E  EFA3  F007         	goto	u660
  1080  000F42                     u661:
  1081  000F42  EF8C  F007         	goto	l1504
  1082  000F46                     u660:
  1083  000F46  0012               	return		;funcret
  1084  000F48                     __end_of_strcpy:
  1085                           	opt callstack 0
  1086                           
  1087 ;; *************** function _print_mat *****************
  1088 ;; Defined at:
  1089 ;;		line 199 in file "lcd.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  lcd             2   15[COMRAM] PTR struct .
  1092 ;;		 -> PORTD(1), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  j               2   21[COMRAM] int 
  1095 ;;  i               2   23[COMRAM] int 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1105 ;;      Params:         2       0       0       0       0       0       0
  1106 ;;      Locals:         4       0       0       0       0       0       0
  1107 ;;      Temps:          4       0       0       0       0       0       0
  1108 ;;      Totals:        10       0       0       0       0       0       0
  1109 ;;Total ram usage:       10 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    5
  1112 ;; This function calls:
  1113 ;;		_goto_XY
  1114 ;;		_write_char
  1115 ;; This function is called by:
  1116 ;;		_creditos
  1117 ;;		_menu
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text5
  1122  000BDE                     __ptext5:
  1123                           	opt callstack 0
  1124  000BDE                     _print_mat:
  1125                           	opt callstack 23
  1126  000BDE                     
  1127                           ;lcd.c: 200:     for(int i = 0; i<4; i++){
  1128  000BDE  0E00               	movlw	0
  1129  000BE0  6E5B               	movwf	(print_mat@i+1)^0,c
  1130  000BE2  0E00               	movlw	0
  1131  000BE4  6E5A               	movwf	print_mat@i^0,c
  1132  000BE6                     l1484:
  1133                           
  1134                           ;lcd.c: 201:         goto_XY(lcd, i+1, 1);
  1135  000BE6  C052  F04A         	movff	print_mat@lcd,goto_XY@lcd
  1136  000BEA  C053  F04B         	movff	print_mat@lcd+1,goto_XY@lcd+1
  1137  000BEE  285A               	incf	print_mat@i^0,w,c
  1138  000BF0  6E4C               	movwf	goto_XY@x^0,c
  1139  000BF2  0E01               	movlw	1
  1140  000BF4  6E4D               	movwf	goto_XY@y^0,c
  1141  000BF6  EC91  F005         	call	_goto_XY	;wreg free
  1142  000BFA                     
  1143                           ;lcd.c: 202:         for(int j=0; j<16; j++)
  1144  000BFA  0E00               	movlw	0
  1145  000BFC  6E59               	movwf	(print_mat@j+1)^0,c
  1146  000BFE  0E00               	movlw	0
  1147  000C00  6E58               	movwf	print_mat@j^0,c
  1148  000C02                     l1492:
  1149                           
  1150                           ;lcd.c: 203:             write_char(lcd, mat_disp[i][j]);
  1151  000C02  C052  F043         	movff	print_mat@lcd,write_char@lcd
  1152  000C06  C053  F044         	movff	print_mat@lcd+1,write_char@lcd+1
  1153  000C0A  C05A  F054         	movff	print_mat@i,??_print_mat
  1154  000C0E  C05B  F055         	movff	print_mat@i+1,??_print_mat+1
  1155  000C12  3A54               	swapf	??_print_mat^0,f,c
  1156  000C14  3A55               	swapf	(??_print_mat+1)^0,f,c
  1157  000C16  0EF0               	movlw	240
  1158  000C18  1655               	andwf	(??_print_mat+1)^0,f,c
  1159  000C1A  5054               	movf	??_print_mat^0,w,c
  1160  000C1C  0B0F               	andlw	15
  1161  000C1E  1255               	iorwf	(??_print_mat+1)^0,f,c
  1162  000C20  0EF0               	movlw	240
  1163  000C22  1654               	andwf	??_print_mat^0,f,c
  1164  000C24  0E80               	movlw	low _mat_disp
  1165  000C26  6E56               	movwf	(??_print_mat+2)^0,c
  1166  000C28  0E00               	movlw	high _mat_disp
  1167  000C2A  6E57               	movwf	(??_print_mat+3)^0,c
  1168  000C2C  5054               	movf	??_print_mat^0,w,c
  1169  000C2E  2656               	addwf	(??_print_mat+2)^0,f,c
  1170  000C30  5055               	movf	(??_print_mat+1)^0,w,c
  1171  000C32  2257               	addwfc	(??_print_mat+3)^0,f,c
  1172  000C34  5058               	movf	print_mat@j^0,w,c
  1173  000C36  2456               	addwf	(??_print_mat+2)^0,w,c
  1174  000C38  6ED9               	movwf	fsr2l,c
  1175  000C3A  5059               	movf	(print_mat@j+1)^0,w,c
  1176  000C3C  2057               	addwfc	(??_print_mat+3)^0,w,c
  1177  000C3E  6EDA               	movwf	fsr2h,c
  1178  000C40  50DF               	movf	indf2,w,c
  1179  000C42  6E45               	movwf	write_char@c^0,c
  1180  000C44  ECB0  F004         	call	_write_char	;wreg free
  1181  000C48  4A58               	infsnz	print_mat@j^0,f,c
  1182  000C4A  2A59               	incf	(print_mat@j+1)^0,f,c
  1183  000C4C  BE59               	btfsc	(print_mat@j+1)^0,7,c
  1184  000C4E  EF32  F006         	goto	u641
  1185  000C52  5059               	movf	(print_mat@j+1)^0,w,c
  1186  000C54  E109               	bnz	u640
  1187  000C56  0E10               	movlw	16
  1188  000C58  5C58               	subwf	print_mat@j^0,w,c
  1189  000C5A  A0D8               	btfss	status,0,c
  1190  000C5C  EF32  F006         	goto	u641
  1191  000C60  EF34  F006         	goto	u640
  1192  000C64                     u641:
  1193  000C64  EF01  F006         	goto	l1492
  1194  000C68                     u640:
  1195  000C68                     
  1196                           ;lcd.c: 204:     }
  1197  000C68  4A5A               	infsnz	print_mat@i^0,f,c
  1198  000C6A  2A5B               	incf	(print_mat@i+1)^0,f,c
  1199  000C6C  BE5B               	btfsc	(print_mat@i+1)^0,7,c
  1200  000C6E  EF42  F006         	goto	u651
  1201  000C72  505B               	movf	(print_mat@i+1)^0,w,c
  1202  000C74  E109               	bnz	u650
  1203  000C76  0E04               	movlw	4
  1204  000C78  5C5A               	subwf	print_mat@i^0,w,c
  1205  000C7A  A0D8               	btfss	status,0,c
  1206  000C7C  EF42  F006         	goto	u651
  1207  000C80  EF44  F006         	goto	u650
  1208  000C84                     u651:
  1209  000C84  EFF3  F005         	goto	l1484
  1210  000C88                     u650:
  1211  000C88  0012               	return		;funcret
  1212  000C8A                     __end_of_print_mat:
  1213                           	opt callstack 0
  1214                           
  1215 ;; *************** function _write_char *****************
  1216 ;; Defined at:
  1217 ;;		line 133 in file "lcd.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  lcd             2    0[COMRAM] PTR struct .
  1220 ;;		 -> PORTD(1), 
  1221 ;;  c               1    2[COMRAM] unsigned char 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1233 ;;      Params:         3       0       0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0
  1235 ;;      Temps:          1       0       0       0       0       0       0
  1236 ;;      Totals:         4       0       0       0       0       0       0
  1237 ;;Total ram usage:        4 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    2
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_print_mat
  1244 ;;		_jogar
  1245 ;;		_instrucoes
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text6
  1250  000960                     __ptext6:
  1251                           	opt callstack 0
  1252  000960                     _write_char:
  1253                           	opt callstack 25
  1254  000960                     
  1255                           ;lcd.c: 134:     lcd->E = 0;
  1256  000960  C043  FFD9         	movff	write_char@lcd,fsr2l
  1257  000964  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1258  000968  94DF               	bcf	indf2,2,c
  1259                           
  1260                           ;lcd.c: 135:     lcd->RS = 1;
  1261  00096A  C043  FFD9         	movff	write_char@lcd,fsr2l
  1262  00096E  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1263  000972  80DF               	bsf	indf2,0,c
  1264                           
  1265                           ;lcd.c: 136:     lcd->R_W = 0;
  1266  000974  C043  FFD9         	movff	write_char@lcd,fsr2l
  1267  000978  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1268  00097C  92DF               	bcf	indf2,1,c
  1269  00097E                     
  1270                           ;lcd.c: 139:     lcd->data = (c>>4);
  1271  00097E  C045  F046         	movff	write_char@c,??_write_char
  1272  000982  3A46               	swapf	??_write_char^0,f,c
  1273  000984  0E0F               	movlw	15
  1274  000986  1646               	andwf	??_write_char^0,f,c
  1275  000988  C043  FFD9         	movff	write_char@lcd,fsr2l
  1276  00098C  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1277  000990  3A46               	swapf	??_write_char^0,f,c
  1278  000992  50DF               	movf	indf2,w,c
  1279  000994  1846               	xorwf	??_write_char^0,w,c
  1280  000996  0B0F               	andlw	-241
  1281  000998  1846               	xorwf	??_write_char^0,w,c
  1282  00099A  6EDF               	movwf	indf2,c
  1283  00099C                     
  1284                           ;lcd.c: 140:     lcd->E = 1;
  1285  00099C  C043  FFD9         	movff	write_char@lcd,fsr2l
  1286  0009A0  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1287  0009A4  84DF               	bsf	indf2,2,c
  1288  0009A6                     
  1289                           ;lcd.c: 141:     lcd->E = 0;
  1290  0009A6  C043  FFD9         	movff	write_char@lcd,fsr2l
  1291  0009AA  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1292  0009AE  94DF               	bcf	indf2,2,c
  1293  0009B0                     
  1294                           ;lcd.c: 144:     lcd->data = (c);
  1295  0009B0  C045  F046         	movff	write_char@c,??_write_char
  1296  0009B4  C043  FFD9         	movff	write_char@lcd,fsr2l
  1297  0009B8  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1298  0009BC  3A46               	swapf	??_write_char^0,f,c
  1299  0009BE  50DF               	movf	indf2,w,c
  1300  0009C0  1846               	xorwf	??_write_char^0,w,c
  1301  0009C2  0B0F               	andlw	-241
  1302  0009C4  1846               	xorwf	??_write_char^0,w,c
  1303  0009C6  6EDF               	movwf	indf2,c
  1304                           
  1305                           ;lcd.c: 145:     lcd->E = 1;
  1306  0009C8  C043  FFD9         	movff	write_char@lcd,fsr2l
  1307  0009CC  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1308  0009D0  84DF               	bsf	indf2,2,c
  1309                           
  1310                           ;lcd.c: 146:     lcd->E = 0;
  1311  0009D2  C043  FFD9         	movff	write_char@lcd,fsr2l
  1312  0009D6  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1313  0009DA  94DF               	bcf	indf2,2,c
  1314  0009DC                     
  1315                           ;lcd.c: 149:     TRISD = 0xF0;
  1316  0009DC  0EF0               	movlw	240
  1317  0009DE  6E95               	movwf	149,c	;volatile
  1318  0009E0                     
  1319                           ;lcd.c: 150:     lcd->RS = 0;
  1320  0009E0  C043  FFD9         	movff	write_char@lcd,fsr2l
  1321  0009E4  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1322  0009E8  90DF               	bcf	indf2,0,c
  1323  0009EA                     
  1324                           ;lcd.c: 151:     lcd->R_W = 1;
  1325  0009EA  C043  FFD9         	movff	write_char@lcd,fsr2l
  1326  0009EE  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1327  0009F2  82DF               	bsf	indf2,1,c
  1328  0009F4                     l1464:
  1329                           
  1330                           ;lcd.c: 153:        lcd->E = 1;
  1331  0009F4  C043  FFD9         	movff	write_char@lcd,fsr2l
  1332  0009F8  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1333  0009FC  84DF               	bsf	indf2,2,c
  1334  0009FE                     
  1335                           ;lcd.c: 154:        lcd->E = 0;
  1336  0009FE  C043  FFD9         	movff	write_char@lcd,fsr2l
  1337  000A02  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1338  000A06  94DF               	bcf	indf2,2,c
  1339  000A08                     
  1340                           ;lcd.c: 155:        lcd->E = 1;
  1341  000A08  C043  FFD9         	movff	write_char@lcd,fsr2l
  1342  000A0C  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1343  000A10  84DF               	bsf	indf2,2,c
  1344  000A12                     
  1345                           ;lcd.c: 156:        lcd->E = 0;
  1346  000A12  C043  FFD9         	movff	write_char@lcd,fsr2l
  1347  000A16  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1348  000A1A  94DF               	bcf	indf2,2,c
  1349  000A1C                     
  1350                           ;lcd.c: 157:     } while(lcd->data&0x08);
  1351  000A1C  C043  FFD9         	movff	write_char@lcd,fsr2l
  1352  000A20  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1353  000A24  38DF               	swapf	indf2,w,c
  1354  000A26  0B0F               	andlw	15
  1355  000A28  6E46               	movwf	??_write_char^0,c
  1356  000A2A  B646               	btfsc	??_write_char^0,3,c
  1357  000A2C  EF1A  F005         	goto	u631
  1358  000A30  EF1C  F005         	goto	u630
  1359  000A34                     u631:
  1360  000A34  EFFA  F004         	goto	l1464
  1361  000A38                     u630:
  1362  000A38                     
  1363                           ;lcd.c: 158:     lcd->R_W = 0;
  1364  000A38  C043  FFD9         	movff	write_char@lcd,fsr2l
  1365  000A3C  C044  FFDA         	movff	write_char@lcd+1,fsr2h
  1366  000A40  92DF               	bcf	indf2,1,c
  1367  000A42                     
  1368                           ;lcd.c: 159:     TRISD = 0x00;
  1369  000A42  0E00               	movlw	0
  1370  000A44  6E95               	movwf	149,c	;volatile
  1371  000A46  0012               	return		;funcret
  1372  000A48                     __end_of_write_char:
  1373                           	opt callstack 0
  1374                           
  1375 ;; *************** function _goto_XY *****************
  1376 ;; Defined at:
  1377 ;;		line 76 in file "lcd.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  lcd             2    7[COMRAM] PTR struct .
  1380 ;;		 -> PORTD(1), 
  1381 ;;  x               1    9[COMRAM] unsigned char 
  1382 ;;  y               1   10[COMRAM] unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  temp            1   14[COMRAM] unsigned char 
  1385 ;;  a               1   13[COMRAM] unsigned char 
  1386 ;;  z               1   12[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1396 ;;      Params:         4       0       0       0       0       0       0
  1397 ;;      Locals:         3       0       0       0       0       0       0
  1398 ;;      Temps:          1       0       0       0       0       0       0
  1399 ;;      Totals:         8       0       0       0       0       0       0
  1400 ;;Total ram usage:        8 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    4
  1403 ;; This function calls:
  1404 ;;		_lcd_cmd
  1405 ;; This function is called by:
  1406 ;;		_print_mat
  1407 ;;		_jogar
  1408 ;;		_instrucoes
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text7
  1413  000B22                     __ptext7:
  1414                           	opt callstack 0
  1415  000B22                     _goto_XY:
  1416                           	opt callstack 23
  1417  000B22                     
  1418                           ;lcd.c: 77:     unsigned char temp,z,a;;lcd.c: 78:     if(x == 1)
  1419  000B22  044C               	decf	goto_XY@x^0,w,c
  1420  000B24  A4D8               	btfss	status,2,c
  1421  000B26  EF97  F005         	goto	u591
  1422  000B2A  EF99  F005         	goto	u590
  1423  000B2E                     u591:
  1424  000B2E  EFBB  F005         	goto	l1412
  1425  000B32                     u590:
  1426  000B32                     
  1427                           ;lcd.c: 79:     {;lcd.c: 80:        temp = 0x80 + y - 1;
  1428  000B32  504D               	movf	goto_XY@y^0,w,c
  1429  000B34  0F7F               	addlw	127
  1430  000B36  6E51               	movwf	goto_XY@temp^0,c
  1431                           
  1432                           ;lcd.c: 81:        z = temp>>4;
  1433  000B38  3851               	swapf	goto_XY@temp^0,w,c
  1434  000B3A  0B0F               	andlw	15
  1435  000B3C  6E4F               	movwf	goto_XY@z^0,c
  1436  000B3E                     l1404:
  1437                           
  1438                           ;lcd.c: 82:        a = temp;
  1439  000B3E  C051  F050         	movff	goto_XY@temp,goto_XY@a
  1440  000B42                     
  1441                           ;lcd.c: 83:        lcd_cmd(lcd, z);
  1442  000B42  C04A  F046         	movff	goto_XY@lcd,lcd_cmd@lcd
  1443  000B46  C04B  F047         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1444  000B4A  C04F  F048         	movff	goto_XY@z,lcd_cmd@a
  1445  000B4E  ECA4  F007         	call	_lcd_cmd	;wreg free
  1446  000B52                     
  1447                           ;lcd.c: 84:        _delay((unsigned long)((1)*(16000000/4000.0)));
  1448  000B52  0E06               	movlw	6
  1449  000B54  6E4E               	movwf	??_goto_XY^0,c
  1450  000B56  0E30               	movlw	48
  1451  000B58                     u907:
  1452  000B58  2EE8               	decfsz	wreg,f,c
  1453  000B5A  D7FE               	bra	u907
  1454  000B5C  2E4E               	decfsz	??_goto_XY^0,f,c
  1455  000B5E  D7FC               	bra	u907
  1456  000B60  D000               	nop2	
  1457  000B62                     
  1458                           ;lcd.c: 85:        lcd_cmd(lcd, a);
  1459  000B62  C04A  F046         	movff	goto_XY@lcd,lcd_cmd@lcd
  1460  000B66  C04B  F047         	movff	goto_XY@lcd+1,lcd_cmd@lcd+1
  1461  000B6A  C050  F048         	movff	goto_XY@a,lcd_cmd@a
  1462  000B6E  ECA4  F007         	call	_lcd_cmd	;wreg free
  1463                           
  1464                           ;lcd.c: 86:     }
  1465  000B72  EFEE  F005         	goto	l73
  1466  000B76                     l1412:
  1467  000B76  0E02               	movlw	2
  1468  000B78  184C               	xorwf	goto_XY@x^0,w,c
  1469  000B7A  A4D8               	btfss	status,2,c
  1470  000B7C  EFC2  F005         	goto	u601
  1471  000B80  EFC4  F005         	goto	u600
  1472  000B84                     u601:
  1473  000B84  EFCC  F005         	goto	l1424
  1474  000B88                     u600:
  1475  000B88                     
  1476                           ;lcd.c: 88:     {;lcd.c: 89:        temp = 0xC0 + y - 1;
  1477  000B88  504D               	movf	goto_XY@y^0,w,c
  1478  000B8A  0FBF               	addlw	191
  1479  000B8C  6E51               	movwf	goto_XY@temp^0,c
  1480                           
  1481                           ;lcd.c: 90:        z = temp>>4;
  1482  000B8E  3851               	swapf	goto_XY@temp^0,w,c
  1483  000B90  0B0F               	andlw	15
  1484  000B92  6E4F               	movwf	goto_XY@z^0,c
  1485  000B94  EF9F  F005         	goto	l1404
  1486  000B98                     l1424:
  1487  000B98  0E03               	movlw	3
  1488  000B9A  184C               	xorwf	goto_XY@x^0,w,c
  1489  000B9C  A4D8               	btfss	status,2,c
  1490  000B9E  EFD3  F005         	goto	u611
  1491  000BA2  EFD5  F005         	goto	u610
  1492  000BA6                     u611:
  1493  000BA6  EFDD  F005         	goto	l1436
  1494  000BAA                     u610:
  1495  000BAA                     
  1496                           ;lcd.c: 97:     {;lcd.c: 98:        temp = 0x90 + y - 1;
  1497  000BAA  504D               	movf	goto_XY@y^0,w,c
  1498  000BAC  0F8F               	addlw	143
  1499  000BAE  6E51               	movwf	goto_XY@temp^0,c
  1500                           
  1501                           ;lcd.c: 99:        z = temp>>4;
  1502  000BB0  3851               	swapf	goto_XY@temp^0,w,c
  1503  000BB2  0B0F               	andlw	15
  1504  000BB4  6E4F               	movwf	goto_XY@z^0,c
  1505  000BB6  EF9F  F005         	goto	l1404
  1506  000BBA                     l1436:
  1507  000BBA  0E04               	movlw	4
  1508  000BBC  184C               	xorwf	goto_XY@x^0,w,c
  1509  000BBE  A4D8               	btfss	status,2,c
  1510  000BC0  EFE4  F005         	goto	u621
  1511  000BC4  EFE6  F005         	goto	u620
  1512  000BC8                     u621:
  1513  000BC8  EFEE  F005         	goto	l69
  1514  000BCC                     u620:
  1515  000BCC                     
  1516                           ;lcd.c: 106:     {;lcd.c: 107:        temp = 0xD0 + y - 1;
  1517  000BCC  504D               	movf	goto_XY@y^0,w,c
  1518  000BCE  0FCF               	addlw	207
  1519  000BD0  6E51               	movwf	goto_XY@temp^0,c
  1520                           
  1521                           ;lcd.c: 108:        z = temp>>4;
  1522  000BD2  3851               	swapf	goto_XY@temp^0,w,c
  1523  000BD4  0B0F               	andlw	15
  1524  000BD6  6E4F               	movwf	goto_XY@z^0,c
  1525  000BD8  EF9F  F005         	goto	l1404
  1526  000BDC                     l69:
  1527  000BDC                     l73:
  1528  000BDC  0012               	return		;funcret
  1529  000BDE                     __end_of_goto_XY:
  1530                           	opt callstack 0
  1531                           
  1532 ;; *************** function _lcd_cmd *****************
  1533 ;; Defined at:
  1534 ;;		line 67 in file "lcd.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  lcd             2    3[COMRAM] PTR struct .
  1537 ;;		 -> PORTD(1), 
  1538 ;;  a               1    5[COMRAM] unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         3       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0
  1552 ;;      Temps:          1       0       0       0       0       0       0
  1553 ;;      Totals:         4       0       0       0       0       0       0
  1554 ;;Total ram usage:        4 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    3
  1557 ;; This function calls:
  1558 ;;		_pulso
  1559 ;; This function is called by:
  1560 ;;		_goto_XY
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text8
  1565  000F48                     __ptext8:
  1566                           	opt callstack 0
  1567  000F48                     _lcd_cmd:
  1568                           	opt callstack 23
  1569  000F48                     
  1570                           ;lcd.c: 68:     lcd->RS = 0;
  1571  000F48  C046  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1572  000F4C  C047  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1573  000F50  90DF               	bcf	indf2,0,c
  1574  000F52                     
  1575                           ;lcd.c: 69:     lcd->data = (a);
  1576  000F52  C048  F049         	movff	lcd_cmd@a,??_lcd_cmd
  1577  000F56  C046  FFD9         	movff	lcd_cmd@lcd,fsr2l
  1578  000F5A  C047  FFDA         	movff	lcd_cmd@lcd+1,fsr2h
  1579  000F5E  3A49               	swapf	??_lcd_cmd^0,f,c
  1580  000F60  50DF               	movf	indf2,w,c
  1581  000F62  1849               	xorwf	??_lcd_cmd^0,w,c
  1582  000F64  0B0F               	andlw	-241
  1583  000F66  1849               	xorwf	??_lcd_cmd^0,w,c
  1584  000F68  6EDF               	movwf	indf2,c
  1585  000F6A                     
  1586                           ;lcd.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1587  000F6A  0E06               	movlw	6
  1588  000F6C  6E49               	movwf	??_lcd_cmd^0,c
  1589  000F6E  0E30               	movlw	48
  1590  000F70                     u917:
  1591  000F70  2EE8               	decfsz	wreg,f,c
  1592  000F72  D7FE               	bra	u917
  1593  000F74  2E49               	decfsz	??_lcd_cmd^0,f,c
  1594  000F76  D7FC               	bra	u917
  1595  000F78  D000               	nop2	
  1596  000F7A                     
  1597                           ;lcd.c: 72:     pulso(lcd);
  1598  000F7A  C046  F043         	movff	lcd_cmd@lcd,pulso@lcd
  1599  000F7E  C047  F044         	movff	lcd_cmd@lcd+1,pulso@lcd+1
  1600  000F82  ECC4  F007         	call	_pulso	;wreg free
  1601  000F86  0012               	return		;funcret
  1602  000F88                     __end_of_lcd_cmd:
  1603                           	opt callstack 0
  1604                           
  1605 ;; *************** function _function_set *****************
  1606 ;; Defined at:
  1607 ;;		line 21 in file "lcd.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  lcd             2    3[COMRAM] PTR struct .
  1610 ;;		 -> PORTD(1), 
  1611 ;;  data_lenght     1    5[COMRAM] unsigned char 
  1612 ;;  num_lines       1    6[COMRAM] unsigned char 
  1613 ;;  char_font       1    7[COMRAM] unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         5       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:          3       0       0       0       0       0       0
  1628 ;;      Totals:         8       0       0       0       0       0       0
  1629 ;;Total ram usage:        8 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    3
  1632 ;; This function calls:
  1633 ;;		_pulso
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text9
  1640  000A48                     __ptext9:
  1641                           	opt callstack 0
  1642  000A48                     _function_set:
  1643                           	opt callstack 27
  1644  000A48                     
  1645                           ;lcd.c: 21: void function_set(t_display_port *lcd, char data_lenght,;lcd.c: 22:         
      +                          char num_lines, char char_font){;lcd.c: 23:     lcd->E = 0;
  1646  000A48  C046  FFD9         	movff	function_set@lcd,fsr2l
  1647  000A4C  C047  FFDA         	movff	function_set@lcd+1,fsr2h
  1648  000A50  94DF               	bcf	indf2,2,c
  1649                           
  1650                           ;lcd.c: 24:     lcd->RS = 0;
  1651  000A52  C046  FFD9         	movff	function_set@lcd,fsr2l
  1652  000A56  C047  FFDA         	movff	function_set@lcd+1,fsr2h
  1653  000A5A  90DF               	bcf	indf2,0,c
  1654                           
  1655                           ;lcd.c: 25:     lcd->R_W = 0;
  1656  000A5C  C046  FFD9         	movff	function_set@lcd,fsr2l
  1657  000A60  C047  FFDA         	movff	function_set@lcd+1,fsr2h
  1658  000A64  92DF               	bcf	indf2,1,c
  1659  000A66                     
  1660                           ;lcd.c: 28:     lcd->data = 0x02;
  1661  000A66  C046  FFD9         	movff	function_set@lcd,fsr2l
  1662  000A6A  C047  FFDA         	movff	function_set@lcd+1,fsr2h
  1663  000A6E  50DF               	movf	indf2,w,c
  1664  000A70  0B0F               	andlw	-241
  1665  000A72  0920               	iorlw	32
  1666  000A74  6EDF               	movwf	indf2,c
  1667  000A76                     
  1668                           ;lcd.c: 29:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1669  000A76  0E06               	movlw	6
  1670  000A78  6E4B               	movwf	??_function_set^0,c
  1671  000A7A  0E30               	movlw	48
  1672  000A7C                     u927:
  1673  000A7C  2EE8               	decfsz	wreg,f,c
  1674  000A7E  D7FE               	bra	u927
  1675  000A80  2E4B               	decfsz	??_function_set^0,f,c
  1676  000A82  D7FC               	bra	u927
  1677  000A84  D000               	nop2	
  1678  000A86                     
  1679                           ;lcd.c: 31:     pulso(lcd);
  1680  000A86  C046  F043         	movff	function_set@lcd,pulso@lcd
  1681  000A8A  C047  F044         	movff	function_set@lcd+1,pulso@lcd+1
  1682  000A8E  ECC4  F007         	call	_pulso	;wreg free
  1683  000A92                     
  1684                           ;lcd.c: 34:     lcd->data = 0x02|data_lenght;
  1685  000A92  C048  F04B         	movff	function_set@data_lenght,??_function_set
  1686  000A96  0E02               	movlw	2
  1687  000A98  124B               	iorwf	??_function_set^0,f,c
  1688  000A9A  C046  FFD9         	movff	function_set@lcd,fsr2l
  1689  000A9E  C047  FFDA         	movff	function_set@lcd+1,fsr2h
  1690  000AA2  3A4B               	swapf	??_function_set^0,f,c
  1691  000AA4  50DF               	movf	indf2,w,c
  1692  000AA6  184B               	xorwf	??_function_set^0,w,c
  1693  000AA8  0B0F               	andlw	-241
  1694  000AAA  184B               	xorwf	??_function_set^0,w,c
  1695  000AAC  6EDF               	movwf	indf2,c
  1696  000AAE                     
  1697                           ;lcd.c: 35:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1698  000AAE  0E06               	movlw	6
  1699  000AB0  6E4B               	movwf	??_function_set^0,c
  1700  000AB2  0E30               	movlw	48
  1701  000AB4                     u937:
  1702  000AB4  2EE8               	decfsz	wreg,f,c
  1703  000AB6  D7FE               	bra	u937
  1704  000AB8  2E4B               	decfsz	??_function_set^0,f,c
  1705  000ABA  D7FC               	bra	u937
  1706  000ABC  D000               	nop2	
  1707  000ABE                     
  1708                           ;lcd.c: 37:     pulso(lcd);
  1709  000ABE  C046  F043         	movff	function_set@lcd,pulso@lcd
  1710  000AC2  C047  F044         	movff	function_set@lcd+1,pulso@lcd+1
  1711  000AC6  ECC4  F007         	call	_pulso	;wreg free
  1712  000ACA                     
  1713                           ;lcd.c: 41:     lcd->data = lcd->data|(num_lines<<3)|(char_font<<2);
  1714  000ACA  C046  FFD9         	movff	function_set@lcd,fsr2l
  1715  000ACE  C047  FFDA         	movff	function_set@lcd+1,fsr2h
  1716  000AD2  38DF               	swapf	indf2,w,c
  1717  000AD4  0B0F               	andlw	15
  1718  000AD6  6E4B               	movwf	??_function_set^0,c
  1719  000AD8  C04A  F04C         	movff	function_set@char_font,??_function_set+1
  1720  000ADC  90D8               	bcf	status,0,c
  1721  000ADE  364C               	rlcf	(??_function_set+1)^0,f,c
  1722  000AE0  90D8               	bcf	status,0,c
  1723  000AE2  364C               	rlcf	(??_function_set+1)^0,f,c
  1724  000AE4  3849               	swapf	function_set@num_lines^0,w,c
  1725  000AE6  42E8               	rrncf	wreg,f,c
  1726  000AE8  0BF8               	andlw	248
  1727  000AEA  104C               	iorwf	(??_function_set+1)^0,w,c
  1728  000AEC  104B               	iorwf	??_function_set^0,w,c
  1729  000AEE  6E4D               	movwf	(??_function_set+2)^0,c
  1730  000AF0  C046  FFD9         	movff	function_set@lcd,fsr2l
  1731  000AF4  C047  FFDA         	movff	function_set@lcd+1,fsr2h
  1732  000AF8  3A4D               	swapf	(??_function_set+2)^0,f,c
  1733  000AFA  50DF               	movf	indf2,w,c
  1734  000AFC  184D               	xorwf	(??_function_set+2)^0,w,c
  1735  000AFE  0B0F               	andlw	-241
  1736  000B00  184D               	xorwf	(??_function_set+2)^0,w,c
  1737  000B02  6EDF               	movwf	indf2,c
  1738  000B04                     
  1739                           ;lcd.c: 42:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1740  000B04  0E06               	movlw	6
  1741  000B06  6E4B               	movwf	??_function_set^0,c
  1742  000B08  0E30               	movlw	48
  1743  000B0A                     u947:
  1744  000B0A  2EE8               	decfsz	wreg,f,c
  1745  000B0C  D7FE               	bra	u947
  1746  000B0E  2E4B               	decfsz	??_function_set^0,f,c
  1747  000B10  D7FC               	bra	u947
  1748  000B12  D000               	nop2	
  1749  000B14                     
  1750                           ;lcd.c: 44:     pulso(lcd);
  1751  000B14  C046  F043         	movff	function_set@lcd,pulso@lcd
  1752  000B18  C047  F044         	movff	function_set@lcd+1,pulso@lcd+1
  1753  000B1C  ECC4  F007         	call	_pulso	;wreg free
  1754  000B20  0012               	return		;funcret
  1755  000B22                     __end_of_function_set:
  1756                           	opt callstack 0
  1757                           
  1758 ;; *************** function _entry_mode_set *****************
  1759 ;; Defined at:
  1760 ;;		line 116 in file "lcd.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  lcd             2    3[COMRAM] PTR struct .
  1763 ;;		 -> PORTD(1), 
  1764 ;;  move_directi    1    5[COMRAM] unsigned char 
  1765 ;;  display_shif    1    6[COMRAM] unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         4       0       0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0
  1779 ;;      Temps:          1       0       0       0       0       0       0
  1780 ;;      Totals:         5       0       0       0       0       0       0
  1781 ;;Total ram usage:        5 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		_pulso
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text10
  1792  000D18                     __ptext10:
  1793                           	opt callstack 0
  1794  000D18                     _entry_mode_set:
  1795                           	opt callstack 27
  1796  000D18                     
  1797                           ;lcd.c: 117:     lcd->E = 0;
  1798  000D18  C046  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1799  000D1C  C047  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1800  000D20  94DF               	bcf	indf2,2,c
  1801                           
  1802                           ;lcd.c: 118:     lcd->RS = 0;
  1803  000D22  C046  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1804  000D26  C047  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1805  000D2A  90DF               	bcf	indf2,0,c
  1806                           
  1807                           ;lcd.c: 119:     lcd->R_W = 0;
  1808  000D2C  C046  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1809  000D30  C047  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1810  000D34  92DF               	bcf	indf2,1,c
  1811  000D36                     
  1812                           ;lcd.c: 121:     lcd->data = 0x00;
  1813  000D36  C046  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1814  000D3A  C047  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1815  000D3E  0E0F               	movlw	-241
  1816  000D40  16DF               	andwf	indf2,f,c
  1817  000D42                     
  1818                           ;lcd.c: 122:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1819  000D42  0E06               	movlw	6
  1820  000D44  6E4A               	movwf	??_entry_mode_set^0,c
  1821  000D46  0E30               	movlw	48
  1822  000D48                     u957:
  1823  000D48  2EE8               	decfsz	wreg,f,c
  1824  000D4A  D7FE               	bra	u957
  1825  000D4C  2E4A               	decfsz	??_entry_mode_set^0,f,c
  1826  000D4E  D7FC               	bra	u957
  1827  000D50  D000               	nop2	
  1828  000D52                     
  1829                           ;lcd.c: 124:     pulso(lcd);
  1830  000D52  C046  F043         	movff	entry_mode_set@lcd,pulso@lcd
  1831  000D56  C047  F044         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1832  000D5A  ECC4  F007         	call	_pulso	;wreg free
  1833  000D5E                     
  1834                           ;lcd.c: 127:     lcd->data = 0x04|(move_direction<<1)|display_shift;
  1835  000D5E  5048               	movf	entry_mode_set@move_direction^0,w,c
  1836  000D60  2448               	addwf	entry_mode_set@move_direction^0,w,c
  1837  000D62  1049               	iorwf	entry_mode_set@display_shift^0,w,c
  1838  000D64  6E4A               	movwf	??_entry_mode_set^0,c
  1839  000D66  0E04               	movlw	4
  1840  000D68  124A               	iorwf	??_entry_mode_set^0,f,c
  1841  000D6A  C046  FFD9         	movff	entry_mode_set@lcd,fsr2l
  1842  000D6E  C047  FFDA         	movff	entry_mode_set@lcd+1,fsr2h
  1843  000D72  3A4A               	swapf	??_entry_mode_set^0,f,c
  1844  000D74  50DF               	movf	indf2,w,c
  1845  000D76  184A               	xorwf	??_entry_mode_set^0,w,c
  1846  000D78  0B0F               	andlw	-241
  1847  000D7A  184A               	xorwf	??_entry_mode_set^0,w,c
  1848  000D7C  6EDF               	movwf	indf2,c
  1849  000D7E                     
  1850                           ;lcd.c: 128:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1851  000D7E  0E06               	movlw	6
  1852  000D80  6E4A               	movwf	??_entry_mode_set^0,c
  1853  000D82  0E30               	movlw	48
  1854  000D84                     u967:
  1855  000D84  2EE8               	decfsz	wreg,f,c
  1856  000D86  D7FE               	bra	u967
  1857  000D88  2E4A               	decfsz	??_entry_mode_set^0,f,c
  1858  000D8A  D7FC               	bra	u967
  1859  000D8C  D000               	nop2	
  1860  000D8E                     
  1861                           ;lcd.c: 130:     pulso(lcd);
  1862  000D8E  C046  F043         	movff	entry_mode_set@lcd,pulso@lcd
  1863  000D92  C047  F044         	movff	entry_mode_set@lcd+1,pulso@lcd+1
  1864  000D96  ECC4  F007         	call	_pulso	;wreg free
  1865  000D9A  0012               	return		;funcret
  1866  000D9C                     __end_of_entry_mode_set:
  1867                           	opt callstack 0
  1868                           
  1869 ;; *************** function _display_onoff_control *****************
  1870 ;; Defined at:
  1871 ;;		line 47 in file "lcd.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  lcd             2    3[COMRAM] PTR struct .
  1874 ;;		 -> PORTD(1), 
  1875 ;;  display_on      1    5[COMRAM] unsigned char 
  1876 ;;  cursor_on       1    6[COMRAM] unsigned char 
  1877 ;;  blink           1    7[COMRAM] unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1889 ;;      Params:         5       0       0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0
  1891 ;;      Temps:          2       0       0       0       0       0       0
  1892 ;;      Totals:         7       0       0       0       0       0       0
  1893 ;;Total ram usage:        7 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		_pulso
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text11
  1904  000C8A                     __ptext11:
  1905                           	opt callstack 0
  1906  000C8A                     _display_onoff_control:
  1907                           	opt callstack 27
  1908  000C8A                     
  1909                           ;lcd.c: 47: void display_onoff_control(t_display_port *lcd, char display_on,;lcd.c: 48: 
      +                                  char cursor_on, char blink){;lcd.c: 49:     lcd->E = 0;
  1910  000C8A  C046  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1911  000C8E  C047  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1912  000C92  94DF               	bcf	indf2,2,c
  1913                           
  1914                           ;lcd.c: 50:     lcd->RS = 0;
  1915  000C94  C046  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1916  000C98  C047  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1917  000C9C  90DF               	bcf	indf2,0,c
  1918                           
  1919                           ;lcd.c: 51:     lcd->R_W = 0;
  1920  000C9E  C046  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1921  000CA2  C047  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1922  000CA6  92DF               	bcf	indf2,1,c
  1923  000CA8                     
  1924                           ;lcd.c: 54:     lcd->data = 0x00;
  1925  000CA8  C046  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1926  000CAC  C047  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1927  000CB0  0E0F               	movlw	-241
  1928  000CB2  16DF               	andwf	indf2,f,c
  1929  000CB4                     
  1930                           ;lcd.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1931  000CB4  0E06               	movlw	6
  1932  000CB6  6E4B               	movwf	??_display_onoff_control^0,c
  1933  000CB8  0E30               	movlw	48
  1934  000CBA                     u977:
  1935  000CBA  2EE8               	decfsz	wreg,f,c
  1936  000CBC  D7FE               	bra	u977
  1937  000CBE  2E4B               	decfsz	??_display_onoff_control^0,f,c
  1938  000CC0  D7FC               	bra	u977
  1939  000CC2  D000               	nop2	
  1940  000CC4                     
  1941                           ;lcd.c: 57:     pulso(lcd);
  1942  000CC4  C046  F043         	movff	display_onoff_control@lcd,pulso@lcd
  1943  000CC8  C047  F044         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1944  000CCC  ECC4  F007         	call	_pulso	;wreg free
  1945  000CD0                     
  1946                           ;lcd.c: 61:     lcd->data = (0x08)|(display_on<<2)|(cursor_on<<1)|(blink);
  1947  000CD0  90D8               	bcf	status,0,c
  1948  000CD2  3449               	rlcf	display_onoff_control@cursor_on^0,w,c
  1949  000CD4  6E4B               	movwf	??_display_onoff_control^0,c
  1950  000CD6  4448               	rlncf	display_onoff_control@display_on^0,w,c
  1951  000CD8  46E8               	rlncf	wreg,f,c
  1952  000CDA  0BFC               	andlw	252
  1953  000CDC  104B               	iorwf	??_display_onoff_control^0,w,c
  1954  000CDE  104A               	iorwf	display_onoff_control@blink^0,w,c
  1955  000CE0  6E4C               	movwf	(??_display_onoff_control+1)^0,c
  1956  000CE2  0E08               	movlw	8
  1957  000CE4  124C               	iorwf	(??_display_onoff_control+1)^0,f,c
  1958  000CE6  C046  FFD9         	movff	display_onoff_control@lcd,fsr2l
  1959  000CEA  C047  FFDA         	movff	display_onoff_control@lcd+1,fsr2h
  1960  000CEE  3A4C               	swapf	(??_display_onoff_control+1)^0,f,c
  1961  000CF0  50DF               	movf	indf2,w,c
  1962  000CF2  184C               	xorwf	(??_display_onoff_control+1)^0,w,c
  1963  000CF4  0B0F               	andlw	-241
  1964  000CF6  184C               	xorwf	(??_display_onoff_control+1)^0,w,c
  1965  000CF8  6EDF               	movwf	indf2,c
  1966  000CFA                     
  1967                           ;lcd.c: 62:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1968  000CFA  0E06               	movlw	6
  1969  000CFC  6E4B               	movwf	??_display_onoff_control^0,c
  1970  000CFE  0E30               	movlw	48
  1971  000D00                     u987:
  1972  000D00  2EE8               	decfsz	wreg,f,c
  1973  000D02  D7FE               	bra	u987
  1974  000D04  2E4B               	decfsz	??_display_onoff_control^0,f,c
  1975  000D06  D7FC               	bra	u987
  1976  000D08  D000               	nop2	
  1977  000D0A                     
  1978                           ;lcd.c: 64:     pulso(lcd);
  1979  000D0A  C046  F043         	movff	display_onoff_control@lcd,pulso@lcd
  1980  000D0E  C047  F044         	movff	display_onoff_control@lcd+1,pulso@lcd+1
  1981  000D12  ECC4  F007         	call	_pulso	;wreg free
  1982  000D16  0012               	return		;funcret
  1983  000D18                     __end_of_display_onoff_control:
  1984                           	opt callstack 0
  1985                           
  1986 ;; *************** function _pulso *****************
  1987 ;; Defined at:
  1988 ;;		line 11 in file "lcd.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  lcd             2    0[COMRAM] PTR struct .
  1991 ;;		 -> PORTD(1), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr2l, fsr2h
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         2       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          1       0       0       0       0       0       0
  2006 ;;      Totals:         3       0       0       0       0       0       0
  2007 ;;Total ram usage:        3 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    2
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_function_set
  2014 ;;		_display_onoff_control
  2015 ;;		_lcd_cmd
  2016 ;;		_entry_mode_set
  2017 ;;		_clear_display
  2018 ;;		_return_home
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text12
  2023  000F88                     __ptext12:
  2024                           	opt callstack 0
  2025  000F88                     _pulso:
  2026                           	opt callstack 23
  2027  000F88                     
  2028                           ;lcd.c: 13:     lcd->E = 1;
  2029  000F88  C043  FFD9         	movff	pulso@lcd,fsr2l
  2030  000F8C  C044  FFDA         	movff	pulso@lcd+1,fsr2h
  2031  000F90  84DF               	bsf	indf2,2,c
  2032  000F92                     
  2033                           ;lcd.c: 14:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2034  000F92  0E06               	movlw	6
  2035  000F94  6E45               	movwf	??_pulso^0,c
  2036  000F96  0E30               	movlw	48
  2037  000F98                     u997:
  2038  000F98  2EE8               	decfsz	wreg,f,c
  2039  000F9A  D7FE               	bra	u997
  2040  000F9C  2E45               	decfsz	??_pulso^0,f,c
  2041  000F9E  D7FC               	bra	u997
  2042  000FA0  D000               	nop2	
  2043  000FA2                     
  2044                           ;lcd.c: 17:     lcd->E = 0;
  2045  000FA2  C043  FFD9         	movff	pulso@lcd,fsr2l
  2046  000FA6  C044  FFDA         	movff	pulso@lcd+1,fsr2h
  2047  000FAA  94DF               	bcf	indf2,2,c
  2048                           
  2049                           ;lcd.c: 18:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2050  000FAC  0E06               	movlw	6
  2051  000FAE  6E45               	movwf	??_pulso^0,c
  2052  000FB0  0E30               	movlw	48
  2053  000FB2                     u1007:
  2054  000FB2  2EE8               	decfsz	wreg,f,c
  2055  000FB4  D7FE               	bra	u1007
  2056  000FB6  2E45               	decfsz	??_pulso^0,f,c
  2057  000FB8  D7FC               	bra	u1007
  2058  000FBA  D000               	nop2	
  2059  000FBC  0012               	return		;funcret
  2060  000FBE                     __end_of_pulso:
  2061                           	opt callstack 0
  2062                           
  2063 ;; *************** function _int_handler *****************
  2064 ;; Defined at:
  2065 ;;		line 24 in file "main.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2079 ;;      Params:         0       0       0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0
  2082 ;;      Totals:         0       0       0       0       0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    1
  2086 ;; This function calls:
  2087 ;;		_le_entrada
  2088 ;; This function is called by:
  2089 ;;		Interrupt level 2
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	intcode
  2094  000008                     __pintcode:
  2095                           	opt callstack 0
  2096  000008                     _int_handler:
  2097                           	opt callstack 23
  2098                           
  2099                           ;incstack = 0
  2100  000008  8267               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2101  00000A  EDF7  F007         	call	int_func,f	;refresh shadow registers
  2102                           
  2103                           	psect	intcode_body
  2104  000FEE                     __pintcode_body:
  2105                           	opt callstack 23
  2106  000FEE                     int_func:
  2107                           	opt callstack 23
  2108  000FEE  0006               	pop		; remove dummy address from shadow register refresh
  2109  000FF0                     
  2110                           ;main.c: 25:      if(INTCONbits.TMR0IF == 1){
  2111  000FF0  A4F2               	btfss	242,2,c	;volatile
  2112  000FF2  EFFD  F007         	goto	i2u42_41
  2113  000FF6  EFFF  F007         	goto	i2u42_40
  2114  000FFA                     i2u42_41:
  2115  000FFA  EF04  F008         	goto	i2l40
  2116  000FFE                     i2u42_40:
  2117  000FFE                     
  2118                           ;main.c: 26:         TMR0L = 0x63;
  2119  000FFE  0E63               	movlw	99
  2120  001000  6ED6               	movwf	214,c	;volatile
  2121  001002                     
  2122                           ;main.c: 27:         le_entrada();
  2123  001002  EC3B  F003         	call	_le_entrada	;wreg free
  2124  001006                     
  2125                           ;main.c: 28:         INTCONbits.TMR0IF = 0;
  2126  001006  94F2               	bcf	242,2,c	;volatile
  2127  001008                     i2l40:
  2128  001008  9267               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2129  00100A  0011               	retfie		f
  2130  00100C                     __end_of_int_handler:
  2131                           	opt callstack 0
  2132                           
  2133 ;; *************** function _le_entrada *****************
  2134 ;; Defined at:
  2135 ;;		line 12 in file "keyboard.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         0       0       0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_int_handler
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text14
  2163  000676                     __ptext14:
  2164                           	opt callstack 0
  2165  000676                     _le_entrada:
  2166                           	opt callstack 23
  2167  000676                     
  2168                           ;keyboard.c: 13:     PORTBbits.RB7 = 1;
  2169  000676  8E81               	bsf	129,7,c	;volatile
  2170                           
  2171                           ;keyboard.c: 14:     if((botoes_ant.U==0 && PORTBbits.RB1==1) || cont_u > 50){
  2172  000678  B065               	btfsc	_botoes_ant^0,0,c
  2173  00067A  EF41  F003         	goto	i2u15_41
  2174  00067E  EF43  F003         	goto	i2u15_40
  2175  000682                     i2u15_41:
  2176  000682  EF4A  F003         	goto	i2l1084
  2177  000686                     i2u15_40:
  2178  000686  B281               	btfsc	129,1,c	;volatile
  2179  000688  EF48  F003         	goto	i2u16_41
  2180  00068C  EF4A  F003         	goto	i2u16_40
  2181  000690                     i2u16_41:
  2182  000690  EF52  F003         	goto	i2l113
  2183  000694                     i2u16_40:
  2184  000694                     i2l1084:
  2185  000694  0E32               	movlw	50
  2186  000696  6464               	cpfsgt	_cont_u^0,c
  2187  000698  EF50  F003         	goto	i2u17_41
  2188  00069C  EF52  F003         	goto	i2u17_40
  2189  0006A0                     i2u17_41:
  2190  0006A0  EF58  F003         	goto	i2l111
  2191  0006A4                     i2u17_40:
  2192  0006A4                     i2l113:
  2193                           
  2194                           ;keyboard.c: 15:         botoes.U = 1;
  2195  0006A4  8066               	bsf	_botoes^0,0,c
  2196                           
  2197                           ;keyboard.c: 16:         botoes_ant.U = 1;
  2198  0006A6  8065               	bsf	_botoes_ant^0,0,c
  2199  0006A8                     i2l1086:
  2200                           
  2201                           ;keyboard.c: 17:         cont_u = 0;
  2202  0006A8  0E00               	movlw	0
  2203  0006AA  6E64               	movwf	_cont_u^0,c
  2204                           
  2205                           ;keyboard.c: 18:     }else if(botoes_ant.U==1 && PORTBbits.RB1==0){
  2206  0006AC  EF72  F003         	goto	i2l1096
  2207  0006B0                     i2l111:
  2208  0006B0  A065               	btfss	_botoes_ant^0,0,c
  2209  0006B2  EF5D  F003         	goto	i2u18_41
  2210  0006B6  EF5F  F003         	goto	i2u18_40
  2211  0006BA                     i2u18_41:
  2212  0006BA  EF6A  F003         	goto	i2l117
  2213  0006BE                     i2u18_40:
  2214  0006BE  B281               	btfsc	129,1,c	;volatile
  2215  0006C0  EF64  F003         	goto	i2u19_41
  2216  0006C4  EF66  F003         	goto	i2u19_40
  2217  0006C8                     i2u19_41:
  2218  0006C8  EF6A  F003         	goto	i2l117
  2219  0006CC                     i2u19_40:
  2220  0006CC                     
  2221                           ;keyboard.c: 19:         botoes.U = 0;
  2222  0006CC  9066               	bcf	_botoes^0,0,c
  2223                           
  2224                           ;keyboard.c: 20:         botoes_ant.U = 0;
  2225  0006CE  9065               	bcf	_botoes_ant^0,0,c
  2226  0006D0  EF54  F003         	goto	i2l1086
  2227  0006D4                     i2l117:
  2228  0006D4  A281               	btfss	129,1,c	;volatile
  2229  0006D6  EF6F  F003         	goto	i2u20_41
  2230  0006DA  EF71  F003         	goto	i2u20_40
  2231  0006DE                     i2u20_41:
  2232  0006DE  EF72  F003         	goto	i2l1096
  2233  0006E2                     i2u20_40:
  2234  0006E2  2A64               	incf	_cont_u^0,f,c
  2235  0006E4                     i2l1096:
  2236                           
  2237                           ;keyboard.c: 23:     PORTBbits.RB7 = 0;
  2238  0006E4  9E81               	bcf	129,7,c	;volatile
  2239  0006E6                     
  2240                           ;keyboard.c: 25:     PORTBbits.RB6 = 1;
  2241  0006E6  8C81               	bsf	129,6,c	;volatile
  2242  0006E8                     
  2243                           ;keyboard.c: 26:     if((botoes_ant.L==0 && PORTBbits.RB0==1) || cont_l > 50){
  2244  0006E8  B465               	btfsc	_botoes_ant^0,2,c
  2245  0006EA  EF79  F003         	goto	i2u21_41
  2246  0006EE  EF7B  F003         	goto	i2u21_40
  2247  0006F2                     i2u21_41:
  2248  0006F2  EF82  F003         	goto	i2l1104
  2249  0006F6                     i2u21_40:
  2250  0006F6  B081               	btfsc	129,0,c	;volatile
  2251  0006F8  EF80  F003         	goto	i2u22_41
  2252  0006FC  EF82  F003         	goto	i2u22_40
  2253  000700                     i2u22_41:
  2254  000700  EF8A  F003         	goto	i2l122
  2255  000704                     i2u22_40:
  2256  000704                     i2l1104:
  2257  000704  0E32               	movlw	50
  2258  000706  6462               	cpfsgt	_cont_l^0,c
  2259  000708  EF88  F003         	goto	i2u23_41
  2260  00070C  EF8A  F003         	goto	i2u23_40
  2261  000710                     i2u23_41:
  2262  000710  EF90  F003         	goto	i2l120
  2263  000714                     i2u23_40:
  2264  000714                     i2l122:
  2265                           
  2266                           ;keyboard.c: 27:         botoes.L = 1;
  2267  000714  8466               	bsf	_botoes^0,2,c
  2268                           
  2269                           ;keyboard.c: 28:         botoes_ant.L = 1;
  2270  000716  8465               	bsf	_botoes_ant^0,2,c
  2271  000718                     i2l1106:
  2272                           
  2273                           ;keyboard.c: 29:         cont_l = 0;
  2274  000718  0E00               	movlw	0
  2275  00071A  6E62               	movwf	_cont_l^0,c
  2276                           
  2277                           ;keyboard.c: 30:     }else if(botoes_ant.L==1 && PORTBbits.RB0==0){
  2278  00071C  EFAA  F003         	goto	i2l1116
  2279  000720                     i2l120:
  2280  000720  A465               	btfss	_botoes_ant^0,2,c
  2281  000722  EF95  F003         	goto	i2u24_41
  2282  000726  EF97  F003         	goto	i2u24_40
  2283  00072A                     i2u24_41:
  2284  00072A  EFA2  F003         	goto	i2l126
  2285  00072E                     i2u24_40:
  2286  00072E  B081               	btfsc	129,0,c	;volatile
  2287  000730  EF9C  F003         	goto	i2u25_41
  2288  000734  EF9E  F003         	goto	i2u25_40
  2289  000738                     i2u25_41:
  2290  000738  EFA2  F003         	goto	i2l126
  2291  00073C                     i2u25_40:
  2292  00073C                     
  2293                           ;keyboard.c: 31:         botoes.L = 0;
  2294  00073C  9466               	bcf	_botoes^0,2,c
  2295                           
  2296                           ;keyboard.c: 32:         botoes_ant.L = 0;
  2297  00073E  9465               	bcf	_botoes_ant^0,2,c
  2298  000740  EF8C  F003         	goto	i2l1106
  2299  000744                     i2l126:
  2300  000744  A281               	btfss	129,1,c	;volatile
  2301  000746  EFA7  F003         	goto	i2u26_41
  2302  00074A  EFA9  F003         	goto	i2u26_40
  2303  00074E                     i2u26_41:
  2304  00074E  EFAA  F003         	goto	i2l1116
  2305  000752                     i2u26_40:
  2306  000752  2A62               	incf	_cont_l^0,f,c
  2307  000754                     i2l1116:
  2308                           
  2309                           ;keyboard.c: 36:     if((botoes_ant.R==0 && PORTBbits.RB2==1) || cont_r > 50){
  2310  000754  B665               	btfsc	_botoes_ant^0,3,c
  2311  000756  EFAF  F003         	goto	i2u27_41
  2312  00075A  EFB1  F003         	goto	i2u27_40
  2313  00075E                     i2u27_41:
  2314  00075E  EFB8  F003         	goto	i2l1120
  2315  000762                     i2u27_40:
  2316  000762  B481               	btfsc	129,2,c	;volatile
  2317  000764  EFB6  F003         	goto	i2u28_41
  2318  000768  EFB8  F003         	goto	i2u28_40
  2319  00076C                     i2u28_41:
  2320  00076C  EFC0  F003         	goto	i2l131
  2321  000770                     i2u28_40:
  2322  000770                     i2l1120:
  2323  000770  0E32               	movlw	50
  2324  000772  6461               	cpfsgt	_cont_r^0,c
  2325  000774  EFBE  F003         	goto	i2u29_41
  2326  000778  EFC0  F003         	goto	i2u29_40
  2327  00077C                     i2u29_41:
  2328  00077C  EFC6  F003         	goto	i2l129
  2329  000780                     i2u29_40:
  2330  000780                     i2l131:
  2331                           
  2332                           ;keyboard.c: 37:         botoes.R = 1;
  2333  000780  8666               	bsf	_botoes^0,3,c
  2334                           
  2335                           ;keyboard.c: 38:         botoes_ant.R = 1;
  2336  000782  8665               	bsf	_botoes_ant^0,3,c
  2337  000784                     i2l1122:
  2338                           
  2339                           ;keyboard.c: 39:         cont_r = 0;
  2340  000784  0E00               	movlw	0
  2341  000786  6E61               	movwf	_cont_r^0,c
  2342                           
  2343                           ;keyboard.c: 40:     }else if(botoes_ant.R==1 && PORTBbits.RB2==0){
  2344  000788  EFE0  F003         	goto	i2l1132
  2345  00078C                     i2l129:
  2346  00078C  A665               	btfss	_botoes_ant^0,3,c
  2347  00078E  EFCB  F003         	goto	i2u30_41
  2348  000792  EFCD  F003         	goto	i2u30_40
  2349  000796                     i2u30_41:
  2350  000796  EFD8  F003         	goto	i2l135
  2351  00079A                     i2u30_40:
  2352  00079A  B481               	btfsc	129,2,c	;volatile
  2353  00079C  EFD2  F003         	goto	i2u31_41
  2354  0007A0  EFD4  F003         	goto	i2u31_40
  2355  0007A4                     i2u31_41:
  2356  0007A4  EFD8  F003         	goto	i2l135
  2357  0007A8                     i2u31_40:
  2358  0007A8                     
  2359                           ;keyboard.c: 41:         botoes.R = 0;
  2360  0007A8  9666               	bcf	_botoes^0,3,c
  2361                           
  2362                           ;keyboard.c: 42:         botoes_ant.R = 0;
  2363  0007AA  9665               	bcf	_botoes_ant^0,3,c
  2364  0007AC  EFC2  F003         	goto	i2l1122
  2365  0007B0                     i2l135:
  2366  0007B0  A481               	btfss	129,2,c	;volatile
  2367  0007B2  EFDD  F003         	goto	i2u32_41
  2368  0007B6  EFDF  F003         	goto	i2u32_40
  2369  0007BA                     i2u32_41:
  2370  0007BA  EFE0  F003         	goto	i2l1132
  2371  0007BE                     i2u32_40:
  2372  0007BE  2A61               	incf	_cont_r^0,f,c
  2373  0007C0                     i2l1132:
  2374                           
  2375                           ;keyboard.c: 45:     PORTBbits.RB6 = 0;
  2376  0007C0  9C81               	bcf	129,6,c	;volatile
  2377  0007C2                     
  2378                           ;keyboard.c: 47:     PORTBbits.RB5 = 1;
  2379  0007C2  8A81               	bsf	129,5,c	;volatile
  2380  0007C4                     
  2381                           ;keyboard.c: 48:     if((botoes_ant.D==0 && PORTBbits.RB1==1) || cont_d > 50){
  2382  0007C4  B265               	btfsc	_botoes_ant^0,1,c
  2383  0007C6  EFE7  F003         	goto	i2u33_41
  2384  0007CA  EFE9  F003         	goto	i2u33_40
  2385  0007CE                     i2u33_41:
  2386  0007CE  EFF0  F003         	goto	i2l1140
  2387  0007D2                     i2u33_40:
  2388  0007D2  B281               	btfsc	129,1,c	;volatile
  2389  0007D4  EFEE  F003         	goto	i2u34_41
  2390  0007D8  EFF0  F003         	goto	i2u34_40
  2391  0007DC                     i2u34_41:
  2392  0007DC  EFF8  F003         	goto	i2l140
  2393  0007E0                     i2u34_40:
  2394  0007E0                     i2l1140:
  2395  0007E0  0E32               	movlw	50
  2396  0007E2  6463               	cpfsgt	_cont_d^0,c
  2397  0007E4  EFF6  F003         	goto	i2u35_41
  2398  0007E8  EFF8  F003         	goto	i2u35_40
  2399  0007EC                     i2u35_41:
  2400  0007EC  EFFE  F003         	goto	i2l138
  2401  0007F0                     i2u35_40:
  2402  0007F0                     i2l140:
  2403                           
  2404                           ;keyboard.c: 49:         botoes.D = 1;
  2405  0007F0  8266               	bsf	_botoes^0,1,c
  2406                           
  2407                           ;keyboard.c: 50:         botoes_ant.D = 1;
  2408  0007F2  8265               	bsf	_botoes_ant^0,1,c
  2409  0007F4                     i2l1142:
  2410                           
  2411                           ;keyboard.c: 51:         cont_d = 0;
  2412  0007F4  0E00               	movlw	0
  2413  0007F6  6E63               	movwf	_cont_d^0,c
  2414                           
  2415                           ;keyboard.c: 52:     }else if(botoes_ant.D==1 && PORTBbits.RB1==0){
  2416  0007F8  EF18  F004         	goto	i2l1152
  2417  0007FC                     i2l138:
  2418  0007FC  A265               	btfss	_botoes_ant^0,1,c
  2419  0007FE  EF03  F004         	goto	i2u36_41
  2420  000802  EF05  F004         	goto	i2u36_40
  2421  000806                     i2u36_41:
  2422  000806  EF10  F004         	goto	i2l144
  2423  00080A                     i2u36_40:
  2424  00080A  B281               	btfsc	129,1,c	;volatile
  2425  00080C  EF0A  F004         	goto	i2u37_41
  2426  000810  EF0C  F004         	goto	i2u37_40
  2427  000814                     i2u37_41:
  2428  000814  EF10  F004         	goto	i2l144
  2429  000818                     i2u37_40:
  2430  000818                     
  2431                           ;keyboard.c: 53:         botoes.D = 0;
  2432  000818  9266               	bcf	_botoes^0,1,c
  2433                           
  2434                           ;keyboard.c: 54:         botoes_ant.D = 0;
  2435  00081A  9265               	bcf	_botoes_ant^0,1,c
  2436  00081C  EFFA  F003         	goto	i2l1142
  2437  000820                     i2l144:
  2438  000820  A281               	btfss	129,1,c	;volatile
  2439  000822  EF15  F004         	goto	i2u38_41
  2440  000826  EF17  F004         	goto	i2u38_40
  2441  00082A                     i2u38_41:
  2442  00082A  EF18  F004         	goto	i2l1152
  2443  00082E                     i2u38_40:
  2444  00082E  2A63               	incf	_cont_d^0,f,c
  2445  000830                     i2l1152:
  2446                           
  2447                           ;keyboard.c: 57:     PORTBbits.RB5 = 0;
  2448  000830  9A81               	bcf	129,5,c	;volatile
  2449  000832                     
  2450                           ;keyboard.c: 59:     PORTBbits.RB4 = 1;
  2451  000832  8881               	bsf	129,4,c	;volatile
  2452  000834                     
  2453                           ;keyboard.c: 60:     botoes.Enter = PORTBbits.RB0;
  2454  000834  A081               	btfss	129,0,c	;volatile
  2455  000836  D002               	bra	i2u39_45
  2456  000838  8866               	bsf	_botoes^0,4,c
  2457  00083A  D001               	bra	i2u39_47
  2458  00083C                     i2u39_45:
  2459  00083C  9866               	bcf	_botoes^0,4,c
  2460  00083E                     i2u39_47:
  2461  00083E                     
  2462                           ;keyboard.c: 61:     botoes.Esc = PORTBbits.RB2;
  2463  00083E  A481               	btfss	129,2,c	;volatile
  2464  000840  D002               	bra	i2u40_45
  2465  000842  8A66               	bsf	_botoes^0,5,c
  2466  000844  D001               	bra	i2u40_47
  2467  000846                     i2u40_45:
  2468  000846  9A66               	bcf	_botoes^0,5,c
  2469  000848                     i2u40_47:
  2470  000848                     
  2471                           ;keyboard.c: 62:     PORTBbits.RB4 = 0;
  2472  000848  9881               	bcf	129,4,c	;volatile
  2473  00084A  0012               	return		;funcret
  2474  00084C                     __end_of_le_entrada:
  2475                           	opt callstack 0
  2476                           
  2477                           	psect	rparam
  2478  0000                     
  2479                           	psect	temp
  2480  000067                     btemp:
  2481                           	opt callstack 0
  2482  000067                     	ds	1
  2483  0000                     int$flags	set	btemp
  2484  0000                     wtemp8	set	btemp+1
  2485  0000                     ttemp5	set	btemp+1
  2486  0000                     ttemp6	set	btemp+4
  2487  0000                     ttemp7	set	btemp+8
  2488                           tosu	equ	0xFFF
  2489                           tosh	equ	0xFFE
  2490                           tosl	equ	0xFFD
  2491                           stkptr	equ	0xFFC
  2492                           pclatu	equ	0xFFB
  2493                           pclath	equ	0xFFA
  2494                           pcl	equ	0xFF9
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodh	equ	0xFF4
  2500                           prodl	equ	0xFF3
  2501                           indf0	equ	0xFEF
  2502                           postinc0	equ	0xFEE
  2503                           postdec0	equ	0xFED
  2504                           preinc0	equ	0xFEC
  2505                           plusw0	equ	0xFEB
  2506                           fsr0h	equ	0xFEA
  2507                           fsr0l	equ	0xFE9
  2508                           wreg	equ	0xFE8
  2509                           indf1	equ	0xFE7
  2510                           postinc1	equ	0xFE6
  2511                           postdec1	equ	0xFE5
  2512                           preinc1	equ	0xFE4
  2513                           plusw1	equ	0xFE3
  2514                           fsr1h	equ	0xFE2
  2515                           fsr1l	equ	0xFE1
  2516                           bsr	equ	0xFE0
  2517                           indf2	equ	0xFDF
  2518                           postinc2	equ	0xFDE
  2519                           postdec2	equ	0xFDD
  2520                           preinc2	equ	0xFDC
  2521                           plusw2	equ	0xFDB
  2522                           fsr2h	equ	0xFDA
  2523                           fsr2l	equ	0xFD9
  2524                           status	equ	0xFD8


Data Sizes:
    Strings     116
    Constant    0
    Data        66
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     29     102
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    menu@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    creditos@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> mat_disp(BANK0[64]), 

    gerenciador@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    print_mat@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    write_char@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    entry_mode_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    goto_XY@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd_cmd@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    display_onoff_control@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    function_set@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    pulso@lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 

    lcd	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gerenciador
    _gerenciador->_creditos
    _gerenciador->_menu
    _menu->_print_mat
    _creditos->_print_mat
    _print_mat->_goto_XY
    _goto_XY->_lcd_cmd
    _lcd_cmd->_pulso
    _function_set->_pulso
    _entry_mode_set->_pulso
    _display_onoff_control->_pulso

Critical Paths under _int_handler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21348
              _display_onoff_control
                     _entry_mode_set
                       _function_set
                        _gerenciador
 ---------------------------------------------------------------------------------
 (1) _gerenciador                                          2     0      2   16940
                                             27 COMRAM     2     0      2
                           _creditos
                               _menu
 ---------------------------------------------------------------------------------
 (2) _menu                                                 2     0      2    8470
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _creditos                                             2     0      2    8350
                                             25 COMRAM     2     0      2
                          _print_mat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4    1312
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _print_mat                                           10     8      2    6940
                                             15 COMRAM    10     8      2
                            _goto_XY
                         _write_char
 ---------------------------------------------------------------------------------
 (4) _write_char                                           4     1      3    1634
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _goto_XY                                              8     4      4    4800
                                              7 COMRAM     8     4      4
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_cmd                                              4     1      3    2260
                                              3 COMRAM     4     1      3
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _function_set                                         8     3      5    1546
                                              3 COMRAM     8     3      5
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _entry_mode_set                                       5     1      4    1382
                                              3 COMRAM     5     1      4
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _display_onoff_control                                7     2      5    1480
                                              3 COMRAM     7     2      5
                              _pulso
 ---------------------------------------------------------------------------------
 (6) _pulso                                                3     1      2     956
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _int_handler                                          0     0      0       0
                         _le_entrada
 ---------------------------------------------------------------------------------
 (8) _le_entrada                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_onoff_control
     _pulso
   _entry_mode_set
     _pulso
   _function_set
     _pulso
   _gerenciador
     _creditos
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy
     _menu
       _print_mat
         _goto_XY
           _lcd_cmd
             _pulso
         _write_char
       _strcpy

 _int_handler (ROOT)
   _le_entrada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1D      66       1       81.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      15        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 15 21:16:52 2020

         ?_display_onoff_control 0046                               l60 0D16  
                             l45 0E0C                               l54 0FBC  
                             l63 0F86                               l57 0B20  
                             l73 0BDC                               l81 0A46  
                             l76 0D9A                               l69 0BDC  
                             l94 0C88                               _op 0060  
                    creditos@lcd 005C                      __CFG_OSC$HS 000000  
                            l230 08C0                              l234 095E  
                            l181 0E6C                              l174 0FBE  
                            l184 0E7A                              l914 0F46  
                            u600 0B88                              u601 0B84  
                            u610 0BAA                              u611 0BA6  
                            u620 0BCC                              u700 0934  
                            u621 0BC8                              u701 0930  
                            u630 0A38                              u710 095E  
                            u631 0A34                              u711 095A  
                            u640 0C68                              u720 0E7A  
                            u641 0C64                              u721 0E76  
                            u650 0C88                              u730 0FDC  
                            u651 0C84                              u731 0FD8  
                            u660 0F46                              u661 0F42  
                            u590 0B32                              u670 08CE  
                            u591 0B2E                              u671 08CA  
                            u680 08DE                              u681 08DA  
                            u690 0924                              u907 0B58  
                            u691 0920                              u917 0F70  
                            u927 0A7C                              u937 0AB4  
                            u947 0B0A                              u957 0D48  
                            u967 0D84                              u977 0CBA  
                            u987 0D00                              u997 0F98  
                            _lcd 0041                              prod 000FF3  
                            wreg 000FE8                    write_char@lcd 0043  
                   __CFG_WDT$OFF 000000                             l1400 0B22  
                           l1410 0B62                             l1402 0B32  
                           l1404 0B3E                             l1412 0B76  
                           l1500 0C6C                             l1414 0B88  
                           l1406 0B42                             l1502 0F08  
                           l1510 08B0                             l1424 0B98  
                           l1408 0B52                             l1504 0F18  
                           l1520 08F6                             l1512 08CE  
                           l1426 0BAA                             l1450 097E  
                           l1530 0948                             l1522 090A  
                           l1514 08DE                             l1506 084C  
                           l1436 0BBA                             l1460 09E0  
                           l1452 099C                             l1540 0E10  
                           l1532 094A                             l1516 08F2  
                           l1524 0916                             l1508 089C  
                           l1620 0DBA                             l1612 0D9C  
                           l1390 0FA2                             l1550 0A86  
                           l1438 0BCC                             l1470 0A12  
                           l1462 09EA                             l1454 09A6  
                           l1542 0E60                             l1526 0924  
                           l1518 08F4                             l1622 0DD2  
                           l1614 0DB4                             l1560 0B04  
                           l1552 0A92                             l1544 0A48  
                           l1392 0F48                             l1472 0A1C  
                           l1464 09F4                             l1456 09B0  
                           l1448 0960                             l1528 0934  
                           l1624 0DEA                             l1616 0DB6  
                           l1386 0F88                             l1570 0CC4  
                           l1562 0B14                             l1554 0AAE  
                           l1546 0A66                             l1394 0F52  
                           l1474 0A38                             l1466 09FE  
                           l1458 09DC                             l1538 0950  
                           l1626 0DFE                             l1618 0DB8  
                           l1388 0F92                             l1572 0CD0  
                           l1564 0C8A                             l1580 0D36  
                           l1556 0ABE                             l1548 0A76  
                           l1396 0F6A                             l1476 0A42  
                           l1468 0A08                             l1492 0C02  
                           l1484 0BE6                             l1628 0E00  
                           l1574 0CFA                             l1566 0CA8  
                           l1590 0D8E                             l1582 0D42  
                           l1558 0ACA                             l1398 0F7A  
                           l1494 0C48                             l1486 0BFA  
                           l1478 0BDE                             l1576 0D0A  
                           l1568 0CB4                             l1584 0D52  
                           l1496 0C4C                             l1592 0FBE  
                           l1586 0D5E                             l1578 0D18  
                           l1498 0C68                             l1594 0FCA  
                           l1588 0D7E                             l1596 0FDC  
                           STR_1 0655                             STR_2 0665  
                           STR_3 0645                             STR_4 0645  
                           STR_5 0601                             STR_6 0634  
                           STR_7 0612                             STR_8 0623  
                           u1007 0FB2                             i2l40 1008  
                           _main 0D9C                             _menu 084C  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0067                             prodl 000FF3  
                           start 000E            function_set@num_lines 0049  
                   print_mat@lcd 0052                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  function_set@lcd 0046  
                          ?_main 0043                            ?_menu 005C  
                          _T0CON 000FD5                            i2l111 06B0  
                          i2l120 0720                            i2l113 06A4  
                          i2l122 0714                            i2l131 0780  
                          i2l140 07F0                            i2l117 06D4  
                          i2l126 0744                            i2l135 07B0  
                          i2l144 0820                            i2l129 078C  
                          i2l138 07FC                            i2l147 084A  
                          _TMR0L 000FD6                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                     ?_int_handler 0043  
                __end_of_lcd_cmd 0F88                  __end_of_goto_XY 0BDE  
                          _pulso 0F88                            tablat 000FF5  
                          ttemp5 0068                            ttemp6 006B  
                          ttemp7 006F                            status 000FD8  
                          wtemp8 0068                  __initialization 0E7C  
                   __end_of_main 0E10                     __end_of_menu 0960  
                         ??_main 0060                           ??_menu 005E  
                  __activetblptr 000001                           _ADCON1 000FC1  
                         ?_pulso 0043                           i2l1100 06E8  
                         i2l1110 073C                           i2l1102 06F6  
                         i2l1120 0770                           i2l1104 0704  
                         i2l1130 07BE                           i2l1122 0784  
                         i2l1114 0752                           i2l1106 0718  
                         i2l1140 07E0                           i2l1124 079A  
                         i2l1132 07C0                           i2l1108 072E  
                         i2l1116 0754                           i2l1150 082E  
                         i2l1142 07F4                           i2l1134 07C2  
                         i2l1126 07A8                           i2l1118 0762  
                         i2l1230 0FF0                           i2l1160 0848  
                         i2l1144 080A                           i2l1152 0830  
                         i2l1136 07C4                           i2l1080 0676  
                         i2l1232 0FFE                           i2l1154 0832  
                         i2l1146 0818                           i2l1138 07D2  
                         i2l1090 06CC                           i2l1082 0686  
                         i2l1234 1002                           i2l1156 0834  
                         i2l1084 0694                           i2l1236 1006  
                         i2l1158 083E                           i2l1094 06E2  
                         i2l1086 06A8                           i2l1088 06BE  
                         i2l1096 06E4                           i2l1098 06E6  
               __end_of_creditos 0E7C                      goto_XY@temp 0051  
           __size_of_gerenciador 0030                           _cont_d 0063  
                         _cont_l 0062                           _cont_r 0061  
                         _cont_u 0064                           _botoes 0066  
                         clear_0 0EA2                           clear_1 0EAE  
                  ?_function_set 0046                        ??_lcd_cmd 0049  
                         _strcpy 0F08                        ??_goto_XY 004E  
                   __pdataCOMRAM 0001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8         display_onoff_control@lcd 0046  
                     __accesstop 0080          __end_of__initialization 0EB4  
                  ___rparam_used 000001          ??_display_onoff_control 004B  
                 __pcstackCOMRAM 0043                   gerenciador@lcd 005E  
                  __end_of_pulso 0FBE                   ??_function_set 004B  
           __size_of_int_handler 1004                          ??_pulso 0045  
                     __pbssBANK0 0080                          ?_strcpy 0043  
             __size_of_print_mat 00AC      entry_mode_set@display_shift 0049  
                        i2u20_40 06E2                          i2u20_41 06DE  
                        i2u21_40 06F6                          i2u21_41 06F2  
                        i2u30_40 079A                          i2u22_40 0704  
                        i2u30_41 0796                          i2u22_41 0700  
                        i2u31_40 07A8                          i2u23_40 0714  
                        i2u15_40 0686                          i2u31_41 07A4  
                        i2u23_41 0710                          i2u15_41 0682  
                        i2u32_40 07BE                          i2u24_40 072E  
                        i2u16_40 0694                          i2u32_41 07BA  
                        i2u24_41 072A                          i2u16_41 0690  
                        i2u40_45 0846                          i2u40_47 0848  
                        i2u33_40 07D2                          i2u25_40 073C  
                        i2u17_40 06A4                          i2u33_41 07CE  
                        i2u25_41 0738                          i2u17_41 06A0  
                        i2u34_40 07E0                          i2u26_40 0752  
                        i2u18_40 06BE                          i2u42_40 0FFE  
                        i2u34_41 07DC                          i2u26_41 074E  
                        i2u18_41 06BA                          i2u42_41 0FFA  
                        i2u35_40 07F0                          i2u27_40 0762  
                        i2u19_40 06CC                          i2u35_41 07EC  
                        i2u27_41 075E                          i2u19_41 06C8  
                        i2u36_40 080A                          i2u28_40 0770  
                        i2u36_41 0806                          i2u28_41 076C  
                        i2u37_40 0818                          i2u29_40 0780  
                        i2u37_41 0814                          i2u29_41 077C  
                        i2u38_40 082E                          i2u38_41 082A  
                        i2u39_45 083C                          i2u39_47 083E  
                      ?_creditos 005C                       _le_entrada 0676  
                     _botoes_ant 0065          __size_of_entry_mode_set 0084  
                        __Hparam 0000   display_onoff_control@cursor_on 0049  
                        __Lparam 0000                     __psmallconst 0600  
                        __pcinit 0E7C                          __ramtop 0600  
                        __ptext0 0D9C                          __ptext1 0FBE  
                        __ptext2 084C                          __ptext3 0E10  
                        __ptext4 0F08                          __ptext5 0BDE  
                        __ptext6 0960                          __ptext7 0B22  
                        __ptext8 0F48                          __ptext9 0A48  
                        _lcd_cmd 0F48                        _T0CONbits 000FD5  
                __size_of_strcpy 0040                          _goto_XY 0B22  
                     ??_creditos 005E                   __pintcode_body 0FEE  
           end_of_initialization 0EB4                          menu@lcd 005C  
           __end_of_function_set 0B22                          int_func 0FEE  
              __end_of_print_mat 0C8A                          postdec1 000FE5  
                        postinc0 000FEE                          strcpy@d 0049  
                        strcpy@s 0047                        _PORTBbits 000F81  
                     lcd_cmd@lcd 0046                      ?_le_entrada 0043  
                  ??_gerenciador 0060   __size_of_display_onoff_control 008E  
  __end_of_display_onoff_control 0D18                       _write_char 0960  
                  __pidataCOMRAM 0EC6                   __end_of_strcpy 0F48  
            start_initialization 0E7C                   _entry_mode_set 0D18  
                     goto_XY@lcd 004A              __size_of_le_entrada 01D6  
            __end_of_gerenciador 0FEE                         ??_strcpy 0047  
                    __pbssCOMRAM 0060                    ??_int_handler 0043  
          __size_of_function_set 00DA                  instrucoes@F3101 0021  
                instrucoes@F3104 0011                  instrucoes@F3107 0001  
                instrucoes@F3098 0031                __size_of_creditos 006C  
         __end_of_entry_mode_set 0D9C                        __pintcode 0008  
                    ?_write_char 0043                         ?_lcd_cmd 0046  
                   _function_set 0A48                      __smallconst 0600  
                       ?_goto_XY 004A                   __size_of_pulso 0036  
            __end_of_int_handler 100C                  ?_entry_mode_set 0046  
                    _gerenciador 0FBE     entry_mode_set@move_direction 0048  
                      _print_mat 0BDE  display_onoff_control@display_on 0048  
     display_onoff_control@blink 004A                      write_char@c 0045  
                     print_mat@i 005A                       print_mat@j 0058  
                   ??_le_entrada 0043                        copy_data0 0E90  
            __size_of_write_char 00E8                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0600  
              entry_mode_set@lcd 0046                       ?_print_mat 0052  
             __end_of_le_entrada 084C                 __size_of_lcd_cmd 0040  
               __size_of_goto_XY 00BC                      _int_handler 0008  
                       __ptext10 0D18                         __ptext11 0C8A  
                       __ptext12 0F88                         __ptext14 0676  
                       _creditos 0E10                       strcpy@dest 0043  
                       _mat_disp 0080                    __size_of_main 0074  
                  __size_of_menu 0114                         int$flags 0067  
                       lcd_cmd@a 0048            _display_onoff_control 0C8A  
                     _INTCONbits 000FF2                         goto_XY@a 0050  
                       goto_XY@x 004C                         goto_XY@y 004D  
                       goto_XY@z 004F                         intlevel2 0000  
                      strcpy@src 0045          function_set@data_lenght 0048  
                    ??_print_mat 0054                     ??_write_char 0046  
                       pulso@lcd 0043                 ??_entry_mode_set 004A  
          function_set@char_font 004A               __end_of_write_char 0A48  
                   ?_gerenciador 005E  
